

Terminals which are not used:

   ERROR_TOKEN
   FREXP


Conflict in state 118 between rule 13 and token CHOP resolved as reduce.
Conflict in state 118 between rule 13 and token IFF resolved as reduce.
Conflict in state 118 between rule 13 and token PROPIMPLY resolved as reduce.
Conflict in state 118 between rule 13 and token OR resolved as reduce.
Conflict in state 118 between rule 13 and token AND resolved as reduce.
Conflict in state 118 between rule 13 and token CHOPSTAR resolved as an error.
Conflict in state 119 between rule 23 and token CHOP resolved as reduce.
Conflict in state 119 between rule 23 and token IFF resolved as reduce.
Conflict in state 119 between rule 23 and token PROPIMPLY resolved as reduce.
Conflict in state 119 between rule 23 and token OR resolved as reduce.
Conflict in state 119 between rule 23 and token AND resolved as reduce.
Conflict in state 119 between rule 23 and token CHOPSTAR resolved as an error.
Conflict in state 172 between rule 22 and token CHOP resolved as reduce.
Conflict in state 172 between rule 22 and token IFF resolved as reduce.
Conflict in state 172 between rule 22 and token PROPIMPLY resolved as reduce.
Conflict in state 172 between rule 22 and token OR resolved as reduce.
Conflict in state 172 between rule 22 and token AND resolved as reduce.
Conflict in state 172 between rule 22 and token CHOPSTAR resolved as an error.
Conflict in state 173 between rule 10 and token CHOP resolved as reduce.
Conflict in state 173 between rule 10 and token IFF resolved as reduce.
Conflict in state 173 between rule 10 and token PROPIMPLY resolved as reduce.
Conflict in state 173 between rule 10 and token OR resolved as reduce.
Conflict in state 173 between rule 10 and token AND resolved as reduce.
Conflict in state 173 between rule 10 and token CHOPSTAR resolved as an error.
Conflict in state 174 between rule 9 and token CHOP resolved as reduce.
Conflict in state 174 between rule 9 and token IFF resolved as reduce.
Conflict in state 174 between rule 9 and token PROPIMPLY resolved as reduce.
Conflict in state 174 between rule 9 and token OR resolved as reduce.
Conflict in state 174 between rule 9 and token AND resolved as reduce.
Conflict in state 174 between rule 9 and token CHOPSTAR resolved as an error.
Conflict in state 175 between rule 21 and token CHOP resolved as reduce.
Conflict in state 175 between rule 21 and token IFF resolved as reduce.
Conflict in state 175 between rule 21 and token PROPIMPLY resolved as reduce.
Conflict in state 175 between rule 21 and token OR resolved as reduce.
Conflict in state 175 between rule 21 and token AND resolved as reduce.
Conflict in state 175 between rule 21 and token CHOPSTAR resolved as an error.
Conflict in state 176 between rule 12 and token CHOP resolved as reduce.
Conflict in state 176 between rule 12 and token IFF resolved as reduce.
Conflict in state 176 between rule 12 and token PROPIMPLY resolved as reduce.
Conflict in state 176 between rule 12 and token OR resolved as reduce.
Conflict in state 176 between rule 12 and token AND resolved as reduce.
Conflict in state 176 between rule 12 and token CHOPSTAR resolved as an error.
Conflict in state 177 between rule 11 and token CHOP resolved as reduce.
Conflict in state 177 between rule 11 and token IFF resolved as reduce.
Conflict in state 177 between rule 11 and token PROPIMPLY resolved as reduce.
Conflict in state 177 between rule 11 and token OR resolved as reduce.
Conflict in state 177 between rule 11 and token AND resolved as reduce.
Conflict in state 177 between rule 11 and token CHOPSTAR resolved as an error.
Conflict in state 364 between rule 253 and token IMPLY resolved as reduce.
Conflict in state 367 between rule 252 and token IMPLY resolved as reduce.
Conflict in state 391 between rule 8 and token CHOP resolved as reduce.
Conflict in state 391 between rule 8 and token IFF resolved as shift.
Conflict in state 391 between rule 8 and token PROPIMPLY resolved as shift.
Conflict in state 391 between rule 8 and token OR resolved as shift.
Conflict in state 391 between rule 8 and token AND resolved as shift.
Conflict in state 391 between rule 8 and token CHOPSTAR resolved as shift.
Conflict in state 392 between rule 6 and token CHOP resolved as reduce.
Conflict in state 392 between rule 6 and token IFF resolved as reduce.
Conflict in state 392 between rule 6 and token PROPIMPLY resolved as reduce.
Conflict in state 392 between rule 6 and token OR resolved as shift.
Conflict in state 392 between rule 6 and token AND resolved as shift.
Conflict in state 392 between rule 6 and token CHOPSTAR resolved as shift.
Conflict in state 393 between rule 7 and token CHOP resolved as reduce.
Conflict in state 393 between rule 7 and token IFF resolved as reduce.
Conflict in state 393 between rule 7 and token PROPIMPLY resolved as reduce.
Conflict in state 393 between rule 7 and token OR resolved as shift.
Conflict in state 393 between rule 7 and token AND resolved as shift.
Conflict in state 393 between rule 7 and token CHOPSTAR resolved as shift.
Conflict in state 394 between rule 5 and token CHOP resolved as reduce.
Conflict in state 394 between rule 5 and token IFF resolved as reduce.
Conflict in state 394 between rule 5 and token PROPIMPLY resolved as reduce.
Conflict in state 394 between rule 5 and token OR resolved as reduce.
Conflict in state 394 between rule 5 and token AND resolved as shift.
Conflict in state 394 between rule 5 and token CHOPSTAR resolved as shift.
Conflict in state 395 between rule 4 and token CHOP resolved as reduce.
Conflict in state 395 between rule 4 and token IFF resolved as reduce.
Conflict in state 395 between rule 4 and token PROPIMPLY resolved as reduce.
Conflict in state 395 between rule 4 and token OR resolved as reduce.
Conflict in state 395 between rule 4 and token AND resolved as reduce.
Conflict in state 395 between rule 4 and token CHOPSTAR resolved as shift.
Conflict in state 401 between rule 347 and token OR resolved as reduce.
Conflict in state 401 between rule 347 and token AND resolved as reduce.
Conflict in state 487 between rule 438 and token OR resolved as reduce.
Conflict in state 487 between rule 438 and token AND resolved as reduce.
Conflict in state 557 between rule 34 and token CHOP resolved as reduce.
Conflict in state 557 between rule 34 and token OR resolved as shift.
Conflict in state 557 between rule 34 and token PARALLEL resolved as shift.
Conflict in state 557 between rule 34 and token AND resolved as shift.
Conflict in state 558 between rule 33 and token CHOP resolved as reduce.
Conflict in state 558 between rule 33 and token OR resolved as reduce.
Conflict in state 558 between rule 33 and token PARALLEL resolved as reduce.
Conflict in state 558 between rule 33 and token AND resolved as shift.
Conflict in state 559 between rule 59 and token CHOP resolved as reduce.
Conflict in state 559 between rule 59 and token OR resolved as reduce.
Conflict in state 559 between rule 59 and token PARALLEL resolved as reduce.
Conflict in state 559 between rule 59 and token AND resolved as shift.
Conflict in state 560 between rule 32 and token CHOP resolved as reduce.
Conflict in state 560 between rule 32 and token OR resolved as reduce.
Conflict in state 560 between rule 32 and token PARALLEL resolved as reduce.
Conflict in state 560 between rule 32 and token AND resolved as reduce.
Conflict in state 562 between rule 82 and token CYLINDER resolved as reduce.
Conflict in state 642 between rule 349 and token OR resolved as reduce.
Conflict in state 642 between rule 349 and token AND resolved as shift.
Conflict in state 643 between rule 348 and token OR resolved as reduce.
Conflict in state 643 between rule 348 and token AND resolved as reduce.
Conflict in state 732 between rule 440 and token OR resolved as reduce.
Conflict in state 732 between rule 440 and token AND resolved as shift.
Conflict in state 733 between rule 439 and token OR resolved as reduce.
Conflict in state 733 between rule 439 and token AND resolved as reduce.
Conflict in state 916 between rule 234 and token CON resolved as reduce.
Conflict in state 1141 between rule 88 and token COMMA resolved as reduce.
Conflict in state 1141 between rule 88 and token OVEREP resolved as shift.
Conflict in state 1141 between rule 88 and token INTER_OR resolved as shift.
Conflict in state 1144 between rule 89 and token COMMA resolved as reduce.
Conflict in state 1144 between rule 89 and token OVEREP resolved as shift.
Conflict in state 1144 between rule 89 and token INTER_OR resolved as reduce.
State 156 contains 2 shift/reduce conflicts.
State 157 contains 2 shift/reduce conflicts.
State 159 contains 14 shift/reduce conflicts.
State 167 contains 2 shift/reduce conflicts.
State 168 contains 10 reduce/reduce conflicts.
State 187 contains 2 shift/reduce conflicts.
State 196 contains 14 reduce/reduce conflicts.
State 226 contains 1 shift/reduce conflict.
State 227 contains 1 shift/reduce conflict.
State 230 contains 1 shift/reduce conflict.
State 235 contains 3 reduce/reduce conflicts.
State 236 contains 3 reduce/reduce conflicts.
State 237 contains 3 reduce/reduce conflicts.
State 238 contains 3 reduce/reduce conflicts.
State 243 contains 1 shift/reduce conflict.
State 244 contains 3 reduce/reduce conflicts.
State 245 contains 3 reduce/reduce conflicts.
State 247 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 248 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 250 contains 1 shift/reduce conflict.
State 251 contains 3 reduce/reduce conflicts.
State 253 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 255 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 256 contains 1 shift/reduce conflict.
State 299 contains 1 shift/reduce conflict.
State 332 contains 1 shift/reduce conflict.
State 333 contains 1 shift/reduce conflict.
State 335 contains 1 shift/reduce conflict.
State 336 contains 1 shift/reduce conflict.
State 337 contains 1 shift/reduce conflict.
State 339 contains 2 shift/reduce conflicts.
State 340 contains 2 shift/reduce conflicts.
State 341 contains 2 shift/reduce conflicts.
State 342 contains 2 shift/reduce conflicts.
State 343 contains 2 shift/reduce conflicts.
State 344 contains 2 shift/reduce conflicts.
State 345 contains 2 shift/reduce conflicts.
State 346 contains 2 shift/reduce conflicts.
State 347 contains 2 shift/reduce conflicts.
State 348 contains 2 shift/reduce conflicts.
State 349 contains 2 shift/reduce conflicts.
State 350 contains 2 shift/reduce conflicts.
State 351 contains 2 shift/reduce conflicts.
State 352 contains 2 shift/reduce conflicts.
State 353 contains 2 shift/reduce conflicts.
State 354 contains 2 shift/reduce conflicts.
State 357 contains 2 shift/reduce conflicts.
State 358 contains 2 shift/reduce conflicts.
State 359 contains 2 shift/reduce conflicts.
State 364 contains 1 shift/reduce conflict.
State 367 contains 1 shift/reduce conflict.
State 399 contains 1 shift/reduce conflict.
State 402 contains 10 reduce/reduce conflicts.
State 403 contains 2 shift/reduce conflicts.
State 404 contains 2 shift/reduce conflicts.
State 431 contains 1 shift/reduce conflict.
State 432 contains 1 shift/reduce conflict.
State 433 contains 1 shift/reduce conflict.
State 434 contains 1 shift/reduce conflict.
State 450 contains 9 reduce/reduce conflicts.
State 451 contains 1 shift/reduce conflict.
State 453 contains 9 reduce/reduce conflicts.
State 457 contains 2 shift/reduce conflicts.
State 459 contains 9 reduce/reduce conflicts.
State 463 contains 1 shift/reduce conflict.
State 465 contains 1 shift/reduce conflict.
State 466 contains 1 shift/reduce conflict.
State 468 contains 1 shift/reduce conflict.
State 469 contains 1 shift/reduce conflict.
State 471 contains 1 shift/reduce conflict.
State 475 contains 1 shift/reduce conflict.
State 476 contains 1 shift/reduce conflict.
State 477 contains 1 shift/reduce conflict.
State 480 contains 1 shift/reduce conflict.
State 484 contains 1 shift/reduce conflict.
State 486 contains 3 reduce/reduce conflicts.
State 531 contains 1 shift/reduce conflict.
State 532 contains 1 shift/reduce conflict.
State 534 contains 1 shift/reduce conflict.
State 535 contains 1 shift/reduce conflict.
State 537 contains 1 shift/reduce conflict.
State 538 contains 1 shift/reduce conflict.
State 566 contains 2 shift/reduce conflicts.
State 567 contains 2 shift/reduce conflicts.
State 569 contains 2 shift/reduce conflicts.
State 570 contains 2 shift/reduce conflicts.
State 571 contains 2 shift/reduce conflicts.
State 572 contains 2 shift/reduce conflicts.
State 573 contains 2 shift/reduce conflicts.
State 574 contains 2 shift/reduce conflicts.
State 577 contains 2 shift/reduce conflicts.
State 578 contains 2 shift/reduce conflicts.
State 580 contains 2 shift/reduce conflicts.
State 581 contains 2 shift/reduce conflicts.
State 605 contains 1 shift/reduce conflict.
State 628 contains 8 shift/reduce conflicts.
State 630 contains 2 shift/reduce conflicts.
State 649 contains 1 shift/reduce conflict.
State 664 contains 1 shift/reduce conflict.
State 678 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 679 contains 1 shift/reduce conflict.
State 680 contains 1 shift/reduce conflict.
State 681 contains 1 shift/reduce conflict.
State 682 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 687 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 691 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 698 contains 1 shift/reduce conflict.
State 700 contains 1 shift/reduce conflict.
State 701 contains 1 shift/reduce conflict.
State 703 contains 1 shift/reduce conflict.
State 705 contains 1 shift/reduce conflict.
State 706 contains 1 shift/reduce conflict.
State 710 contains 1 shift/reduce conflict.
State 711 contains 1 shift/reduce conflict.
State 719 contains 1 shift/reduce conflict.
State 720 contains 1 shift/reduce conflict.
State 724 contains 1 shift/reduce conflict.
State 757 contains 1 shift/reduce conflict.
State 758 contains 1 shift/reduce conflict.
State 759 contains 1 shift/reduce conflict.
State 786 contains 1 shift/reduce conflict.
State 787 contains 1 shift/reduce conflict and 9 reduce/reduce conflicts.
State 814 contains 3 shift/reduce conflicts.
State 817 contains 10 shift/reduce conflicts.
State 875 contains 1 shift/reduce conflict.
State 877 contains 1 shift/reduce conflict.
State 878 contains 1 shift/reduce conflict.
State 880 contains 1 shift/reduce conflict.
State 919 contains 1 shift/reduce conflict.
State 923 contains 1 shift/reduce conflict.
State 926 contains 1 shift/reduce conflict.
State 927 contains 1 shift/reduce conflict.
State 943 contains 2 shift/reduce conflicts.
State 944 contains 2 shift/reduce conflicts.
State 965 contains 1 shift/reduce conflict.
State 966 contains 1 shift/reduce conflict.
State 978 contains 1 shift/reduce conflict.
State 979 contains 1 shift/reduce conflict.
State 985 contains 2 shift/reduce conflicts.
State 986 contains 2 shift/reduce conflicts.
State 988 contains 2 shift/reduce conflicts.
State 989 contains 2 shift/reduce conflicts.
State 992 contains 1 shift/reduce conflict.
State 1049 contains 1 shift/reduce conflict.
State 1051 contains 1 shift/reduce conflict.
State 1052 contains 1 shift/reduce conflict.
State 1055 contains 1 shift/reduce conflict.
State 1056 contains 1 shift/reduce conflict.
State 1072 contains 1 shift/reduce conflict and 2 reduce/reduce conflicts.
State 1091 contains 1 shift/reduce conflict.
State 1092 contains 1 shift/reduce conflict.
State 1094 contains 1 shift/reduce conflict.
State 1095 contains 1 shift/reduce conflict.
State 1097 contains 1 shift/reduce conflict.
State 1098 contains 1 shift/reduce conflict.
State 1099 contains 1 shift/reduce conflict.
State 1100 contains 1 shift/reduce conflict.
State 1121 contains 2 shift/reduce conflicts.
State 1129 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 1135 contains 1 shift/reduce conflict.
State 1146 contains 2 shift/reduce conflicts.
State 1149 contains 8 shift/reduce conflicts.
State 1176 contains 1 shift/reduce conflict.
State 1177 contains 10 reduce/reduce conflicts.
State 1193 contains 1 shift/reduce conflict.
State 1206 contains 1 shift/reduce conflict.
State 1208 contains 1 shift/reduce conflict.
State 1209 contains 1 shift/reduce conflict.
State 1211 contains 1 shift/reduce conflict.
State 1245 contains 1 shift/reduce conflict.
State 1250 contains 1 shift/reduce conflict.
State 1252 contains 1 shift/reduce conflict.
State 1282 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 1283 contains 1 shift/reduce conflict.
State 1284 contains 1 shift/reduce conflict.
State 1288 contains 1 shift/reduce conflict.
State 1327 contains 1 shift/reduce conflict.
State 1329 contains 1 shift/reduce conflict.
State 1364 contains 1 shift/reduce conflict.
State 1365 contains 1 shift/reduce conflict.
State 1369 contains 1 shift/reduce conflict.
State 1370 contains 1 shift/reduce conflict.
State 1396 contains 1 shift/reduce conflict.
State 1399 contains 1 shift/reduce conflict.
State 1402 contains 1 shift/reduce conflict.
State 1404 contains 1 shift/reduce conflict.
State 1405 contains 1 shift/reduce conflict.
State 1430 contains 1 shift/reduce conflict.

Grammar
rule 1    program -> gComplexProposition statement
rule 2    gComplexProposition -> PBEGIN complexProposition PEND
rule 3    gComplexProposition ->		/* empty */
rule 4    complexProposition -> complexProposition AND complexProposition
rule 5    complexProposition -> complexProposition OR complexProposition
rule 6    complexProposition -> complexProposition IFF complexProposition
rule 7    complexProposition -> complexProposition PROPIMPLY complexProposition
rule 8    complexProposition -> complexProposition CHOP complexProposition
rule 9    complexProposition -> ALWAYS complexProposition
rule 10   complexProposition -> KEEP complexProposition
rule 11   complexProposition -> SOMETIMES complexProposition
rule 12   complexProposition -> W_NEXT complexProposition
rule 13   complexProposition -> NEXT complexProposition
rule 14   complexProposition -> SKIP
rule 15   complexProposition -> MY_TRUE
rule 16   complexProposition -> MY_FALSE
rule 17   complexProposition -> LENGTH alg_exp
rule 18   complexProposition -> LENGTH integer
rule 19   complexProposition -> EMPTY
rule 20   complexProposition -> MORE
rule 21   complexProposition -> HALT complexProposition
rule 22   complexProposition -> FINAL complexProposition
rule 23   complexProposition -> NEGATION complexProposition
rule 24   complexProposition -> OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR
rule 25   complexProposition -> ID
rule 26   complexProposition -> DEFINE ID COLON prime_bool_statement
rule 27   complexProposition -> complexProposition CHOPSTAR
rule 28   complexProposition -> OPEN_PAR complexProposition CLOSE_PAR
rule 29   poptional_projection -> COMMA complexProposition poptional_projection
rule 30   poptional_projection ->		/* empty */
rule 31   pbool_expression -> alg_exp relation_operator alg_exp
rule 32   statement -> statement AND statement
rule 33   statement -> statement OR statement
rule 34   statement -> statement CHOP statement
rule 35   statement -> PREFIX OPEN_PAR statement CLOSE_PAR
rule 36   statement -> ass_statement
rule 37   statement -> file_statement
rule 38   statement -> sign_declaration
rule 39   statement -> if_statement
rule 40   statement -> while_statement
rule 41   statement -> for_statement
rule 42   statement -> extend_for_statement
rule 43   statement -> NEXT OPEN_PAR statement CLOSE_PAR
rule 44   statement -> W_NEXT OPEN_PAR statement CLOSE_PAR
rule 45   statement -> KEEP OPEN_PAR statement CLOSE_PAR
rule 46   statement -> ALWAYS OPEN_PAR statement CLOSE_PAR
rule 47   statement -> HALT OPEN_PAR bool_statement CLOSE_PAR
rule 48   statement -> AWAIT OPEN_PAR bool_statement CLOSE_PAR
rule 49   statement -> REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_statement CLOSE_PAR
rule 50   statement -> SKIP
rule 51   statement -> EMPTY
rule 52   statement -> MORE
rule 53   statement -> LENGTH OPEN_PAR alg_exp CLOSE_PAR
rule 54   statement -> request_statement
rule 55   statement -> display_statement
rule 56   statement -> MY_TRUE
rule 57   statement -> MY_FALSE
rule 58   statement -> FINAL OPEN_PAR statement CLOSE_PAR
rule 59   statement -> statement PARALLEL statement
rule 60   statement -> OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR
rule 61   statement -> FRAME OPEN_PAR identifier optional_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR
rule 62   statement -> OPEN_BPAR statement optional_projection CLOSE_BPAR PROJECTION big_par
rule 63   statement -> OPEN_BPAR statement CLOSE_BPAR PROJECTION big_par
rule 64   statement -> DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR
rule 65   statement -> FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 66   statement -> PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR
rule 67   statement -> struct_define_statement
rule 68   statement -> FREE OPEN_PAR identifier CLOSE_PAR
rule 69   statement -> SYSTEM OPEN_PAR str_func_parameter CLOSE_PAR
rule 70   statement -> String_Function
rule 71   statement -> CHANNEL identifier OPEN_PAR integer CLOSE_PAR
rule 72   statement -> SEND OPEN_PAR ass_ident COMMA ass_exp CLOSE_PAR
rule 73   statement -> PUT OPEN_PAR ass_ident COMMA ass_exp CLOSE_PAR
rule 74   statement -> RECEIVE OPEN_PAR ass_ident COMMA identifier CLOSE_PAR
rule 75   statement -> GET OPEN_PAR ass_ident COMMA identifier CLOSE_PAR
rule 76   statement -> function
rule 77   statement -> EXIST identifier inner_optional_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR
rule 78   statement -> OPEN_PAR statement CLOSE_PAR
rule 79   statement -> CYLINDER_STATEMENT
rule 80   option_struct_declaration -> sign_declaration
rule 81   option_struct_declaration -> sign_declaration AND option_struct_declaration
rule 82   CYLINDER_STATEMENT -> CYLINDER_STATEMENT CYLINDER CYLINDER_STATEMENT
rule 83   CYLINDER_STATEMENT -> OVER_STATEMENT
rule 84   CYLINDER_STATEMENT -> OPEN_PAR OVER_STATEMENT CLOSE_PAR
rule 85   OVER_STATEMENT -> big_par OVER OPEN_PAR INTERVAL_STATEMENT CLOSE_PAR
rule 86   OVER_STATEMENT -> big_par OVER OPEN_PAR CLOSE_PAR
rule 87   INTERVAL_STATEMENT -> SIG_INTERVAL
rule 88   INTERVAL_STATEMENT -> INTERVAL_STATEMENT COMMA INTERVAL_STATEMENT
rule 89   INTERVAL_STATEMENT -> INTERVAL_STATEMENT INTER_OR INTERVAL_STATEMENT
rule 90   INTERVAL_STATEMENT -> INTERVAL_STATEMENT OVEREP alg_exp
rule 91   INTERVAL_STATEMENT -> INTERVAL_STATEMENT OVEREP NON_DETERMINED
rule 92   INTERVAL_STATEMENT -> OPEN_PAR INTERVAL_STATEMENT CLOSE_PAR
rule 93   SIG_INTERVAL -> alg_exp
rule 94   empty_statement -> statement
rule 95   empty_statement ->		/* empty */
rule 96   function -> ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 97   function -> list OPEN_PAR option_function_identifier CLOSE_PAR
rule 98   struct_define_statement -> struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR
rule 99   struct_identifier -> STRUCT ID
rule 100  struct_identifier -> UNION ID
rule 101  sign_declaration -> SIGNED declaration
rule 102  sign_declaration -> UNSIGNED declaration
rule 103  sign_declaration -> declaration
rule 104  declaration -> type_define option_identifier_array_declaration
rule 105  declaration -> STRUCT_TYPE option_identifier_array_declaration
rule 106  declaration -> STRUCT ID option_identifier_array_declaration
rule 107  declaration -> UNION ID option_identifier_array_declaration
rule 108  declaration -> STRUCT STRUCT_TYPE option_identifier_array_declaration
rule 109  declaration -> UNION STRUCT_TYPE option_identifier_array_declaration
rule 110  declaration -> POINTERDECLARATION option_function_parameter_list
rule 111  declaration -> LISTDECLARATION option_array_declaration
rule 112  declaration -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 113  declaration -> OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 114  declaration -> OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 115  declaration -> OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp
rule 116  type_define -> INTDECLARATION
rule 117  type_define -> FLOATDECLARATION
rule 118  type_define -> CHARDECLARATION
rule 119  type_define -> STRDECLARATION
rule 120  type_define -> VOIDDECLARATION
rule 121  type_define -> FILEDECLARATION
rule 122  option_identifier_array_declaration -> identifier inner_option_identifier_array_declaration
rule 123  option_identifier_array_declaration -> ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_identifier_array_declaration
rule 124  option_identifier_array_declaration -> identifier ASS_EQU ass_exp inner_option_identifier_array_declaration
rule 125  option_identifier_array_declaration -> identifier ASS_EQU string inner_option_identifier_array_declaration
rule 126  option_identifier_array_declaration -> ID ARRAY ASS_EQU list_exp inner_option_identifier_array_declaration
rule 127  option_identifier_array_declaration -> ID ARRAY ASS_EQU string inner_option_identifier_array_declaration
rule 128  option_identifier_array_declaration -> ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU list_exp inner_option_identifier_array_declaration
rule 129  option_identifier_array_declaration -> ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU string inner_option_identifier_array_declaration
rule 130  option_identifier_array_declaration -> MUL option_identifier_array_declaration
rule 131  inner_option_identifier_array_declaration -> COMMA option_identifier_array_declaration
rule 132  inner_option_identifier_array_declaration -> COMMA error
rule 133  inner_option_identifier_array_declaration ->		/* empty */
rule 134  option_array_declaration -> ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_array_declaration
rule 135  inner_option_array_declaration -> COMMA ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_array_declaration
rule 136  inner_option_array_declaration ->		/* empty */
rule 137  inner_option_array_declaration -> COMMA error
rule 138  file_statement -> FOPEN OPEN_PAR ass_ident COMMA string CLOSE_PAR
rule 139  file_statement -> FGETS OPEN_PAR identifier COMMA integer COMMA identifier CLOSE_PAR
rule 140  file_statement -> FGETC OPEN_PAR identifier CLOSE_PAR
rule 141  file_statement -> FPUTS OPEN_PAR identifier COMMA identifier CLOSE_PAR
rule 142  file_statement -> FPUTC OPEN_PAR identifier COMMA identifier CLOSE_PAR
rule 143  file_statement -> FPUTC OPEN_PAR list COMMA identifier CLOSE_PAR
rule 144  file_statement -> FCLOSE OPEN_PAR identifier CLOSE_PAR
rule 145  ass_statement -> ass_ident assign_operator ass_exp
rule 146  ass_ident -> identifier
rule 147  ass_ident -> struct_member_exp
rule 148  ass_ident -> list
rule 149  ass_ident -> value_exp
rule 150  ass_ident -> OPEN_PAR ass_ident CLOSE_PAR
rule 151  ass_ident -> NEXT ass_ident
rule 152  ass_ident -> leftaddrshift
rule 153  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 154  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 155  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 156  leftaddrshift -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 157  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 158  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 159  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 160  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 161  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 162  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 163  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 164  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 165  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 166  assign_operator -> ASS_EQU
rule 167  assign_operator -> UNITASSIGN
rule 168  ass_exp -> alg_exp
rule 169  ass_exp -> list_exp
rule 170  ass_exp -> string
rule 171  ass_exp -> bool_statement
rule 172  ass_exp -> struct_member_exp
rule 173  ass_exp -> file_statement
rule 174  ass_exp -> OPEN_PAR string CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function
rule 175  ass_exp -> OPEN_PAR ass_exp CLOSE_PAR
rule 176  ass_exp -> rightaddrshift
rule 177  rightaddrshift -> MUL OPEN_PAR leftaddrshift CLOSE_PAR
rule 178  list -> ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 179  list -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 180  list -> OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 181  list -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 182  list -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 183  list -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 184  list -> OPEN_PAR list CLOSE_PAR
rule 185  option_alg_exp -> COMMA alg_exp option_alg_exp
rule 186  option_alg_exp -> COMMA error
rule 187  option_alg_exp ->		/* empty */
rule 188  value_exp -> MUL identifier
rule 189  value_exp -> MUL value_exp
rule 190  value_exp -> MUL list
rule 191  value_exp -> OPEN_PAR value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR
rule 192  value_exp -> MUL OPEN_PAR all_type_define MUL CLOSE_PAR alg_exp
rule 193  value_exp -> MUL OPEN_PAR alg_exp CLOSE_PAR
rule 194  value_exp -> OPEN_PAR value_exp CLOSE_PAR
rule 195  alg_exp -> simple_alg_exp
rule 196  alg_exp -> simple_alg_exp relation_operator alg_exp
rule 197  alg_exp -> alg_exp alg_operator simple_alg_exp
rule 198  alg_exp -> IF bool_statement THEN alg_exp optional_exp_else_statement
rule 199  type_cast_alg_exp -> simple_alg_exp
rule 200  type_cast_alg_exp -> simple_alg_exp alg_operator simple_alg_exp
rule 201  optional_exp_else_statement -> ELSE alg_exp
rule 202  optional_exp_else_statement ->		/* empty */
rule 203  simple_alg_exp -> factor
rule 204  simple_alg_exp -> simple_alg_exp mul_operator factor
rule 205  simple_alg_exp -> String_Function
rule 206  factor -> integer
rule 207  factor -> SUB factor
rule 208  factor -> BNE factor
rule 209  factor -> POINTERNULL
rule 210  factor -> floatliteral
rule 211  factor -> identifier
rule 212  factor -> list
rule 213  factor -> pre_next
rule 214  factor -> value_exp
rule 215  factor -> function
rule 216  factor -> OPEN_PAR alg_exp CLOSE_PAR
rule 217  factor -> Float_Function
rule 218  factor -> charliteral
rule 219  factor -> address_exp
rule 220  factor -> type_cast
rule 221  factor -> struct_member_exp
rule 222  factor -> size_of
rule 223  pre_next -> PREVIOUS OPEN_PAR identifier CLOSE_PAR
rule 224  mul_operator -> MUL
rule 225  mul_operator -> DIV
rule 226  mul_operator -> MOD
rule 227  mul_operator -> LST
rule 228  mul_operator -> RST
rule 229  mul_operator -> ADDRESS
rule 230  mul_operator -> INTER_OR
rule 231  mul_operator -> CON
rule 232  alg_operator -> ADD
rule 233  alg_operator -> SUB
rule 234  list_exp -> list_exp CON list_exp
rule 235  list_exp -> option_list_value
rule 236  list_exp -> option_struct_list_value
rule 237  list_exp -> OPEN_PAR list_exp CLOSE_PAR
rule 238  option_list_value -> OPEN_MPAR alg_exp inner_option_list_value CLOSE_MPAR
rule 239  option_list_value -> OPEN_MPAR string inner_option_list_value CLOSE_MPAR
rule 240  option_list_value -> OPEN_MPAR charliteral inner_option_list_value CLOSE_MPAR
rule 241  option_list_value -> OPEN_MPAR list_exp inner_option_list_value CLOSE_MPAR
rule 242  option_struct_list_value -> OPEN_BPAR alg_exp inner_option_list_value CLOSE_BPAR
rule 243  option_struct_list_value -> OPEN_BPAR string inner_option_list_value CLOSE_BPAR
rule 244  option_struct_list_value -> OPEN_BPAR charliteral inner_option_list_value CLOSE_BPAR
rule 245  option_struct_list_value -> OPEN_BPAR list_exp inner_option_list_value CLOSE_BPAR
rule 246  inner_option_list_value -> COMMA alg_exp inner_option_list_value
rule 247  inner_option_list_value -> COMMA string inner_option_list_value
rule 248  inner_option_list_value -> COMMA charliteral inner_option_list_value
rule 249  inner_option_list_value -> COMMA list_exp inner_option_list_value
rule 250  inner_option_list_value ->		/* empty */
rule 251  inner_option_list_value -> COMMA error
rule 252  address_exp -> ADDRESS identifier
rule 253  address_exp -> ADDRESS list
rule 254  address_exp -> ADDRESS struct_member_exp
rule 255  address_exp -> ADDRESS address_exp
rule 256  address_exp -> OPEN_PAR address_exp CLOSE_PAR
rule 257  type_cast -> OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 258  type_cast -> OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp
rule 259  type_cast -> OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 260  type_cast -> OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 261  type_cast -> OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 262  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 263  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 264  type_cast -> OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element
rule 265  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element
rule 266  type_cast -> OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element
rule 267  type_cast -> OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element
rule 268  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element
rule 269  type_cast -> OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element
rule 270  type_cast -> OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 271  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 272  type_cast -> OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element
rule 273  type_cast -> OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 274  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 275  type_cast -> OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element
rule 276  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 277  type_cast -> OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 278  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 279  type_cast -> OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 280  casted_element -> type_cast_alg_exp
rule 281  casted_element -> MALLOC OPEN_PAR alg_exp CLOSE_PAR
rule 282  all_sizeof_type -> all_type_define
rule 283  all_sizeof_type -> INTDECLARATION MUL
rule 284  all_sizeof_type -> FLOATDECLARATION MUL
rule 285  all_sizeof_type -> CHARDECLARATION MUL
rule 286  all_sizeof_type -> UNSIGNED INTDECLARATION MUL
rule 287  all_sizeof_type -> UNSIGNED CHARDECLARATION MUL
rule 288  all_sizeof_type -> STRUCT STRUCT_TYPE MUL
rule 289  all_sizeof_type -> STRUCT_TYPE MUL
rule 290  size_of -> SIZEOF OPEN_PAR alg_exp CLOSE_PAR
rule 291  size_of -> SIZEOF OPEN_PAR all_sizeof_type CLOSE_PAR
rule 292  size_of -> SIZEOF OPEN_PAR STRUCT_TYPE CLOSE_PAR
rule 293  size_of -> SIZEOF OPEN_PAR string CLOSE_PAR
rule 294  String_Function -> String_Function_head
rule 295  String_Function -> String_Function_tail
rule 296  String_Function -> String_Function_cat
rule 297  String_Function -> String_Function_cpy
rule 298  String_Function -> String_Function_cmp
rule 299  String_Function -> String_Function_len
rule 300  String_Function_head -> STRFUNCHEAD OPEN_PAR str_func_parameter CLOSE_PAR
rule 301  String_Function_tail -> STRFUNCTAIL OPEN_PAR str_func_parameter CLOSE_PAR
rule 302  String_Function_cat -> STRFUNCCAT OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR
rule 303  String_Function_cmp -> STRFUNCCMP OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR
rule 304  String_Function_cpy -> STRFUNCCPY OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR
rule 305  String_Function_len -> STRFUNCLEN OPEN_PAR str_func_parameter CLOSE_PAR
rule 306  str_func_parameter -> identifier
rule 307  str_func_parameter -> list
rule 308  str_func_parameter -> value_exp
rule 309  str_func_parameter -> string
rule 310  str_func_parameter -> String_Function
rule 311  str_func_parameter -> struct_member_exp
rule 312  Float_Function -> ROUND alg_exp
rule 313  Float_Function -> CEIL alg_exp
rule 314  Float_Function -> FLOOR alg_exp
rule 315  Float_Function -> SIN alg_exp
rule 316  Float_Function -> COS alg_exp
rule 317  Float_Function -> TAN alg_exp
rule 318  Float_Function -> ASIN alg_exp
rule 319  Float_Function -> ACOS alg_exp
rule 320  Float_Function -> ATAN alg_exp
rule 321  Float_Function -> SINH alg_exp
rule 322  Float_Function -> COSH alg_exp
rule 323  Float_Function -> TANH alg_exp
rule 324  Float_Function -> EXP alg_exp
rule 325  Float_Function -> LOG alg_exp
rule 326  Float_Function -> LOG10 alg_exp
rule 327  Float_Function -> SQRT alg_exp
rule 328  Float_Function -> ATAN2 OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR
rule 329  Float_Function -> POW OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR
rule 330  Float_Function -> FMOD OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR
rule 331  Float_Function -> MODF OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR
rule 332  Float_Function -> LDEXP OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR
rule 333  Float_Function -> ABS alg_exp
rule 334  Float_Function -> FABS alg_exp
rule 335  Float_Function -> LABS alg_exp
rule 336  bool_statement -> prime_bool_statement
rule 337  bool_statement -> alg_exp EQU string
rule 338  bool_statement -> alg_exp NE string
rule 339  bool_statement -> string EQU alg_exp
rule 340  bool_statement -> string NE alg_exp
rule 341  bool_statement -> alg_exp EQU POINTERNULL
rule 342  bool_statement -> alg_exp NE POINTERNULL
rule 343  bool_statement -> POINTERNULL EQU alg_exp
rule 344  bool_statement -> POINTERNULL NE alg_exp
rule 345  bool_statement -> alg_exp EQU charliteral
rule 346  bool_statement -> alg_exp NE charliteral
rule 347  bool_statement -> NEGATION bool_statement
rule 348  bool_statement -> bool_statement AND bool_statement
rule 349  bool_statement -> bool_statement OR bool_statement
rule 350  bool_statement -> OPEN_PAR bool_statement CLOSE_PAR
rule 351  prime_bool_statement -> alg_exp relation_operator alg_exp
rule 352  prime_bool_statement -> NEGATION prime_bool_statement
rule 353  prime_bool_statement -> MY_TRUE
rule 354  prime_bool_statement -> MY_FALSE
rule 355  prime_bool_statement -> MORE
rule 356  prime_bool_statement -> EMPTY
rule 357  prime_bool_statement -> alg_exp
rule 358  prime_bool_statement -> String_Function_cmp
rule 359  prime_bool_statement -> file_statement
rule 360  relation_operator -> GE
rule 361  relation_operator -> LE
rule 362  relation_operator -> NE
rule 363  relation_operator -> GT
rule 364  relation_operator -> LT
rule 365  relation_operator -> EQU
rule 366  sign_type_define -> UNSIGNED INTDECLARATION
rule 367  sign_type_define -> UNSIGNED CHARDECLARATION
rule 368  all_type_define -> sign_type_define
rule 369  all_type_define -> type_define
rule 370  option_function_parameter_list -> all_type_define identifier inner_optional_define_identifier
rule 371  option_function_parameter_list -> all_type_define inner_optional_define_identifier
rule 372  option_function_parameter_list -> STRUCT_TYPE identifier inner_optional_define_identifier
rule 373  option_function_parameter_list -> STRUCT_TYPE MUL identifier inner_optional_define_identifier
rule 374  option_function_parameter_list -> STRUCT_TYPE MUL MUL identifier inner_optional_define_identifier
rule 375  option_function_parameter_list -> STRUCT_TYPE identifier ARRAY inner_optional_define_identifier
rule 376  option_function_parameter_list -> ID identifier inner_optional_define_identifier
rule 377  option_function_parameter_list -> ID MUL identifier inner_optional_define_identifier
rule 378  option_function_parameter_list -> ID MUL MUL identifier inner_optional_define_identifier
rule 379  option_function_parameter_list -> ID identifier ARRAY inner_optional_define_identifier
rule 380  option_function_parameter_list -> STRUCT_TYPE inner_optional_define_identifier
rule 381  option_function_parameter_list -> STRUCT_TYPE MUL inner_optional_define_identifier
rule 382  option_function_parameter_list -> STRUCT_TYPE MUL MUL inner_optional_define_identifier
rule 383  option_function_parameter_list -> ID inner_optional_define_identifier
rule 384  option_function_parameter_list -> ID MUL inner_optional_define_identifier
rule 385  option_function_parameter_list -> ID MUL MUL inner_optional_define_identifier
rule 386  option_function_parameter_list -> all_type_define identifier ARRAY inner_optional_define_identifier
rule 387  option_function_parameter_list -> all_type_define MUL identifier ARRAY inner_optional_define_identifier
rule 388  option_function_parameter_list -> all_type_define identifier OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier
rule 389  option_function_parameter_list -> all_type_define identifier OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier
rule 390  option_function_parameter_list -> all_type_define identifier ARRAY OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier
rule 391  option_function_parameter_list -> all_type_define MUL identifier inner_optional_define_identifier
rule 392  option_function_parameter_list -> all_type_define MUL inner_optional_define_identifier
rule 393  option_function_parameter_list -> all_type_define MUL MUL identifier inner_optional_define_identifier
rule 394  option_function_parameter_list -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier
rule 395  option_function_parameter_list ->		/* empty */
rule 396  inner_optional_define_identifier -> COMMA all_type_define identifier inner_optional_define_identifier
rule 397  inner_optional_define_identifier -> COMMA all_type_define inner_optional_define_identifier
rule 398  inner_optional_define_identifier -> COMMA ID identifier inner_optional_define_identifier
rule 399  inner_optional_define_identifier -> COMMA STRUCT_TYPE identifier inner_optional_define_identifier
rule 400  inner_optional_define_identifier -> COMMA STRUCT_TYPE MUL identifier inner_optional_define_identifier
rule 401  inner_optional_define_identifier -> COMMA ID identifier ARRAY inner_optional_define_identifier
rule 402  inner_optional_define_identifier -> COMMA STRUCT_TYPE identifier ARRAY inner_optional_define_identifier
rule 403  inner_optional_define_identifier -> COMMA all_type_define identifier ARRAY inner_optional_define_identifier
rule 404  inner_optional_define_identifier -> COMMA all_type_define MUL identifier ARRAY inner_optional_define_identifier
rule 405  inner_optional_define_identifier -> COMMA all_type_define MUL identifier inner_optional_define_identifier
rule 406  inner_optional_define_identifier -> COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier
rule 407  inner_optional_define_identifier ->		/* empty */
rule 408  inner_optional_define_identifier -> COMMA all_type_define identifier OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier
rule 409  inner_optional_define_identifier -> COMMA all_type_define identifier OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier
rule 410  inner_optional_define_identifier -> COMMA all_type_define identifier ARRAY OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier
rule 411  inner_optional_define_identifier -> COMMA all_type_define MUL identifier inner_optional_define_identifier
rule 412  inner_optional_define_identifier -> COMMA all_type_define MUL inner_optional_define_identifier
rule 413  inner_optional_define_identifier -> COMMA error
rule 414  option_function_identifier -> ass_exp inner_option_function_identifier
rule 415  option_function_identifier -> ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 416  option_function_identifier ->		/* empty */
rule 417  option_function_identifier -> ADDRESS error
rule 418  inner_option_function_identifier -> COMMA ass_exp inner_option_function_identifier
rule 419  inner_option_function_identifier -> COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 420  inner_option_function_identifier ->		/* empty */
rule 421  inner_option_function_identifier -> COMMA error
rule 422  big_par -> OPEN_BPAR statement CLOSE_BPAR
rule 423  big_par -> error CLOSE_BPAR
rule 424  bool_par -> OPEN_PAR bool_statement CLOSE_PAR
rule 425  bool_par -> error CLOSE_PAR
rule 426  identifier -> ID
rule 427  identifier -> OPEN_PAR identifier CLOSE_PAR
rule 428  string -> STR
rule 429  integer -> INTEGER
rule 430  charliteral -> CHARLITERAL
rule 431  floatliteral -> FLOATLITERAL
rule 432  optional_frame_identifier -> COMMA identifier optional_frame_identifier
rule 433  optional_frame_identifier ->		/* empty */
rule 434  optional_frame_identifier -> COMMA error
rule 435  optional_projection ->		/* empty */
rule 436  optional_projection -> COMMA statement optional_projection
rule 437  imply_pre -> prime_bool_statement
rule 438  imply_pre -> NEGATION imply_pre
rule 439  imply_pre -> imply_pre AND imply_pre
rule 440  imply_pre -> imply_pre OR imply_pre
rule 441  imply_pre -> OPEN_PAR imply_pre CLOSE_PAR
rule 442  while_statement -> WHILE bool_par big_par
rule 443  for_statement -> FOR alg_exp TIMES DO big_par
rule 444  extend_for_statement -> FOR OPEN_PAR for_sta_init CHOP for_sta_condition CHOP for_sta_control CLOSE_PAR big_par
rule 445  for_sta_init -> ass_statement
rule 446  for_sta_init -> declaration
rule 447  for_sta_init ->		/* empty */
rule 448  for_sta_condition -> pbool_expression
rule 449  for_sta_condition ->		/* empty */
rule 450  for_sta_control -> ass_statement
rule 451  for_sta_control ->		/* empty */
rule 452  if_statement -> IF bool_statement THEN big_par optional_else_statement
rule 453  optional_else_statement -> ELSE big_par
rule 454  optional_else_statement ->		/* empty */
rule 455  display_statement -> DISPLAY OPEN_PAR ass_exp CLOSE_PAR
rule 456  display_statement -> DISPLAY OPEN_PAR ass_exp option_output CLOSE_PAR
rule 457  option_output ->		/* empty */
rule 458  option_output -> COMMA ass_exp option_output
rule 459  request_statement -> REQUEST OPEN_PAR identifier CLOSE_PAR
rule 460  request_statement -> REQUEST OPEN_PAR identifier option_input CLOSE_PAR
rule 461  request_statement -> REQUEST OPEN_PAR list CLOSE_PAR
rule 462  request_statement -> REQUEST OPEN_PAR list option_input CLOSE_PAR
rule 463  request_statement -> REQUEST OPEN_PAR struct_member_exp CLOSE_PAR
rule 464  option_input ->		/* empty */
rule 465  option_input -> COMMA identifier option_input
rule 466  option_input -> COMMA list option_input
rule 467  struct_member_exp -> identifier DOT identifier option_struct_member_exp
rule 468  struct_member_exp -> list DOT identifier option_struct_member_exp
rule 469  struct_member_exp -> value_exp DOT identifier option_struct_member_exp
rule 470  struct_member_exp -> identifier DOT list option_struct_member_exp
rule 471  struct_member_exp -> list DOT list option_struct_member_exp
rule 472  struct_member_exp -> value_exp DOT list option_struct_member_exp
rule 473  struct_member_exp -> identifier IMPLY identifier option_struct_member_exp
rule 474  struct_member_exp -> list IMPLY identifier option_struct_member_exp
rule 475  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp
rule 476  struct_member_exp -> value_exp IMPLY identifier option_struct_member_exp
rule 477  struct_member_exp -> identifier IMPLY list option_struct_member_exp
rule 478  struct_member_exp -> list IMPLY list option_struct_member_exp
rule 479  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY list option_struct_member_exp
rule 480  struct_member_exp -> identifier DOT function
rule 481  struct_member_exp -> identifier IMPLY function
rule 482  struct_member_exp -> value_exp IMPLY list option_struct_member_exp
rule 483  struct_member_exp -> OPEN_PAR struct_member_exp CLOSE_PAR
rule 484  option_struct_member_exp ->		/* empty */
rule 485  option_struct_member_exp -> DOT identifier option_struct_member_exp
rule 486  option_struct_member_exp -> DOT list option_struct_member_exp
rule 487  option_struct_member_exp -> IMPLY identifier option_struct_member_exp
rule 488  option_struct_member_exp -> IMPLY list option_struct_member_exp
rule 489  option_struct_member_exp -> DOT function
rule 490  option_struct_member_exp -> IMPLY function

Terminals, with rules where they appear

$ (-1)
error (256) 132 137 186 251 413 417 421 423 425 434
IF (258) 198 452
ELSE (259) 201 453
EMPTY (260) 19 51 356
AWAIT (261) 48
PROJECTION (262) 24 62 63
PBEGIN (263) 2
PEND (264) 2
POINTERNULL (265) 209 341 342 343 344
ARRAY (266) 126 127 375 379 386 387 390 401 402 403 404 410
STRUCT (267) 99 106 108 276 278 288
DOT (268) 467 468 469 470 471 472 480 485 486 489
UNION (269) 100 107 109
FOPEN (270) 138
FCLOSE (271) 144
FILEDECLARATION (272) 121
FGETS (273) 139
FPUTS (274) 141
FGETC (275) 140
FPUTC (276) 142 143
MORE (277) 20 52 355
DEFINE (278) 26 64
MY_TRUE (279) 15 56 353
MY_FALSE (280) 16 57 354
EXIST (281) 77
FRAME (282) 61
FOR (283) 443 444
WHILE (284) 442
DO (285) 443
REPEAT (286) 49
UNTIL (287) 49
DISPLAY (288) 455 456
SKIP (289) 14 50
THEN (290) 198 452
COMMA (291) 29 72 73 74 75 88 131 132 135 137 138 139 141 142 143 185
    186 246 247 248 249 251 302 303 304 328 329 330 331 332 389 396
    397 398 399 400 401 402 403 404 405 406 408 409 410 411 412 413
    418 419 421 432 434 436 458 465 466
COLON (292) 26 77
INTDECLARATION (293) 116 155 159 162 163 164 165 179 180 257 260 262
    264 265 270 271 283 286 366
STRDECLARATION (294) 119
POINTERDECLARATION (295) 110
CHARDECLARATION (296) 118 153 154 157 158 159 160 161 162 163 164 182
    183 259 261 263 267 268 273 274 285 287 367
VOIDDECLARATION (297) 120 269 275
FLOATDECLARATION (298) 117 156 181 258 266 272 284
LISTDECLARATION (299) 111
OPEN_PAR (300) 28 35 43 44 45 46 47 48 49 53 58 60 61 64 65 66 68 69
    71 72 73 74 75 78 84 85 86 92 96 97 112 113 114 115 138 139 140
    141 142 143 144 150 153 154 155 156 157 158 159 160 161 162 163
    164 165 174 175 177 179 180 181 182 183 184 191 192 193 194 216
    223 237 256 257 258 259 260 261 262 263 264 265 266 267 268 269
    270 271 272 273 274 275 276 277 278 279 281 290 291 292 293 300
    301 302 303 304 305 328 329 330 331 332 350 394 406 415 419 424
    427 441 444 455 456 459 460 461 462 463 475 479 483
CLOSE_PAR (301) 28 35 43 44 45 46 47 48 49 53 58 60 61 64 65 66 68
    69 71 72 73 74 75 78 84 85 86 92 96 97 112 113 114 115 138 139
    140 141 142 143 144 150 153 154 155 156 157 158 159 160 161 162
    163 164 165 174 175 177 179 180 181 182 183 184 191 192 193 194
    216 223 237 256 257 258 259 260 261 262 263 264 265 266 267 268
    269 270 271 272 273 274 275 276 277 278 279 281 290 291 292 293
    300 301 302 303 304 305 328 329 330 331 332 350 394 406 415 419
    424 425 427 441 444 455 456 459 460 461 462 463 475 479 483
TIMES (302) 443
OPEN_BPAR (303) 24 49 62 63 64 65 66 77 98 242 243 244 245 422
CLOSE_BPAR (304) 24 49 62 63 64 65 66 77 98 242 243 244 245 422 423
OPEN_MPAR (305) 60 114 115 123 128 129 134 135 153 154 155 156 157
    158 159 160 161 162 163 164 165 178 179 180 181 182 183 191 238
    239 240 241 388 389 390 408 409 410
CLOSE_MPAR (306) 60 114 115 123 128 129 134 135 153 154 155 156 157
    158 159 160 161 162 163 164 165 178 179 180 181 182 183 191 238
    239 240 241 388 389 390 408 409 410
FUNCTION (307) 65
OVER (308) 85 86
CYLINDER (309) 82
OVEREP (310) 90 91
INTER_OR (311) 89 230
NON_DETERMINED (312) 91
SEND (313) 72
RECEIVE (314) 74
PROCESS (315) 66
CHANNEL (316) 71
PUT (317) 73
GET (318) 75
ERROR_TOKEN (319)
STRFUNCHEAD (320) 300
STRFUNCTAIL (321) 301
STRFUNCCAT (322) 302
STRFUNCCMP (323) 303
STRFUNCCPY (324) 304
STRFUNCLEN (325) 305
SIZEOF (326) 290 291 292 293
SYSTEM (327) 69
CEIL (328) 313
FLOOR (329) 314
ROUND (330) 312
SIN (331) 315
COS (332) 316
TAN (333) 317
ASIN (334) 318
ACOS (335) 319
ATAN (336) 320
SINH (337) 321
COSH (338) 322
TANH (339) 323
EXP (340) 324
LOG (341) 325
LOG10 (342) 326
SQRT (343) 327
ATAN2 (344) 328
POW (345) 329
ABS (346) 333
FABS (347) 334
LABS (348) 335
FMOD (349) 330
MODF (350) 331
LDEXP (351) 332
FREXP (352)
UNSIGNED (353) 102 154 158 160 161 162 164 180 183 262 263 265 268
    271 274 286 287 366 367
SIGNED (354) 101 260 261
MALLOC (355) 281
FREE (356) 68
CHOP (357) 8 34 444
IMPLY (358) 60 473 474 475 476 477 478 479 481 482 487 488 490
IFF (359) 6
PROPIMPLY (360) 7
OR (361) 5 33 349 440
PARALLEL (362) 59
AND (363) 4 32 61 81 348 439
ASS_EQU (364) 64 66 115 124 125 126 127 128 129 166
UNITASSIGN (365) 167
CON (366) 231 234
ADDRESS (367) 229 252 253 254 255 417
NE (368) 338 340 342 344 346 362
EQU (369) 337 339 341 343 345 365
GE (370) 360
LE (371) 361
GT (372) 363
LT (373) 364
LST (374) 227
RST (375) 228
ADD (376) 232
SUB (377) 207 233
MUL (378) 112 113 114 115 130 153 154 155 156 157 158 159 160 161 162
    163 164 165 177 179 180 181 182 183 188 189 190 192 193 224 264
    265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 283
    284 285 286 287 288 289 373 374 377 378 381 382 384 385 387 391
    392 393 394 400 404 405 406 411 412
DIV (379) 225
MOD (380) 226
BNE (381) 208
CHOPSTAR (382) 27
NEXT (383) 13 43 151
NEGATION (384) 23 347 352 438
LENGTH (385) 17 18 53
REQUEST (386) 459 460 461 462 463
FINAL (387) 22 58
KEEP (388) 10 45
ALWAYS (389) 9 46
HALT (390) 21 47
W_NEXT (391) 12 44
PREFIX (392) 35
PREVIOUS (393) 223
SOMETIMES (394) 11
ID (395) 25 26 64 65 66 96 99 100 106 107 114 115 123 126 127 128 129
    134 135 178 179 180 181 182 183 376 377 378 379 383 384 385 398
    401 415 419 426
STR (396) 428
STRUCT_TYPE (397) 105 108 109 276 277 278 279 288 289 292 372 373 374
    375 380 381 382 399 400 402
INTEGER (398) 153 154 155 156 157 158 159 160 161 162 163 164 165 429
FLOATLITERAL (399) 431
CHARLITERAL (400) 430

Nonterminals, with rules where they appear

program (146)
    on left: 1
gComplexProposition (147)
    on left: 2 3, on right: 1
complexProposition (148)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27 28, on right: 2 4 5 6 7 8 9 10 11 12 13 21 22 23 24
    27 28 29
poptional_projection (149)
    on left: 29 30, on right: 24 29
pbool_expression (150)
    on left: 31, on right: 448
statement (151)
    on left: 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
    50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
    71 72 73 74 75 76 77 78 79, on right: 1 32 33 34 35 43 44 45 46
    49 58 59 60 61 62 63 65 77 78 94 422 436
option_struct_declaration (152)
    on left: 80 81, on right: 81 98
CYLINDER_STATEMENT (153)
    on left: 82 83 84, on right: 79 82
OVER_STATEMENT (154)
    on left: 85 86, on right: 83 84
INTERVAL_STATEMENT (155)
    on left: 87 88 89 90 91 92, on right: 85 88 89 90 91 92
SIG_INTERVAL (156)
    on left: 93, on right: 87
empty_statement (157)
    on left: 94 95, on right: 64 66
function (158)
    on left: 96 97, on right: 76 174 215 480 481 489 490
struct_define_statement (159)
    on left: 98, on right: 67
struct_identifier (160)
    on left: 99 100, on right: 98
sign_declaration (161)
    on left: 101 102 103, on right: 38 80 81
declaration (162)
    on left: 104 105 106 107 108 109 110 111 112 113 114 115,
    on right: 101 102 103 446
type_define (163)
    on left: 116 117 118 119 120 121, on right: 104 174 369
option_identifier_array_declaration (164)
    on left: 122 123 124 125 126 127 128 129 130, on right: 104 105
    106 107 108 109 130 131
inner_option_identifier_array_declaration (165)
    on left: 131 132 133, on right: 122 123 124 125 126 127 128 129
option_array_declaration (166)
    on left: 134, on right: 111
inner_option_array_declaration (167)
    on left: 135 136 137, on right: 134 135
file_statement (168)
    on left: 138 139 140 141 142 143 144, on right: 37 173 359
ass_statement (169)
    on left: 145, on right: 36 445 450
ass_ident (170)
    on left: 146 147 148 149 150 151 152, on right: 72 73 74 75 138
    145 150 151
leftaddrshift (171)
    on left: 153 154 155 156 157 158 159 160 161 162 163 164 165,
    on right: 152 177
assign_operator (172)
    on left: 166 167, on right: 145
ass_exp (173)
    on left: 168 169 170 171 172 173 174 175 176, on right: 72 73 124
    145 175 414 418 455 456 458
rightaddrshift (174)
    on left: 177, on right: 176
list (175)
    on left: 178 179 180 181 182 183 184, on right: 97 143 148 184
    190 212 253 307 461 462 466 468 470 471 472 474 477 478 479 482
    486 488
option_alg_exp (176)
    on left: 185 186 187, on right: 114 115 123 128 129 134 135 153
    154 155 156 157 158 159 160 161 162 163 164 165 178 179 180 181
    182 183 185 191
value_exp (177)
    on left: 188 189 190 191 192 193 194, on right: 149 189 191 194
    214 308 469 472 476 482
alg_exp (178)
    on left: 195 196 197 198, on right: 17 31 53 90 93 114 115 123
    128 129 134 135 153 154 155 156 157 158 159 160 161 162 163 164
    165 168 178 179 180 181 182 183 185 191 192 193 196 197 198 201
    216 238 242 246 281 290 312 313 314 315 316 317 318 319 320 321
    322 323 324 325 326 327 328 329 330 331 332 333 334 335 337 338
    339 340 341 342 343 344 345 346 351 357 388 389 390 408 409 410
    443
type_cast_alg_exp (179)
    on left: 199 200, on right: 257 258 259 260 261 262 263 280
optional_exp_else_statement (180)
    on left: 201 202, on right: 198
simple_alg_exp (181)
    on left: 203 204 205, on right: 195 196 197 199 200 204
factor (182)
    on left: 206 207 208 209 210 211 212 213 214 215 216 217 218 219
    220 221 222, on right: 203 204 207 208
pre_next (183)
    on left: 223, on right: 213
mul_operator (184)
    on left: 224 225 226 227 228 229 230 231, on right: 204
alg_operator (185)
    on left: 232 233, on right: 197 200
list_exp (186)
    on left: 234 235 236 237, on right: 115 126 128 169 234 237 241
    245 249
option_list_value (187)
    on left: 238 239 240 241, on right: 235
option_struct_list_value (188)
    on left: 242 243 244 245, on right: 236
inner_option_list_value (189)
    on left: 246 247 248 249 250 251, on right: 238 239 240 241 242
    243 244 245 246 247 248 249
address_exp (190)
    on left: 252 253 254 255 256, on right: 219 255 256 475 479
type_cast (191)
    on left: 257 258 259 260 261 262 263 264 265 266 267 268 269 270
    271 272 273 274 275 276 277 278 279, on right: 220
casted_element (192)
    on left: 280 281, on right: 264 265 266 267 268 269 270 271 272
    273 274 275 276 277 278 279
all_sizeof_type (193)
    on left: 282 283 284 285 286 287 288 289, on right: 291
size_of (194)
    on left: 290 291 292 293, on right: 222
String_Function (195)
    on left: 294 295 296 297 298 299, on right: 70 205 310
String_Function_head (196)
    on left: 300, on right: 294
String_Function_tail (197)
    on left: 301, on right: 295
String_Function_cat (198)
    on left: 302, on right: 296
String_Function_cmp (199)
    on left: 303, on right: 298 358
String_Function_cpy (200)
    on left: 304, on right: 297
String_Function_len (201)
    on left: 305, on right: 299
str_func_parameter (202)
    on left: 306 307 308 309 310 311, on right: 69 300 301 302 303
    304 305
Float_Function (203)
    on left: 312 313 314 315 316 317 318 319 320 321 322 323 324 325
    326 327 328 329 330 331 332 333 334 335, on right: 217
bool_statement (204)
    on left: 336 337 338 339 340 341 342 343 344 345 346 347 348 349
    350, on right: 47 48 49 171 198 347 348 349 350 424 452
prime_bool_statement (205)
    on left: 351 352 353 354 355 356 357 358 359, on right: 26 336
    352 437
relation_operator (206)
    on left: 360 361 362 363 364 365, on right: 31 196 351
sign_type_define (207)
    on left: 366 367, on right: 368
all_type_define (208)
    on left: 368 369, on right: 192 282 370 371 386 387 388 389 390
    391 392 393 396 397 403 404 405 408 409 410 411 412
option_function_parameter_list (209)
    on left: 370 371 372 373 374 375 376 377 378 379 380 381 382 383
    384 385 386 387 388 389 390 391 392 393 394 395,
    on right: 64 65 66 110 112 113 114 115 174 394 406
inner_optional_define_identifier (210)
    on left: 396 397 398 399 400 401 402 403 404 405 406 407 408 409
    410 411 412 413, on right: 77 370 371 372 373 374 375 376 377 378
    379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394
    396 397 398 399 400 401 402 403 404 405 406 408 409 410 411 412
option_function_identifier (211)
    on left: 414 415 416 417, on right: 96 97 415 419
inner_option_function_identifier (212)
    on left: 418 419 420 421, on right: 414 415 418 419
big_par (213)
    on left: 422 423, on right: 62 63 85 86 442 443 444 452 453
bool_par (214)
    on left: 424 425, on right: 442
identifier (215)
    on left: 426 427, on right: 61 68 71 74 75 77 112 113 122 124 125
    139 140 141 142 143 144 146 188 211 223 252 306 370 372 373 374
    375 376 377 378 379 386 387 388 389 390 391 393 394 396 398 399
    400 401 402 403 404 405 406 408 409 410 411 427 432 459 460 465
    467 468 469 470 473 474 475 476 477 480 481 485 487
string (216)
    on left: 428, on right: 125 127 129 138 170 174 239 243 247 293
    309 337 338 339 340
integer (217)
    on left: 429, on right: 18 71 139 206
charliteral (218)
    on left: 430, on right: 218 240 244 248 345 346
floatliteral (219)
    on left: 431, on right: 210
optional_frame_identifier (220)
    on left: 432 433 434, on right: 61 432
optional_projection (221)
    on left: 435 436, on right: 62 436
imply_pre (222)
    on left: 437 438 439 440 441, on right: 60 438 439 440 441
while_statement (223)
    on left: 442, on right: 40
for_statement (224)
    on left: 443, on right: 41
extend_for_statement (225)
    on left: 444, on right: 42
for_sta_init (226)
    on left: 445 446 447, on right: 444
for_sta_condition (227)
    on left: 448 449, on right: 444
for_sta_control (228)
    on left: 450 451, on right: 444
if_statement (229)
    on left: 452, on right: 39
optional_else_statement (230)
    on left: 453 454, on right: 452
display_statement (231)
    on left: 455 456, on right: 55
option_output (232)
    on left: 457 458, on right: 456 458
request_statement (233)
    on left: 459 460 461 462 463, on right: 54
option_input (234)
    on left: 464 465 466, on right: 460 462 465 466
struct_member_exp (235)
    on left: 467 468 469 470 471 472 473 474 475 476 477 478 479 480
    481 482 483, on right: 147 172 221 254 311 463 483
option_struct_member_exp (236)
    on left: 484 485 486 487 488 489 490, on right: 467 468 469 470
    471 472 473 474 475 476 477 478 479 482 485 486 487 488


state 0

    PBEGIN	shift, and go to state 1

    $default	reduce using rule 3 (gComplexProposition)

    program	go to state 1480
    gComplexProposition	go to state 2



state 1

    gComplexProposition  ->  PBEGIN . complexProposition PEND   (rule 2)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 21



state 2

    program  ->  gComplexProposition . statement   (rule 1)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 84
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114



state 3

    complexProposition  ->  EMPTY .   (rule 19)

    $default	reduce using rule 19 (complexProposition)



state 4

    complexProposition  ->  MORE .   (rule 20)

    $default	reduce using rule 20 (complexProposition)



state 5

    complexProposition  ->  DEFINE . ID COLON prime_bool_statement   (rule 26)

    ID  	shift, and go to state 115



state 6

    complexProposition  ->  MY_TRUE .   (rule 15)

    $default	reduce using rule 15 (complexProposition)



state 7

    complexProposition  ->  MY_FALSE .   (rule 16)

    $default	reduce using rule 16 (complexProposition)



state 8

    complexProposition  ->  SKIP .   (rule 14)

    $default	reduce using rule 14 (complexProposition)



state 9

    complexProposition  ->  OPEN_PAR . complexProposition CLOSE_PAR   (rule 28)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 116



state 10

    complexProposition  ->  OPEN_BPAR . complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 24)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 117



state 11

    complexProposition  ->  NEXT . complexProposition   (rule 13)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 118



state 12

    complexProposition  ->  NEGATION . complexProposition   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 119



state 13

    complexProposition  ->  LENGTH . alg_exp   (rule 17)
    complexProposition  ->  LENGTH . integer   (rule 18)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 158
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 168
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 14

    complexProposition  ->  FINAL . complexProposition   (rule 22)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 172



state 15

    complexProposition  ->  KEEP . complexProposition   (rule 10)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 173



state 16

    complexProposition  ->  ALWAYS . complexProposition   (rule 9)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 174



state 17

    complexProposition  ->  HALT . complexProposition   (rule 21)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 175



state 18

    complexProposition  ->  W_NEXT . complexProposition   (rule 12)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 176



state 19

    complexProposition  ->  SOMETIMES . complexProposition   (rule 11)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 177



state 20

    complexProposition  ->  ID .   (rule 25)

    $default	reduce using rule 25 (complexProposition)



state 21

    gComplexProposition  ->  PBEGIN complexProposition . PEND   (rule 2)
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)

    PEND	shift, and go to state 178
    CHOP	shift, and go to state 179
    IFF 	shift, and go to state 180
    PROPIMPLY	shift, and go to state 181
    OR  	shift, and go to state 182
    AND 	shift, and go to state 183
    CHOPSTAR	shift, and go to state 184



state 22

    big_par  ->  error . CLOSE_BPAR   (rule 423)

    CLOSE_BPAR	shift, and go to state 185



state 23

    if_statement  ->  IF . bool_statement THEN big_par optional_else_statement   (rule 452)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 191
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 195
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 197
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 199
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 24

    statement  ->  EMPTY .   (rule 51)

    $default	reduce using rule 51 (statement)



state 25

    statement  ->  AWAIT . OPEN_PAR bool_statement CLOSE_PAR   (rule 48)

    OPEN_PAR	shift, and go to state 201



state 26

    struct_identifier  ->  STRUCT . ID   (rule 99)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 106)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 108)

    ID  	shift, and go to state 202
    STRUCT_TYPE	shift, and go to state 203



state 27

    struct_identifier  ->  UNION . ID   (rule 100)
    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 107)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 109)

    ID  	shift, and go to state 204
    STRUCT_TYPE	shift, and go to state 205



state 28

    file_statement  ->  FOPEN . OPEN_PAR ass_ident COMMA string CLOSE_PAR   (rule 138)

    OPEN_PAR	shift, and go to state 206



state 29

    file_statement  ->  FCLOSE . OPEN_PAR identifier CLOSE_PAR   (rule 144)

    OPEN_PAR	shift, and go to state 207



state 30

    type_define  ->  FILEDECLARATION .   (rule 121)

    $default	reduce using rule 121 (type_define)



state 31

    file_statement  ->  FGETS . OPEN_PAR identifier COMMA integer COMMA identifier CLOSE_PAR   (rule 139)

    OPEN_PAR	shift, and go to state 208



state 32

    file_statement  ->  FPUTS . OPEN_PAR identifier COMMA identifier CLOSE_PAR   (rule 141)

    OPEN_PAR	shift, and go to state 209



state 33

    file_statement  ->  FGETC . OPEN_PAR identifier CLOSE_PAR   (rule 140)

    OPEN_PAR	shift, and go to state 210



state 34

    file_statement  ->  FPUTC . OPEN_PAR identifier COMMA identifier CLOSE_PAR   (rule 142)
    file_statement  ->  FPUTC . OPEN_PAR list COMMA identifier CLOSE_PAR   (rule 143)

    OPEN_PAR	shift, and go to state 211



state 35

    statement  ->  MORE .   (rule 52)

    $default	reduce using rule 52 (statement)



state 36

    statement  ->  DEFINE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 64)

    ID  	shift, and go to state 212



state 37

    statement  ->  MY_TRUE .   (rule 56)

    $default	reduce using rule 56 (statement)



state 38

    statement  ->  MY_FALSE .   (rule 57)

    $default	reduce using rule 57 (statement)



state 39

    statement  ->  EXIST . identifier inner_optional_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 77)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 215



state 40

    statement  ->  FRAME . OPEN_PAR identifier optional_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 61)

    OPEN_PAR	shift, and go to state 216



state 41

    for_statement  ->  FOR . alg_exp TIMES DO big_par   (rule 443)
    extend_for_statement  ->  FOR . OPEN_PAR for_sta_init CHOP for_sta_condition CHOP for_sta_control CLOSE_PAR big_par   (rule 444)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 217
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 218
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 42

    while_statement  ->  WHILE . bool_par big_par   (rule 442)

    error	shift, and go to state 219
    OPEN_PAR	shift, and go to state 220

    bool_par	go to state 221



state 43

    statement  ->  REPEAT . OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_statement CLOSE_PAR   (rule 49)

    OPEN_BPAR	shift, and go to state 222



state 44

    display_statement  ->  DISPLAY . OPEN_PAR ass_exp CLOSE_PAR   (rule 455)
    display_statement  ->  DISPLAY . OPEN_PAR ass_exp option_output CLOSE_PAR   (rule 456)

    OPEN_PAR	shift, and go to state 223



state 45

    statement  ->  SKIP .   (rule 50)

    $default	reduce using rule 50 (statement)



state 46

    type_define  ->  INTDECLARATION .   (rule 116)

    $default	reduce using rule 116 (type_define)



state 47

    type_define  ->  STRDECLARATION .   (rule 119)

    $default	reduce using rule 119 (type_define)



state 48

    declaration  ->  POINTERDECLARATION . option_function_parameter_list   (rule 110)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 224
    UNSIGNED	shift, and go to state 225
    ID  	shift, and go to state 226
    STRUCT_TYPE	shift, and go to state 227

    $default	reduce using rule 395 (option_function_parameter_list)

    type_define	go to state 228
    sign_type_define	go to state 229
    all_type_define	go to state 230
    option_function_parameter_list	go to state 231



state 49

    type_define  ->  CHARDECLARATION .   (rule 118)

    $default	reduce using rule 118 (type_define)



state 50

    type_define  ->  VOIDDECLARATION .   (rule 120)

    $default	reduce using rule 120 (type_define)



state 51

    type_define  ->  FLOATDECLARATION .   (rule 117)

    $default	reduce using rule 117 (type_define)



state 52

    declaration  ->  LISTDECLARATION . option_array_declaration   (rule 111)

    ID  	shift, and go to state 232

    option_array_declaration	go to state 233



state 53

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 60)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 78)
    CYLINDER_STATEMENT  ->  OPEN_PAR . OVER_STATEMENT CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 112)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 113)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)
    ass_ident  ->  OPEN_PAR . ass_ident CLOSE_PAR   (rule 150)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    error	shift, and go to state 22
    IF  	shift, and go to state 234
    EMPTY	shift, and go to state 235
    AWAIT	shift, and go to state 25
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 236
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 237
    MY_FALSE	shift, and go to state 238
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 239
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    SYSTEM	shift, and go to state 68
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 240
    BNE 	shift, and go to state 150
    NEXT	shift, and go to state 73
    NEGATION	shift, and go to state 241
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    statement	go to state 242
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 243
    function	go to state 244
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 245
    ass_statement	go to state 94
    ass_ident	go to state 246
    leftaddrshift	go to state 96
    list	go to state 247
    value_exp	go to state 248
    alg_exp	go to state 249
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 250
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 251
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    prime_bool_statement	go to state 252
    big_par	go to state 106
    identifier	go to state 253
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    imply_pre	go to state 254
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 255



state 54

    statement  ->  OPEN_BPAR . statement optional_projection CLOSE_BPAR PROJECTION big_par   (rule 62)
    statement  ->  OPEN_BPAR . statement CLOSE_BPAR PROJECTION big_par   (rule 63)
    big_par  ->  OPEN_BPAR . statement CLOSE_BPAR   (rule 422)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 256
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114



state 55

    statement  ->  FUNCTION . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 65)

    ID  	shift, and go to state 257



state 56

    statement  ->  SEND . OPEN_PAR ass_ident COMMA ass_exp CLOSE_PAR   (rule 72)

    OPEN_PAR	shift, and go to state 258



state 57

    statement  ->  RECEIVE . OPEN_PAR ass_ident COMMA identifier CLOSE_PAR   (rule 74)

    OPEN_PAR	shift, and go to state 259



state 58

    statement  ->  PROCESS . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 66)

    ID  	shift, and go to state 260



state 59

    statement  ->  CHANNEL . identifier OPEN_PAR integer CLOSE_PAR   (rule 71)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 261



state 60

    statement  ->  PUT . OPEN_PAR ass_ident COMMA ass_exp CLOSE_PAR   (rule 73)

    OPEN_PAR	shift, and go to state 262



state 61

    statement  ->  GET . OPEN_PAR ass_ident COMMA identifier CLOSE_PAR   (rule 75)

    OPEN_PAR	shift, and go to state 263



state 62

    String_Function_head  ->  STRFUNCHEAD . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 300)

    OPEN_PAR	shift, and go to state 264



state 63

    String_Function_tail  ->  STRFUNCTAIL . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 301)

    OPEN_PAR	shift, and go to state 265



state 64

    String_Function_cat  ->  STRFUNCCAT . OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 302)

    OPEN_PAR	shift, and go to state 266



state 65

    String_Function_cmp  ->  STRFUNCCMP . OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 303)

    OPEN_PAR	shift, and go to state 267



state 66

    String_Function_cpy  ->  STRFUNCCPY . OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 304)

    OPEN_PAR	shift, and go to state 268



state 67

    String_Function_len  ->  STRFUNCLEN . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 305)

    OPEN_PAR	shift, and go to state 269



state 68

    statement  ->  SYSTEM . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 69)

    OPEN_PAR	shift, and go to state 270



state 69

    sign_declaration  ->  UNSIGNED . declaration   (rule 102)

    STRUCT	shift, and go to state 271
    UNION	shift, and go to state 272
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 273
    STRUCT_TYPE	shift, and go to state 83

    declaration	go to state 274
    type_define	go to state 92



state 70

    sign_declaration  ->  SIGNED . declaration   (rule 101)

    STRUCT	shift, and go to state 271
    UNION	shift, and go to state 272
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 273
    STRUCT_TYPE	shift, and go to state 83

    declaration	go to state 275
    type_define	go to state 92



state 71

    statement  ->  FREE . OPEN_PAR identifier CLOSE_PAR   (rule 68)

    OPEN_PAR	shift, and go to state 276



state 72

    value_exp  ->  MUL . identifier   (rule 188)
    value_exp  ->  MUL . value_exp   (rule 189)
    value_exp  ->  MUL . list   (rule 190)
    value_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR alg_exp   (rule 192)
    value_exp  ->  MUL . OPEN_PAR alg_exp CLOSE_PAR   (rule 193)

    OPEN_PAR	shift, and go to state 277
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278

    list	go to state 279
    value_exp	go to state 280
    identifier	go to state 281



state 73

    statement  ->  NEXT . OPEN_PAR statement CLOSE_PAR   (rule 43)
    ass_ident  ->  NEXT . ass_ident   (rule 151)

    OPEN_PAR	shift, and go to state 282
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 283
    ID  	shift, and go to state 278

    ass_ident	go to state 284
    leftaddrshift	go to state 96
    list	go to state 285
    value_exp	go to state 98
    identifier	go to state 107
    struct_member_exp	go to state 114



state 74

    statement  ->  LENGTH . OPEN_PAR alg_exp CLOSE_PAR   (rule 53)

    OPEN_PAR	shift, and go to state 286



state 75

    request_statement  ->  REQUEST . OPEN_PAR identifier CLOSE_PAR   (rule 459)
    request_statement  ->  REQUEST . OPEN_PAR identifier option_input CLOSE_PAR   (rule 460)
    request_statement  ->  REQUEST . OPEN_PAR list CLOSE_PAR   (rule 461)
    request_statement  ->  REQUEST . OPEN_PAR list option_input CLOSE_PAR   (rule 462)
    request_statement  ->  REQUEST . OPEN_PAR struct_member_exp CLOSE_PAR   (rule 463)

    OPEN_PAR	shift, and go to state 287



state 76

    statement  ->  FINAL . OPEN_PAR statement CLOSE_PAR   (rule 58)

    OPEN_PAR	shift, and go to state 288



state 77

    statement  ->  KEEP . OPEN_PAR statement CLOSE_PAR   (rule 45)

    OPEN_PAR	shift, and go to state 289



state 78

    statement  ->  ALWAYS . OPEN_PAR statement CLOSE_PAR   (rule 46)

    OPEN_PAR	shift, and go to state 290



state 79

    statement  ->  HALT . OPEN_PAR bool_statement CLOSE_PAR   (rule 47)

    OPEN_PAR	shift, and go to state 291



state 80

    statement  ->  W_NEXT . OPEN_PAR statement CLOSE_PAR   (rule 44)

    OPEN_PAR	shift, and go to state 292



state 81

    statement  ->  PREFIX . OPEN_PAR statement CLOSE_PAR   (rule 35)

    OPEN_PAR	shift, and go to state 293



state 82

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 96)
    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 178)
    identifier  ->  ID .   (rule 426)

    OPEN_PAR	shift, and go to state 294
    OPEN_MPAR	shift, and go to state 295

    $default	reduce using rule 426 (identifier)



state 83

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 105)

    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 296
    ID  	shift, and go to state 297

    option_identifier_array_declaration	go to state 298
    identifier	go to state 299



state 84

    program  ->  gComplexProposition statement .   (rule 1)
    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)

    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303

    $default	reduce using rule 1 (program)



state 85

    statement  ->  CYLINDER_STATEMENT .   (rule 79)
    CYLINDER_STATEMENT  ->  CYLINDER_STATEMENT . CYLINDER CYLINDER_STATEMENT   (rule 82)

    CYLINDER	shift, and go to state 304

    $default	reduce using rule 79 (statement)



state 86

    CYLINDER_STATEMENT  ->  OVER_STATEMENT .   (rule 83)

    $default	reduce using rule 83 (CYLINDER_STATEMENT)



state 87

    statement  ->  function .   (rule 76)

    $default	reduce using rule 76 (statement)



state 88

    statement  ->  struct_define_statement .   (rule 67)

    $default	reduce using rule 67 (statement)



state 89

    struct_define_statement  ->  struct_identifier . OPEN_BPAR option_struct_declaration CLOSE_BPAR   (rule 98)

    OPEN_BPAR	shift, and go to state 305



state 90

    statement  ->  sign_declaration .   (rule 38)

    $default	reduce using rule 38 (statement)



state 91

    sign_declaration  ->  declaration .   (rule 103)

    $default	reduce using rule 103 (sign_declaration)



state 92

    declaration  ->  type_define . option_identifier_array_declaration   (rule 104)

    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 296
    ID  	shift, and go to state 297

    option_identifier_array_declaration	go to state 306
    identifier	go to state 299



state 93

    statement  ->  file_statement .   (rule 37)

    $default	reduce using rule 37 (statement)



state 94

    statement  ->  ass_statement .   (rule 36)

    $default	reduce using rule 36 (statement)



state 95

    ass_statement  ->  ass_ident . assign_operator ass_exp   (rule 145)

    ASS_EQU	shift, and go to state 307
    UNITASSIGN	shift, and go to state 308

    assign_operator	go to state 309



state 96

    ass_ident  ->  leftaddrshift .   (rule 152)

    $default	reduce using rule 152 (ass_ident)



state 97

    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 97)
    ass_ident  ->  list .   (rule 148)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 468)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 471)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 474)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 478)

    DOT 	shift, and go to state 310
    OPEN_PAR	shift, and go to state 311
    IMPLY	shift, and go to state 312

    $default	reduce using rule 148 (ass_ident)



state 98

    ass_ident  ->  value_exp .   (rule 149)
    struct_member_exp  ->  value_exp . DOT identifier option_struct_member_exp   (rule 469)
    struct_member_exp  ->  value_exp . DOT list option_struct_member_exp   (rule 472)
    struct_member_exp  ->  value_exp . IMPLY identifier option_struct_member_exp   (rule 476)
    struct_member_exp  ->  value_exp . IMPLY list option_struct_member_exp   (rule 482)

    DOT 	shift, and go to state 313
    IMPLY	shift, and go to state 314

    $default	reduce using rule 149 (ass_ident)



state 99

    statement  ->  String_Function .   (rule 70)

    $default	reduce using rule 70 (statement)



state 100

    String_Function  ->  String_Function_head .   (rule 294)

    $default	reduce using rule 294 (String_Function)



state 101

    String_Function  ->  String_Function_tail .   (rule 295)

    $default	reduce using rule 295 (String_Function)



state 102

    String_Function  ->  String_Function_cat .   (rule 296)

    $default	reduce using rule 296 (String_Function)



state 103

    String_Function  ->  String_Function_cmp .   (rule 298)

    $default	reduce using rule 298 (String_Function)



state 104

    String_Function  ->  String_Function_cpy .   (rule 297)

    $default	reduce using rule 297 (String_Function)



state 105

    String_Function  ->  String_Function_len .   (rule 299)

    $default	reduce using rule 299 (String_Function)



state 106

    OVER_STATEMENT  ->  big_par . OVER OPEN_PAR INTERVAL_STATEMENT CLOSE_PAR   (rule 85)
    OVER_STATEMENT  ->  big_par . OVER OPEN_PAR CLOSE_PAR   (rule 86)

    OVER	shift, and go to state 315



state 107

    ass_ident  ->  identifier .   (rule 146)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 467)
    struct_member_exp  ->  identifier . DOT list option_struct_member_exp   (rule 470)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 473)
    struct_member_exp  ->  identifier . IMPLY list option_struct_member_exp   (rule 477)
    struct_member_exp  ->  identifier . DOT function   (rule 480)
    struct_member_exp  ->  identifier . IMPLY function   (rule 481)

    DOT 	shift, and go to state 316
    IMPLY	shift, and go to state 317

    $default	reduce using rule 146 (ass_ident)



state 108

    statement  ->  while_statement .   (rule 40)

    $default	reduce using rule 40 (statement)



state 109

    statement  ->  for_statement .   (rule 41)

    $default	reduce using rule 41 (statement)



state 110

    statement  ->  extend_for_statement .   (rule 42)

    $default	reduce using rule 42 (statement)



state 111

    statement  ->  if_statement .   (rule 39)

    $default	reduce using rule 39 (statement)



state 112

    statement  ->  display_statement .   (rule 55)

    $default	reduce using rule 55 (statement)



state 113

    statement  ->  request_statement .   (rule 54)

    $default	reduce using rule 54 (statement)



state 114

    ass_ident  ->  struct_member_exp .   (rule 147)

    $default	reduce using rule 147 (ass_ident)



state 115

    complexProposition  ->  DEFINE ID . COLON prime_bool_statement   (rule 26)

    COLON	shift, and go to state 318



state 116

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)
    complexProposition  ->  OPEN_PAR complexProposition . CLOSE_PAR   (rule 28)

    CLOSE_PAR	shift, and go to state 319
    CHOP	shift, and go to state 179
    IFF 	shift, and go to state 180
    PROPIMPLY	shift, and go to state 181
    OR  	shift, and go to state 182
    AND 	shift, and go to state 183
    CHOPSTAR	shift, and go to state 184



state 117

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition . poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 24)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)

    COMMA	shift, and go to state 320
    CHOP	shift, and go to state 179
    IFF 	shift, and go to state 180
    PROPIMPLY	shift, and go to state 181
    OR  	shift, and go to state 182
    AND 	shift, and go to state 183
    CHOPSTAR	shift, and go to state 184

    $default	reduce using rule 30 (poptional_projection)

    poptional_projection	go to state 321



state 118

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEXT complexProposition .   (rule 13)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 13 (complexProposition)



state 119

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEGATION complexProposition .   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 23 (complexProposition)



state 120

    alg_exp  ->  IF . bool_statement THEN alg_exp optional_exp_else_statement   (rule 198)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 191
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 195
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 322
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 199
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 121

    factor  ->  POINTERNULL .   (rule 209)

    $default	reduce using rule 209 (factor)



state 122

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 324
    CHARDECLARATION	shift, and go to state 325
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 327
    OPEN_PAR	shift, and go to state 328
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 329
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337



state 123

    size_of  ->  SIZEOF . OPEN_PAR alg_exp CLOSE_PAR   (rule 290)
    size_of  ->  SIZEOF . OPEN_PAR all_sizeof_type CLOSE_PAR   (rule 291)
    size_of  ->  SIZEOF . OPEN_PAR STRUCT_TYPE CLOSE_PAR   (rule 292)
    size_of  ->  SIZEOF . OPEN_PAR string CLOSE_PAR   (rule 293)

    OPEN_PAR	shift, and go to state 338



state 124

    Float_Function  ->  CEIL . alg_exp   (rule 313)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 339
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 125

    Float_Function  ->  FLOOR . alg_exp   (rule 314)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 340
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 126

    Float_Function  ->  ROUND . alg_exp   (rule 312)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 341
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 127

    Float_Function  ->  SIN . alg_exp   (rule 315)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 342
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 128

    Float_Function  ->  COS . alg_exp   (rule 316)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 343
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 129

    Float_Function  ->  TAN . alg_exp   (rule 317)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 344
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 130

    Float_Function  ->  ASIN . alg_exp   (rule 318)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 345
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 131

    Float_Function  ->  ACOS . alg_exp   (rule 319)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 346
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 132

    Float_Function  ->  ATAN . alg_exp   (rule 320)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 347
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 133

    Float_Function  ->  SINH . alg_exp   (rule 321)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 348
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 134

    Float_Function  ->  COSH . alg_exp   (rule 322)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 349
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 135

    Float_Function  ->  TANH . alg_exp   (rule 323)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 350
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 136

    Float_Function  ->  EXP . alg_exp   (rule 324)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 351
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 137

    Float_Function  ->  LOG . alg_exp   (rule 325)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 352
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 138

    Float_Function  ->  LOG10 . alg_exp   (rule 326)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 353
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 139

    Float_Function  ->  SQRT . alg_exp   (rule 327)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 354
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 140

    Float_Function  ->  ATAN2 . OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR   (rule 328)

    OPEN_PAR	shift, and go to state 355



state 141

    Float_Function  ->  POW . OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR   (rule 329)

    OPEN_PAR	shift, and go to state 356



state 142

    Float_Function  ->  ABS . alg_exp   (rule 333)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 357
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 143

    Float_Function  ->  FABS . alg_exp   (rule 334)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 358
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 144

    Float_Function  ->  LABS . alg_exp   (rule 335)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 359
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 145

    Float_Function  ->  FMOD . OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR   (rule 330)

    OPEN_PAR	shift, and go to state 360



state 146

    Float_Function  ->  MODF . OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR   (rule 331)

    OPEN_PAR	shift, and go to state 361



state 147

    Float_Function  ->  LDEXP . OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR   (rule 332)

    OPEN_PAR	shift, and go to state 362



state 148

    address_exp  ->  ADDRESS . identifier   (rule 252)
    address_exp  ->  ADDRESS . list   (rule 253)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 254)
    address_exp  ->  ADDRESS . address_exp   (rule 255)

    OPEN_PAR	shift, and go to state 363
    ADDRESS	shift, and go to state 148
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278

    list	go to state 364
    value_exp	go to state 365
    address_exp	go to state 366
    identifier	go to state 367
    struct_member_exp	go to state 368



state 149

    factor  ->  SUB . factor   (rule 207)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    factor	go to state 369
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 150

    factor  ->  BNE . factor   (rule 208)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    factor	go to state 370
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 151

    pre_next  ->  PREVIOUS . OPEN_PAR identifier CLOSE_PAR   (rule 223)

    OPEN_PAR	shift, and go to state 371



state 152

    integer  ->  INTEGER .   (rule 429)

    $default	reduce using rule 429 (integer)



state 153

    floatliteral  ->  FLOATLITERAL .   (rule 431)

    $default	reduce using rule 431 (floatliteral)



state 154

    charliteral  ->  CHARLITERAL .   (rule 430)

    $default	reduce using rule 430 (charliteral)



state 155

    factor  ->  function .   (rule 215)

    $default	reduce using rule 215 (factor)



state 156

    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 97)
    factor  ->  list .   (rule 212)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 468)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 471)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 474)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 478)

    DOT 	shift, and go to state 310
    OPEN_PAR	shift, and go to state 311
    IMPLY	shift, and go to state 312

    DOT 	[reduce using rule 212 (factor)]
    IMPLY	[reduce using rule 212 (factor)]
    $default	reduce using rule 212 (factor)



state 157

    factor  ->  value_exp .   (rule 214)
    struct_member_exp  ->  value_exp . DOT identifier option_struct_member_exp   (rule 469)
    struct_member_exp  ->  value_exp . DOT list option_struct_member_exp   (rule 472)
    struct_member_exp  ->  value_exp . IMPLY identifier option_struct_member_exp   (rule 476)
    struct_member_exp  ->  value_exp . IMPLY list option_struct_member_exp   (rule 482)

    DOT 	shift, and go to state 313
    IMPLY	shift, and go to state 314

    DOT 	[reduce using rule 214 (factor)]
    IMPLY	[reduce using rule 214 (factor)]
    $default	reduce using rule 214 (factor)



state 158

    complexProposition  ->  LENGTH alg_exp .   (rule 17)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 17 (complexProposition)

    alg_operator	go to state 374



state 159

    alg_exp  ->  simple_alg_exp .   (rule 195)
    alg_exp  ->  simple_alg_exp . relation_operator alg_exp   (rule 196)
    simple_alg_exp  ->  simple_alg_exp . mul_operator factor   (rule 204)

    INTER_OR	shift, and go to state 375
    CON 	shift, and go to state 376
    ADDRESS	shift, and go to state 377
    NE  	shift, and go to state 378
    EQU 	shift, and go to state 379
    GE  	shift, and go to state 380
    LE  	shift, and go to state 381
    GT  	shift, and go to state 382
    LT  	shift, and go to state 383
    LST 	shift, and go to state 384
    RST 	shift, and go to state 385
    MUL 	shift, and go to state 386
    DIV 	shift, and go to state 387
    MOD 	shift, and go to state 388

    INTER_OR	[reduce using rule 195 (alg_exp)]
    CON 	[reduce using rule 195 (alg_exp)]
    ADDRESS	[reduce using rule 195 (alg_exp)]
    NE  	[reduce using rule 195 (alg_exp)]
    EQU 	[reduce using rule 195 (alg_exp)]
    GE  	[reduce using rule 195 (alg_exp)]
    LE  	[reduce using rule 195 (alg_exp)]
    GT  	[reduce using rule 195 (alg_exp)]
    LT  	[reduce using rule 195 (alg_exp)]
    LST 	[reduce using rule 195 (alg_exp)]
    RST 	[reduce using rule 195 (alg_exp)]
    MUL 	[reduce using rule 195 (alg_exp)]
    DIV 	[reduce using rule 195 (alg_exp)]
    MOD 	[reduce using rule 195 (alg_exp)]
    $default	reduce using rule 195 (alg_exp)

    mul_operator	go to state 389
    relation_operator	go to state 390



state 160

    simple_alg_exp  ->  factor .   (rule 203)

    $default	reduce using rule 203 (simple_alg_exp)



state 161

    factor  ->  pre_next .   (rule 213)

    $default	reduce using rule 213 (factor)



state 162

    factor  ->  address_exp .   (rule 219)

    $default	reduce using rule 219 (factor)



state 163

    factor  ->  type_cast .   (rule 220)

    $default	reduce using rule 220 (factor)



state 164

    factor  ->  size_of .   (rule 222)

    $default	reduce using rule 222 (factor)



state 165

    simple_alg_exp  ->  String_Function .   (rule 205)

    $default	reduce using rule 205 (simple_alg_exp)



state 166

    factor  ->  Float_Function .   (rule 217)

    $default	reduce using rule 217 (factor)



state 167

    factor  ->  identifier .   (rule 211)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 467)
    struct_member_exp  ->  identifier . DOT list option_struct_member_exp   (rule 470)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 473)
    struct_member_exp  ->  identifier . IMPLY list option_struct_member_exp   (rule 477)
    struct_member_exp  ->  identifier . DOT function   (rule 480)
    struct_member_exp  ->  identifier . IMPLY function   (rule 481)

    DOT 	shift, and go to state 316
    IMPLY	shift, and go to state 317

    DOT 	[reduce using rule 211 (factor)]
    IMPLY	[reduce using rule 211 (factor)]
    $default	reduce using rule 211 (factor)



state 168

    complexProposition  ->  LENGTH integer .   (rule 18)
    factor  ->  integer .   (rule 206)

    PEND	reduce using rule 18 (complexProposition)
    PEND	[reduce using rule 206 (factor)]
    COMMA	reduce using rule 18 (complexProposition)
    COMMA	[reduce using rule 206 (factor)]
    CLOSE_PAR	reduce using rule 18 (complexProposition)
    CLOSE_PAR	[reduce using rule 206 (factor)]
    CLOSE_BPAR	reduce using rule 18 (complexProposition)
    CLOSE_BPAR	[reduce using rule 206 (factor)]
    CHOP	reduce using rule 18 (complexProposition)
    CHOP	[reduce using rule 206 (factor)]
    IFF 	reduce using rule 18 (complexProposition)
    IFF 	[reduce using rule 206 (factor)]
    PROPIMPLY	reduce using rule 18 (complexProposition)
    PROPIMPLY	[reduce using rule 206 (factor)]
    OR  	reduce using rule 18 (complexProposition)
    OR  	[reduce using rule 206 (factor)]
    AND 	reduce using rule 18 (complexProposition)
    AND 	[reduce using rule 206 (factor)]
    CHOPSTAR	reduce using rule 18 (complexProposition)
    CHOPSTAR	[reduce using rule 206 (factor)]
    $default	reduce using rule 206 (factor)



state 169

    factor  ->  charliteral .   (rule 218)

    $default	reduce using rule 218 (factor)



state 170

    factor  ->  floatliteral .   (rule 210)

    $default	reduce using rule 210 (factor)



state 171

    factor  ->  struct_member_exp .   (rule 221)

    $default	reduce using rule 221 (factor)



state 172

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  FINAL complexProposition .   (rule 22)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 22 (complexProposition)



state 173

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  KEEP complexProposition .   (rule 10)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 10 (complexProposition)



state 174

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  ALWAYS complexProposition .   (rule 9)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 9 (complexProposition)



state 175

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  HALT complexProposition .   (rule 21)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 21 (complexProposition)



state 176

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  W_NEXT complexProposition .   (rule 12)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 12 (complexProposition)



state 177

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  SOMETIMES complexProposition .   (rule 11)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 11 (complexProposition)



state 178

    gComplexProposition  ->  PBEGIN complexProposition PEND .   (rule 2)

    $default	reduce using rule 2 (gComplexProposition)



state 179

    complexProposition  ->  complexProposition CHOP . complexProposition   (rule 8)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 391



state 180

    complexProposition  ->  complexProposition IFF . complexProposition   (rule 6)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 392



state 181

    complexProposition  ->  complexProposition PROPIMPLY . complexProposition   (rule 7)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 393



state 182

    complexProposition  ->  complexProposition OR . complexProposition   (rule 5)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 394



state 183

    complexProposition  ->  complexProposition AND . complexProposition   (rule 4)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 395



state 184

    complexProposition  ->  complexProposition CHOPSTAR .   (rule 27)

    $default	reduce using rule 27 (complexProposition)



state 185

    big_par  ->  error CLOSE_BPAR .   (rule 423)

    $default	reduce using rule 423 (big_par)



state 186

    prime_bool_statement  ->  EMPTY .   (rule 356)

    $default	reduce using rule 356 (prime_bool_statement)



state 187

    factor  ->  POINTERNULL .   (rule 209)
    bool_statement  ->  POINTERNULL . EQU alg_exp   (rule 343)
    bool_statement  ->  POINTERNULL . NE alg_exp   (rule 344)

    NE  	shift, and go to state 396
    EQU 	shift, and go to state 397

    NE  	[reduce using rule 209 (factor)]
    EQU 	[reduce using rule 209 (factor)]
    $default	reduce using rule 209 (factor)



state 188

    prime_bool_statement  ->  MORE .   (rule 355)

    $default	reduce using rule 355 (prime_bool_statement)



state 189

    prime_bool_statement  ->  MY_TRUE .   (rule 353)

    $default	reduce using rule 353 (prime_bool_statement)



state 190

    prime_bool_statement  ->  MY_FALSE .   (rule 354)

    $default	reduce using rule 354 (prime_bool_statement)



state 191

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    bool_statement  ->  OPEN_PAR . bool_statement CLOSE_PAR   (rule 350)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    STRUCT	shift, and go to state 323
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    INTDECLARATION	shift, and go to state 324
    CHARDECLARATION	shift, and go to state 325
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 327
    OPEN_PAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 329
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 399
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 400
    prime_bool_statement	go to state 198
    identifier	go to state 336
    string	go to state 199
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337



state 192

    bool_statement  ->  NEGATION . bool_statement   (rule 347)
    prime_bool_statement  ->  NEGATION . prime_bool_statement   (rule 352)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 191
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 195
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 401
    prime_bool_statement	go to state 402
    identifier	go to state 167
    string	go to state 199
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 193

    string  ->  STR .   (rule 428)

    $default	reduce using rule 428 (string)



state 194

    prime_bool_statement  ->  file_statement .   (rule 359)

    $default	reduce using rule 359 (prime_bool_statement)



state 195

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    bool_statement  ->  alg_exp . EQU string   (rule 337)
    bool_statement  ->  alg_exp . NE string   (rule 338)
    bool_statement  ->  alg_exp . EQU POINTERNULL   (rule 341)
    bool_statement  ->  alg_exp . NE POINTERNULL   (rule 342)
    bool_statement  ->  alg_exp . EQU charliteral   (rule 345)
    bool_statement  ->  alg_exp . NE charliteral   (rule 346)
    prime_bool_statement  ->  alg_exp . relation_operator alg_exp   (rule 351)
    prime_bool_statement  ->  alg_exp .   (rule 357)

    NE  	shift, and go to state 403
    EQU 	shift, and go to state 404
    GE  	shift, and go to state 380
    LE  	shift, and go to state 381
    GT  	shift, and go to state 382
    LT  	shift, and go to state 383
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 357 (prime_bool_statement)

    alg_operator	go to state 374
    relation_operator	go to state 405



state 196

    String_Function  ->  String_Function_cmp .   (rule 298)
    prime_bool_statement  ->  String_Function_cmp .   (rule 358)

    $   	reduce using rule 298 (String_Function)
    $   	[reduce using rule 358 (prime_bool_statement)]
    PEND	reduce using rule 298 (String_Function)
    PEND	[reduce using rule 358 (prime_bool_statement)]
    THEN	reduce using rule 298 (String_Function)
    THEN	[reduce using rule 358 (prime_bool_statement)]
    COMMA	reduce using rule 298 (String_Function)
    COMMA	[reduce using rule 358 (prime_bool_statement)]
    CLOSE_PAR	reduce using rule 298 (String_Function)
    CLOSE_PAR	[reduce using rule 358 (prime_bool_statement)]
    CLOSE_BPAR	reduce using rule 298 (String_Function)
    CLOSE_BPAR	[reduce using rule 358 (prime_bool_statement)]
    CLOSE_MPAR	reduce using rule 298 (String_Function)
    CLOSE_MPAR	[reduce using rule 358 (prime_bool_statement)]
    CHOP	reduce using rule 298 (String_Function)
    CHOP	[reduce using rule 358 (prime_bool_statement)]
    IFF 	reduce using rule 298 (String_Function)
    IFF 	[reduce using rule 358 (prime_bool_statement)]
    PROPIMPLY	reduce using rule 298 (String_Function)
    PROPIMPLY	[reduce using rule 358 (prime_bool_statement)]
    OR  	reduce using rule 298 (String_Function)
    OR  	[reduce using rule 358 (prime_bool_statement)]
    PARALLEL	reduce using rule 298 (String_Function)
    PARALLEL	[reduce using rule 358 (prime_bool_statement)]
    AND 	reduce using rule 298 (String_Function)
    AND 	[reduce using rule 358 (prime_bool_statement)]
    CHOPSTAR	reduce using rule 298 (String_Function)
    CHOPSTAR	[reduce using rule 358 (prime_bool_statement)]
    $default	reduce using rule 298 (String_Function)



state 197

    bool_statement  ->  bool_statement . AND bool_statement   (rule 348)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 349)
    if_statement  ->  IF bool_statement . THEN big_par optional_else_statement   (rule 452)

    THEN	shift, and go to state 406
    OR  	shift, and go to state 407
    AND 	shift, and go to state 408



state 198

    bool_statement  ->  prime_bool_statement .   (rule 336)

    $default	reduce using rule 336 (bool_statement)



state 199

    bool_statement  ->  string . EQU alg_exp   (rule 339)
    bool_statement  ->  string . NE alg_exp   (rule 340)

    NE  	shift, and go to state 409
    EQU 	shift, and go to state 410



state 200

    factor  ->  integer .   (rule 206)

    $default	reduce using rule 206 (factor)



state 201

    statement  ->  AWAIT OPEN_PAR . bool_statement CLOSE_PAR   (rule 48)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 191
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 195
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 411
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 199
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 202

    struct_identifier  ->  STRUCT ID .   (rule 99)
    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 106)

    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 296
    ID  	shift, and go to state 297

    $default	reduce using rule 99 (struct_identifier)

    option_identifier_array_declaration	go to state 412
    identifier	go to state 299



state 203

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 108)

    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 296
    ID  	shift, and go to state 297

    option_identifier_array_declaration	go to state 413
    identifier	go to state 299



state 204

    struct_identifier  ->  UNION ID .   (rule 100)
    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 107)

    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 296
    ID  	shift, and go to state 297

    $default	reduce using rule 100 (struct_identifier)

    option_identifier_array_declaration	go to state 414
    identifier	go to state 299



state 205

    declaration  ->  UNION STRUCT_TYPE . option_identifier_array_declaration   (rule 109)

    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 296
    ID  	shift, and go to state 297

    option_identifier_array_declaration	go to state 415
    identifier	go to state 299



state 206

    file_statement  ->  FOPEN OPEN_PAR . ass_ident COMMA string CLOSE_PAR   (rule 138)

    OPEN_PAR	shift, and go to state 416
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 283
    ID  	shift, and go to state 278

    ass_ident	go to state 417
    leftaddrshift	go to state 96
    list	go to state 285
    value_exp	go to state 98
    identifier	go to state 107
    struct_member_exp	go to state 114



state 207

    file_statement  ->  FCLOSE OPEN_PAR . identifier CLOSE_PAR   (rule 144)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 418



state 208

    file_statement  ->  FGETS OPEN_PAR . identifier COMMA integer COMMA identifier CLOSE_PAR   (rule 139)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 419



state 209

    file_statement  ->  FPUTS OPEN_PAR . identifier COMMA identifier CLOSE_PAR   (rule 141)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 420



state 210

    file_statement  ->  FGETC OPEN_PAR . identifier CLOSE_PAR   (rule 140)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 421



state 211

    file_statement  ->  FPUTC OPEN_PAR . identifier COMMA identifier CLOSE_PAR   (rule 142)
    file_statement  ->  FPUTC OPEN_PAR . list COMMA identifier CLOSE_PAR   (rule 143)

    OPEN_PAR	shift, and go to state 422
    ID  	shift, and go to state 278

    list	go to state 423
    identifier	go to state 424



state 212

    statement  ->  DEFINE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 64)

    OPEN_PAR	shift, and go to state 425



state 213

    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 426



state 214

    identifier  ->  ID .   (rule 426)

    $default	reduce using rule 426 (identifier)



state 215

    statement  ->  EXIST identifier . inner_optional_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 77)

    COMMA	shift, and go to state 427

    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 428



state 216

    statement  ->  FRAME OPEN_PAR . identifier optional_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 61)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 429



state 217

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    extend_for_statement  ->  FOR OPEN_PAR . for_sta_init CHOP for_sta_condition CHOP for_sta_control CLOSE_PAR big_par   (rule 444)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 430
    UNION	shift, and go to state 272
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 431
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 432
    VOIDDECLARATION	shift, and go to state 433
    FLOATDECLARATION	shift, and go to state 434
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 435
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 329
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEXT	shift, and go to state 283
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 436
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    $default	reduce using rule 447 (for_sta_init)

    function	go to state 155
    declaration	go to state 437
    type_define	go to state 92
    ass_statement	go to state 438
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 247
    value_exp	go to state 248
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 253
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    for_sta_init	go to state 439
    struct_member_exp	go to state 255



state 218

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    for_statement  ->  FOR alg_exp . TIMES DO big_par   (rule 443)

    TIMES	shift, and go to state 440
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374



state 219

    bool_par  ->  error . CLOSE_PAR   (rule 425)

    CLOSE_PAR	shift, and go to state 441



state 220

    bool_par  ->  OPEN_PAR . bool_statement CLOSE_PAR   (rule 424)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 191
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 195
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 442
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 199
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 221

    while_statement  ->  WHILE bool_par . big_par   (rule 442)

    error	shift, and go to state 22
    OPEN_BPAR	shift, and go to state 443

    big_par	go to state 444



state 222

    statement  ->  REPEAT OPEN_BPAR . statement CLOSE_BPAR UNTIL OPEN_PAR bool_statement CLOSE_PAR   (rule 49)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 445
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114



state 223

    display_statement  ->  DISPLAY OPEN_PAR . ass_exp CLOSE_PAR   (rule 455)
    display_statement  ->  DISPLAY OPEN_PAR . ass_exp option_output CLOSE_PAR   (rule 456)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 446
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 449
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 450
    ass_exp	go to state 451
    rightaddrshift	go to state 452
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 453
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 454
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 457
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 458
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 459



state 224

    option_function_parameter_list  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 394)

    MUL 	shift, and go to state 460



state 225

    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 366)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 367)

    INTDECLARATION	shift, and go to state 461
    CHARDECLARATION	shift, and go to state 462



state 226

    option_function_parameter_list  ->  ID . identifier inner_optional_define_identifier   (rule 376)
    option_function_parameter_list  ->  ID . MUL identifier inner_optional_define_identifier   (rule 377)
    option_function_parameter_list  ->  ID . MUL MUL identifier inner_optional_define_identifier   (rule 378)
    option_function_parameter_list  ->  ID . identifier ARRAY inner_optional_define_identifier   (rule 379)
    option_function_parameter_list  ->  ID . inner_optional_define_identifier   (rule 383)
    option_function_parameter_list  ->  ID . MUL inner_optional_define_identifier   (rule 384)
    option_function_parameter_list  ->  ID . MUL MUL inner_optional_define_identifier   (rule 385)

    COMMA	shift, and go to state 427
    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 463
    ID  	shift, and go to state 214

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 464
    identifier	go to state 465



state 227

    option_function_parameter_list  ->  STRUCT_TYPE . identifier inner_optional_define_identifier   (rule 372)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL identifier inner_optional_define_identifier   (rule 373)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL identifier inner_optional_define_identifier   (rule 374)
    option_function_parameter_list  ->  STRUCT_TYPE . identifier ARRAY inner_optional_define_identifier   (rule 375)
    option_function_parameter_list  ->  STRUCT_TYPE . inner_optional_define_identifier   (rule 380)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL inner_optional_define_identifier   (rule 381)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL inner_optional_define_identifier   (rule 382)

    COMMA	shift, and go to state 427
    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 466
    ID  	shift, and go to state 214

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 467
    identifier	go to state 468



state 228

    all_type_define  ->  type_define .   (rule 369)

    $default	reduce using rule 369 (all_type_define)



state 229

    all_type_define  ->  sign_type_define .   (rule 368)

    $default	reduce using rule 368 (all_type_define)



state 230

    option_function_parameter_list  ->  all_type_define . identifier inner_optional_define_identifier   (rule 370)
    option_function_parameter_list  ->  all_type_define . inner_optional_define_identifier   (rule 371)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY inner_optional_define_identifier   (rule 386)
    option_function_parameter_list  ->  all_type_define . MUL identifier ARRAY inner_optional_define_identifier   (rule 387)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 388)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 389)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 390)
    option_function_parameter_list  ->  all_type_define . MUL identifier inner_optional_define_identifier   (rule 391)
    option_function_parameter_list  ->  all_type_define . MUL inner_optional_define_identifier   (rule 392)
    option_function_parameter_list  ->  all_type_define . MUL MUL identifier inner_optional_define_identifier   (rule 393)

    COMMA	shift, and go to state 427
    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 469
    ID  	shift, and go to state 214

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 470
    identifier	go to state 471



state 231

    declaration  ->  POINTERDECLARATION option_function_parameter_list .   (rule 110)

    $default	reduce using rule 110 (declaration)



state 232

    option_array_declaration  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_array_declaration   (rule 134)

    OPEN_MPAR	shift, and go to state 472



state 233

    declaration  ->  LISTDECLARATION option_array_declaration .   (rule 111)

    $default	reduce using rule 111 (declaration)



state 234

    alg_exp  ->  IF . bool_statement THEN alg_exp optional_exp_else_statement   (rule 198)
    if_statement  ->  IF . bool_statement THEN big_par optional_else_statement   (rule 452)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 191
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 195
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 473
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 199
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 235

    statement  ->  EMPTY .   (rule 51)
    prime_bool_statement  ->  EMPTY .   (rule 356)

    CLOSE_PAR	reduce using rule 51 (statement)
    CLOSE_PAR	[reduce using rule 356 (prime_bool_statement)]
    OR  	reduce using rule 51 (statement)
    OR  	[reduce using rule 356 (prime_bool_statement)]
    AND 	reduce using rule 51 (statement)
    AND 	[reduce using rule 356 (prime_bool_statement)]
    $default	reduce using rule 51 (statement)



state 236

    statement  ->  MORE .   (rule 52)
    prime_bool_statement  ->  MORE .   (rule 355)

    CLOSE_PAR	reduce using rule 52 (statement)
    CLOSE_PAR	[reduce using rule 355 (prime_bool_statement)]
    OR  	reduce using rule 52 (statement)
    OR  	[reduce using rule 355 (prime_bool_statement)]
    AND 	reduce using rule 52 (statement)
    AND 	[reduce using rule 355 (prime_bool_statement)]
    $default	reduce using rule 52 (statement)



state 237

    statement  ->  MY_TRUE .   (rule 56)
    prime_bool_statement  ->  MY_TRUE .   (rule 353)

    CLOSE_PAR	reduce using rule 56 (statement)
    CLOSE_PAR	[reduce using rule 353 (prime_bool_statement)]
    OR  	reduce using rule 56 (statement)
    OR  	[reduce using rule 353 (prime_bool_statement)]
    AND 	reduce using rule 56 (statement)
    AND 	[reduce using rule 353 (prime_bool_statement)]
    $default	reduce using rule 56 (statement)



state 238

    statement  ->  MY_FALSE .   (rule 57)
    prime_bool_statement  ->  MY_FALSE .   (rule 354)

    CLOSE_PAR	reduce using rule 57 (statement)
    CLOSE_PAR	[reduce using rule 354 (prime_bool_statement)]
    OR  	reduce using rule 57 (statement)
    OR  	[reduce using rule 354 (prime_bool_statement)]
    AND 	reduce using rule 57 (statement)
    AND 	[reduce using rule 354 (prime_bool_statement)]
    $default	reduce using rule 57 (statement)



state 239

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 60)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 78)
    CYLINDER_STATEMENT  ->  OPEN_PAR . OVER_STATEMENT CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 112)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 113)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)
    ass_ident  ->  OPEN_PAR . ass_ident CLOSE_PAR   (rule 150)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    error	shift, and go to state 22
    IF  	shift, and go to state 234
    EMPTY	shift, and go to state 235
    AWAIT	shift, and go to state 25
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 474
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 236
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 237
    MY_FALSE	shift, and go to state 238
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 475
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 476
    VOIDDECLARATION	shift, and go to state 433
    FLOATDECLARATION	shift, and go to state 477
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 239
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    SYSTEM	shift, and go to state 68
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 478
    SIGNED	shift, and go to state 479
    FREE	shift, and go to state 71
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 240
    BNE 	shift, and go to state 150
    NEXT	shift, and go to state 73
    NEGATION	shift, and go to state 241
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 436
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    statement	go to state 242
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 243
    function	go to state 244
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 245
    ass_statement	go to state 94
    ass_ident	go to state 246
    leftaddrshift	go to state 96
    list	go to state 247
    value_exp	go to state 248
    alg_exp	go to state 480
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 251
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    prime_bool_statement	go to state 252
    big_par	go to state 106
    identifier	go to state 253
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    imply_pre	go to state 481
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 255



state 240

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 112)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 113)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)
    value_exp  ->  MUL . identifier   (rule 188)
    value_exp  ->  MUL . value_exp   (rule 189)
    value_exp  ->  MUL . list   (rule 190)
    value_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR alg_exp   (rule 192)
    value_exp  ->  MUL . OPEN_PAR alg_exp CLOSE_PAR   (rule 193)

    OPEN_PAR	shift, and go to state 277
    MUL 	shift, and go to state 482
    ID  	shift, and go to state 483

    list	go to state 279
    value_exp	go to state 280
    identifier	go to state 484



state 241

    prime_bool_statement  ->  NEGATION . prime_bool_statement   (rule 352)
    imply_pre  ->  NEGATION . imply_pre   (rule 438)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 121
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 485
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 241
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 249
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    prime_bool_statement	go to state 486
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    imply_pre	go to state 487
    struct_member_exp	go to state 171



state 242

    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)
    statement  ->  OPEN_PAR statement . CLOSE_PAR   (rule 78)

    CLOSE_PAR	shift, and go to state 488
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303



state 243

    CYLINDER_STATEMENT  ->  OVER_STATEMENT .   (rule 83)
    CYLINDER_STATEMENT  ->  OPEN_PAR OVER_STATEMENT . CLOSE_PAR   (rule 84)

    CLOSE_PAR	shift, and go to state 489

    CLOSE_PAR	[reduce using rule 83 (CYLINDER_STATEMENT)]
    $default	reduce using rule 83 (CYLINDER_STATEMENT)



state 244

    statement  ->  function .   (rule 76)
    factor  ->  function .   (rule 215)

    CLOSE_PAR	reduce using rule 76 (statement)
    CLOSE_PAR	[reduce using rule 215 (factor)]
    CHOP	reduce using rule 76 (statement)
    OR  	reduce using rule 76 (statement)
    OR  	[reduce using rule 215 (factor)]
    PARALLEL	reduce using rule 76 (statement)
    AND 	reduce using rule 76 (statement)
    AND 	[reduce using rule 215 (factor)]
    $default	reduce using rule 215 (factor)



state 245

    statement  ->  file_statement .   (rule 37)
    prime_bool_statement  ->  file_statement .   (rule 359)

    CLOSE_PAR	reduce using rule 37 (statement)
    CLOSE_PAR	[reduce using rule 359 (prime_bool_statement)]
    OR  	reduce using rule 37 (statement)
    OR  	[reduce using rule 359 (prime_bool_statement)]
    AND 	reduce using rule 37 (statement)
    AND 	[reduce using rule 359 (prime_bool_statement)]
    $default	reduce using rule 37 (statement)



state 246

    ass_statement  ->  ass_ident . assign_operator ass_exp   (rule 145)
    ass_ident  ->  OPEN_PAR ass_ident . CLOSE_PAR   (rule 150)

    CLOSE_PAR	shift, and go to state 490
    ASS_EQU	shift, and go to state 307
    UNITASSIGN	shift, and go to state 308

    assign_operator	go to state 309



state 247

    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 97)
    ass_ident  ->  list .   (rule 148)
    list  ->  OPEN_PAR list . CLOSE_PAR   (rule 184)
    factor  ->  list .   (rule 212)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 468)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 471)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 474)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 478)

    DOT 	shift, and go to state 310
    OPEN_PAR	shift, and go to state 311
    CLOSE_PAR	shift, and go to state 491
    IMPLY	shift, and go to state 312

    CLOSE_PAR	[reduce using rule 148 (ass_ident)]
    CLOSE_PAR	[reduce using rule 212 (factor)]
    ASS_EQU	reduce using rule 148 (ass_ident)
    UNITASSIGN	reduce using rule 148 (ass_ident)
    $default	reduce using rule 212 (factor)



state 248

    ass_ident  ->  value_exp .   (rule 149)
    value_exp  ->  OPEN_PAR value_exp . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR value_exp . CLOSE_PAR   (rule 194)
    factor  ->  value_exp .   (rule 214)
    struct_member_exp  ->  value_exp . DOT identifier option_struct_member_exp   (rule 469)
    struct_member_exp  ->  value_exp . DOT list option_struct_member_exp   (rule 472)
    struct_member_exp  ->  value_exp . IMPLY identifier option_struct_member_exp   (rule 476)
    struct_member_exp  ->  value_exp . IMPLY list option_struct_member_exp   (rule 482)

    DOT 	shift, and go to state 313
    CLOSE_PAR	shift, and go to state 492
    IMPLY	shift, and go to state 314

    CLOSE_PAR	[reduce using rule 149 (ass_ident)]
    CLOSE_PAR	[reduce using rule 214 (factor)]
    ASS_EQU	reduce using rule 149 (ass_ident)
    UNITASSIGN	reduce using rule 149 (ass_ident)
    $default	reduce using rule 214 (factor)



state 249

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    prime_bool_statement  ->  alg_exp . relation_operator alg_exp   (rule 351)
    prime_bool_statement  ->  alg_exp .   (rule 357)

    NE  	shift, and go to state 378
    EQU 	shift, and go to state 379
    GE  	shift, and go to state 380
    LE  	shift, and go to state 381
    GT  	shift, and go to state 382
    LT  	shift, and go to state 383
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 357 (prime_bool_statement)

    alg_operator	go to state 374
    relation_operator	go to state 405



state 250

    factor  ->  address_exp .   (rule 219)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)

    CLOSE_PAR	shift, and go to state 493

    CLOSE_PAR	[reduce using rule 219 (factor)]
    $default	reduce using rule 219 (factor)



state 251

    statement  ->  String_Function .   (rule 70)
    simple_alg_exp  ->  String_Function .   (rule 205)

    CLOSE_PAR	reduce using rule 70 (statement)
    CLOSE_PAR	[reduce using rule 205 (simple_alg_exp)]
    CHOP	reduce using rule 70 (statement)
    OR  	reduce using rule 70 (statement)
    OR  	[reduce using rule 205 (simple_alg_exp)]
    PARALLEL	reduce using rule 70 (statement)
    AND 	reduce using rule 70 (statement)
    AND 	[reduce using rule 205 (simple_alg_exp)]
    $default	reduce using rule 205 (simple_alg_exp)



state 252

    imply_pre  ->  prime_bool_statement .   (rule 437)

    $default	reduce using rule 437 (imply_pre)



state 253

    ass_ident  ->  identifier .   (rule 146)
    factor  ->  identifier .   (rule 211)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 427)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 467)
    struct_member_exp  ->  identifier . DOT list option_struct_member_exp   (rule 470)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 473)
    struct_member_exp  ->  identifier . IMPLY list option_struct_member_exp   (rule 477)
    struct_member_exp  ->  identifier . DOT function   (rule 480)
    struct_member_exp  ->  identifier . IMPLY function   (rule 481)

    DOT 	shift, and go to state 316
    CLOSE_PAR	shift, and go to state 494
    IMPLY	shift, and go to state 317

    CLOSE_PAR	[reduce using rule 146 (ass_ident)]
    CLOSE_PAR	[reduce using rule 211 (factor)]
    ASS_EQU	reduce using rule 146 (ass_ident)
    UNITASSIGN	reduce using rule 146 (ass_ident)
    $default	reduce using rule 211 (factor)



state 254

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 60)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 439)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 440)

    CLOSE_PAR	shift, and go to state 495
    OR  	shift, and go to state 496
    AND 	shift, and go to state 497



state 255

    ass_ident  ->  struct_member_exp .   (rule 147)
    factor  ->  struct_member_exp .   (rule 221)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 483)

    CLOSE_PAR	shift, and go to state 498

    CLOSE_PAR	[reduce using rule 147 (ass_ident)]
    CLOSE_PAR	[reduce using rule 221 (factor)]
    ASS_EQU	reduce using rule 147 (ass_ident)
    UNITASSIGN	reduce using rule 147 (ass_ident)
    $default	reduce using rule 221 (factor)



state 256

    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)
    statement  ->  OPEN_BPAR statement . optional_projection CLOSE_BPAR PROJECTION big_par   (rule 62)
    statement  ->  OPEN_BPAR statement . CLOSE_BPAR PROJECTION big_par   (rule 63)
    big_par  ->  OPEN_BPAR statement . CLOSE_BPAR   (rule 422)

    COMMA	shift, and go to state 499
    CLOSE_BPAR	shift, and go to state 500
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303

    CLOSE_BPAR	[reduce using rule 435 (optional_projection)]
    $default	reduce using rule 435 (optional_projection)

    optional_projection	go to state 501



state 257

    statement  ->  FUNCTION ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 65)

    OPEN_PAR	shift, and go to state 502



state 258

    statement  ->  SEND OPEN_PAR . ass_ident COMMA ass_exp CLOSE_PAR   (rule 72)

    OPEN_PAR	shift, and go to state 416
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 283
    ID  	shift, and go to state 278

    ass_ident	go to state 503
    leftaddrshift	go to state 96
    list	go to state 285
    value_exp	go to state 98
    identifier	go to state 107
    struct_member_exp	go to state 114



state 259

    statement  ->  RECEIVE OPEN_PAR . ass_ident COMMA identifier CLOSE_PAR   (rule 74)

    OPEN_PAR	shift, and go to state 416
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 283
    ID  	shift, and go to state 278

    ass_ident	go to state 504
    leftaddrshift	go to state 96
    list	go to state 285
    value_exp	go to state 98
    identifier	go to state 107
    struct_member_exp	go to state 114



state 260

    statement  ->  PROCESS ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 66)

    OPEN_PAR	shift, and go to state 505



state 261

    statement  ->  CHANNEL identifier . OPEN_PAR integer CLOSE_PAR   (rule 71)

    OPEN_PAR	shift, and go to state 506



state 262

    statement  ->  PUT OPEN_PAR . ass_ident COMMA ass_exp CLOSE_PAR   (rule 73)

    OPEN_PAR	shift, and go to state 416
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 283
    ID  	shift, and go to state 278

    ass_ident	go to state 507
    leftaddrshift	go to state 96
    list	go to state 285
    value_exp	go to state 98
    identifier	go to state 107
    struct_member_exp	go to state 114



state 263

    statement  ->  GET OPEN_PAR . ass_ident COMMA identifier CLOSE_PAR   (rule 75)

    OPEN_PAR	shift, and go to state 416
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 283
    ID  	shift, and go to state 278

    ass_ident	go to state 508
    leftaddrshift	go to state 96
    list	go to state 285
    value_exp	go to state 98
    identifier	go to state 107
    struct_member_exp	go to state 114



state 264

    String_Function_head  ->  STRFUNCHEAD OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 300)

    OPEN_PAR	shift, and go to state 509
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278
    STR 	shift, and go to state 193

    list	go to state 510
    value_exp	go to state 511
    String_Function	go to state 512
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    str_func_parameter	go to state 513
    identifier	go to state 514
    string	go to state 515
    struct_member_exp	go to state 516



state 265

    String_Function_tail  ->  STRFUNCTAIL OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 301)

    OPEN_PAR	shift, and go to state 509
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278
    STR 	shift, and go to state 193

    list	go to state 510
    value_exp	go to state 511
    String_Function	go to state 512
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    str_func_parameter	go to state 517
    identifier	go to state 514
    string	go to state 515
    struct_member_exp	go to state 516



state 266

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR . str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 302)

    OPEN_PAR	shift, and go to state 509
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278
    STR 	shift, and go to state 193

    list	go to state 510
    value_exp	go to state 511
    String_Function	go to state 512
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    str_func_parameter	go to state 518
    identifier	go to state 514
    string	go to state 515
    struct_member_exp	go to state 516



state 267

    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR . str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 303)

    OPEN_PAR	shift, and go to state 509
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278
    STR 	shift, and go to state 193

    list	go to state 510
    value_exp	go to state 511
    String_Function	go to state 512
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    str_func_parameter	go to state 519
    identifier	go to state 514
    string	go to state 515
    struct_member_exp	go to state 516



state 268

    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR . str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 304)

    OPEN_PAR	shift, and go to state 509
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278
    STR 	shift, and go to state 193

    list	go to state 510
    value_exp	go to state 511
    String_Function	go to state 512
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    str_func_parameter	go to state 520
    identifier	go to state 514
    string	go to state 515
    struct_member_exp	go to state 516



state 269

    String_Function_len  ->  STRFUNCLEN OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 305)

    OPEN_PAR	shift, and go to state 509
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278
    STR 	shift, and go to state 193

    list	go to state 510
    value_exp	go to state 511
    String_Function	go to state 512
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    str_func_parameter	go to state 521
    identifier	go to state 514
    string	go to state 515
    struct_member_exp	go to state 516



state 270

    statement  ->  SYSTEM OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 69)

    OPEN_PAR	shift, and go to state 509
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278
    STR 	shift, and go to state 193

    list	go to state 510
    value_exp	go to state 511
    String_Function	go to state 512
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    str_func_parameter	go to state 522
    identifier	go to state 514
    string	go to state 515
    struct_member_exp	go to state 516



state 271

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 106)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 108)

    ID  	shift, and go to state 523
    STRUCT_TYPE	shift, and go to state 203



state 272

    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 107)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 109)

    ID  	shift, and go to state 524
    STRUCT_TYPE	shift, and go to state 205



state 273

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 112)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 113)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)

    MUL 	shift, and go to state 525



state 274

    sign_declaration  ->  UNSIGNED declaration .   (rule 102)

    $default	reduce using rule 102 (sign_declaration)



state 275

    sign_declaration  ->  SIGNED declaration .   (rule 101)

    $default	reduce using rule 101 (sign_declaration)



state 276

    statement  ->  FREE OPEN_PAR . identifier CLOSE_PAR   (rule 68)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 526



state 277

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR alg_exp   (rule 192)
    value_exp  ->  MUL OPEN_PAR . alg_exp CLOSE_PAR   (rule 193)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 328
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 225
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    type_define	go to state 228
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 527
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    sign_type_define	go to state 229
    all_type_define	go to state 528
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 278

    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 178)
    identifier  ->  ID .   (rule 426)

    OPEN_MPAR	shift, and go to state 295

    $default	reduce using rule 426 (identifier)



state 279

    value_exp  ->  MUL list .   (rule 190)

    $default	reduce using rule 190 (value_exp)



state 280

    value_exp  ->  MUL value_exp .   (rule 189)

    $default	reduce using rule 189 (value_exp)



state 281

    value_exp  ->  MUL identifier .   (rule 188)

    $default	reduce using rule 188 (value_exp)



state 282

    statement  ->  NEXT OPEN_PAR . statement CLOSE_PAR   (rule 43)
    ass_ident  ->  OPEN_PAR . ass_ident CLOSE_PAR   (rule 150)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 529
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    ADDRESS	shift, and go to state 148
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 530
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 246
    leftaddrshift	go to state 96
    list	go to state 531
    value_exp	go to state 532
    address_exp	go to state 533
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 534
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 535



state 283

    ass_ident  ->  NEXT . ass_ident   (rule 151)

    OPEN_PAR	shift, and go to state 416
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 283
    ID  	shift, and go to state 278

    ass_ident	go to state 284
    leftaddrshift	go to state 96
    list	go to state 285
    value_exp	go to state 98
    identifier	go to state 107
    struct_member_exp	go to state 114



state 284

    ass_ident  ->  NEXT ass_ident .   (rule 151)

    $default	reduce using rule 151 (ass_ident)



state 285

    ass_ident  ->  list .   (rule 148)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 468)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 471)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 474)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 478)

    DOT 	shift, and go to state 310
    IMPLY	shift, and go to state 312

    $default	reduce using rule 148 (ass_ident)



state 286

    statement  ->  LENGTH OPEN_PAR . alg_exp CLOSE_PAR   (rule 53)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 536
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 287

    request_statement  ->  REQUEST OPEN_PAR . identifier CLOSE_PAR   (rule 459)
    request_statement  ->  REQUEST OPEN_PAR . identifier option_input CLOSE_PAR   (rule 460)
    request_statement  ->  REQUEST OPEN_PAR . list CLOSE_PAR   (rule 461)
    request_statement  ->  REQUEST OPEN_PAR . list option_input CLOSE_PAR   (rule 462)
    request_statement  ->  REQUEST OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 463)

    OPEN_PAR	shift, and go to state 509
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278

    list	go to state 537
    value_exp	go to state 365
    identifier	go to state 538
    struct_member_exp	go to state 539



state 288

    statement  ->  FINAL OPEN_PAR . statement CLOSE_PAR   (rule 58)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 540
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114



state 289

    statement  ->  KEEP OPEN_PAR . statement CLOSE_PAR   (rule 45)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 541
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114



state 290

    statement  ->  ALWAYS OPEN_PAR . statement CLOSE_PAR   (rule 46)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 542
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114



state 291

    statement  ->  HALT OPEN_PAR . bool_statement CLOSE_PAR   (rule 47)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 191
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 195
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 543
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 199
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 292

    statement  ->  W_NEXT OPEN_PAR . statement CLOSE_PAR   (rule 44)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 544
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114



state 293

    statement  ->  PREFIX OPEN_PAR . statement CLOSE_PAR   (rule 35)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 545
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114



state 294

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 96)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 446
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 546
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 449
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 547
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    $default	reduce using rule 416 (option_function_identifier)

    function	go to state 155
    file_statement	go to state 450
    ass_exp	go to state 548
    rightaddrshift	go to state 452
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 453
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 454
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 457
    prime_bool_statement	go to state 198
    option_function_identifier	go to state 549
    identifier	go to state 167
    string	go to state 458
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 459



state 295

    list  ->  ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 178)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 550
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 296

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 130)

    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 296
    ID  	shift, and go to state 297

    option_identifier_array_declaration	go to state 551
    identifier	go to state 299



state 297

    option_identifier_array_declaration  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 123)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_EQU list_exp inner_option_identifier_array_declaration   (rule 126)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_EQU string inner_option_identifier_array_declaration   (rule 127)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU list_exp inner_option_identifier_array_declaration   (rule 128)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU string inner_option_identifier_array_declaration   (rule 129)
    identifier  ->  ID .   (rule 426)

    ARRAY	shift, and go to state 552
    OPEN_MPAR	shift, and go to state 553

    $default	reduce using rule 426 (identifier)



state 298

    declaration  ->  STRUCT_TYPE option_identifier_array_declaration .   (rule 105)

    $default	reduce using rule 105 (declaration)



state 299

    option_identifier_array_declaration  ->  identifier . inner_option_identifier_array_declaration   (rule 122)
    option_identifier_array_declaration  ->  identifier . ASS_EQU ass_exp inner_option_identifier_array_declaration   (rule 124)
    option_identifier_array_declaration  ->  identifier . ASS_EQU string inner_option_identifier_array_declaration   (rule 125)

    COMMA	shift, and go to state 554
    ASS_EQU	shift, and go to state 555

    COMMA	[reduce using rule 133 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 133 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 556



state 300

    statement  ->  statement CHOP . statement   (rule 34)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 557
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114



state 301

    statement  ->  statement OR . statement   (rule 33)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 558
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114



state 302

    statement  ->  statement PARALLEL . statement   (rule 59)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 559
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114



state 303

    statement  ->  statement AND . statement   (rule 32)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 560
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114



state 304

    CYLINDER_STATEMENT  ->  CYLINDER_STATEMENT CYLINDER . CYLINDER_STATEMENT   (rule 82)

    error	shift, and go to state 22
    OPEN_PAR	shift, and go to state 561
    OPEN_BPAR	shift, and go to state 443

    CYLINDER_STATEMENT	go to state 562
    OVER_STATEMENT	go to state 86
    big_par	go to state 106



state 305

    struct_define_statement  ->  struct_identifier OPEN_BPAR . option_struct_declaration CLOSE_BPAR   (rule 98)

    STRUCT	shift, and go to state 271
    UNION	shift, and go to state 272
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 273
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    STRUCT_TYPE	shift, and go to state 83

    option_struct_declaration	go to state 563
    sign_declaration	go to state 564
    declaration	go to state 91
    type_define	go to state 92



state 306

    declaration  ->  type_define option_identifier_array_declaration .   (rule 104)

    $default	reduce using rule 104 (declaration)



state 307

    assign_operator  ->  ASS_EQU .   (rule 166)

    $default	reduce using rule 166 (assign_operator)



state 308

    assign_operator  ->  UNITASSIGN .   (rule 167)

    $default	reduce using rule 167 (assign_operator)



state 309

    ass_statement  ->  ass_ident assign_operator . ass_exp   (rule 145)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 446
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 449
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 450
    ass_exp	go to state 565
    rightaddrshift	go to state 452
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 453
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 454
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 457
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 458
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 459



state 310

    struct_member_exp  ->  list DOT . identifier option_struct_member_exp   (rule 468)
    struct_member_exp  ->  list DOT . list option_struct_member_exp   (rule 471)

    OPEN_PAR	shift, and go to state 422
    ID  	shift, and go to state 278

    list	go to state 566
    identifier	go to state 567



state 311

    function  ->  list OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 97)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 446
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 546
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 449
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 547
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    $default	reduce using rule 416 (option_function_identifier)

    function	go to state 155
    file_statement	go to state 450
    ass_exp	go to state 548
    rightaddrshift	go to state 452
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 453
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 454
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 457
    prime_bool_statement	go to state 198
    option_function_identifier	go to state 568
    identifier	go to state 167
    string	go to state 458
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 459



state 312

    struct_member_exp  ->  list IMPLY . identifier option_struct_member_exp   (rule 474)
    struct_member_exp  ->  list IMPLY . list option_struct_member_exp   (rule 478)

    OPEN_PAR	shift, and go to state 422
    ID  	shift, and go to state 278

    list	go to state 569
    identifier	go to state 570



state 313

    struct_member_exp  ->  value_exp DOT . identifier option_struct_member_exp   (rule 469)
    struct_member_exp  ->  value_exp DOT . list option_struct_member_exp   (rule 472)

    OPEN_PAR	shift, and go to state 422
    ID  	shift, and go to state 278

    list	go to state 571
    identifier	go to state 572



state 314

    struct_member_exp  ->  value_exp IMPLY . identifier option_struct_member_exp   (rule 476)
    struct_member_exp  ->  value_exp IMPLY . list option_struct_member_exp   (rule 482)

    OPEN_PAR	shift, and go to state 422
    ID  	shift, and go to state 278

    list	go to state 573
    identifier	go to state 574



state 315

    OVER_STATEMENT  ->  big_par OVER . OPEN_PAR INTERVAL_STATEMENT CLOSE_PAR   (rule 85)
    OVER_STATEMENT  ->  big_par OVER . OPEN_PAR CLOSE_PAR   (rule 86)

    OPEN_PAR	shift, and go to state 575



state 316

    struct_member_exp  ->  identifier DOT . identifier option_struct_member_exp   (rule 467)
    struct_member_exp  ->  identifier DOT . list option_struct_member_exp   (rule 470)
    struct_member_exp  ->  identifier DOT . function   (rule 480)

    OPEN_PAR	shift, and go to state 422
    ID  	shift, and go to state 82

    function	go to state 576
    list	go to state 577
    identifier	go to state 578



state 317

    struct_member_exp  ->  identifier IMPLY . identifier option_struct_member_exp   (rule 473)
    struct_member_exp  ->  identifier IMPLY . list option_struct_member_exp   (rule 477)
    struct_member_exp  ->  identifier IMPLY . function   (rule 481)

    OPEN_PAR	shift, and go to state 422
    ID  	shift, and go to state 82

    function	go to state 579
    list	go to state 580
    identifier	go to state 581



state 318

    complexProposition  ->  DEFINE ID COLON . prime_bool_statement   (rule 26)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 121
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 582
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 249
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    prime_bool_statement	go to state 583
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 319

    complexProposition  ->  OPEN_PAR complexProposition CLOSE_PAR .   (rule 28)

    $default	reduce using rule 28 (complexProposition)



state 320

    poptional_projection  ->  COMMA . complexProposition poptional_projection   (rule 29)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 584



state 321

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection . CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 24)

    CLOSE_BPAR	shift, and go to state 585



state 322

    alg_exp  ->  IF bool_statement . THEN alg_exp optional_exp_else_statement   (rule 198)
    bool_statement  ->  bool_statement . AND bool_statement   (rule 348)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 349)

    THEN	shift, and go to state 586
    OR  	shift, and go to state 407
    AND 	shift, and go to state 408



state 323

    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)

    STRUCT_TYPE	shift, and go to state 587



state 324

    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 589



state 325

    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 591



state 326

    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 275)

    MUL 	shift, and go to state 592



state 327

    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 272)

    CLOSE_PAR	shift, and go to state 593
    MUL 	shift, and go to state 594



state 328

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 595
    CHARDECLARATION	shift, and go to state 596
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 597
    OPEN_PAR	shift, and go to state 328
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 598
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337



state 329

    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)

    INTDECLARATION	shift, and go to state 599
    CHARDECLARATION	shift, and go to state 600



state 330

    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)

    INTDECLARATION	shift, and go to state 601
    CHARDECLARATION	shift, and go to state 602



state 331

    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 279)

    MUL 	shift, and go to state 603



state 332

    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 97)
    list  ->  OPEN_PAR list . CLOSE_PAR   (rule 184)
    factor  ->  list .   (rule 212)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 468)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 471)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 474)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 478)

    DOT 	shift, and go to state 310
    OPEN_PAR	shift, and go to state 311
    CLOSE_PAR	shift, and go to state 491
    IMPLY	shift, and go to state 312

    CLOSE_PAR	[reduce using rule 212 (factor)]
    $default	reduce using rule 212 (factor)



state 333

    value_exp  ->  OPEN_PAR value_exp . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR value_exp . CLOSE_PAR   (rule 194)
    factor  ->  value_exp .   (rule 214)
    struct_member_exp  ->  value_exp . DOT identifier option_struct_member_exp   (rule 469)
    struct_member_exp  ->  value_exp . DOT list option_struct_member_exp   (rule 472)
    struct_member_exp  ->  value_exp . IMPLY identifier option_struct_member_exp   (rule 476)
    struct_member_exp  ->  value_exp . IMPLY list option_struct_member_exp   (rule 482)

    DOT 	shift, and go to state 313
    CLOSE_PAR	shift, and go to state 492
    IMPLY	shift, and go to state 314

    CLOSE_PAR	[reduce using rule 214 (factor)]
    $default	reduce using rule 214 (factor)



state 334

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    factor  ->  OPEN_PAR alg_exp . CLOSE_PAR   (rule 216)

    CLOSE_PAR	shift, and go to state 604
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374



state 335

    factor  ->  address_exp .   (rule 219)
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 256)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)

    CLOSE_PAR	shift, and go to state 605

    CLOSE_PAR	[reduce using rule 219 (factor)]
    $default	reduce using rule 219 (factor)



state 336

    factor  ->  identifier .   (rule 211)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 427)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 467)
    struct_member_exp  ->  identifier . DOT list option_struct_member_exp   (rule 470)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 473)
    struct_member_exp  ->  identifier . IMPLY list option_struct_member_exp   (rule 477)
    struct_member_exp  ->  identifier . DOT function   (rule 480)
    struct_member_exp  ->  identifier . IMPLY function   (rule 481)

    DOT 	shift, and go to state 316
    CLOSE_PAR	shift, and go to state 494
    IMPLY	shift, and go to state 317

    CLOSE_PAR	[reduce using rule 211 (factor)]
    $default	reduce using rule 211 (factor)



state 337

    factor  ->  struct_member_exp .   (rule 221)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 483)

    CLOSE_PAR	shift, and go to state 498

    CLOSE_PAR	[reduce using rule 221 (factor)]
    $default	reduce using rule 221 (factor)



state 338

    size_of  ->  SIZEOF OPEN_PAR . alg_exp CLOSE_PAR   (rule 290)
    size_of  ->  SIZEOF OPEN_PAR . all_sizeof_type CLOSE_PAR   (rule 291)
    size_of  ->  SIZEOF OPEN_PAR . STRUCT_TYPE CLOSE_PAR   (rule 292)
    size_of  ->  SIZEOF OPEN_PAR . string CLOSE_PAR   (rule 293)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 606
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 607
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 608
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 609
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 610
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    STRUCT_TYPE	shift, and go to state 611
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    type_define	go to state 228
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 612
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    all_sizeof_type	go to state 613
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    sign_type_define	go to state 229
    all_type_define	go to state 614
    identifier	go to state 167
    string	go to state 615
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 339

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  CEIL alg_exp .   (rule 313)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 313 (Float_Function)]
    SUB 	[reduce using rule 313 (Float_Function)]
    $default	reduce using rule 313 (Float_Function)

    alg_operator	go to state 374



state 340

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  FLOOR alg_exp .   (rule 314)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 314 (Float_Function)]
    SUB 	[reduce using rule 314 (Float_Function)]
    $default	reduce using rule 314 (Float_Function)

    alg_operator	go to state 374



state 341

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  ROUND alg_exp .   (rule 312)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 312 (Float_Function)]
    SUB 	[reduce using rule 312 (Float_Function)]
    $default	reduce using rule 312 (Float_Function)

    alg_operator	go to state 374



state 342

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  SIN alg_exp .   (rule 315)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 315 (Float_Function)]
    SUB 	[reduce using rule 315 (Float_Function)]
    $default	reduce using rule 315 (Float_Function)

    alg_operator	go to state 374



state 343

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  COS alg_exp .   (rule 316)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 316 (Float_Function)]
    SUB 	[reduce using rule 316 (Float_Function)]
    $default	reduce using rule 316 (Float_Function)

    alg_operator	go to state 374



state 344

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  TAN alg_exp .   (rule 317)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 317 (Float_Function)]
    SUB 	[reduce using rule 317 (Float_Function)]
    $default	reduce using rule 317 (Float_Function)

    alg_operator	go to state 374



state 345

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  ASIN alg_exp .   (rule 318)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 318 (Float_Function)]
    SUB 	[reduce using rule 318 (Float_Function)]
    $default	reduce using rule 318 (Float_Function)

    alg_operator	go to state 374



state 346

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  ACOS alg_exp .   (rule 319)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 319 (Float_Function)]
    SUB 	[reduce using rule 319 (Float_Function)]
    $default	reduce using rule 319 (Float_Function)

    alg_operator	go to state 374



state 347

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  ATAN alg_exp .   (rule 320)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 320 (Float_Function)]
    SUB 	[reduce using rule 320 (Float_Function)]
    $default	reduce using rule 320 (Float_Function)

    alg_operator	go to state 374



state 348

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  SINH alg_exp .   (rule 321)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 321 (Float_Function)]
    SUB 	[reduce using rule 321 (Float_Function)]
    $default	reduce using rule 321 (Float_Function)

    alg_operator	go to state 374



state 349

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  COSH alg_exp .   (rule 322)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 322 (Float_Function)]
    SUB 	[reduce using rule 322 (Float_Function)]
    $default	reduce using rule 322 (Float_Function)

    alg_operator	go to state 374



state 350

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  TANH alg_exp .   (rule 323)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 323 (Float_Function)]
    SUB 	[reduce using rule 323 (Float_Function)]
    $default	reduce using rule 323 (Float_Function)

    alg_operator	go to state 374



state 351

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  EXP alg_exp .   (rule 324)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 324 (Float_Function)]
    SUB 	[reduce using rule 324 (Float_Function)]
    $default	reduce using rule 324 (Float_Function)

    alg_operator	go to state 374



state 352

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  LOG alg_exp .   (rule 325)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 325 (Float_Function)]
    SUB 	[reduce using rule 325 (Float_Function)]
    $default	reduce using rule 325 (Float_Function)

    alg_operator	go to state 374



state 353

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  LOG10 alg_exp .   (rule 326)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 326 (Float_Function)]
    SUB 	[reduce using rule 326 (Float_Function)]
    $default	reduce using rule 326 (Float_Function)

    alg_operator	go to state 374



state 354

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  SQRT alg_exp .   (rule 327)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 327 (Float_Function)]
    SUB 	[reduce using rule 327 (Float_Function)]
    $default	reduce using rule 327 (Float_Function)

    alg_operator	go to state 374



state 355

    Float_Function  ->  ATAN2 OPEN_PAR . alg_exp COMMA alg_exp CLOSE_PAR   (rule 328)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 616
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 356

    Float_Function  ->  POW OPEN_PAR . alg_exp COMMA alg_exp CLOSE_PAR   (rule 329)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 617
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 357

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  ABS alg_exp .   (rule 333)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 333 (Float_Function)]
    SUB 	[reduce using rule 333 (Float_Function)]
    $default	reduce using rule 333 (Float_Function)

    alg_operator	go to state 374



state 358

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  FABS alg_exp .   (rule 334)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 334 (Float_Function)]
    SUB 	[reduce using rule 334 (Float_Function)]
    $default	reduce using rule 334 (Float_Function)

    alg_operator	go to state 374



state 359

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  LABS alg_exp .   (rule 335)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 335 (Float_Function)]
    SUB 	[reduce using rule 335 (Float_Function)]
    $default	reduce using rule 335 (Float_Function)

    alg_operator	go to state 374



state 360

    Float_Function  ->  FMOD OPEN_PAR . alg_exp COMMA alg_exp CLOSE_PAR   (rule 330)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 618
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 361

    Float_Function  ->  MODF OPEN_PAR . alg_exp COMMA alg_exp CLOSE_PAR   (rule 331)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 619
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 362

    Float_Function  ->  LDEXP OPEN_PAR . alg_exp COMMA alg_exp CLOSE_PAR   (rule 332)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 620
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 363

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    OPEN_PAR	shift, and go to state 621
    ADDRESS	shift, and go to state 148
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278

    list	go to state 622
    value_exp	go to state 623
    address_exp	go to state 624
    identifier	go to state 625
    struct_member_exp	go to state 626



state 364

    address_exp  ->  ADDRESS list .   (rule 253)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 468)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 471)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 474)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 478)

    DOT 	shift, and go to state 310

    DOT 	[reduce using rule 253 (address_exp)]
    $default	reduce using rule 253 (address_exp)



state 365

    struct_member_exp  ->  value_exp . DOT identifier option_struct_member_exp   (rule 469)
    struct_member_exp  ->  value_exp . DOT list option_struct_member_exp   (rule 472)
    struct_member_exp  ->  value_exp . IMPLY identifier option_struct_member_exp   (rule 476)
    struct_member_exp  ->  value_exp . IMPLY list option_struct_member_exp   (rule 482)

    DOT 	shift, and go to state 313
    IMPLY	shift, and go to state 314



state 366

    address_exp  ->  ADDRESS address_exp .   (rule 255)

    $default	reduce using rule 255 (address_exp)



state 367

    address_exp  ->  ADDRESS identifier .   (rule 252)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 467)
    struct_member_exp  ->  identifier . DOT list option_struct_member_exp   (rule 470)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 473)
    struct_member_exp  ->  identifier . IMPLY list option_struct_member_exp   (rule 477)
    struct_member_exp  ->  identifier . DOT function   (rule 480)
    struct_member_exp  ->  identifier . IMPLY function   (rule 481)

    DOT 	shift, and go to state 316

    DOT 	[reduce using rule 252 (address_exp)]
    $default	reduce using rule 252 (address_exp)



state 368

    address_exp  ->  ADDRESS struct_member_exp .   (rule 254)

    $default	reduce using rule 254 (address_exp)



state 369

    factor  ->  SUB factor .   (rule 207)

    $default	reduce using rule 207 (factor)



state 370

    factor  ->  BNE factor .   (rule 208)

    $default	reduce using rule 208 (factor)



state 371

    pre_next  ->  PREVIOUS OPEN_PAR . identifier CLOSE_PAR   (rule 223)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 627



state 372

    alg_operator  ->  ADD .   (rule 232)

    $default	reduce using rule 232 (alg_operator)



state 373

    alg_operator  ->  SUB .   (rule 233)

    $default	reduce using rule 233 (alg_operator)



state 374

    alg_exp  ->  alg_exp alg_operator . simple_alg_exp   (rule 197)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    simple_alg_exp	go to state 628
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 375

    mul_operator  ->  INTER_OR .   (rule 230)

    $default	reduce using rule 230 (mul_operator)



state 376

    mul_operator  ->  CON .   (rule 231)

    $default	reduce using rule 231 (mul_operator)



state 377

    mul_operator  ->  ADDRESS .   (rule 229)

    $default	reduce using rule 229 (mul_operator)



state 378

    relation_operator  ->  NE .   (rule 362)

    $default	reduce using rule 362 (relation_operator)



state 379

    relation_operator  ->  EQU .   (rule 365)

    $default	reduce using rule 365 (relation_operator)



state 380

    relation_operator  ->  GE .   (rule 360)

    $default	reduce using rule 360 (relation_operator)



state 381

    relation_operator  ->  LE .   (rule 361)

    $default	reduce using rule 361 (relation_operator)



state 382

    relation_operator  ->  GT .   (rule 363)

    $default	reduce using rule 363 (relation_operator)



state 383

    relation_operator  ->  LT .   (rule 364)

    $default	reduce using rule 364 (relation_operator)



state 384

    mul_operator  ->  LST .   (rule 227)

    $default	reduce using rule 227 (mul_operator)



state 385

    mul_operator  ->  RST .   (rule 228)

    $default	reduce using rule 228 (mul_operator)



state 386

    mul_operator  ->  MUL .   (rule 224)

    $default	reduce using rule 224 (mul_operator)



state 387

    mul_operator  ->  DIV .   (rule 225)

    $default	reduce using rule 225 (mul_operator)



state 388

    mul_operator  ->  MOD .   (rule 226)

    $default	reduce using rule 226 (mul_operator)



state 389

    simple_alg_exp  ->  simple_alg_exp mul_operator . factor   (rule 204)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    factor	go to state 629
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 390

    alg_exp  ->  simple_alg_exp relation_operator . alg_exp   (rule 196)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 630
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 391

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition CHOP complexProposition .   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)

    IFF 	shift, and go to state 180
    PROPIMPLY	shift, and go to state 181
    OR  	shift, and go to state 182
    AND 	shift, and go to state 183
    CHOPSTAR	shift, and go to state 184

    $default	reduce using rule 8 (complexProposition)



state 392

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition IFF complexProposition .   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)

    OR  	shift, and go to state 182
    AND 	shift, and go to state 183
    CHOPSTAR	shift, and go to state 184

    $default	reduce using rule 6 (complexProposition)



state 393

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition PROPIMPLY complexProposition .   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)

    OR  	shift, and go to state 182
    AND 	shift, and go to state 183
    CHOPSTAR	shift, and go to state 184

    $default	reduce using rule 7 (complexProposition)



state 394

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition OR complexProposition .   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)

    AND 	shift, and go to state 183
    CHOPSTAR	shift, and go to state 184

    $default	reduce using rule 5 (complexProposition)



state 395

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition AND complexProposition .   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)

    CHOPSTAR	shift, and go to state 184

    $default	reduce using rule 4 (complexProposition)



state 396

    bool_statement  ->  POINTERNULL NE . alg_exp   (rule 344)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 631
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 397

    bool_statement  ->  POINTERNULL EQU . alg_exp   (rule 343)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 632
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 398

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    bool_statement  ->  OPEN_PAR . bool_statement CLOSE_PAR   (rule 350)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    STRUCT	shift, and go to state 323
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    INTDECLARATION	shift, and go to state 595
    CHARDECLARATION	shift, and go to state 596
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 597
    OPEN_PAR	shift, and go to state 398
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 598
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 399
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 400
    prime_bool_statement	go to state 198
    identifier	go to state 336
    string	go to state 199
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337



state 399

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    factor  ->  OPEN_PAR alg_exp . CLOSE_PAR   (rule 216)
    bool_statement  ->  alg_exp . EQU string   (rule 337)
    bool_statement  ->  alg_exp . NE string   (rule 338)
    bool_statement  ->  alg_exp . EQU POINTERNULL   (rule 341)
    bool_statement  ->  alg_exp . NE POINTERNULL   (rule 342)
    bool_statement  ->  alg_exp . EQU charliteral   (rule 345)
    bool_statement  ->  alg_exp . NE charliteral   (rule 346)
    prime_bool_statement  ->  alg_exp . relation_operator alg_exp   (rule 351)
    prime_bool_statement  ->  alg_exp .   (rule 357)

    CLOSE_PAR	shift, and go to state 604
    NE  	shift, and go to state 403
    EQU 	shift, and go to state 404
    GE  	shift, and go to state 380
    LE  	shift, and go to state 381
    GT  	shift, and go to state 382
    LT  	shift, and go to state 383
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    CLOSE_PAR	[reduce using rule 357 (prime_bool_statement)]
    $default	reduce using rule 357 (prime_bool_statement)

    alg_operator	go to state 374
    relation_operator	go to state 405



state 400

    bool_statement  ->  bool_statement . AND bool_statement   (rule 348)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 349)
    bool_statement  ->  OPEN_PAR bool_statement . CLOSE_PAR   (rule 350)

    CLOSE_PAR	shift, and go to state 633
    OR  	shift, and go to state 407
    AND 	shift, and go to state 408



state 401

    bool_statement  ->  NEGATION bool_statement .   (rule 347)
    bool_statement  ->  bool_statement . AND bool_statement   (rule 348)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 349)


    $default	reduce using rule 347 (bool_statement)



state 402

    bool_statement  ->  prime_bool_statement .   (rule 336)
    prime_bool_statement  ->  NEGATION prime_bool_statement .   (rule 352)

    $   	reduce using rule 336 (bool_statement)
    $   	[reduce using rule 352 (prime_bool_statement)]
    THEN	reduce using rule 336 (bool_statement)
    THEN	[reduce using rule 352 (prime_bool_statement)]
    COMMA	reduce using rule 336 (bool_statement)
    COMMA	[reduce using rule 352 (prime_bool_statement)]
    CLOSE_PAR	reduce using rule 336 (bool_statement)
    CLOSE_PAR	[reduce using rule 352 (prime_bool_statement)]
    CLOSE_BPAR	reduce using rule 336 (bool_statement)
    CLOSE_BPAR	[reduce using rule 352 (prime_bool_statement)]
    CLOSE_MPAR	reduce using rule 336 (bool_statement)
    CLOSE_MPAR	[reduce using rule 352 (prime_bool_statement)]
    CHOP	reduce using rule 336 (bool_statement)
    CHOP	[reduce using rule 352 (prime_bool_statement)]
    OR  	reduce using rule 336 (bool_statement)
    OR  	[reduce using rule 352 (prime_bool_statement)]
    PARALLEL	reduce using rule 336 (bool_statement)
    PARALLEL	[reduce using rule 352 (prime_bool_statement)]
    AND 	reduce using rule 336 (bool_statement)
    AND 	[reduce using rule 352 (prime_bool_statement)]
    $default	reduce using rule 336 (bool_statement)



state 403

    bool_statement  ->  alg_exp NE . string   (rule 338)
    bool_statement  ->  alg_exp NE . POINTERNULL   (rule 342)
    bool_statement  ->  alg_exp NE . charliteral   (rule 346)
    relation_operator  ->  NE .   (rule 362)

    POINTERNULL	shift, and go to state 634
    STR 	shift, and go to state 193
    CHARLITERAL	shift, and go to state 154

    POINTERNULL	[reduce using rule 362 (relation_operator)]
    CHARLITERAL	[reduce using rule 362 (relation_operator)]
    $default	reduce using rule 362 (relation_operator)

    string	go to state 635
    charliteral	go to state 636



state 404

    bool_statement  ->  alg_exp EQU . string   (rule 337)
    bool_statement  ->  alg_exp EQU . POINTERNULL   (rule 341)
    bool_statement  ->  alg_exp EQU . charliteral   (rule 345)
    relation_operator  ->  EQU .   (rule 365)

    POINTERNULL	shift, and go to state 637
    STR 	shift, and go to state 193
    CHARLITERAL	shift, and go to state 154

    POINTERNULL	[reduce using rule 365 (relation_operator)]
    CHARLITERAL	[reduce using rule 365 (relation_operator)]
    $default	reduce using rule 365 (relation_operator)

    string	go to state 638
    charliteral	go to state 639



state 405

    prime_bool_statement  ->  alg_exp relation_operator . alg_exp   (rule 351)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 640
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 406

    if_statement  ->  IF bool_statement THEN . big_par optional_else_statement   (rule 452)

    error	shift, and go to state 22
    OPEN_BPAR	shift, and go to state 443

    big_par	go to state 641



state 407

    bool_statement  ->  bool_statement OR . bool_statement   (rule 349)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 191
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 195
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 642
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 199
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 408

    bool_statement  ->  bool_statement AND . bool_statement   (rule 348)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 191
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 195
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 643
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 199
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 409

    bool_statement  ->  string NE . alg_exp   (rule 340)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 644
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 410

    bool_statement  ->  string EQU . alg_exp   (rule 339)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 645
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 411

    statement  ->  AWAIT OPEN_PAR bool_statement . CLOSE_PAR   (rule 48)
    bool_statement  ->  bool_statement . AND bool_statement   (rule 348)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 349)

    CLOSE_PAR	shift, and go to state 646
    OR  	shift, and go to state 407
    AND 	shift, and go to state 408



state 412

    declaration  ->  STRUCT ID option_identifier_array_declaration .   (rule 106)

    $default	reduce using rule 106 (declaration)



state 413

    declaration  ->  STRUCT STRUCT_TYPE option_identifier_array_declaration .   (rule 108)

    $default	reduce using rule 108 (declaration)



state 414

    declaration  ->  UNION ID option_identifier_array_declaration .   (rule 107)

    $default	reduce using rule 107 (declaration)



state 415

    declaration  ->  UNION STRUCT_TYPE option_identifier_array_declaration .   (rule 109)

    $default	reduce using rule 109 (declaration)



state 416

    ass_ident  ->  OPEN_PAR . ass_ident CLOSE_PAR   (rule 150)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    OPEN_PAR	shift, and go to state 647
    ADDRESS	shift, and go to state 148
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 283
    ID  	shift, and go to state 278

    ass_ident	go to state 648
    leftaddrshift	go to state 96
    list	go to state 649
    value_exp	go to state 532
    address_exp	go to state 533
    identifier	go to state 534
    struct_member_exp	go to state 535



state 417

    file_statement  ->  FOPEN OPEN_PAR ass_ident . COMMA string CLOSE_PAR   (rule 138)

    COMMA	shift, and go to state 650



state 418

    file_statement  ->  FCLOSE OPEN_PAR identifier . CLOSE_PAR   (rule 144)

    CLOSE_PAR	shift, and go to state 651



state 419

    file_statement  ->  FGETS OPEN_PAR identifier . COMMA integer COMMA identifier CLOSE_PAR   (rule 139)

    COMMA	shift, and go to state 652



state 420

    file_statement  ->  FPUTS OPEN_PAR identifier . COMMA identifier CLOSE_PAR   (rule 141)

    COMMA	shift, and go to state 653



state 421

    file_statement  ->  FGETC OPEN_PAR identifier . CLOSE_PAR   (rule 140)

    CLOSE_PAR	shift, and go to state 654



state 422

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)

    OPEN_PAR	shift, and go to state 655
    ID  	shift, and go to state 278

    list	go to state 656
    identifier	go to state 426



state 423

    file_statement  ->  FPUTC OPEN_PAR list . COMMA identifier CLOSE_PAR   (rule 143)

    COMMA	shift, and go to state 657



state 424

    file_statement  ->  FPUTC OPEN_PAR identifier . COMMA identifier CLOSE_PAR   (rule 142)

    COMMA	shift, and go to state 658



state 425

    statement  ->  DEFINE ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 64)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 224
    UNSIGNED	shift, and go to state 225
    ID  	shift, and go to state 226
    STRUCT_TYPE	shift, and go to state 227

    $default	reduce using rule 395 (option_function_parameter_list)

    type_define	go to state 228
    sign_type_define	go to state 229
    all_type_define	go to state 230
    option_function_parameter_list	go to state 659



state 426

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 427)

    CLOSE_PAR	shift, and go to state 494



state 427

    inner_optional_define_identifier  ->  COMMA . all_type_define identifier inner_optional_define_identifier   (rule 396)
    inner_optional_define_identifier  ->  COMMA . all_type_define inner_optional_define_identifier   (rule 397)
    inner_optional_define_identifier  ->  COMMA . ID identifier inner_optional_define_identifier   (rule 398)
    inner_optional_define_identifier  ->  COMMA . STRUCT_TYPE identifier inner_optional_define_identifier   (rule 399)
    inner_optional_define_identifier  ->  COMMA . STRUCT_TYPE MUL identifier inner_optional_define_identifier   (rule 400)
    inner_optional_define_identifier  ->  COMMA . ID identifier ARRAY inner_optional_define_identifier   (rule 401)
    inner_optional_define_identifier  ->  COMMA . STRUCT_TYPE identifier ARRAY inner_optional_define_identifier   (rule 402)
    inner_optional_define_identifier  ->  COMMA . all_type_define identifier ARRAY inner_optional_define_identifier   (rule 403)
    inner_optional_define_identifier  ->  COMMA . all_type_define MUL identifier ARRAY inner_optional_define_identifier   (rule 404)
    inner_optional_define_identifier  ->  COMMA . all_type_define MUL identifier inner_optional_define_identifier   (rule 405)
    inner_optional_define_identifier  ->  COMMA . OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 406)
    inner_optional_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 408)
    inner_optional_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 409)
    inner_optional_define_identifier  ->  COMMA . all_type_define identifier ARRAY OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 410)
    inner_optional_define_identifier  ->  COMMA . all_type_define MUL identifier inner_optional_define_identifier   (rule 411)
    inner_optional_define_identifier  ->  COMMA . all_type_define MUL inner_optional_define_identifier   (rule 412)
    inner_optional_define_identifier  ->  COMMA . error   (rule 413)

    error	shift, and go to state 660
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 661
    UNSIGNED	shift, and go to state 225
    ID  	shift, and go to state 662
    STRUCT_TYPE	shift, and go to state 663

    type_define	go to state 228
    sign_type_define	go to state 229
    all_type_define	go to state 664



state 428

    statement  ->  EXIST identifier inner_optional_define_identifier . COLON OPEN_BPAR statement CLOSE_BPAR   (rule 77)

    COLON	shift, and go to state 665



state 429

    statement  ->  FRAME OPEN_PAR identifier . optional_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 61)

    COMMA	shift, and go to state 666

    $default	reduce using rule 433 (optional_frame_identifier)

    optional_frame_identifier	go to state 667



state 430

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 106)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 108)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)

    ID  	shift, and go to state 523
    STRUCT_TYPE	shift, and go to state 668



state 431

    type_define  ->  INTDECLARATION .   (rule 116)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 589

    MUL 	[reduce using rule 116 (type_define)]
    $default	reduce using rule 116 (type_define)



state 432

    type_define  ->  CHARDECLARATION .   (rule 118)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 591

    MUL 	[reduce using rule 118 (type_define)]
    $default	reduce using rule 118 (type_define)



state 433

    type_define  ->  VOIDDECLARATION .   (rule 120)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 275)

    MUL 	shift, and go to state 592

    MUL 	[reduce using rule 120 (type_define)]
    $default	reduce using rule 120 (type_define)



state 434

    type_define  ->  FLOATDECLARATION .   (rule 117)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 272)

    CLOSE_PAR	shift, and go to state 593
    MUL 	shift, and go to state 594

    MUL 	[reduce using rule 117 (type_define)]
    $default	reduce using rule 117 (type_define)



state 435

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 112)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 113)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)
    ass_ident  ->  OPEN_PAR . ass_ident CLOSE_PAR   (rule 150)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 595
    CHARDECLARATION	shift, and go to state 596
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 597
    OPEN_PAR	shift, and go to state 669
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 598
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 240
    BNE 	shift, and go to state 150
    NEXT	shift, and go to state 283
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    ass_ident	go to state 648
    leftaddrshift	go to state 96
    list	go to state 247
    value_exp	go to state 248
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 253
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 255



state 436

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 105)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 279)

    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 670
    ID  	shift, and go to state 297

    option_identifier_array_declaration	go to state 298
    identifier	go to state 299



state 437

    for_sta_init  ->  declaration .   (rule 446)

    $default	reduce using rule 446 (for_sta_init)



state 438

    for_sta_init  ->  ass_statement .   (rule 445)

    $default	reduce using rule 445 (for_sta_init)



state 439

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init . CHOP for_sta_condition CHOP for_sta_control CLOSE_PAR big_par   (rule 444)

    CHOP	shift, and go to state 671



state 440

    for_statement  ->  FOR alg_exp TIMES . DO big_par   (rule 443)

    DO  	shift, and go to state 672



state 441

    bool_par  ->  error CLOSE_PAR .   (rule 425)

    $default	reduce using rule 425 (bool_par)



state 442

    bool_statement  ->  bool_statement . AND bool_statement   (rule 348)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 349)
    bool_par  ->  OPEN_PAR bool_statement . CLOSE_PAR   (rule 424)

    CLOSE_PAR	shift, and go to state 673
    OR  	shift, and go to state 407
    AND 	shift, and go to state 408



state 443

    big_par  ->  OPEN_BPAR . statement CLOSE_BPAR   (rule 422)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 674
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114



state 444

    while_statement  ->  WHILE bool_par big_par .   (rule 442)

    $default	reduce using rule 442 (while_statement)



state 445

    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  REPEAT OPEN_BPAR statement . CLOSE_BPAR UNTIL OPEN_PAR bool_statement CLOSE_PAR   (rule 49)
    statement  ->  statement . PARALLEL statement   (rule 59)

    CLOSE_BPAR	shift, and go to state 675
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303



state 446

    ass_exp  ->  OPEN_PAR . string CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 174)
    ass_exp  ->  OPEN_PAR . ass_exp CLOSE_PAR   (rule 175)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    list_exp  ->  OPEN_PAR . list_exp CLOSE_PAR   (rule 237)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    bool_statement  ->  OPEN_PAR . bool_statement CLOSE_PAR   (rule 350)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    STRUCT	shift, and go to state 323
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    INTDECLARATION	shift, and go to state 324
    CHARDECLARATION	shift, and go to state 325
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 327
    OPEN_PAR	shift, and go to state 676
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 329
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 449
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 450
    ass_exp	go to state 677
    rightaddrshift	go to state 452
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 678
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 679
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 680
    prime_bool_statement	go to state 198
    identifier	go to state 336
    string	go to state 681
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 682



state 447

    option_struct_list_value  ->  OPEN_BPAR . alg_exp inner_option_list_value CLOSE_BPAR   (rule 242)
    option_struct_list_value  ->  OPEN_BPAR . string inner_option_list_value CLOSE_BPAR   (rule 243)
    option_struct_list_value  ->  OPEN_BPAR . charliteral inner_option_list_value CLOSE_BPAR   (rule 244)
    option_struct_list_value  ->  OPEN_BPAR . list_exp inner_option_list_value CLOSE_BPAR   (rule 245)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 683
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 684
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 685
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    string	go to state 686
    integer	go to state 200
    charliteral	go to state 687
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 448

    option_list_value  ->  OPEN_MPAR . alg_exp inner_option_list_value CLOSE_MPAR   (rule 238)
    option_list_value  ->  OPEN_MPAR . string inner_option_list_value CLOSE_MPAR   (rule 239)
    option_list_value  ->  OPEN_MPAR . charliteral inner_option_list_value CLOSE_MPAR   (rule 240)
    option_list_value  ->  OPEN_MPAR . list_exp inner_option_list_value CLOSE_MPAR   (rule 241)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 683
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 688
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 689
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    string	go to state 690
    integer	go to state 200
    charliteral	go to state 691
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 449

    rightaddrshift  ->  MUL . OPEN_PAR leftaddrshift CLOSE_PAR   (rule 177)
    value_exp  ->  MUL . identifier   (rule 188)
    value_exp  ->  MUL . value_exp   (rule 189)
    value_exp  ->  MUL . list   (rule 190)
    value_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR alg_exp   (rule 192)
    value_exp  ->  MUL . OPEN_PAR alg_exp CLOSE_PAR   (rule 193)

    OPEN_PAR	shift, and go to state 692
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278

    list	go to state 279
    value_exp	go to state 280
    identifier	go to state 281



state 450

    ass_exp  ->  file_statement .   (rule 173)
    prime_bool_statement  ->  file_statement .   (rule 359)

    $   	reduce using rule 173 (ass_exp)
    $   	[reduce using rule 359 (prime_bool_statement)]
    COMMA	reduce using rule 173 (ass_exp)
    COMMA	[reduce using rule 359 (prime_bool_statement)]
    CLOSE_PAR	reduce using rule 173 (ass_exp)
    CLOSE_PAR	[reduce using rule 359 (prime_bool_statement)]
    CLOSE_BPAR	reduce using rule 173 (ass_exp)
    CLOSE_BPAR	[reduce using rule 359 (prime_bool_statement)]
    CLOSE_MPAR	reduce using rule 173 (ass_exp)
    CLOSE_MPAR	[reduce using rule 359 (prime_bool_statement)]
    CHOP	reduce using rule 173 (ass_exp)
    CHOP	[reduce using rule 359 (prime_bool_statement)]
    OR  	reduce using rule 173 (ass_exp)
    OR  	[reduce using rule 359 (prime_bool_statement)]
    PARALLEL	reduce using rule 173 (ass_exp)
    PARALLEL	[reduce using rule 359 (prime_bool_statement)]
    AND 	reduce using rule 173 (ass_exp)
    AND 	[reduce using rule 359 (prime_bool_statement)]
    $default	reduce using rule 173 (ass_exp)



state 451

    display_statement  ->  DISPLAY OPEN_PAR ass_exp . CLOSE_PAR   (rule 455)
    display_statement  ->  DISPLAY OPEN_PAR ass_exp . option_output CLOSE_PAR   (rule 456)

    COMMA	shift, and go to state 693
    CLOSE_PAR	shift, and go to state 694

    CLOSE_PAR	[reduce using rule 457 (option_output)]
    $default	reduce using rule 457 (option_output)

    option_output	go to state 695



state 452

    ass_exp  ->  rightaddrshift .   (rule 176)

    $default	reduce using rule 176 (ass_exp)



state 453

    ass_exp  ->  alg_exp .   (rule 168)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    bool_statement  ->  alg_exp . EQU string   (rule 337)
    bool_statement  ->  alg_exp . NE string   (rule 338)
    bool_statement  ->  alg_exp . EQU POINTERNULL   (rule 341)
    bool_statement  ->  alg_exp . NE POINTERNULL   (rule 342)
    bool_statement  ->  alg_exp . EQU charliteral   (rule 345)
    bool_statement  ->  alg_exp . NE charliteral   (rule 346)
    prime_bool_statement  ->  alg_exp . relation_operator alg_exp   (rule 351)
    prime_bool_statement  ->  alg_exp .   (rule 357)

    NE  	shift, and go to state 403
    EQU 	shift, and go to state 404
    GE  	shift, and go to state 380
    LE  	shift, and go to state 381
    GT  	shift, and go to state 382
    LT  	shift, and go to state 383
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $   	reduce using rule 168 (ass_exp)
    $   	[reduce using rule 357 (prime_bool_statement)]
    COMMA	reduce using rule 168 (ass_exp)
    COMMA	[reduce using rule 357 (prime_bool_statement)]
    CLOSE_PAR	reduce using rule 168 (ass_exp)
    CLOSE_PAR	[reduce using rule 357 (prime_bool_statement)]
    CLOSE_BPAR	reduce using rule 168 (ass_exp)
    CLOSE_BPAR	[reduce using rule 357 (prime_bool_statement)]
    CLOSE_MPAR	reduce using rule 168 (ass_exp)
    CLOSE_MPAR	[reduce using rule 357 (prime_bool_statement)]
    CHOP	reduce using rule 168 (ass_exp)
    CHOP	[reduce using rule 357 (prime_bool_statement)]
    OR  	reduce using rule 168 (ass_exp)
    OR  	[reduce using rule 357 (prime_bool_statement)]
    PARALLEL	reduce using rule 168 (ass_exp)
    PARALLEL	[reduce using rule 357 (prime_bool_statement)]
    AND 	reduce using rule 168 (ass_exp)
    AND 	[reduce using rule 357 (prime_bool_statement)]
    $default	reduce using rule 168 (ass_exp)

    alg_operator	go to state 374
    relation_operator	go to state 405



state 454

    ass_exp  ->  list_exp .   (rule 169)
    list_exp  ->  list_exp . CON list_exp   (rule 234)

    CON 	shift, and go to state 696

    $default	reduce using rule 169 (ass_exp)



state 455

    list_exp  ->  option_list_value .   (rule 235)

    $default	reduce using rule 235 (list_exp)



state 456

    list_exp  ->  option_struct_list_value .   (rule 236)

    $default	reduce using rule 236 (list_exp)



state 457

    ass_exp  ->  bool_statement .   (rule 171)
    bool_statement  ->  bool_statement . AND bool_statement   (rule 348)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 349)

    OR  	shift, and go to state 407
    AND 	shift, and go to state 408

    OR  	[reduce using rule 171 (ass_exp)]
    AND 	[reduce using rule 171 (ass_exp)]
    $default	reduce using rule 171 (ass_exp)



state 458

    ass_exp  ->  string .   (rule 170)
    bool_statement  ->  string . EQU alg_exp   (rule 339)
    bool_statement  ->  string . NE alg_exp   (rule 340)

    NE  	shift, and go to state 409
    EQU 	shift, and go to state 410

    $default	reduce using rule 170 (ass_exp)



state 459

    ass_exp  ->  struct_member_exp .   (rule 172)
    factor  ->  struct_member_exp .   (rule 221)

    $   	reduce using rule 172 (ass_exp)
    $   	[reduce using rule 221 (factor)]
    COMMA	reduce using rule 172 (ass_exp)
    COMMA	[reduce using rule 221 (factor)]
    CLOSE_PAR	reduce using rule 172 (ass_exp)
    CLOSE_PAR	[reduce using rule 221 (factor)]
    CLOSE_BPAR	reduce using rule 172 (ass_exp)
    CLOSE_BPAR	[reduce using rule 221 (factor)]
    CLOSE_MPAR	reduce using rule 172 (ass_exp)
    CLOSE_MPAR	[reduce using rule 221 (factor)]
    CHOP	reduce using rule 172 (ass_exp)
    CHOP	[reduce using rule 221 (factor)]
    OR  	reduce using rule 172 (ass_exp)
    OR  	[reduce using rule 221 (factor)]
    PARALLEL	reduce using rule 172 (ass_exp)
    PARALLEL	[reduce using rule 221 (factor)]
    AND 	reduce using rule 172 (ass_exp)
    AND 	[reduce using rule 221 (factor)]
    $default	reduce using rule 221 (factor)



state 460

    option_function_parameter_list  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 394)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 697



state 461

    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 366)

    $default	reduce using rule 366 (sign_type_define)



state 462

    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 367)

    $default	reduce using rule 367 (sign_type_define)



state 463

    option_function_parameter_list  ->  ID MUL . identifier inner_optional_define_identifier   (rule 377)
    option_function_parameter_list  ->  ID MUL . MUL identifier inner_optional_define_identifier   (rule 378)
    option_function_parameter_list  ->  ID MUL . inner_optional_define_identifier   (rule 384)
    option_function_parameter_list  ->  ID MUL . MUL inner_optional_define_identifier   (rule 385)

    COMMA	shift, and go to state 427
    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 698
    ID  	shift, and go to state 214

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 699
    identifier	go to state 700



state 464

    option_function_parameter_list  ->  ID inner_optional_define_identifier .   (rule 383)

    $default	reduce using rule 383 (option_function_parameter_list)



state 465

    option_function_parameter_list  ->  ID identifier . inner_optional_define_identifier   (rule 376)
    option_function_parameter_list  ->  ID identifier . ARRAY inner_optional_define_identifier   (rule 379)

    ARRAY	shift, and go to state 701
    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 702



state 466

    option_function_parameter_list  ->  STRUCT_TYPE MUL . identifier inner_optional_define_identifier   (rule 373)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL identifier inner_optional_define_identifier   (rule 374)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . inner_optional_define_identifier   (rule 381)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL inner_optional_define_identifier   (rule 382)

    COMMA	shift, and go to state 427
    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 703
    ID  	shift, and go to state 214

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 704
    identifier	go to state 705



state 467

    option_function_parameter_list  ->  STRUCT_TYPE inner_optional_define_identifier .   (rule 380)

    $default	reduce using rule 380 (option_function_parameter_list)



state 468

    option_function_parameter_list  ->  STRUCT_TYPE identifier . inner_optional_define_identifier   (rule 372)
    option_function_parameter_list  ->  STRUCT_TYPE identifier . ARRAY inner_optional_define_identifier   (rule 375)

    ARRAY	shift, and go to state 706
    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 707



state 469

    option_function_parameter_list  ->  all_type_define MUL . identifier ARRAY inner_optional_define_identifier   (rule 387)
    option_function_parameter_list  ->  all_type_define MUL . identifier inner_optional_define_identifier   (rule 391)
    option_function_parameter_list  ->  all_type_define MUL . inner_optional_define_identifier   (rule 392)
    option_function_parameter_list  ->  all_type_define MUL . MUL identifier inner_optional_define_identifier   (rule 393)

    COMMA	shift, and go to state 427
    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 708
    ID  	shift, and go to state 214

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 709
    identifier	go to state 710



state 470

    option_function_parameter_list  ->  all_type_define inner_optional_define_identifier .   (rule 371)

    $default	reduce using rule 371 (option_function_parameter_list)



state 471

    option_function_parameter_list  ->  all_type_define identifier . inner_optional_define_identifier   (rule 370)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY inner_optional_define_identifier   (rule 386)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 388)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 389)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 390)

    ARRAY	shift, and go to state 711
    COMMA	shift, and go to state 427
    OPEN_MPAR	shift, and go to state 712

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 713



state 472

    option_array_declaration  ->  ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR inner_option_array_declaration   (rule 134)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 714
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 473

    alg_exp  ->  IF bool_statement . THEN alg_exp optional_exp_else_statement   (rule 198)
    bool_statement  ->  bool_statement . AND bool_statement   (rule 348)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 349)
    if_statement  ->  IF bool_statement . THEN big_par optional_else_statement   (rule 452)

    THEN	shift, and go to state 715
    OR  	shift, and go to state 407
    AND 	shift, and go to state 408



state 474

    struct_identifier  ->  STRUCT . ID   (rule 99)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 106)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 108)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)

    ID  	shift, and go to state 202
    STRUCT_TYPE	shift, and go to state 668



state 475

    type_define  ->  INTDECLARATION .   (rule 116)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 716

    MUL 	[reduce using rule 116 (type_define)]
    $default	reduce using rule 116 (type_define)



state 476

    type_define  ->  CHARDECLARATION .   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 717

    MUL 	[reduce using rule 118 (type_define)]
    $default	reduce using rule 118 (type_define)



state 477

    type_define  ->  FLOATDECLARATION .   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 272)

    CLOSE_PAR	shift, and go to state 593
    MUL 	shift, and go to state 718

    MUL 	[reduce using rule 117 (type_define)]
    $default	reduce using rule 117 (type_define)



state 478

    sign_declaration  ->  UNSIGNED . declaration   (rule 102)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)

    STRUCT	shift, and go to state 271
    UNION	shift, and go to state 272
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 719
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 720
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 273
    STRUCT_TYPE	shift, and go to state 83

    declaration	go to state 274
    type_define	go to state 92



state 479

    sign_declaration  ->  SIGNED . declaration   (rule 101)
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)

    STRUCT	shift, and go to state 271
    UNION	shift, and go to state 272
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 721
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 722
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 273
    STRUCT_TYPE	shift, and go to state 83

    declaration	go to state 275
    type_define	go to state 92



state 480

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    factor  ->  OPEN_PAR alg_exp . CLOSE_PAR   (rule 216)
    prime_bool_statement  ->  alg_exp . relation_operator alg_exp   (rule 351)
    prime_bool_statement  ->  alg_exp .   (rule 357)

    CLOSE_PAR	shift, and go to state 604
    NE  	shift, and go to state 378
    EQU 	shift, and go to state 379
    GE  	shift, and go to state 380
    LE  	shift, and go to state 381
    GT  	shift, and go to state 382
    LT  	shift, and go to state 383
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    CLOSE_PAR	[reduce using rule 357 (prime_bool_statement)]
    $default	reduce using rule 357 (prime_bool_statement)

    alg_operator	go to state 374
    relation_operator	go to state 405



state 481

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 60)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 439)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 440)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 441)

    CLOSE_PAR	shift, and go to state 723
    OR  	shift, and go to state 496
    AND 	shift, and go to state 497



state 482

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 113)
    value_exp  ->  MUL . identifier   (rule 188)
    value_exp  ->  MUL . value_exp   (rule 189)
    value_exp  ->  MUL . list   (rule 190)
    value_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR alg_exp   (rule 192)
    value_exp  ->  MUL . OPEN_PAR alg_exp CLOSE_PAR   (rule 193)

    OPEN_PAR	shift, and go to state 277
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278

    list	go to state 279
    value_exp	go to state 280
    identifier	go to state 724



state 483

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)
    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 178)
    identifier  ->  ID .   (rule 426)

    OPEN_MPAR	shift, and go to state 725

    $default	reduce using rule 426 (identifier)



state 484

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 112)
    value_exp  ->  MUL identifier .   (rule 188)

    CLOSE_PAR	shift, and go to state 726

    CLOSE_PAR	[reduce using rule 188 (value_exp)]
    $default	reduce using rule 188 (value_exp)



state 485

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    INTDECLARATION	shift, and go to state 324
    CHARDECLARATION	shift, and go to state 325
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 327
    OPEN_PAR	shift, and go to state 727
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 329
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 241
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 480
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    prime_bool_statement	go to state 252
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    imply_pre	go to state 728
    struct_member_exp	go to state 337



state 486

    prime_bool_statement  ->  NEGATION prime_bool_statement .   (rule 352)
    imply_pre  ->  prime_bool_statement .   (rule 437)

    CLOSE_PAR	reduce using rule 352 (prime_bool_statement)
    CLOSE_PAR	[reduce using rule 437 (imply_pre)]
    OR  	reduce using rule 352 (prime_bool_statement)
    OR  	[reduce using rule 437 (imply_pre)]
    AND 	reduce using rule 352 (prime_bool_statement)
    AND 	[reduce using rule 437 (imply_pre)]
    $default	reduce using rule 352 (prime_bool_statement)



state 487

    imply_pre  ->  NEGATION imply_pre .   (rule 438)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 439)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 440)


    $default	reduce using rule 438 (imply_pre)



state 488

    statement  ->  OPEN_PAR statement CLOSE_PAR .   (rule 78)

    $default	reduce using rule 78 (statement)



state 489

    CYLINDER_STATEMENT  ->  OPEN_PAR OVER_STATEMENT CLOSE_PAR .   (rule 84)

    $default	reduce using rule 84 (CYLINDER_STATEMENT)



state 490

    ass_ident  ->  OPEN_PAR ass_ident CLOSE_PAR .   (rule 150)

    $default	reduce using rule 150 (ass_ident)



state 491

    list  ->  OPEN_PAR list CLOSE_PAR .   (rule 184)

    $default	reduce using rule 184 (list)



state 492

    value_exp  ->  OPEN_PAR value_exp CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR value_exp CLOSE_PAR .   (rule 194)

    OPEN_MPAR	shift, and go to state 729

    $default	reduce using rule 194 (value_exp)



state 493

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY list option_struct_member_exp   (rule 479)

    IMPLY	shift, and go to state 730



state 494

    identifier  ->  OPEN_PAR identifier CLOSE_PAR .   (rule 427)

    $default	reduce using rule 427 (identifier)



state 495

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 60)

    IMPLY	shift, and go to state 731



state 496

    imply_pre  ->  imply_pre OR . imply_pre   (rule 440)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 121
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 485
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 241
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 249
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    prime_bool_statement	go to state 252
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    imply_pre	go to state 732
    struct_member_exp	go to state 171



state 497

    imply_pre  ->  imply_pre AND . imply_pre   (rule 439)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 121
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 485
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 241
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 249
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    prime_bool_statement	go to state 252
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    imply_pre	go to state 733
    struct_member_exp	go to state 171



state 498

    struct_member_exp  ->  OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 483)

    $default	reduce using rule 483 (struct_member_exp)



state 499

    optional_projection  ->  COMMA . statement optional_projection   (rule 436)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 734
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114



state 500

    statement  ->  OPEN_BPAR statement CLOSE_BPAR . PROJECTION big_par   (rule 63)
    big_par  ->  OPEN_BPAR statement CLOSE_BPAR .   (rule 422)

    PROJECTION	shift, and go to state 735

    $default	reduce using rule 422 (big_par)



state 501

    statement  ->  OPEN_BPAR statement optional_projection . CLOSE_BPAR PROJECTION big_par   (rule 62)

    CLOSE_BPAR	shift, and go to state 736



state 502

    statement  ->  FUNCTION ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 65)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 224
    UNSIGNED	shift, and go to state 225
    ID  	shift, and go to state 226
    STRUCT_TYPE	shift, and go to state 227

    $default	reduce using rule 395 (option_function_parameter_list)

    type_define	go to state 228
    sign_type_define	go to state 229
    all_type_define	go to state 230
    option_function_parameter_list	go to state 737



state 503

    statement  ->  SEND OPEN_PAR ass_ident . COMMA ass_exp CLOSE_PAR   (rule 72)

    COMMA	shift, and go to state 738



state 504

    statement  ->  RECEIVE OPEN_PAR ass_ident . COMMA identifier CLOSE_PAR   (rule 74)

    COMMA	shift, and go to state 739



state 505

    statement  ->  PROCESS ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 66)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 224
    UNSIGNED	shift, and go to state 225
    ID  	shift, and go to state 226
    STRUCT_TYPE	shift, and go to state 227

    $default	reduce using rule 395 (option_function_parameter_list)

    type_define	go to state 228
    sign_type_define	go to state 229
    all_type_define	go to state 230
    option_function_parameter_list	go to state 740



state 506

    statement  ->  CHANNEL identifier OPEN_PAR . integer CLOSE_PAR   (rule 71)

    INTEGER	shift, and go to state 152

    integer	go to state 741



state 507

    statement  ->  PUT OPEN_PAR ass_ident . COMMA ass_exp CLOSE_PAR   (rule 73)

    COMMA	shift, and go to state 742



state 508

    statement  ->  GET OPEN_PAR ass_ident . COMMA identifier CLOSE_PAR   (rule 75)

    COMMA	shift, and go to state 743



state 509

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    OPEN_PAR	shift, and go to state 621
    ADDRESS	shift, and go to state 148
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278

    list	go to state 622
    value_exp	go to state 623
    address_exp	go to state 533
    identifier	go to state 625
    struct_member_exp	go to state 626



state 510

    str_func_parameter  ->  list .   (rule 307)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 468)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 471)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 474)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 478)

    DOT 	shift, and go to state 310
    IMPLY	shift, and go to state 312

    $default	reduce using rule 307 (str_func_parameter)



state 511

    str_func_parameter  ->  value_exp .   (rule 308)
    struct_member_exp  ->  value_exp . DOT identifier option_struct_member_exp   (rule 469)
    struct_member_exp  ->  value_exp . DOT list option_struct_member_exp   (rule 472)
    struct_member_exp  ->  value_exp . IMPLY identifier option_struct_member_exp   (rule 476)
    struct_member_exp  ->  value_exp . IMPLY list option_struct_member_exp   (rule 482)

    DOT 	shift, and go to state 313
    IMPLY	shift, and go to state 314

    $default	reduce using rule 308 (str_func_parameter)



state 512

    str_func_parameter  ->  String_Function .   (rule 310)

    $default	reduce using rule 310 (str_func_parameter)



state 513

    String_Function_head  ->  STRFUNCHEAD OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 300)

    CLOSE_PAR	shift, and go to state 744



state 514

    str_func_parameter  ->  identifier .   (rule 306)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 467)
    struct_member_exp  ->  identifier . DOT list option_struct_member_exp   (rule 470)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 473)
    struct_member_exp  ->  identifier . IMPLY list option_struct_member_exp   (rule 477)
    struct_member_exp  ->  identifier . DOT function   (rule 480)
    struct_member_exp  ->  identifier . IMPLY function   (rule 481)

    DOT 	shift, and go to state 316
    IMPLY	shift, and go to state 317

    $default	reduce using rule 306 (str_func_parameter)



state 515

    str_func_parameter  ->  string .   (rule 309)

    $default	reduce using rule 309 (str_func_parameter)



state 516

    str_func_parameter  ->  struct_member_exp .   (rule 311)

    $default	reduce using rule 311 (str_func_parameter)



state 517

    String_Function_tail  ->  STRFUNCTAIL OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 301)

    CLOSE_PAR	shift, and go to state 745



state 518

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter . COMMA str_func_parameter CLOSE_PAR   (rule 302)

    COMMA	shift, and go to state 746



state 519

    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter . COMMA str_func_parameter CLOSE_PAR   (rule 303)

    COMMA	shift, and go to state 747



state 520

    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter . COMMA str_func_parameter CLOSE_PAR   (rule 304)

    COMMA	shift, and go to state 748



state 521

    String_Function_len  ->  STRFUNCLEN OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 305)

    CLOSE_PAR	shift, and go to state 749



state 522

    statement  ->  SYSTEM OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 69)

    CLOSE_PAR	shift, and go to state 750



state 523

    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 106)

    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 296
    ID  	shift, and go to state 297

    option_identifier_array_declaration	go to state 412
    identifier	go to state 299



state 524

    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 107)

    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 296
    ID  	shift, and go to state 297

    option_identifier_array_declaration	go to state 414
    identifier	go to state 299



state 525

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 112)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 113)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)

    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 751
    ID  	shift, and go to state 752

    identifier	go to state 753



state 526

    statement  ->  FREE OPEN_PAR identifier . CLOSE_PAR   (rule 68)

    CLOSE_PAR	shift, and go to state 754



state 527

    value_exp  ->  MUL OPEN_PAR alg_exp . CLOSE_PAR   (rule 193)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    CLOSE_PAR	shift, and go to state 755
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374



state 528

    value_exp  ->  MUL OPEN_PAR all_type_define . MUL CLOSE_PAR alg_exp   (rule 192)

    MUL 	shift, and go to state 756



state 529

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 60)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 78)
    CYLINDER_STATEMENT  ->  OPEN_PAR . OVER_STATEMENT CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 112)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 113)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)
    ass_ident  ->  OPEN_PAR . ass_ident CLOSE_PAR   (rule 150)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    error	shift, and go to state 22
    IF  	shift, and go to state 234
    EMPTY	shift, and go to state 235
    AWAIT	shift, and go to state 25
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 236
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 237
    MY_FALSE	shift, and go to state 238
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 757
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 758
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 759
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 239
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    SYSTEM	shift, and go to state 68
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 760
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 240
    BNE 	shift, and go to state 150
    NEXT	shift, and go to state 73
    NEGATION	shift, and go to state 241
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    statement	go to state 242
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 243
    function	go to state 244
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 245
    ass_statement	go to state 94
    ass_ident	go to state 246
    leftaddrshift	go to state 96
    list	go to state 247
    value_exp	go to state 248
    alg_exp	go to state 249
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 251
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    prime_bool_statement	go to state 252
    big_par	go to state 106
    identifier	go to state 253
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    imply_pre	go to state 254
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 255



state 530

    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  NEXT OPEN_PAR statement . CLOSE_PAR   (rule 43)
    statement  ->  statement . PARALLEL statement   (rule 59)

    CLOSE_PAR	shift, and go to state 761
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303



state 531

    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 97)
    ass_ident  ->  list .   (rule 148)
    list  ->  OPEN_PAR list . CLOSE_PAR   (rule 184)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 468)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 471)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 474)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 478)

    DOT 	shift, and go to state 310
    OPEN_PAR	shift, and go to state 311
    CLOSE_PAR	shift, and go to state 491
    IMPLY	shift, and go to state 312

    CLOSE_PAR	[reduce using rule 148 (ass_ident)]
    $default	reduce using rule 148 (ass_ident)



state 532

    ass_ident  ->  value_exp .   (rule 149)
    value_exp  ->  OPEN_PAR value_exp . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR value_exp . CLOSE_PAR   (rule 194)
    struct_member_exp  ->  value_exp . DOT identifier option_struct_member_exp   (rule 469)
    struct_member_exp  ->  value_exp . DOT list option_struct_member_exp   (rule 472)
    struct_member_exp  ->  value_exp . IMPLY identifier option_struct_member_exp   (rule 476)
    struct_member_exp  ->  value_exp . IMPLY list option_struct_member_exp   (rule 482)

    DOT 	shift, and go to state 313
    CLOSE_PAR	shift, and go to state 492
    IMPLY	shift, and go to state 314

    CLOSE_PAR	[reduce using rule 149 (ass_ident)]
    $default	reduce using rule 149 (ass_ident)



state 533

    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)

    CLOSE_PAR	shift, and go to state 493



state 534

    ass_ident  ->  identifier .   (rule 146)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 427)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 467)
    struct_member_exp  ->  identifier . DOT list option_struct_member_exp   (rule 470)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 473)
    struct_member_exp  ->  identifier . IMPLY list option_struct_member_exp   (rule 477)
    struct_member_exp  ->  identifier . DOT function   (rule 480)
    struct_member_exp  ->  identifier . IMPLY function   (rule 481)

    DOT 	shift, and go to state 316
    CLOSE_PAR	shift, and go to state 494
    IMPLY	shift, and go to state 317

    CLOSE_PAR	[reduce using rule 146 (ass_ident)]
    $default	reduce using rule 146 (ass_ident)



state 535

    ass_ident  ->  struct_member_exp .   (rule 147)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 483)

    CLOSE_PAR	shift, and go to state 498

    CLOSE_PAR	[reduce using rule 147 (ass_ident)]
    $default	reduce using rule 147 (ass_ident)



state 536

    statement  ->  LENGTH OPEN_PAR alg_exp . CLOSE_PAR   (rule 53)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    CLOSE_PAR	shift, and go to state 762
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374



state 537

    request_statement  ->  REQUEST OPEN_PAR list . CLOSE_PAR   (rule 461)
    request_statement  ->  REQUEST OPEN_PAR list . option_input CLOSE_PAR   (rule 462)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 468)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 471)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 474)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 478)

    DOT 	shift, and go to state 310
    COMMA	shift, and go to state 763
    CLOSE_PAR	shift, and go to state 764
    IMPLY	shift, and go to state 312

    CLOSE_PAR	[reduce using rule 464 (option_input)]
    $default	reduce using rule 464 (option_input)

    option_input	go to state 765



state 538

    request_statement  ->  REQUEST OPEN_PAR identifier . CLOSE_PAR   (rule 459)
    request_statement  ->  REQUEST OPEN_PAR identifier . option_input CLOSE_PAR   (rule 460)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 467)
    struct_member_exp  ->  identifier . DOT list option_struct_member_exp   (rule 470)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 473)
    struct_member_exp  ->  identifier . IMPLY list option_struct_member_exp   (rule 477)
    struct_member_exp  ->  identifier . DOT function   (rule 480)
    struct_member_exp  ->  identifier . IMPLY function   (rule 481)

    DOT 	shift, and go to state 316
    COMMA	shift, and go to state 763
    CLOSE_PAR	shift, and go to state 766
    IMPLY	shift, and go to state 317

    CLOSE_PAR	[reduce using rule 464 (option_input)]
    $default	reduce using rule 464 (option_input)

    option_input	go to state 767



state 539

    request_statement  ->  REQUEST OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 463)

    CLOSE_PAR	shift, and go to state 768



state 540

    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  FINAL OPEN_PAR statement . CLOSE_PAR   (rule 58)
    statement  ->  statement . PARALLEL statement   (rule 59)

    CLOSE_PAR	shift, and go to state 769
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303



state 541

    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  KEEP OPEN_PAR statement . CLOSE_PAR   (rule 45)
    statement  ->  statement . PARALLEL statement   (rule 59)

    CLOSE_PAR	shift, and go to state 770
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303



state 542

    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  ALWAYS OPEN_PAR statement . CLOSE_PAR   (rule 46)
    statement  ->  statement . PARALLEL statement   (rule 59)

    CLOSE_PAR	shift, and go to state 771
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303



state 543

    statement  ->  HALT OPEN_PAR bool_statement . CLOSE_PAR   (rule 47)
    bool_statement  ->  bool_statement . AND bool_statement   (rule 348)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 349)

    CLOSE_PAR	shift, and go to state 772
    OR  	shift, and go to state 407
    AND 	shift, and go to state 408



state 544

    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  W_NEXT OPEN_PAR statement . CLOSE_PAR   (rule 44)
    statement  ->  statement . PARALLEL statement   (rule 59)

    CLOSE_PAR	shift, and go to state 773
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303



state 545

    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  PREFIX OPEN_PAR statement . CLOSE_PAR   (rule 35)
    statement  ->  statement . PARALLEL statement   (rule 59)

    CLOSE_PAR	shift, and go to state 774
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303



state 546

    address_exp  ->  ADDRESS . identifier   (rule 252)
    address_exp  ->  ADDRESS . list   (rule 253)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 254)
    address_exp  ->  ADDRESS . address_exp   (rule 255)
    option_function_identifier  ->  ADDRESS . error   (rule 417)

    error	shift, and go to state 775
    OPEN_PAR	shift, and go to state 363
    ADDRESS	shift, and go to state 148
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278

    list	go to state 364
    value_exp	go to state 365
    address_exp	go to state 366
    identifier	go to state 367
    struct_member_exp	go to state 368



state 547

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 96)
    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 178)
    option_function_identifier  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 415)
    identifier  ->  ID .   (rule 426)

    OPEN_PAR	shift, and go to state 776
    OPEN_MPAR	shift, and go to state 295

    $default	reduce using rule 426 (identifier)



state 548

    option_function_identifier  ->  ass_exp . inner_option_function_identifier   (rule 414)

    COMMA	shift, and go to state 777

    $default	reduce using rule 420 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 778



state 549

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 96)

    CLOSE_PAR	shift, and go to state 779



state 550

    list  ->  ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 178)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 780
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 781
    alg_operator	go to state 374



state 551

    option_identifier_array_declaration  ->  MUL option_identifier_array_declaration .   (rule 130)

    $default	reduce using rule 130 (option_identifier_array_declaration)



state 552

    option_identifier_array_declaration  ->  ID ARRAY . ASS_EQU list_exp inner_option_identifier_array_declaration   (rule 126)
    option_identifier_array_declaration  ->  ID ARRAY . ASS_EQU string inner_option_identifier_array_declaration   (rule 127)

    ASS_EQU	shift, and go to state 782



state 553

    option_identifier_array_declaration  ->  ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 123)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR ASS_EQU list_exp inner_option_identifier_array_declaration   (rule 128)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR ASS_EQU string inner_option_identifier_array_declaration   (rule 129)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 783
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 554

    inner_option_identifier_array_declaration  ->  COMMA . option_identifier_array_declaration   (rule 131)
    inner_option_identifier_array_declaration  ->  COMMA . error   (rule 132)

    error	shift, and go to state 784
    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 296
    ID  	shift, and go to state 297

    option_identifier_array_declaration	go to state 785
    identifier	go to state 299



state 555

    option_identifier_array_declaration  ->  identifier ASS_EQU . ass_exp inner_option_identifier_array_declaration   (rule 124)
    option_identifier_array_declaration  ->  identifier ASS_EQU . string inner_option_identifier_array_declaration   (rule 125)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 446
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 449
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 450
    ass_exp	go to state 786
    rightaddrshift	go to state 452
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 453
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 454
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 457
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 787
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 459



state 556

    option_identifier_array_declaration  ->  identifier inner_option_identifier_array_declaration .   (rule 122)

    $default	reduce using rule 122 (option_identifier_array_declaration)



state 557

    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement CHOP statement .   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)

    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303

    $default	reduce using rule 34 (statement)



state 558

    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement OR statement .   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)

    AND 	shift, and go to state 303

    $default	reduce using rule 33 (statement)



state 559

    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)
    statement  ->  statement PARALLEL statement .   (rule 59)

    AND 	shift, and go to state 303

    $default	reduce using rule 59 (statement)



state 560

    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement AND statement .   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)


    $default	reduce using rule 32 (statement)



state 561

    CYLINDER_STATEMENT  ->  OPEN_PAR . OVER_STATEMENT CLOSE_PAR   (rule 84)

    error	shift, and go to state 22
    OPEN_BPAR	shift, and go to state 443

    OVER_STATEMENT	go to state 788
    big_par	go to state 106



state 562

    CYLINDER_STATEMENT  ->  CYLINDER_STATEMENT . CYLINDER CYLINDER_STATEMENT   (rule 82)
    CYLINDER_STATEMENT  ->  CYLINDER_STATEMENT CYLINDER CYLINDER_STATEMENT .   (rule 82)


    $default	reduce using rule 82 (CYLINDER_STATEMENT)



state 563

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration . CLOSE_BPAR   (rule 98)

    CLOSE_BPAR	shift, and go to state 789



state 564

    option_struct_declaration  ->  sign_declaration .   (rule 80)
    option_struct_declaration  ->  sign_declaration . AND option_struct_declaration   (rule 81)

    AND 	shift, and go to state 790

    $default	reduce using rule 80 (option_struct_declaration)



state 565

    ass_statement  ->  ass_ident assign_operator ass_exp .   (rule 145)

    $default	reduce using rule 145 (ass_statement)



state 566

    struct_member_exp  ->  list DOT list . option_struct_member_exp   (rule 471)

    DOT 	shift, and go to state 791
    IMPLY	shift, and go to state 792

    DOT 	[reduce using rule 484 (option_struct_member_exp)]
    IMPLY	[reduce using rule 484 (option_struct_member_exp)]
    $default	reduce using rule 484 (option_struct_member_exp)

    option_struct_member_exp	go to state 793



state 567

    struct_member_exp  ->  list DOT identifier . option_struct_member_exp   (rule 468)

    DOT 	shift, and go to state 791
    IMPLY	shift, and go to state 792

    DOT 	[reduce using rule 484 (option_struct_member_exp)]
    IMPLY	[reduce using rule 484 (option_struct_member_exp)]
    $default	reduce using rule 484 (option_struct_member_exp)

    option_struct_member_exp	go to state 794



state 568

    function  ->  list OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 97)

    CLOSE_PAR	shift, and go to state 795



state 569

    struct_member_exp  ->  list IMPLY list . option_struct_member_exp   (rule 478)

    DOT 	shift, and go to state 791
    IMPLY	shift, and go to state 792

    DOT 	[reduce using rule 484 (option_struct_member_exp)]
    IMPLY	[reduce using rule 484 (option_struct_member_exp)]
    $default	reduce using rule 484 (option_struct_member_exp)

    option_struct_member_exp	go to state 796



state 570

    struct_member_exp  ->  list IMPLY identifier . option_struct_member_exp   (rule 474)

    DOT 	shift, and go to state 791
    IMPLY	shift, and go to state 792

    DOT 	[reduce using rule 484 (option_struct_member_exp)]
    IMPLY	[reduce using rule 484 (option_struct_member_exp)]
    $default	reduce using rule 484 (option_struct_member_exp)

    option_struct_member_exp	go to state 797



state 571

    struct_member_exp  ->  value_exp DOT list . option_struct_member_exp   (rule 472)

    DOT 	shift, and go to state 791
    IMPLY	shift, and go to state 792

    DOT 	[reduce using rule 484 (option_struct_member_exp)]
    IMPLY	[reduce using rule 484 (option_struct_member_exp)]
    $default	reduce using rule 484 (option_struct_member_exp)

    option_struct_member_exp	go to state 798



state 572

    struct_member_exp  ->  value_exp DOT identifier . option_struct_member_exp   (rule 469)

    DOT 	shift, and go to state 791
    IMPLY	shift, and go to state 792

    DOT 	[reduce using rule 484 (option_struct_member_exp)]
    IMPLY	[reduce using rule 484 (option_struct_member_exp)]
    $default	reduce using rule 484 (option_struct_member_exp)

    option_struct_member_exp	go to state 799



state 573

    struct_member_exp  ->  value_exp IMPLY list . option_struct_member_exp   (rule 482)

    DOT 	shift, and go to state 791
    IMPLY	shift, and go to state 792

    DOT 	[reduce using rule 484 (option_struct_member_exp)]
    IMPLY	[reduce using rule 484 (option_struct_member_exp)]
    $default	reduce using rule 484 (option_struct_member_exp)

    option_struct_member_exp	go to state 800



state 574

    struct_member_exp  ->  value_exp IMPLY identifier . option_struct_member_exp   (rule 476)

    DOT 	shift, and go to state 791
    IMPLY	shift, and go to state 792

    DOT 	[reduce using rule 484 (option_struct_member_exp)]
    IMPLY	[reduce using rule 484 (option_struct_member_exp)]
    $default	reduce using rule 484 (option_struct_member_exp)

    option_struct_member_exp	go to state 801



state 575

    OVER_STATEMENT  ->  big_par OVER OPEN_PAR . INTERVAL_STATEMENT CLOSE_PAR   (rule 85)
    OVER_STATEMENT  ->  big_par OVER OPEN_PAR . CLOSE_PAR   (rule 86)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 802
    CLOSE_PAR	shift, and go to state 803
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    INTERVAL_STATEMENT	go to state 804
    SIG_INTERVAL	go to state 805
    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 806
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 576

    struct_member_exp  ->  identifier DOT function .   (rule 480)

    $default	reduce using rule 480 (struct_member_exp)



state 577

    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 97)
    struct_member_exp  ->  identifier DOT list . option_struct_member_exp   (rule 470)

    DOT 	shift, and go to state 791
    OPEN_PAR	shift, and go to state 311
    IMPLY	shift, and go to state 792

    DOT 	[reduce using rule 484 (option_struct_member_exp)]
    IMPLY	[reduce using rule 484 (option_struct_member_exp)]
    $default	reduce using rule 484 (option_struct_member_exp)

    option_struct_member_exp	go to state 807



state 578

    struct_member_exp  ->  identifier DOT identifier . option_struct_member_exp   (rule 467)

    DOT 	shift, and go to state 791
    IMPLY	shift, and go to state 792

    DOT 	[reduce using rule 484 (option_struct_member_exp)]
    IMPLY	[reduce using rule 484 (option_struct_member_exp)]
    $default	reduce using rule 484 (option_struct_member_exp)

    option_struct_member_exp	go to state 808



state 579

    struct_member_exp  ->  identifier IMPLY function .   (rule 481)

    $default	reduce using rule 481 (struct_member_exp)



state 580

    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 97)
    struct_member_exp  ->  identifier IMPLY list . option_struct_member_exp   (rule 477)

    DOT 	shift, and go to state 791
    OPEN_PAR	shift, and go to state 311
    IMPLY	shift, and go to state 792

    DOT 	[reduce using rule 484 (option_struct_member_exp)]
    IMPLY	[reduce using rule 484 (option_struct_member_exp)]
    $default	reduce using rule 484 (option_struct_member_exp)

    option_struct_member_exp	go to state 809



state 581

    struct_member_exp  ->  identifier IMPLY identifier . option_struct_member_exp   (rule 473)

    DOT 	shift, and go to state 791
    IMPLY	shift, and go to state 792

    DOT 	[reduce using rule 484 (option_struct_member_exp)]
    IMPLY	[reduce using rule 484 (option_struct_member_exp)]
    $default	reduce using rule 484 (option_struct_member_exp)

    option_struct_member_exp	go to state 810



state 582

    prime_bool_statement  ->  NEGATION . prime_bool_statement   (rule 352)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 121
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 582
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 249
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    prime_bool_statement	go to state 811
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 583

    complexProposition  ->  DEFINE ID COLON prime_bool_statement .   (rule 26)

    $default	reduce using rule 26 (complexProposition)



state 584

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)
    poptional_projection  ->  COMMA complexProposition . poptional_projection   (rule 29)

    COMMA	shift, and go to state 320
    CHOP	shift, and go to state 179
    IFF 	shift, and go to state 180
    PROPIMPLY	shift, and go to state 181
    OR  	shift, and go to state 182
    AND 	shift, and go to state 183
    CHOPSTAR	shift, and go to state 184

    $default	reduce using rule 30 (poptional_projection)

    poptional_projection	go to state 812



state 585

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR . PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 24)

    PROJECTION	shift, and go to state 813



state 586

    alg_exp  ->  IF bool_statement THEN . alg_exp optional_exp_else_statement   (rule 198)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 814
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 587

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 278)

    MUL 	shift, and go to state 815



state 588

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 257)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 816
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 589

    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 818
    MUL 	shift, and go to state 819



state 590

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 259)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 820
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 591

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 821
    MUL 	shift, and go to state 822



state 592

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 275)

    CLOSE_PAR	shift, and go to state 823
    MUL 	shift, and go to state 824



state 593

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 258)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 825
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 594

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 272)

    CLOSE_PAR	shift, and go to state 826
    MUL 	shift, and go to state 827



state 595

    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 828



state 596

    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 829



state 597

    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 272)

    CLOSE_PAR	shift, and go to state 593
    MUL 	shift, and go to state 830



state 598

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)

    INTDECLARATION	shift, and go to state 831
    CHARDECLARATION	shift, and go to state 832



state 599

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 271)

    CLOSE_PAR	shift, and go to state 833
    MUL 	shift, and go to state 834



state 600

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 835
    MUL 	shift, and go to state 836



state 601

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 260)

    CLOSE_PAR	shift, and go to state 837



state 602

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 261)

    CLOSE_PAR	shift, and go to state 838



state 603

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 279)

    CLOSE_PAR	shift, and go to state 839
    MUL 	shift, and go to state 840



state 604

    factor  ->  OPEN_PAR alg_exp CLOSE_PAR .   (rule 216)

    $default	reduce using rule 216 (factor)



state 605

    address_exp  ->  OPEN_PAR address_exp CLOSE_PAR .   (rule 256)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY list option_struct_member_exp   (rule 479)

    IMPLY	shift, and go to state 730

    IMPLY	[reduce using rule 256 (address_exp)]
    $default	reduce using rule 256 (address_exp)



state 606

    all_sizeof_type  ->  STRUCT . STRUCT_TYPE MUL   (rule 288)

    STRUCT_TYPE	shift, and go to state 841



state 607

    type_define  ->  INTDECLARATION .   (rule 116)
    all_sizeof_type  ->  INTDECLARATION . MUL   (rule 283)

    MUL 	shift, and go to state 842

    $default	reduce using rule 116 (type_define)



state 608

    type_define  ->  CHARDECLARATION .   (rule 118)
    all_sizeof_type  ->  CHARDECLARATION . MUL   (rule 285)

    MUL 	shift, and go to state 843

    $default	reduce using rule 118 (type_define)



state 609

    type_define  ->  FLOATDECLARATION .   (rule 117)
    all_sizeof_type  ->  FLOATDECLARATION . MUL   (rule 284)

    MUL 	shift, and go to state 844

    $default	reduce using rule 117 (type_define)



state 610

    all_sizeof_type  ->  UNSIGNED . INTDECLARATION MUL   (rule 286)
    all_sizeof_type  ->  UNSIGNED . CHARDECLARATION MUL   (rule 287)
    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 366)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 367)

    INTDECLARATION	shift, and go to state 845
    CHARDECLARATION	shift, and go to state 846



state 611

    all_sizeof_type  ->  STRUCT_TYPE . MUL   (rule 289)
    size_of  ->  SIZEOF OPEN_PAR STRUCT_TYPE . CLOSE_PAR   (rule 292)

    CLOSE_PAR	shift, and go to state 847
    MUL 	shift, and go to state 848



state 612

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    size_of  ->  SIZEOF OPEN_PAR alg_exp . CLOSE_PAR   (rule 290)

    CLOSE_PAR	shift, and go to state 849
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374



state 613

    size_of  ->  SIZEOF OPEN_PAR all_sizeof_type . CLOSE_PAR   (rule 291)

    CLOSE_PAR	shift, and go to state 850



state 614

    all_sizeof_type  ->  all_type_define .   (rule 282)

    $default	reduce using rule 282 (all_sizeof_type)



state 615

    size_of  ->  SIZEOF OPEN_PAR string . CLOSE_PAR   (rule 293)

    CLOSE_PAR	shift, and go to state 851



state 616

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  ATAN2 OPEN_PAR alg_exp . COMMA alg_exp CLOSE_PAR   (rule 328)

    COMMA	shift, and go to state 852
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374



state 617

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  POW OPEN_PAR alg_exp . COMMA alg_exp CLOSE_PAR   (rule 329)

    COMMA	shift, and go to state 853
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374



state 618

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  FMOD OPEN_PAR alg_exp . COMMA alg_exp CLOSE_PAR   (rule 330)

    COMMA	shift, and go to state 854
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374



state 619

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  MODF OPEN_PAR alg_exp . COMMA alg_exp CLOSE_PAR   (rule 331)

    COMMA	shift, and go to state 855
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374



state 620

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  LDEXP OPEN_PAR alg_exp . COMMA alg_exp CLOSE_PAR   (rule 332)

    COMMA	shift, and go to state 856
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374



state 621

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    INTDECLARATION	shift, and go to state 857
    CHARDECLARATION	shift, and go to state 858
    FLOATDECLARATION	shift, and go to state 859
    OPEN_PAR	shift, and go to state 621
    UNSIGNED	shift, and go to state 860
    ADDRESS	shift, and go to state 148
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278

    list	go to state 622
    value_exp	go to state 623
    address_exp	go to state 624
    identifier	go to state 625
    struct_member_exp	go to state 626



state 622

    list  ->  OPEN_PAR list . CLOSE_PAR   (rule 184)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 468)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 471)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 474)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 478)

    DOT 	shift, and go to state 310
    CLOSE_PAR	shift, and go to state 491
    IMPLY	shift, and go to state 312



state 623

    value_exp  ->  OPEN_PAR value_exp . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR value_exp . CLOSE_PAR   (rule 194)
    struct_member_exp  ->  value_exp . DOT identifier option_struct_member_exp   (rule 469)
    struct_member_exp  ->  value_exp . DOT list option_struct_member_exp   (rule 472)
    struct_member_exp  ->  value_exp . IMPLY identifier option_struct_member_exp   (rule 476)
    struct_member_exp  ->  value_exp . IMPLY list option_struct_member_exp   (rule 482)

    DOT 	shift, and go to state 313
    CLOSE_PAR	shift, and go to state 492
    IMPLY	shift, and go to state 314



state 624

    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 256)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)

    CLOSE_PAR	shift, and go to state 605



state 625

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 427)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 467)
    struct_member_exp  ->  identifier . DOT list option_struct_member_exp   (rule 470)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 473)
    struct_member_exp  ->  identifier . IMPLY list option_struct_member_exp   (rule 477)
    struct_member_exp  ->  identifier . DOT function   (rule 480)
    struct_member_exp  ->  identifier . IMPLY function   (rule 481)

    DOT 	shift, and go to state 316
    CLOSE_PAR	shift, and go to state 494
    IMPLY	shift, and go to state 317



state 626

    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 483)

    CLOSE_PAR	shift, and go to state 498



state 627

    pre_next  ->  PREVIOUS OPEN_PAR identifier . CLOSE_PAR   (rule 223)

    CLOSE_PAR	shift, and go to state 861



state 628

    alg_exp  ->  alg_exp alg_operator simple_alg_exp .   (rule 197)
    simple_alg_exp  ->  simple_alg_exp . mul_operator factor   (rule 204)

    INTER_OR	shift, and go to state 375
    CON 	shift, and go to state 376
    ADDRESS	shift, and go to state 377
    LST 	shift, and go to state 384
    RST 	shift, and go to state 385
    MUL 	shift, and go to state 386
    DIV 	shift, and go to state 387
    MOD 	shift, and go to state 388

    INTER_OR	[reduce using rule 197 (alg_exp)]
    CON 	[reduce using rule 197 (alg_exp)]
    ADDRESS	[reduce using rule 197 (alg_exp)]
    LST 	[reduce using rule 197 (alg_exp)]
    RST 	[reduce using rule 197 (alg_exp)]
    MUL 	[reduce using rule 197 (alg_exp)]
    DIV 	[reduce using rule 197 (alg_exp)]
    MOD 	[reduce using rule 197 (alg_exp)]
    $default	reduce using rule 197 (alg_exp)

    mul_operator	go to state 389



state 629

    simple_alg_exp  ->  simple_alg_exp mul_operator factor .   (rule 204)

    $default	reduce using rule 204 (simple_alg_exp)



state 630

    alg_exp  ->  simple_alg_exp relation_operator alg_exp .   (rule 196)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 196 (alg_exp)]
    SUB 	[reduce using rule 196 (alg_exp)]
    $default	reduce using rule 196 (alg_exp)

    alg_operator	go to state 374



state 631

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    bool_statement  ->  POINTERNULL NE alg_exp .   (rule 344)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 344 (bool_statement)

    alg_operator	go to state 374



state 632

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    bool_statement  ->  POINTERNULL EQU alg_exp .   (rule 343)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 343 (bool_statement)

    alg_operator	go to state 374



state 633

    bool_statement  ->  OPEN_PAR bool_statement CLOSE_PAR .   (rule 350)

    $default	reduce using rule 350 (bool_statement)



state 634

    bool_statement  ->  alg_exp NE POINTERNULL .   (rule 342)

    $default	reduce using rule 342 (bool_statement)



state 635

    bool_statement  ->  alg_exp NE string .   (rule 338)

    $default	reduce using rule 338 (bool_statement)



state 636

    bool_statement  ->  alg_exp NE charliteral .   (rule 346)

    $default	reduce using rule 346 (bool_statement)



state 637

    bool_statement  ->  alg_exp EQU POINTERNULL .   (rule 341)

    $default	reduce using rule 341 (bool_statement)



state 638

    bool_statement  ->  alg_exp EQU string .   (rule 337)

    $default	reduce using rule 337 (bool_statement)



state 639

    bool_statement  ->  alg_exp EQU charliteral .   (rule 345)

    $default	reduce using rule 345 (bool_statement)



state 640

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    prime_bool_statement  ->  alg_exp relation_operator alg_exp .   (rule 351)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 351 (prime_bool_statement)

    alg_operator	go to state 374



state 641

    if_statement  ->  IF bool_statement THEN big_par . optional_else_statement   (rule 452)

    ELSE	shift, and go to state 862

    $default	reduce using rule 454 (optional_else_statement)

    optional_else_statement	go to state 863



state 642

    bool_statement  ->  bool_statement . AND bool_statement   (rule 348)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 349)
    bool_statement  ->  bool_statement OR bool_statement .   (rule 349)

    AND 	shift, and go to state 408

    $default	reduce using rule 349 (bool_statement)



state 643

    bool_statement  ->  bool_statement . AND bool_statement   (rule 348)
    bool_statement  ->  bool_statement AND bool_statement .   (rule 348)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 349)


    $default	reduce using rule 348 (bool_statement)



state 644

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    bool_statement  ->  string NE alg_exp .   (rule 340)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 340 (bool_statement)

    alg_operator	go to state 374



state 645

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    bool_statement  ->  string EQU alg_exp .   (rule 339)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 339 (bool_statement)

    alg_operator	go to state 374



state 646

    statement  ->  AWAIT OPEN_PAR bool_statement CLOSE_PAR .   (rule 48)

    $default	reduce using rule 48 (statement)



state 647

    ass_ident  ->  OPEN_PAR . ass_ident CLOSE_PAR   (rule 150)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    INTDECLARATION	shift, and go to state 864
    CHARDECLARATION	shift, and go to state 865
    FLOATDECLARATION	shift, and go to state 866
    OPEN_PAR	shift, and go to state 647
    UNSIGNED	shift, and go to state 867
    ADDRESS	shift, and go to state 148
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 283
    ID  	shift, and go to state 278

    ass_ident	go to state 648
    leftaddrshift	go to state 96
    list	go to state 649
    value_exp	go to state 532
    address_exp	go to state 624
    identifier	go to state 534
    struct_member_exp	go to state 535



state 648

    ass_ident  ->  OPEN_PAR ass_ident . CLOSE_PAR   (rule 150)

    CLOSE_PAR	shift, and go to state 490



state 649

    ass_ident  ->  list .   (rule 148)
    list  ->  OPEN_PAR list . CLOSE_PAR   (rule 184)
    struct_member_exp  ->  list . DOT identifier option_struct_member_exp   (rule 468)
    struct_member_exp  ->  list . DOT list option_struct_member_exp   (rule 471)
    struct_member_exp  ->  list . IMPLY identifier option_struct_member_exp   (rule 474)
    struct_member_exp  ->  list . IMPLY list option_struct_member_exp   (rule 478)

    DOT 	shift, and go to state 310
    CLOSE_PAR	shift, and go to state 491
    IMPLY	shift, and go to state 312

    CLOSE_PAR	[reduce using rule 148 (ass_ident)]
    $default	reduce using rule 148 (ass_ident)



state 650

    file_statement  ->  FOPEN OPEN_PAR ass_ident COMMA . string CLOSE_PAR   (rule 138)

    STR 	shift, and go to state 193

    string	go to state 868



state 651

    file_statement  ->  FCLOSE OPEN_PAR identifier CLOSE_PAR .   (rule 144)

    $default	reduce using rule 144 (file_statement)



state 652

    file_statement  ->  FGETS OPEN_PAR identifier COMMA . integer COMMA identifier CLOSE_PAR   (rule 139)

    INTEGER	shift, and go to state 152

    integer	go to state 869



state 653

    file_statement  ->  FPUTS OPEN_PAR identifier COMMA . identifier CLOSE_PAR   (rule 141)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 870



state 654

    file_statement  ->  FGETC OPEN_PAR identifier CLOSE_PAR .   (rule 140)

    $default	reduce using rule 140 (file_statement)



state 655

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)

    INTDECLARATION	shift, and go to state 857
    CHARDECLARATION	shift, and go to state 858
    FLOATDECLARATION	shift, and go to state 859
    OPEN_PAR	shift, and go to state 655
    UNSIGNED	shift, and go to state 860
    ID  	shift, and go to state 278

    list	go to state 656
    identifier	go to state 426



state 656

    list  ->  OPEN_PAR list . CLOSE_PAR   (rule 184)

    CLOSE_PAR	shift, and go to state 491



state 657

    file_statement  ->  FPUTC OPEN_PAR list COMMA . identifier CLOSE_PAR   (rule 143)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 871



state 658

    file_statement  ->  FPUTC OPEN_PAR identifier COMMA . identifier CLOSE_PAR   (rule 142)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 872



state 659

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 64)

    CLOSE_PAR	shift, and go to state 873



state 660

    inner_optional_define_identifier  ->  COMMA error .   (rule 413)

    $default	reduce using rule 413 (inner_optional_define_identifier)



state 661

    inner_optional_define_identifier  ->  COMMA OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 406)

    MUL 	shift, and go to state 874



state 662

    inner_optional_define_identifier  ->  COMMA ID . identifier inner_optional_define_identifier   (rule 398)
    inner_optional_define_identifier  ->  COMMA ID . identifier ARRAY inner_optional_define_identifier   (rule 401)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 875



state 663

    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE . identifier inner_optional_define_identifier   (rule 399)
    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE . MUL identifier inner_optional_define_identifier   (rule 400)
    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE . identifier ARRAY inner_optional_define_identifier   (rule 402)

    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 876
    ID  	shift, and go to state 214

    identifier	go to state 877



state 664

    inner_optional_define_identifier  ->  COMMA all_type_define . identifier inner_optional_define_identifier   (rule 396)
    inner_optional_define_identifier  ->  COMMA all_type_define . inner_optional_define_identifier   (rule 397)
    inner_optional_define_identifier  ->  COMMA all_type_define . identifier ARRAY inner_optional_define_identifier   (rule 403)
    inner_optional_define_identifier  ->  COMMA all_type_define . MUL identifier ARRAY inner_optional_define_identifier   (rule 404)
    inner_optional_define_identifier  ->  COMMA all_type_define . MUL identifier inner_optional_define_identifier   (rule 405)
    inner_optional_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 408)
    inner_optional_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 409)
    inner_optional_define_identifier  ->  COMMA all_type_define . identifier ARRAY OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 410)
    inner_optional_define_identifier  ->  COMMA all_type_define . MUL identifier inner_optional_define_identifier   (rule 411)
    inner_optional_define_identifier  ->  COMMA all_type_define . MUL inner_optional_define_identifier   (rule 412)

    COMMA	shift, and go to state 427
    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 878
    ID  	shift, and go to state 214

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 879
    identifier	go to state 880



state 665

    statement  ->  EXIST identifier inner_optional_define_identifier COLON . OPEN_BPAR statement CLOSE_BPAR   (rule 77)

    OPEN_BPAR	shift, and go to state 881



state 666

    optional_frame_identifier  ->  COMMA . identifier optional_frame_identifier   (rule 432)
    optional_frame_identifier  ->  COMMA . error   (rule 434)

    error	shift, and go to state 882
    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 883



state 667

    statement  ->  FRAME OPEN_PAR identifier optional_frame_identifier . CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 61)

    CLOSE_PAR	shift, and go to state 884



state 668

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 108)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 278)

    OPEN_PAR	shift, and go to state 213
    MUL 	shift, and go to state 885
    ID  	shift, and go to state 297

    option_identifier_array_declaration	go to state 413
    identifier	go to state 299



state 669

    ass_ident  ->  OPEN_PAR . ass_ident CLOSE_PAR   (rule 150)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 886
    CHARDECLARATION	shift, and go to state 887
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 888
    OPEN_PAR	shift, and go to state 669
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 889
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEXT	shift, and go to state 283
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    ass_ident	go to state 648
    leftaddrshift	go to state 96
    list	go to state 247
    value_exp	go to state 248
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 253
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 255



state 670

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 130)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 279)

    OPEN_PAR	shift, and go to state 213
    CLOSE_PAR	shift, and go to state 839
    MUL 	shift, and go to state 890
    ID  	shift, and go to state 297

    option_identifier_array_declaration	go to state 551
    identifier	go to state 299



state 671

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init CHOP . for_sta_condition CHOP for_sta_control CLOSE_PAR big_par   (rule 444)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    $default	reduce using rule 449 (for_sta_condition)

    pbool_expression	go to state 891
    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 892
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    for_sta_condition	go to state 893
    struct_member_exp	go to state 171



state 672

    for_statement  ->  FOR alg_exp TIMES DO . big_par   (rule 443)

    error	shift, and go to state 22
    OPEN_BPAR	shift, and go to state 443

    big_par	go to state 894



state 673

    bool_par  ->  OPEN_PAR bool_statement CLOSE_PAR .   (rule 424)

    $default	reduce using rule 424 (bool_par)



state 674

    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)
    big_par  ->  OPEN_BPAR statement . CLOSE_BPAR   (rule 422)

    CLOSE_BPAR	shift, and go to state 895
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303



state 675

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR . UNTIL OPEN_PAR bool_statement CLOSE_PAR   (rule 49)

    UNTIL	shift, and go to state 896



state 676

    ass_exp  ->  OPEN_PAR . string CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 174)
    ass_exp  ->  OPEN_PAR . ass_exp CLOSE_PAR   (rule 175)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    list_exp  ->  OPEN_PAR . list_exp CLOSE_PAR   (rule 237)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    bool_statement  ->  OPEN_PAR . bool_statement CLOSE_PAR   (rule 350)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    STRUCT	shift, and go to state 323
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    INTDECLARATION	shift, and go to state 595
    CHARDECLARATION	shift, and go to state 596
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 597
    OPEN_PAR	shift, and go to state 676
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 598
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 449
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 450
    ass_exp	go to state 677
    rightaddrshift	go to state 452
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 678
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 679
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 680
    prime_bool_statement	go to state 198
    identifier	go to state 336
    string	go to state 681
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 682



state 677

    ass_exp  ->  OPEN_PAR ass_exp . CLOSE_PAR   (rule 175)

    CLOSE_PAR	shift, and go to state 897



state 678

    ass_exp  ->  alg_exp .   (rule 168)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    factor  ->  OPEN_PAR alg_exp . CLOSE_PAR   (rule 216)
    bool_statement  ->  alg_exp . EQU string   (rule 337)
    bool_statement  ->  alg_exp . NE string   (rule 338)
    bool_statement  ->  alg_exp . EQU POINTERNULL   (rule 341)
    bool_statement  ->  alg_exp . NE POINTERNULL   (rule 342)
    bool_statement  ->  alg_exp . EQU charliteral   (rule 345)
    bool_statement  ->  alg_exp . NE charliteral   (rule 346)
    prime_bool_statement  ->  alg_exp . relation_operator alg_exp   (rule 351)
    prime_bool_statement  ->  alg_exp .   (rule 357)

    CLOSE_PAR	shift, and go to state 604
    NE  	shift, and go to state 403
    EQU 	shift, and go to state 404
    GE  	shift, and go to state 380
    LE  	shift, and go to state 381
    GT  	shift, and go to state 382
    LT  	shift, and go to state 383
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    CLOSE_PAR	[reduce using rule 168 (ass_exp)]
    CLOSE_PAR	[reduce using rule 357 (prime_bool_statement)]
    $default	reduce using rule 357 (prime_bool_statement)

    alg_operator	go to state 374
    relation_operator	go to state 405



state 679

    ass_exp  ->  list_exp .   (rule 169)
    list_exp  ->  list_exp . CON list_exp   (rule 234)
    list_exp  ->  OPEN_PAR list_exp . CLOSE_PAR   (rule 237)

    CLOSE_PAR	shift, and go to state 898
    CON 	shift, and go to state 696

    CLOSE_PAR	[reduce using rule 169 (ass_exp)]
    $default	reduce using rule 169 (ass_exp)



state 680

    ass_exp  ->  bool_statement .   (rule 171)
    bool_statement  ->  bool_statement . AND bool_statement   (rule 348)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 349)
    bool_statement  ->  OPEN_PAR bool_statement . CLOSE_PAR   (rule 350)

    CLOSE_PAR	shift, and go to state 633
    OR  	shift, and go to state 407
    AND 	shift, and go to state 408

    CLOSE_PAR	[reduce using rule 171 (ass_exp)]
    $default	reduce using rule 171 (ass_exp)



state 681

    ass_exp  ->  string .   (rule 170)
    ass_exp  ->  OPEN_PAR string . CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 174)
    bool_statement  ->  string . EQU alg_exp   (rule 339)
    bool_statement  ->  string . NE alg_exp   (rule 340)

    CLOSE_PAR	shift, and go to state 899
    NE  	shift, and go to state 409
    EQU 	shift, and go to state 410

    CLOSE_PAR	[reduce using rule 170 (ass_exp)]
    $default	reduce using rule 170 (ass_exp)



state 682

    ass_exp  ->  struct_member_exp .   (rule 172)
    factor  ->  struct_member_exp .   (rule 221)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 483)

    CLOSE_PAR	shift, and go to state 498

    CLOSE_PAR	[reduce using rule 172 (ass_exp)]
    CLOSE_PAR	[reduce using rule 221 (factor)]
    $default	reduce using rule 221 (factor)



state 683

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    list_exp  ->  OPEN_PAR . list_exp CLOSE_PAR   (rule 237)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 324
    CHARDECLARATION	shift, and go to state 325
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 327
    OPEN_PAR	shift, and go to state 900
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 329
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 901
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337



state 684

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    option_struct_list_value  ->  OPEN_BPAR alg_exp . inner_option_list_value CLOSE_BPAR   (rule 242)

    COMMA	shift, and go to state 902
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 250 (inner_option_list_value)

    alg_operator	go to state 374
    inner_option_list_value	go to state 903



state 685

    list_exp  ->  list_exp . CON list_exp   (rule 234)
    option_struct_list_value  ->  OPEN_BPAR list_exp . inner_option_list_value CLOSE_BPAR   (rule 245)

    COMMA	shift, and go to state 902
    CON 	shift, and go to state 696

    $default	reduce using rule 250 (inner_option_list_value)

    inner_option_list_value	go to state 904



state 686

    option_struct_list_value  ->  OPEN_BPAR string . inner_option_list_value CLOSE_BPAR   (rule 243)

    COMMA	shift, and go to state 902

    $default	reduce using rule 250 (inner_option_list_value)

    inner_option_list_value	go to state 905



state 687

    factor  ->  charliteral .   (rule 218)
    option_struct_list_value  ->  OPEN_BPAR charliteral . inner_option_list_value CLOSE_BPAR   (rule 244)

    COMMA	shift, and go to state 902

    COMMA	[reduce using rule 218 (factor)]
    CLOSE_BPAR	reduce using rule 218 (factor)
    CLOSE_BPAR	[reduce using rule 250 (inner_option_list_value)]
    $default	reduce using rule 218 (factor)

    inner_option_list_value	go to state 906



state 688

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    option_list_value  ->  OPEN_MPAR alg_exp . inner_option_list_value CLOSE_MPAR   (rule 238)

    COMMA	shift, and go to state 902
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 250 (inner_option_list_value)

    alg_operator	go to state 374
    inner_option_list_value	go to state 907



state 689

    list_exp  ->  list_exp . CON list_exp   (rule 234)
    option_list_value  ->  OPEN_MPAR list_exp . inner_option_list_value CLOSE_MPAR   (rule 241)

    COMMA	shift, and go to state 902
    CON 	shift, and go to state 696

    $default	reduce using rule 250 (inner_option_list_value)

    inner_option_list_value	go to state 908



state 690

    option_list_value  ->  OPEN_MPAR string . inner_option_list_value CLOSE_MPAR   (rule 239)

    COMMA	shift, and go to state 902

    $default	reduce using rule 250 (inner_option_list_value)

    inner_option_list_value	go to state 909



state 691

    factor  ->  charliteral .   (rule 218)
    option_list_value  ->  OPEN_MPAR charliteral . inner_option_list_value CLOSE_MPAR   (rule 240)

    COMMA	shift, and go to state 902

    COMMA	[reduce using rule 218 (factor)]
    CLOSE_MPAR	reduce using rule 218 (factor)
    CLOSE_MPAR	[reduce using rule 250 (inner_option_list_value)]
    $default	reduce using rule 218 (factor)

    inner_option_list_value	go to state 910



state 692

    rightaddrshift  ->  MUL OPEN_PAR . leftaddrshift CLOSE_PAR   (rule 177)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR alg_exp   (rule 192)
    value_exp  ->  MUL OPEN_PAR . alg_exp CLOSE_PAR   (rule 193)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 911
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 225
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    type_define	go to state 228
    leftaddrshift	go to state 912
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 527
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    sign_type_define	go to state 229
    all_type_define	go to state 528
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 693

    option_output  ->  COMMA . ass_exp option_output   (rule 458)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 446
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 449
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 450
    ass_exp	go to state 913
    rightaddrshift	go to state 452
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 453
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 454
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 457
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 458
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 459



state 694

    display_statement  ->  DISPLAY OPEN_PAR ass_exp CLOSE_PAR .   (rule 455)

    $default	reduce using rule 455 (display_statement)



state 695

    display_statement  ->  DISPLAY OPEN_PAR ass_exp option_output . CLOSE_PAR   (rule 456)

    CLOSE_PAR	shift, and go to state 914



state 696

    list_exp  ->  list_exp CON . list_exp   (rule 234)

    OPEN_PAR	shift, and go to state 915
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448

    list_exp	go to state 916
    option_list_value	go to state 455
    option_struct_list_value	go to state 456



state 697

    option_function_parameter_list  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 394)

    CLOSE_PAR	shift, and go to state 917



state 698

    option_function_parameter_list  ->  ID MUL MUL . identifier inner_optional_define_identifier   (rule 378)
    option_function_parameter_list  ->  ID MUL MUL . inner_optional_define_identifier   (rule 385)

    COMMA	shift, and go to state 427
    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 918
    identifier	go to state 919



state 699

    option_function_parameter_list  ->  ID MUL inner_optional_define_identifier .   (rule 384)

    $default	reduce using rule 384 (option_function_parameter_list)



state 700

    option_function_parameter_list  ->  ID MUL identifier . inner_optional_define_identifier   (rule 377)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 920



state 701

    option_function_parameter_list  ->  ID identifier ARRAY . inner_optional_define_identifier   (rule 379)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 921



state 702

    option_function_parameter_list  ->  ID identifier inner_optional_define_identifier .   (rule 376)

    $default	reduce using rule 376 (option_function_parameter_list)



state 703

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . identifier inner_optional_define_identifier   (rule 374)
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . inner_optional_define_identifier   (rule 382)

    COMMA	shift, and go to state 427
    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 922
    identifier	go to state 923



state 704

    option_function_parameter_list  ->  STRUCT_TYPE MUL inner_optional_define_identifier .   (rule 381)

    $default	reduce using rule 381 (option_function_parameter_list)



state 705

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier . inner_optional_define_identifier   (rule 373)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 924



state 706

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY . inner_optional_define_identifier   (rule 375)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 925



state 707

    option_function_parameter_list  ->  STRUCT_TYPE identifier inner_optional_define_identifier .   (rule 372)

    $default	reduce using rule 372 (option_function_parameter_list)



state 708

    option_function_parameter_list  ->  all_type_define MUL MUL . identifier inner_optional_define_identifier   (rule 393)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 926



state 709

    option_function_parameter_list  ->  all_type_define MUL inner_optional_define_identifier .   (rule 392)

    $default	reduce using rule 392 (option_function_parameter_list)



state 710

    option_function_parameter_list  ->  all_type_define MUL identifier . ARRAY inner_optional_define_identifier   (rule 387)
    option_function_parameter_list  ->  all_type_define MUL identifier . inner_optional_define_identifier   (rule 391)

    ARRAY	shift, and go to state 927
    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 928



state 711

    option_function_parameter_list  ->  all_type_define identifier ARRAY . inner_optional_define_identifier   (rule 386)
    option_function_parameter_list  ->  all_type_define identifier ARRAY . OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 390)

    COMMA	shift, and go to state 427
    OPEN_MPAR	shift, and go to state 929

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 930



state 712

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 388)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 389)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 931
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 713

    option_function_parameter_list  ->  all_type_define identifier inner_optional_define_identifier .   (rule 370)

    $default	reduce using rule 370 (option_function_parameter_list)



state 714

    option_array_declaration  ->  ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR inner_option_array_declaration   (rule 134)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 780
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 932
    alg_operator	go to state 374



state 715

    alg_exp  ->  IF bool_statement THEN . alg_exp optional_exp_else_statement   (rule 198)
    if_statement  ->  IF bool_statement THEN . big_par optional_else_statement   (rule 452)

    error	shift, and go to state 22
    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    OPEN_BPAR	shift, and go to state 443
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 814
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    big_par	go to state 641
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 716

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 933
    MUL 	shift, and go to state 819



state 717

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 934
    MUL 	shift, and go to state 822



state 718

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 272)

    CLOSE_PAR	shift, and go to state 935
    MUL 	shift, and go to state 827



state 719

    type_define  ->  INTDECLARATION .   (rule 116)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 271)

    CLOSE_PAR	shift, and go to state 833
    MUL 	shift, and go to state 936

    MUL 	[reduce using rule 116 (type_define)]
    $default	reduce using rule 116 (type_define)



state 720

    type_define  ->  CHARDECLARATION .   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 835
    MUL 	shift, and go to state 937

    MUL 	[reduce using rule 118 (type_define)]
    $default	reduce using rule 118 (type_define)



state 721

    type_define  ->  INTDECLARATION .   (rule 116)
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 260)

    CLOSE_PAR	shift, and go to state 837

    $default	reduce using rule 116 (type_define)



state 722

    type_define  ->  CHARDECLARATION .   (rule 118)
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 261)

    CLOSE_PAR	shift, and go to state 838

    $default	reduce using rule 118 (type_define)



state 723

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 60)
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 441)

    IMPLY	shift, and go to state 731

    $default	reduce using rule 441 (imply_pre)



state 724

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 113)
    value_exp  ->  MUL identifier .   (rule 188)

    CLOSE_PAR	shift, and go to state 938

    CLOSE_PAR	[reduce using rule 188 (value_exp)]
    $default	reduce using rule 188 (value_exp)



state 725

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)
    list  ->  ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 178)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 939
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 726

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 112)

    OPEN_PAR	shift, and go to state 940



state 727

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    INTDECLARATION	shift, and go to state 595
    CHARDECLARATION	shift, and go to state 596
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 597
    OPEN_PAR	shift, and go to state 727
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 598
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 241
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 480
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    prime_bool_statement	go to state 252
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    imply_pre	go to state 728
    struct_member_exp	go to state 337



state 728

    imply_pre  ->  imply_pre . AND imply_pre   (rule 439)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 440)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 441)

    CLOSE_PAR	shift, and go to state 941
    OR  	shift, and go to state 496
    AND 	shift, and go to state 497



state 729

    value_exp  ->  OPEN_PAR value_exp CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 191)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 942
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 730

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . list option_struct_member_exp   (rule 479)

    OPEN_PAR	shift, and go to state 422
    ID  	shift, and go to state 278

    list	go to state 943
    identifier	go to state 944



state 731

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY . OPEN_MPAR statement CLOSE_MPAR   (rule 60)

    OPEN_MPAR	shift, and go to state 945



state 732

    imply_pre  ->  imply_pre . AND imply_pre   (rule 439)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 440)
    imply_pre  ->  imply_pre OR imply_pre .   (rule 440)

    AND 	shift, and go to state 497

    $default	reduce using rule 440 (imply_pre)



state 733

    imply_pre  ->  imply_pre . AND imply_pre   (rule 439)
    imply_pre  ->  imply_pre AND imply_pre .   (rule 439)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 440)


    $default	reduce using rule 439 (imply_pre)



state 734

    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)
    optional_projection  ->  COMMA statement . optional_projection   (rule 436)

    COMMA	shift, and go to state 499
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303

    $default	reduce using rule 435 (optional_projection)

    optional_projection	go to state 946



state 735

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION . big_par   (rule 63)

    error	shift, and go to state 22
    OPEN_BPAR	shift, and go to state 443

    big_par	go to state 947



state 736

    statement  ->  OPEN_BPAR statement optional_projection CLOSE_BPAR . PROJECTION big_par   (rule 62)

    PROJECTION	shift, and go to state 948



state 737

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 65)

    CLOSE_PAR	shift, and go to state 949



state 738

    statement  ->  SEND OPEN_PAR ass_ident COMMA . ass_exp CLOSE_PAR   (rule 72)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 446
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 449
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 450
    ass_exp	go to state 950
    rightaddrshift	go to state 452
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 453
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 454
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 457
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 458
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 459



state 739

    statement  ->  RECEIVE OPEN_PAR ass_ident COMMA . identifier CLOSE_PAR   (rule 74)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 951



state 740

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 66)

    CLOSE_PAR	shift, and go to state 952



state 741

    statement  ->  CHANNEL identifier OPEN_PAR integer . CLOSE_PAR   (rule 71)

    CLOSE_PAR	shift, and go to state 953



state 742

    statement  ->  PUT OPEN_PAR ass_ident COMMA . ass_exp CLOSE_PAR   (rule 73)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 446
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 449
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 450
    ass_exp	go to state 954
    rightaddrshift	go to state 452
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 453
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 454
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 457
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 458
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 459



state 743

    statement  ->  GET OPEN_PAR ass_ident COMMA . identifier CLOSE_PAR   (rule 75)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 955



state 744

    String_Function_head  ->  STRFUNCHEAD OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 300)

    $default	reduce using rule 300 (String_Function_head)



state 745

    String_Function_tail  ->  STRFUNCTAIL OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 301)

    $default	reduce using rule 301 (String_Function_tail)



state 746

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter COMMA . str_func_parameter CLOSE_PAR   (rule 302)

    OPEN_PAR	shift, and go to state 509
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278
    STR 	shift, and go to state 193

    list	go to state 510
    value_exp	go to state 511
    String_Function	go to state 512
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    str_func_parameter	go to state 956
    identifier	go to state 514
    string	go to state 515
    struct_member_exp	go to state 516



state 747

    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter COMMA . str_func_parameter CLOSE_PAR   (rule 303)

    OPEN_PAR	shift, and go to state 509
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278
    STR 	shift, and go to state 193

    list	go to state 510
    value_exp	go to state 511
    String_Function	go to state 512
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    str_func_parameter	go to state 957
    identifier	go to state 514
    string	go to state 515
    struct_member_exp	go to state 516



state 748

    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter COMMA . str_func_parameter CLOSE_PAR   (rule 304)

    OPEN_PAR	shift, and go to state 509
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    MUL 	shift, and go to state 72
    ID  	shift, and go to state 278
    STR 	shift, and go to state 193

    list	go to state 510
    value_exp	go to state 511
    String_Function	go to state 512
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    str_func_parameter	go to state 958
    identifier	go to state 514
    string	go to state 515
    struct_member_exp	go to state 516



state 749

    String_Function_len  ->  STRFUNCLEN OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 305)

    $default	reduce using rule 305 (String_Function_len)



state 750

    statement  ->  SYSTEM OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 69)

    $default	reduce using rule 69 (statement)



state 751

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 113)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 959



state 752

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)
    identifier  ->  ID .   (rule 426)

    OPEN_MPAR	shift, and go to state 960

    $default	reduce using rule 426 (identifier)



state 753

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 112)

    CLOSE_PAR	shift, and go to state 726



state 754

    statement  ->  FREE OPEN_PAR identifier CLOSE_PAR .   (rule 68)

    $default	reduce using rule 68 (statement)



state 755

    value_exp  ->  MUL OPEN_PAR alg_exp CLOSE_PAR .   (rule 193)

    $default	reduce using rule 193 (value_exp)



state 756

    value_exp  ->  MUL OPEN_PAR all_type_define MUL . CLOSE_PAR alg_exp   (rule 192)

    CLOSE_PAR	shift, and go to state 961



state 757

    type_define  ->  INTDECLARATION .   (rule 116)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)

    MUL 	shift, and go to state 962

    MUL 	[reduce using rule 116 (type_define)]
    $default	reduce using rule 116 (type_define)



state 758

    type_define  ->  CHARDECLARATION .   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)

    MUL 	shift, and go to state 963

    MUL 	[reduce using rule 118 (type_define)]
    $default	reduce using rule 118 (type_define)



state 759

    type_define  ->  FLOATDECLARATION .   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)

    MUL 	shift, and go to state 964

    MUL 	[reduce using rule 117 (type_define)]
    $default	reduce using rule 117 (type_define)



state 760

    sign_declaration  ->  UNSIGNED . declaration   (rule 102)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)

    STRUCT	shift, and go to state 271
    UNION	shift, and go to state 272
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 965
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 966
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 273
    STRUCT_TYPE	shift, and go to state 83

    declaration	go to state 274
    type_define	go to state 92



state 761

    statement  ->  NEXT OPEN_PAR statement CLOSE_PAR .   (rule 43)

    $default	reduce using rule 43 (statement)



state 762

    statement  ->  LENGTH OPEN_PAR alg_exp CLOSE_PAR .   (rule 53)

    $default	reduce using rule 53 (statement)



state 763

    option_input  ->  COMMA . identifier option_input   (rule 465)
    option_input  ->  COMMA . list option_input   (rule 466)

    OPEN_PAR	shift, and go to state 422
    ID  	shift, and go to state 278

    list	go to state 967
    identifier	go to state 968



state 764

    request_statement  ->  REQUEST OPEN_PAR list CLOSE_PAR .   (rule 461)

    $default	reduce using rule 461 (request_statement)



state 765

    request_statement  ->  REQUEST OPEN_PAR list option_input . CLOSE_PAR   (rule 462)

    CLOSE_PAR	shift, and go to state 969



state 766

    request_statement  ->  REQUEST OPEN_PAR identifier CLOSE_PAR .   (rule 459)

    $default	reduce using rule 459 (request_statement)



state 767

    request_statement  ->  REQUEST OPEN_PAR identifier option_input . CLOSE_PAR   (rule 460)

    CLOSE_PAR	shift, and go to state 970



state 768

    request_statement  ->  REQUEST OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 463)

    $default	reduce using rule 463 (request_statement)



state 769

    statement  ->  FINAL OPEN_PAR statement CLOSE_PAR .   (rule 58)

    $default	reduce using rule 58 (statement)



state 770

    statement  ->  KEEP OPEN_PAR statement CLOSE_PAR .   (rule 45)

    $default	reduce using rule 45 (statement)



state 771

    statement  ->  ALWAYS OPEN_PAR statement CLOSE_PAR .   (rule 46)

    $default	reduce using rule 46 (statement)



state 772

    statement  ->  HALT OPEN_PAR bool_statement CLOSE_PAR .   (rule 47)

    $default	reduce using rule 47 (statement)



state 773

    statement  ->  W_NEXT OPEN_PAR statement CLOSE_PAR .   (rule 44)

    $default	reduce using rule 44 (statement)



state 774

    statement  ->  PREFIX OPEN_PAR statement CLOSE_PAR .   (rule 35)

    $default	reduce using rule 35 (statement)



state 775

    option_function_identifier  ->  ADDRESS error .   (rule 417)

    $default	reduce using rule 417 (option_function_identifier)



state 776

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 96)
    option_function_identifier  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 415)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 446
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 546
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 449
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 547
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    $default	reduce using rule 416 (option_function_identifier)

    function	go to state 155
    file_statement	go to state 450
    ass_exp	go to state 548
    rightaddrshift	go to state 452
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 453
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 454
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 457
    prime_bool_statement	go to state 198
    option_function_identifier	go to state 971
    identifier	go to state 167
    string	go to state 458
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 459



state 777

    inner_option_function_identifier  ->  COMMA . ass_exp inner_option_function_identifier   (rule 418)
    inner_option_function_identifier  ->  COMMA . ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 419)
    inner_option_function_identifier  ->  COMMA . error   (rule 421)

    error	shift, and go to state 972
    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 446
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 449
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 973
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 450
    ass_exp	go to state 974
    rightaddrshift	go to state 452
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 453
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 454
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 457
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 458
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 459



state 778

    option_function_identifier  ->  ass_exp inner_option_function_identifier .   (rule 414)

    $default	reduce using rule 414 (option_function_identifier)



state 779

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 96)

    $default	reduce using rule 96 (function)



state 780

    option_alg_exp  ->  COMMA . alg_exp option_alg_exp   (rule 185)
    option_alg_exp  ->  COMMA . error   (rule 186)

    error	shift, and go to state 975
    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 976
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 781

    list  ->  ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 178)

    CLOSE_MPAR	shift, and go to state 977



state 782

    option_identifier_array_declaration  ->  ID ARRAY ASS_EQU . list_exp inner_option_identifier_array_declaration   (rule 126)
    option_identifier_array_declaration  ->  ID ARRAY ASS_EQU . string inner_option_identifier_array_declaration   (rule 127)

    OPEN_PAR	shift, and go to state 915
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STR 	shift, and go to state 193

    list_exp	go to state 978
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    string	go to state 979



state 783

    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 123)
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR ASS_EQU list_exp inner_option_identifier_array_declaration   (rule 128)
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR ASS_EQU string inner_option_identifier_array_declaration   (rule 129)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 780
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 980
    alg_operator	go to state 374



state 784

    inner_option_identifier_array_declaration  ->  COMMA error .   (rule 132)

    $default	reduce using rule 132 (inner_option_identifier_array_declaration)



state 785

    inner_option_identifier_array_declaration  ->  COMMA option_identifier_array_declaration .   (rule 131)

    $default	reduce using rule 131 (inner_option_identifier_array_declaration)



state 786

    option_identifier_array_declaration  ->  identifier ASS_EQU ass_exp . inner_option_identifier_array_declaration   (rule 124)

    COMMA	shift, and go to state 554

    COMMA	[reduce using rule 133 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 133 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 981



state 787

    option_identifier_array_declaration  ->  identifier ASS_EQU string . inner_option_identifier_array_declaration   (rule 125)
    ass_exp  ->  string .   (rule 170)
    bool_statement  ->  string . EQU alg_exp   (rule 339)
    bool_statement  ->  string . NE alg_exp   (rule 340)

    COMMA	shift, and go to state 554
    NE  	shift, and go to state 409
    EQU 	shift, and go to state 410

    $   	reduce using rule 133 (inner_option_identifier_array_declaration)
    $   	[reduce using rule 170 (ass_exp)]
    COMMA	[reduce using rule 133 (inner_option_identifier_array_declaration)]
    COMMA	[reduce using rule 170 (ass_exp)]
    CLOSE_PAR	reduce using rule 133 (inner_option_identifier_array_declaration)
    CLOSE_PAR	[reduce using rule 170 (ass_exp)]
    CLOSE_BPAR	reduce using rule 133 (inner_option_identifier_array_declaration)
    CLOSE_BPAR	[reduce using rule 170 (ass_exp)]
    CLOSE_MPAR	reduce using rule 133 (inner_option_identifier_array_declaration)
    CLOSE_MPAR	[reduce using rule 170 (ass_exp)]
    CHOP	reduce using rule 133 (inner_option_identifier_array_declaration)
    CHOP	[reduce using rule 170 (ass_exp)]
    OR  	reduce using rule 133 (inner_option_identifier_array_declaration)
    OR  	[reduce using rule 170 (ass_exp)]
    PARALLEL	reduce using rule 133 (inner_option_identifier_array_declaration)
    PARALLEL	[reduce using rule 170 (ass_exp)]
    AND 	reduce using rule 133 (inner_option_identifier_array_declaration)
    AND 	[reduce using rule 170 (ass_exp)]
    $default	reduce using rule 133 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 982



state 788

    CYLINDER_STATEMENT  ->  OPEN_PAR OVER_STATEMENT . CLOSE_PAR   (rule 84)

    CLOSE_PAR	shift, and go to state 489



state 789

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR .   (rule 98)

    $default	reduce using rule 98 (struct_define_statement)



state 790

    option_struct_declaration  ->  sign_declaration AND . option_struct_declaration   (rule 81)

    STRUCT	shift, and go to state 271
    UNION	shift, and go to state 272
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 273
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    STRUCT_TYPE	shift, and go to state 83

    option_struct_declaration	go to state 983
    sign_declaration	go to state 564
    declaration	go to state 91
    type_define	go to state 92



state 791

    option_struct_member_exp  ->  DOT . identifier option_struct_member_exp   (rule 485)
    option_struct_member_exp  ->  DOT . list option_struct_member_exp   (rule 486)
    option_struct_member_exp  ->  DOT . function   (rule 489)

    OPEN_PAR	shift, and go to state 422
    ID  	shift, and go to state 82

    function	go to state 984
    list	go to state 985
    identifier	go to state 986



state 792

    option_struct_member_exp  ->  IMPLY . identifier option_struct_member_exp   (rule 487)
    option_struct_member_exp  ->  IMPLY . list option_struct_member_exp   (rule 488)
    option_struct_member_exp  ->  IMPLY . function   (rule 490)

    OPEN_PAR	shift, and go to state 422
    ID  	shift, and go to state 82

    function	go to state 987
    list	go to state 988
    identifier	go to state 989



state 793

    struct_member_exp  ->  list DOT list option_struct_member_exp .   (rule 471)

    $default	reduce using rule 471 (struct_member_exp)



state 794

    struct_member_exp  ->  list DOT identifier option_struct_member_exp .   (rule 468)

    $default	reduce using rule 468 (struct_member_exp)



state 795

    function  ->  list OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 97)

    $default	reduce using rule 97 (function)



state 796

    struct_member_exp  ->  list IMPLY list option_struct_member_exp .   (rule 478)

    $default	reduce using rule 478 (struct_member_exp)



state 797

    struct_member_exp  ->  list IMPLY identifier option_struct_member_exp .   (rule 474)

    $default	reduce using rule 474 (struct_member_exp)



state 798

    struct_member_exp  ->  value_exp DOT list option_struct_member_exp .   (rule 472)

    $default	reduce using rule 472 (struct_member_exp)



state 799

    struct_member_exp  ->  value_exp DOT identifier option_struct_member_exp .   (rule 469)

    $default	reduce using rule 469 (struct_member_exp)



state 800

    struct_member_exp  ->  value_exp IMPLY list option_struct_member_exp .   (rule 482)

    $default	reduce using rule 482 (struct_member_exp)



state 801

    struct_member_exp  ->  value_exp IMPLY identifier option_struct_member_exp .   (rule 476)

    $default	reduce using rule 476 (struct_member_exp)



state 802

    INTERVAL_STATEMENT  ->  OPEN_PAR . INTERVAL_STATEMENT CLOSE_PAR   (rule 92)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 324
    CHARDECLARATION	shift, and go to state 325
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 327
    OPEN_PAR	shift, and go to state 990
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 329
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    INTERVAL_STATEMENT	go to state 991
    SIG_INTERVAL	go to state 805
    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 992
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337



state 803

    OVER_STATEMENT  ->  big_par OVER OPEN_PAR CLOSE_PAR .   (rule 86)

    $default	reduce using rule 86 (OVER_STATEMENT)



state 804

    OVER_STATEMENT  ->  big_par OVER OPEN_PAR INTERVAL_STATEMENT . CLOSE_PAR   (rule 85)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . COMMA INTERVAL_STATEMENT   (rule 88)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . INTER_OR INTERVAL_STATEMENT   (rule 89)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . OVEREP alg_exp   (rule 90)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . OVEREP NON_DETERMINED   (rule 91)

    COMMA	shift, and go to state 993
    CLOSE_PAR	shift, and go to state 994
    OVEREP	shift, and go to state 995
    INTER_OR	shift, and go to state 996



state 805

    INTERVAL_STATEMENT  ->  SIG_INTERVAL .   (rule 87)

    $default	reduce using rule 87 (INTERVAL_STATEMENT)



state 806

    SIG_INTERVAL  ->  alg_exp .   (rule 93)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 93 (SIG_INTERVAL)

    alg_operator	go to state 374



state 807

    struct_member_exp  ->  identifier DOT list option_struct_member_exp .   (rule 470)

    $default	reduce using rule 470 (struct_member_exp)



state 808

    struct_member_exp  ->  identifier DOT identifier option_struct_member_exp .   (rule 467)

    $default	reduce using rule 467 (struct_member_exp)



state 809

    struct_member_exp  ->  identifier IMPLY list option_struct_member_exp .   (rule 477)

    $default	reduce using rule 477 (struct_member_exp)



state 810

    struct_member_exp  ->  identifier IMPLY identifier option_struct_member_exp .   (rule 473)

    $default	reduce using rule 473 (struct_member_exp)



state 811

    prime_bool_statement  ->  NEGATION prime_bool_statement .   (rule 352)

    $default	reduce using rule 352 (prime_bool_statement)



state 812

    poptional_projection  ->  COMMA complexProposition poptional_projection .   (rule 29)

    $default	reduce using rule 29 (poptional_projection)



state 813

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION . OPEN_BPAR complexProposition CLOSE_BPAR   (rule 24)

    OPEN_BPAR	shift, and go to state 997



state 814

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    alg_exp  ->  IF bool_statement THEN alg_exp . optional_exp_else_statement   (rule 198)

    ELSE	shift, and go to state 998
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ELSE	[reduce using rule 202 (optional_exp_else_statement)]
    ADD 	[reduce using rule 202 (optional_exp_else_statement)]
    SUB 	[reduce using rule 202 (optional_exp_else_statement)]
    $default	reduce using rule 202 (optional_exp_else_statement)

    optional_exp_else_statement	go to state 999
    alg_operator	go to state 374



state 815

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 278)

    CLOSE_PAR	shift, and go to state 1000
    MUL 	shift, and go to state 1001



state 816

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 257)

    $default	reduce using rule 257 (type_cast)



state 817

    type_cast_alg_exp  ->  simple_alg_exp .   (rule 199)
    type_cast_alg_exp  ->  simple_alg_exp . alg_operator simple_alg_exp   (rule 200)
    simple_alg_exp  ->  simple_alg_exp . mul_operator factor   (rule 204)

    INTER_OR	shift, and go to state 375
    CON 	shift, and go to state 376
    ADDRESS	shift, and go to state 377
    LST 	shift, and go to state 384
    RST 	shift, and go to state 385
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373
    MUL 	shift, and go to state 386
    DIV 	shift, and go to state 387
    MOD 	shift, and go to state 388

    INTER_OR	[reduce using rule 199 (type_cast_alg_exp)]
    CON 	[reduce using rule 199 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 199 (type_cast_alg_exp)]
    LST 	[reduce using rule 199 (type_cast_alg_exp)]
    RST 	[reduce using rule 199 (type_cast_alg_exp)]
    ADD 	[reduce using rule 199 (type_cast_alg_exp)]
    SUB 	[reduce using rule 199 (type_cast_alg_exp)]
    MUL 	[reduce using rule 199 (type_cast_alg_exp)]
    DIV 	[reduce using rule 199 (type_cast_alg_exp)]
    MOD 	[reduce using rule 199 (type_cast_alg_exp)]
    $default	reduce using rule 199 (type_cast_alg_exp)

    mul_operator	go to state 389
    alg_operator	go to state 1002



state 818

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 264)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1005
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 819

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 1006



state 820

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 259)

    $default	reduce using rule 259 (type_cast)



state 821

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 267)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1007
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 822

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 1008



state 823

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR . casted_element   (rule 269)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1009
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 824

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 275)

    CLOSE_PAR	shift, and go to state 1010



state 825

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 258)

    $default	reduce using rule 258 (type_cast)



state 826

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 266)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1011
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 827

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 272)

    CLOSE_PAR	shift, and go to state 1012



state 828

    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 1013
    MUL 	shift, and go to state 819



state 829

    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 1014
    MUL 	shift, and go to state 822



state 830

    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 272)

    CLOSE_PAR	shift, and go to state 1015
    MUL 	shift, and go to state 827



state 831

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 271)

    CLOSE_PAR	shift, and go to state 833
    MUL 	shift, and go to state 936



state 832

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 835
    MUL 	shift, and go to state 1016



state 833

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 262)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1017
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 834

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 271)

    CLOSE_PAR	shift, and go to state 1018
    MUL 	shift, and go to state 1019



state 835

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 263)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1020
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 836

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 1021
    MUL 	shift, and go to state 1022



state 837

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 260)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1023
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 838

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 261)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1024
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 839

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 277)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1025
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 840

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 279)

    CLOSE_PAR	shift, and go to state 1026



state 841

    all_sizeof_type  ->  STRUCT STRUCT_TYPE . MUL   (rule 288)

    MUL 	shift, and go to state 1027



state 842

    all_sizeof_type  ->  INTDECLARATION MUL .   (rule 283)

    $default	reduce using rule 283 (all_sizeof_type)



state 843

    all_sizeof_type  ->  CHARDECLARATION MUL .   (rule 285)

    $default	reduce using rule 285 (all_sizeof_type)



state 844

    all_sizeof_type  ->  FLOATDECLARATION MUL .   (rule 284)

    $default	reduce using rule 284 (all_sizeof_type)



state 845

    all_sizeof_type  ->  UNSIGNED INTDECLARATION . MUL   (rule 286)
    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 366)

    MUL 	shift, and go to state 1028

    $default	reduce using rule 366 (sign_type_define)



state 846

    all_sizeof_type  ->  UNSIGNED CHARDECLARATION . MUL   (rule 287)
    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 367)

    MUL 	shift, and go to state 1029

    $default	reduce using rule 367 (sign_type_define)



state 847

    size_of  ->  SIZEOF OPEN_PAR STRUCT_TYPE CLOSE_PAR .   (rule 292)

    $default	reduce using rule 292 (size_of)



state 848

    all_sizeof_type  ->  STRUCT_TYPE MUL .   (rule 289)

    $default	reduce using rule 289 (all_sizeof_type)



state 849

    size_of  ->  SIZEOF OPEN_PAR alg_exp CLOSE_PAR .   (rule 290)

    $default	reduce using rule 290 (size_of)



state 850

    size_of  ->  SIZEOF OPEN_PAR all_sizeof_type CLOSE_PAR .   (rule 291)

    $default	reduce using rule 291 (size_of)



state 851

    size_of  ->  SIZEOF OPEN_PAR string CLOSE_PAR .   (rule 293)

    $default	reduce using rule 293 (size_of)



state 852

    Float_Function  ->  ATAN2 OPEN_PAR alg_exp COMMA . alg_exp CLOSE_PAR   (rule 328)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1030
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 853

    Float_Function  ->  POW OPEN_PAR alg_exp COMMA . alg_exp CLOSE_PAR   (rule 329)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1031
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 854

    Float_Function  ->  FMOD OPEN_PAR alg_exp COMMA . alg_exp CLOSE_PAR   (rule 330)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1032
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 855

    Float_Function  ->  MODF OPEN_PAR alg_exp COMMA . alg_exp CLOSE_PAR   (rule 331)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1033
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 856

    Float_Function  ->  LDEXP OPEN_PAR alg_exp COMMA . alg_exp CLOSE_PAR   (rule 332)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1034
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 857

    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)

    MUL 	shift, and go to state 1035



state 858

    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)

    MUL 	shift, and go to state 1036



state 859

    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)

    MUL 	shift, and go to state 1037



state 860

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)

    INTDECLARATION	shift, and go to state 1038
    CHARDECLARATION	shift, and go to state 1039



state 861

    pre_next  ->  PREVIOUS OPEN_PAR identifier CLOSE_PAR .   (rule 223)

    $default	reduce using rule 223 (pre_next)



state 862

    optional_else_statement  ->  ELSE . big_par   (rule 453)

    error	shift, and go to state 22
    OPEN_BPAR	shift, and go to state 443

    big_par	go to state 1040



state 863

    if_statement  ->  IF bool_statement THEN big_par optional_else_statement .   (rule 452)

    $default	reduce using rule 452 (if_statement)



state 864

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)

    MUL 	shift, and go to state 962



state 865

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)

    MUL 	shift, and go to state 963



state 866

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)

    MUL 	shift, and go to state 964



state 867

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)

    INTDECLARATION	shift, and go to state 1038
    CHARDECLARATION	shift, and go to state 1041



state 868

    file_statement  ->  FOPEN OPEN_PAR ass_ident COMMA string . CLOSE_PAR   (rule 138)

    CLOSE_PAR	shift, and go to state 1042



state 869

    file_statement  ->  FGETS OPEN_PAR identifier COMMA integer . COMMA identifier CLOSE_PAR   (rule 139)

    COMMA	shift, and go to state 1043



state 870

    file_statement  ->  FPUTS OPEN_PAR identifier COMMA identifier . CLOSE_PAR   (rule 141)

    CLOSE_PAR	shift, and go to state 1044



state 871

    file_statement  ->  FPUTC OPEN_PAR list COMMA identifier . CLOSE_PAR   (rule 143)

    CLOSE_PAR	shift, and go to state 1045



state 872

    file_statement  ->  FPUTC OPEN_PAR identifier COMMA identifier . CLOSE_PAR   (rule 142)

    CLOSE_PAR	shift, and go to state 1046



state 873

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 64)

    ASS_EQU	shift, and go to state 1047



state 874

    inner_optional_define_identifier  ->  COMMA OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 406)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 1048



state 875

    inner_optional_define_identifier  ->  COMMA ID identifier . inner_optional_define_identifier   (rule 398)
    inner_optional_define_identifier  ->  COMMA ID identifier . ARRAY inner_optional_define_identifier   (rule 401)

    ARRAY	shift, and go to state 1049
    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1050



state 876

    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE MUL . identifier inner_optional_define_identifier   (rule 400)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 1051



state 877

    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE identifier . inner_optional_define_identifier   (rule 399)
    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE identifier . ARRAY inner_optional_define_identifier   (rule 402)

    ARRAY	shift, and go to state 1052
    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1053



state 878

    inner_optional_define_identifier  ->  COMMA all_type_define MUL . identifier ARRAY inner_optional_define_identifier   (rule 404)
    inner_optional_define_identifier  ->  COMMA all_type_define MUL . identifier inner_optional_define_identifier   (rule 405)
    inner_optional_define_identifier  ->  COMMA all_type_define MUL . identifier inner_optional_define_identifier   (rule 411)
    inner_optional_define_identifier  ->  COMMA all_type_define MUL . inner_optional_define_identifier   (rule 412)

    COMMA	shift, and go to state 427
    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1054
    identifier	go to state 1055



state 879

    inner_optional_define_identifier  ->  COMMA all_type_define inner_optional_define_identifier .   (rule 397)

    $default	reduce using rule 397 (inner_optional_define_identifier)



state 880

    inner_optional_define_identifier  ->  COMMA all_type_define identifier . inner_optional_define_identifier   (rule 396)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier . ARRAY inner_optional_define_identifier   (rule 403)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 408)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 409)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier . ARRAY OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 410)

    ARRAY	shift, and go to state 1056
    COMMA	shift, and go to state 427
    OPEN_MPAR	shift, and go to state 1057

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1058



state 881

    statement  ->  EXIST identifier inner_optional_define_identifier COLON OPEN_BPAR . statement CLOSE_BPAR   (rule 77)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 1059
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114



state 882

    optional_frame_identifier  ->  COMMA error .   (rule 434)

    $default	reduce using rule 434 (optional_frame_identifier)



state 883

    optional_frame_identifier  ->  COMMA identifier . optional_frame_identifier   (rule 432)

    COMMA	shift, and go to state 666

    $default	reduce using rule 433 (optional_frame_identifier)

    optional_frame_identifier	go to state 1060



state 884

    statement  ->  FRAME OPEN_PAR identifier optional_frame_identifier CLOSE_PAR . AND OPEN_PAR statement CLOSE_PAR   (rule 61)

    AND 	shift, and go to state 1061



state 885

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 130)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 278)

    OPEN_PAR	shift, and go to state 213
    CLOSE_PAR	shift, and go to state 1000
    MUL 	shift, and go to state 1062
    ID  	shift, and go to state 297

    option_identifier_array_declaration	go to state 551
    identifier	go to state 299



state 886

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 716



state 887

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 717



state 888

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 272)

    CLOSE_PAR	shift, and go to state 593
    MUL 	shift, and go to state 718



state 889

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)

    INTDECLARATION	shift, and go to state 831
    CHARDECLARATION	shift, and go to state 1063



state 890

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 130)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 279)

    OPEN_PAR	shift, and go to state 213
    CLOSE_PAR	shift, and go to state 1026
    MUL 	shift, and go to state 296
    ID  	shift, and go to state 297

    option_identifier_array_declaration	go to state 551
    identifier	go to state 299



state 891

    for_sta_condition  ->  pbool_expression .   (rule 448)

    $default	reduce using rule 448 (for_sta_condition)



state 892

    pbool_expression  ->  alg_exp . relation_operator alg_exp   (rule 31)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    NE  	shift, and go to state 378
    EQU 	shift, and go to state 379
    GE  	shift, and go to state 380
    LE  	shift, and go to state 381
    GT  	shift, and go to state 382
    LT  	shift, and go to state 383
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374
    relation_operator	go to state 1064



state 893

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init CHOP for_sta_condition . CHOP for_sta_control CLOSE_PAR big_par   (rule 444)

    CHOP	shift, and go to state 1065



state 894

    for_statement  ->  FOR alg_exp TIMES DO big_par .   (rule 443)

    $default	reduce using rule 443 (for_statement)



state 895

    big_par  ->  OPEN_BPAR statement CLOSE_BPAR .   (rule 422)

    $default	reduce using rule 422 (big_par)



state 896

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL . OPEN_PAR bool_statement CLOSE_PAR   (rule 49)

    OPEN_PAR	shift, and go to state 1066



state 897

    ass_exp  ->  OPEN_PAR ass_exp CLOSE_PAR .   (rule 175)

    $default	reduce using rule 175 (ass_exp)



state 898

    list_exp  ->  OPEN_PAR list_exp CLOSE_PAR .   (rule 237)

    $default	reduce using rule 237 (list_exp)



state 899

    ass_exp  ->  OPEN_PAR string CLOSE_PAR . OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 174)

    OPEN_PAR	shift, and go to state 1067



state 900

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    list_exp  ->  OPEN_PAR . list_exp CLOSE_PAR   (rule 237)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 595
    CHARDECLARATION	shift, and go to state 596
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 597
    OPEN_PAR	shift, and go to state 900
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 598
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 901
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337



state 901

    list_exp  ->  list_exp . CON list_exp   (rule 234)
    list_exp  ->  OPEN_PAR list_exp . CLOSE_PAR   (rule 237)

    CLOSE_PAR	shift, and go to state 898
    CON 	shift, and go to state 696



state 902

    inner_option_list_value  ->  COMMA . alg_exp inner_option_list_value   (rule 246)
    inner_option_list_value  ->  COMMA . string inner_option_list_value   (rule 247)
    inner_option_list_value  ->  COMMA . charliteral inner_option_list_value   (rule 248)
    inner_option_list_value  ->  COMMA . list_exp inner_option_list_value   (rule 249)
    inner_option_list_value  ->  COMMA . error   (rule 251)

    error	shift, and go to state 1068
    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 683
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1069
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 1070
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    string	go to state 1071
    integer	go to state 200
    charliteral	go to state 1072
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 903

    option_struct_list_value  ->  OPEN_BPAR alg_exp inner_option_list_value . CLOSE_BPAR   (rule 242)

    CLOSE_BPAR	shift, and go to state 1073



state 904

    option_struct_list_value  ->  OPEN_BPAR list_exp inner_option_list_value . CLOSE_BPAR   (rule 245)

    CLOSE_BPAR	shift, and go to state 1074



state 905

    option_struct_list_value  ->  OPEN_BPAR string inner_option_list_value . CLOSE_BPAR   (rule 243)

    CLOSE_BPAR	shift, and go to state 1075



state 906

    option_struct_list_value  ->  OPEN_BPAR charliteral inner_option_list_value . CLOSE_BPAR   (rule 244)

    CLOSE_BPAR	shift, and go to state 1076



state 907

    option_list_value  ->  OPEN_MPAR alg_exp inner_option_list_value . CLOSE_MPAR   (rule 238)

    CLOSE_MPAR	shift, and go to state 1077



state 908

    option_list_value  ->  OPEN_MPAR list_exp inner_option_list_value . CLOSE_MPAR   (rule 241)

    CLOSE_MPAR	shift, and go to state 1078



state 909

    option_list_value  ->  OPEN_MPAR string inner_option_list_value . CLOSE_MPAR   (rule 239)

    CLOSE_MPAR	shift, and go to state 1079



state 910

    option_list_value  ->  OPEN_MPAR charliteral inner_option_list_value . CLOSE_MPAR   (rule 240)

    CLOSE_MPAR	shift, and go to state 1080



state 911

    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 595
    CHARDECLARATION	shift, and go to state 596
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 597
    OPEN_PAR	shift, and go to state 1081
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 598
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337



state 912

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift . CLOSE_PAR   (rule 177)

    CLOSE_PAR	shift, and go to state 1082



state 913

    option_output  ->  COMMA ass_exp . option_output   (rule 458)

    COMMA	shift, and go to state 693

    $default	reduce using rule 457 (option_output)

    option_output	go to state 1083



state 914

    display_statement  ->  DISPLAY OPEN_PAR ass_exp option_output CLOSE_PAR .   (rule 456)

    $default	reduce using rule 456 (display_statement)



state 915

    list_exp  ->  OPEN_PAR . list_exp CLOSE_PAR   (rule 237)

    OPEN_PAR	shift, and go to state 915
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448

    list_exp	go to state 901
    option_list_value	go to state 455
    option_struct_list_value	go to state 456



state 916

    list_exp  ->  list_exp . CON list_exp   (rule 234)
    list_exp  ->  list_exp CON list_exp .   (rule 234)


    $default	reduce using rule 234 (list_exp)



state 917

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 394)

    OPEN_PAR	shift, and go to state 1084



state 918

    option_function_parameter_list  ->  ID MUL MUL inner_optional_define_identifier .   (rule 385)

    $default	reduce using rule 385 (option_function_parameter_list)



state 919

    option_function_parameter_list  ->  ID MUL MUL identifier . inner_optional_define_identifier   (rule 378)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1085



state 920

    option_function_parameter_list  ->  ID MUL identifier inner_optional_define_identifier .   (rule 377)

    $default	reduce using rule 377 (option_function_parameter_list)



state 921

    option_function_parameter_list  ->  ID identifier ARRAY inner_optional_define_identifier .   (rule 379)

    $default	reduce using rule 379 (option_function_parameter_list)



state 922

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL inner_optional_define_identifier .   (rule 382)

    $default	reduce using rule 382 (option_function_parameter_list)



state 923

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier . inner_optional_define_identifier   (rule 374)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1086



state 924

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier inner_optional_define_identifier .   (rule 373)

    $default	reduce using rule 373 (option_function_parameter_list)



state 925

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY inner_optional_define_identifier .   (rule 375)

    $default	reduce using rule 375 (option_function_parameter_list)



state 926

    option_function_parameter_list  ->  all_type_define MUL MUL identifier . inner_optional_define_identifier   (rule 393)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1087



state 927

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY . inner_optional_define_identifier   (rule 387)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1088



state 928

    option_function_parameter_list  ->  all_type_define MUL identifier inner_optional_define_identifier .   (rule 391)

    $default	reduce using rule 391 (option_function_parameter_list)



state 929

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR . alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 390)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1089
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 930

    option_function_parameter_list  ->  all_type_define identifier ARRAY inner_optional_define_identifier .   (rule 386)

    $default	reduce using rule 386 (option_function_parameter_list)



state 931

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR alg_exp . CLOSE_MPAR inner_optional_define_identifier   (rule 388)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR alg_exp . COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 389)

    COMMA	shift, and go to state 1090
    CLOSE_MPAR	shift, and go to state 1091
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374



state 932

    option_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR inner_option_array_declaration   (rule 134)

    CLOSE_MPAR	shift, and go to state 1092



state 933

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 264)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 1093
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1094
    INTEGER	shift, and go to state 1095
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1005
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 934

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 267)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 1096
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1097
    INTEGER	shift, and go to state 1098
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1007
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 935

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 266)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1099
    INTEGER	shift, and go to state 1100
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1011
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 936

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 271)

    CLOSE_PAR	shift, and go to state 1101
    MUL 	shift, and go to state 1019



state 937

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 1102
    MUL 	shift, and go to state 1022



state 938

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 113)

    OPEN_PAR	shift, and go to state 1103



state 939

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)
    list  ->  ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 178)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 780
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1104
    alg_operator	go to state 374



state 940

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 112)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 224
    UNSIGNED	shift, and go to state 225
    ID  	shift, and go to state 226
    STRUCT_TYPE	shift, and go to state 227

    $default	reduce using rule 395 (option_function_parameter_list)

    type_define	go to state 228
    sign_type_define	go to state 229
    all_type_define	go to state 230
    option_function_parameter_list	go to state 1105



state 941

    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 441)

    $default	reduce using rule 441 (imply_pre)



state 942

    value_exp  ->  OPEN_PAR value_exp CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 191)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 780
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1106
    alg_operator	go to state 374



state 943

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY list . option_struct_member_exp   (rule 479)

    DOT 	shift, and go to state 791
    IMPLY	shift, and go to state 792

    DOT 	[reduce using rule 484 (option_struct_member_exp)]
    IMPLY	[reduce using rule 484 (option_struct_member_exp)]
    $default	reduce using rule 484 (option_struct_member_exp)

    option_struct_member_exp	go to state 1107



state 944

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier . option_struct_member_exp   (rule 475)

    DOT 	shift, and go to state 791
    IMPLY	shift, and go to state 792

    DOT 	[reduce using rule 484 (option_struct_member_exp)]
    IMPLY	[reduce using rule 484 (option_struct_member_exp)]
    $default	reduce using rule 484 (option_struct_member_exp)

    option_struct_member_exp	go to state 1108



state 945

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR . statement CLOSE_MPAR   (rule 60)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 1109
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114



state 946

    optional_projection  ->  COMMA statement optional_projection .   (rule 436)

    $default	reduce using rule 436 (optional_projection)



state 947

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION big_par .   (rule 63)

    $default	reduce using rule 63 (statement)



state 948

    statement  ->  OPEN_BPAR statement optional_projection CLOSE_BPAR PROJECTION . big_par   (rule 62)

    error	shift, and go to state 22
    OPEN_BPAR	shift, and go to state 443

    big_par	go to state 1110



state 949

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 65)

    OPEN_BPAR	shift, and go to state 1111



state 950

    statement  ->  SEND OPEN_PAR ass_ident COMMA ass_exp . CLOSE_PAR   (rule 72)

    CLOSE_PAR	shift, and go to state 1112



state 951

    statement  ->  RECEIVE OPEN_PAR ass_ident COMMA identifier . CLOSE_PAR   (rule 74)

    CLOSE_PAR	shift, and go to state 1113



state 952

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR   (rule 66)

    ASS_EQU	shift, and go to state 1114



state 953

    statement  ->  CHANNEL identifier OPEN_PAR integer CLOSE_PAR .   (rule 71)

    $default	reduce using rule 71 (statement)



state 954

    statement  ->  PUT OPEN_PAR ass_ident COMMA ass_exp . CLOSE_PAR   (rule 73)

    CLOSE_PAR	shift, and go to state 1115



state 955

    statement  ->  GET OPEN_PAR ass_ident COMMA identifier . CLOSE_PAR   (rule 75)

    CLOSE_PAR	shift, and go to state 1116



state 956

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter COMMA str_func_parameter . CLOSE_PAR   (rule 302)

    CLOSE_PAR	shift, and go to state 1117



state 957

    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter COMMA str_func_parameter . CLOSE_PAR   (rule 303)

    CLOSE_PAR	shift, and go to state 1118



state 958

    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter COMMA str_func_parameter . CLOSE_PAR   (rule 304)

    CLOSE_PAR	shift, and go to state 1119



state 959

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 113)

    CLOSE_PAR	shift, and go to state 938



state 960

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1120
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 961

    value_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR . alg_exp   (rule 192)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1121
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 962

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)

    CLOSE_PAR	shift, and go to state 1122



state 963

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)

    CLOSE_PAR	shift, and go to state 1123



state 964

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)

    CLOSE_PAR	shift, and go to state 1124



state 965

    type_define  ->  INTDECLARATION .   (rule 116)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)

    MUL 	shift, and go to state 1125

    MUL 	[reduce using rule 116 (type_define)]
    $default	reduce using rule 116 (type_define)



state 966

    type_define  ->  CHARDECLARATION .   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)

    MUL 	shift, and go to state 1126

    MUL 	[reduce using rule 118 (type_define)]
    $default	reduce using rule 118 (type_define)



state 967

    option_input  ->  COMMA list . option_input   (rule 466)

    COMMA	shift, and go to state 763

    $default	reduce using rule 464 (option_input)

    option_input	go to state 1127



state 968

    option_input  ->  COMMA identifier . option_input   (rule 465)

    COMMA	shift, and go to state 763

    $default	reduce using rule 464 (option_input)

    option_input	go to state 1128



state 969

    request_statement  ->  REQUEST OPEN_PAR list option_input CLOSE_PAR .   (rule 462)

    $default	reduce using rule 462 (request_statement)



state 970

    request_statement  ->  REQUEST OPEN_PAR identifier option_input CLOSE_PAR .   (rule 460)

    $default	reduce using rule 460 (request_statement)



state 971

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 96)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 415)

    CLOSE_PAR	shift, and go to state 1129



state 972

    inner_option_function_identifier  ->  COMMA error .   (rule 421)

    $default	reduce using rule 421 (inner_option_function_identifier)



state 973

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 96)
    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 178)
    inner_option_function_identifier  ->  COMMA ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 419)
    identifier  ->  ID .   (rule 426)

    OPEN_PAR	shift, and go to state 1130
    OPEN_MPAR	shift, and go to state 295

    $default	reduce using rule 426 (identifier)



state 974

    inner_option_function_identifier  ->  COMMA ass_exp . inner_option_function_identifier   (rule 418)

    COMMA	shift, and go to state 777

    $default	reduce using rule 420 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 1131



state 975

    option_alg_exp  ->  COMMA error .   (rule 186)

    $default	reduce using rule 186 (option_alg_exp)



state 976

    option_alg_exp  ->  COMMA alg_exp . option_alg_exp   (rule 185)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 780
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1132
    alg_operator	go to state 374



state 977

    list  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 178)

    $default	reduce using rule 178 (list)



state 978

    option_identifier_array_declaration  ->  ID ARRAY ASS_EQU list_exp . inner_option_identifier_array_declaration   (rule 126)
    list_exp  ->  list_exp . CON list_exp   (rule 234)

    COMMA	shift, and go to state 554
    CON 	shift, and go to state 696

    COMMA	[reduce using rule 133 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 133 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1133



state 979

    option_identifier_array_declaration  ->  ID ARRAY ASS_EQU string . inner_option_identifier_array_declaration   (rule 127)

    COMMA	shift, and go to state 554

    COMMA	[reduce using rule 133 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 133 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1134



state 980

    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR inner_option_identifier_array_declaration   (rule 123)
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR ASS_EQU list_exp inner_option_identifier_array_declaration   (rule 128)
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR ASS_EQU string inner_option_identifier_array_declaration   (rule 129)

    CLOSE_MPAR	shift, and go to state 1135



state 981

    option_identifier_array_declaration  ->  identifier ASS_EQU ass_exp inner_option_identifier_array_declaration .   (rule 124)

    $default	reduce using rule 124 (option_identifier_array_declaration)



state 982

    option_identifier_array_declaration  ->  identifier ASS_EQU string inner_option_identifier_array_declaration .   (rule 125)

    $default	reduce using rule 125 (option_identifier_array_declaration)



state 983

    option_struct_declaration  ->  sign_declaration AND option_struct_declaration .   (rule 81)

    $default	reduce using rule 81 (option_struct_declaration)



state 984

    option_struct_member_exp  ->  DOT function .   (rule 489)

    $default	reduce using rule 489 (option_struct_member_exp)



state 985

    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 97)
    option_struct_member_exp  ->  DOT list . option_struct_member_exp   (rule 486)

    DOT 	shift, and go to state 791
    OPEN_PAR	shift, and go to state 311
    IMPLY	shift, and go to state 792

    DOT 	[reduce using rule 484 (option_struct_member_exp)]
    IMPLY	[reduce using rule 484 (option_struct_member_exp)]
    $default	reduce using rule 484 (option_struct_member_exp)

    option_struct_member_exp	go to state 1136



state 986

    option_struct_member_exp  ->  DOT identifier . option_struct_member_exp   (rule 485)

    DOT 	shift, and go to state 791
    IMPLY	shift, and go to state 792

    DOT 	[reduce using rule 484 (option_struct_member_exp)]
    IMPLY	[reduce using rule 484 (option_struct_member_exp)]
    $default	reduce using rule 484 (option_struct_member_exp)

    option_struct_member_exp	go to state 1137



state 987

    option_struct_member_exp  ->  IMPLY function .   (rule 490)

    $default	reduce using rule 490 (option_struct_member_exp)



state 988

    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 97)
    option_struct_member_exp  ->  IMPLY list . option_struct_member_exp   (rule 488)

    DOT 	shift, and go to state 791
    OPEN_PAR	shift, and go to state 311
    IMPLY	shift, and go to state 792

    DOT 	[reduce using rule 484 (option_struct_member_exp)]
    IMPLY	[reduce using rule 484 (option_struct_member_exp)]
    $default	reduce using rule 484 (option_struct_member_exp)

    option_struct_member_exp	go to state 1138



state 989

    option_struct_member_exp  ->  IMPLY identifier . option_struct_member_exp   (rule 487)

    DOT 	shift, and go to state 791
    IMPLY	shift, and go to state 792

    DOT 	[reduce using rule 484 (option_struct_member_exp)]
    IMPLY	[reduce using rule 484 (option_struct_member_exp)]
    $default	reduce using rule 484 (option_struct_member_exp)

    option_struct_member_exp	go to state 1139



state 990

    INTERVAL_STATEMENT  ->  OPEN_PAR . INTERVAL_STATEMENT CLOSE_PAR   (rule 92)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 595
    CHARDECLARATION	shift, and go to state 596
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 597
    OPEN_PAR	shift, and go to state 990
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 598
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    INTERVAL_STATEMENT	go to state 991
    SIG_INTERVAL	go to state 805
    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 992
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337



state 991

    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . COMMA INTERVAL_STATEMENT   (rule 88)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . INTER_OR INTERVAL_STATEMENT   (rule 89)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . OVEREP alg_exp   (rule 90)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . OVEREP NON_DETERMINED   (rule 91)
    INTERVAL_STATEMENT  ->  OPEN_PAR INTERVAL_STATEMENT . CLOSE_PAR   (rule 92)

    COMMA	shift, and go to state 993
    CLOSE_PAR	shift, and go to state 1140
    OVEREP	shift, and go to state 995
    INTER_OR	shift, and go to state 996



state 992

    SIG_INTERVAL  ->  alg_exp .   (rule 93)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    factor  ->  OPEN_PAR alg_exp . CLOSE_PAR   (rule 216)

    CLOSE_PAR	shift, and go to state 604
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    CLOSE_PAR	[reduce using rule 93 (SIG_INTERVAL)]
    $default	reduce using rule 93 (SIG_INTERVAL)

    alg_operator	go to state 374



state 993

    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT COMMA . INTERVAL_STATEMENT   (rule 88)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 802
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    INTERVAL_STATEMENT	go to state 1141
    SIG_INTERVAL	go to state 805
    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 806
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 994

    OVER_STATEMENT  ->  big_par OVER OPEN_PAR INTERVAL_STATEMENT CLOSE_PAR .   (rule 85)

    $default	reduce using rule 85 (OVER_STATEMENT)



state 995

    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT OVEREP . alg_exp   (rule 90)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT OVEREP . NON_DETERMINED   (rule 91)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    NON_DETERMINED	shift, and go to state 1142
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1143
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 996

    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT INTER_OR . INTERVAL_STATEMENT   (rule 89)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 802
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    INTERVAL_STATEMENT	go to state 1144
    SIG_INTERVAL	go to state 805
    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 806
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 997

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR . complexProposition CLOSE_BPAR   (rule 24)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 1145



state 998

    optional_exp_else_statement  ->  ELSE . alg_exp   (rule 201)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1146
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 999

    alg_exp  ->  IF bool_statement THEN alg_exp optional_exp_else_statement .   (rule 198)

    $default	reduce using rule 198 (alg_exp)



state 1000

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 276)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1147
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1001

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 278)

    CLOSE_PAR	shift, and go to state 1148



state 1002

    type_cast_alg_exp  ->  simple_alg_exp alg_operator . simple_alg_exp   (rule 200)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    simple_alg_exp	go to state 1149
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1003

    casted_element  ->  MALLOC . OPEN_PAR alg_exp CLOSE_PAR   (rule 281)

    OPEN_PAR	shift, and go to state 1150



state 1004

    casted_element  ->  type_cast_alg_exp .   (rule 280)

    $default	reduce using rule 280 (casted_element)



state 1005

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 264)

    $default	reduce using rule 264 (type_cast)



state 1006

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 270)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1151
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1007

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 267)

    $default	reduce using rule 267 (type_cast)



state 1008

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 273)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1152
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1009

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element .   (rule 269)

    $default	reduce using rule 269 (type_cast)



state 1010

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 275)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1153
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1011

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element .   (rule 266)

    $default	reduce using rule 266 (type_cast)



state 1012

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 272)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1154
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1013

    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 264)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1094
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1005
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1014

    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 267)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1097
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1007
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1015

    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 266)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1099
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1011
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1016

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 1155
    MUL 	shift, and go to state 1022



state 1017

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 262)

    $default	reduce using rule 262 (type_cast)



state 1018

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 265)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1156
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1019

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 271)

    CLOSE_PAR	shift, and go to state 1157



state 1020

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 263)

    $default	reduce using rule 263 (type_cast)



state 1021

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 268)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1158
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1022

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 1159



state 1023

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 260)

    $default	reduce using rule 260 (type_cast)



state 1024

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 261)

    $default	reduce using rule 261 (type_cast)



state 1025

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 277)

    $default	reduce using rule 277 (type_cast)



state 1026

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 279)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1160
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1027

    all_sizeof_type  ->  STRUCT STRUCT_TYPE MUL .   (rule 288)

    $default	reduce using rule 288 (all_sizeof_type)



state 1028

    all_sizeof_type  ->  UNSIGNED INTDECLARATION MUL .   (rule 286)

    $default	reduce using rule 286 (all_sizeof_type)



state 1029

    all_sizeof_type  ->  UNSIGNED CHARDECLARATION MUL .   (rule 287)

    $default	reduce using rule 287 (all_sizeof_type)



state 1030

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  ATAN2 OPEN_PAR alg_exp COMMA alg_exp . CLOSE_PAR   (rule 328)

    CLOSE_PAR	shift, and go to state 1161
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374



state 1031

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  POW OPEN_PAR alg_exp COMMA alg_exp . CLOSE_PAR   (rule 329)

    CLOSE_PAR	shift, and go to state 1162
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374



state 1032

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  FMOD OPEN_PAR alg_exp COMMA alg_exp . CLOSE_PAR   (rule 330)

    CLOSE_PAR	shift, and go to state 1163
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374



state 1033

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  MODF OPEN_PAR alg_exp COMMA alg_exp . CLOSE_PAR   (rule 331)

    CLOSE_PAR	shift, and go to state 1164
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374



state 1034

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    Float_Function  ->  LDEXP OPEN_PAR alg_exp COMMA alg_exp . CLOSE_PAR   (rule 332)

    CLOSE_PAR	shift, and go to state 1165
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374



state 1035

    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)

    CLOSE_PAR	shift, and go to state 1166



state 1036

    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)

    CLOSE_PAR	shift, and go to state 1167



state 1037

    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)

    CLOSE_PAR	shift, and go to state 1168



state 1038

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)

    MUL 	shift, and go to state 1125



state 1039

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)

    MUL 	shift, and go to state 1169



state 1040

    optional_else_statement  ->  ELSE big_par .   (rule 453)

    $default	reduce using rule 453 (optional_else_statement)



state 1041

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)

    MUL 	shift, and go to state 1126



state 1042

    file_statement  ->  FOPEN OPEN_PAR ass_ident COMMA string CLOSE_PAR .   (rule 138)

    $default	reduce using rule 138 (file_statement)



state 1043

    file_statement  ->  FGETS OPEN_PAR identifier COMMA integer COMMA . identifier CLOSE_PAR   (rule 139)

    OPEN_PAR	shift, and go to state 213
    ID  	shift, and go to state 214

    identifier	go to state 1170



state 1044

    file_statement  ->  FPUTS OPEN_PAR identifier COMMA identifier CLOSE_PAR .   (rule 141)

    $default	reduce using rule 141 (file_statement)



state 1045

    file_statement  ->  FPUTC OPEN_PAR list COMMA identifier CLOSE_PAR .   (rule 143)

    $default	reduce using rule 143 (file_statement)



state 1046

    file_statement  ->  FPUTC OPEN_PAR identifier COMMA identifier CLOSE_PAR .   (rule 142)

    $default	reduce using rule 142 (file_statement)



state 1047

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 64)

    OPEN_BPAR	shift, and go to state 1171



state 1048

    inner_optional_define_identifier  ->  COMMA OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 406)

    CLOSE_PAR	shift, and go to state 1172



state 1049

    inner_optional_define_identifier  ->  COMMA ID identifier ARRAY . inner_optional_define_identifier   (rule 401)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1173



state 1050

    inner_optional_define_identifier  ->  COMMA ID identifier inner_optional_define_identifier .   (rule 398)

    $default	reduce using rule 398 (inner_optional_define_identifier)



state 1051

    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier . inner_optional_define_identifier   (rule 400)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1174



state 1052

    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY . inner_optional_define_identifier   (rule 402)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1175



state 1053

    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE identifier inner_optional_define_identifier .   (rule 399)

    $default	reduce using rule 399 (inner_optional_define_identifier)



state 1054

    inner_optional_define_identifier  ->  COMMA all_type_define MUL inner_optional_define_identifier .   (rule 412)

    $default	reduce using rule 412 (inner_optional_define_identifier)



state 1055

    inner_optional_define_identifier  ->  COMMA all_type_define MUL identifier . ARRAY inner_optional_define_identifier   (rule 404)
    inner_optional_define_identifier  ->  COMMA all_type_define MUL identifier . inner_optional_define_identifier   (rule 405)
    inner_optional_define_identifier  ->  COMMA all_type_define MUL identifier . inner_optional_define_identifier   (rule 411)

    ARRAY	shift, and go to state 1176
    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1177



state 1056

    inner_optional_define_identifier  ->  COMMA all_type_define identifier ARRAY . inner_optional_define_identifier   (rule 403)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier ARRAY . OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 410)

    COMMA	shift, and go to state 427
    OPEN_MPAR	shift, and go to state 1178

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1179



state 1057

    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 408)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 409)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1180
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1058

    inner_optional_define_identifier  ->  COMMA all_type_define identifier inner_optional_define_identifier .   (rule 396)

    $default	reduce using rule 396 (inner_optional_define_identifier)



state 1059

    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)
    statement  ->  EXIST identifier inner_optional_define_identifier COLON OPEN_BPAR statement . CLOSE_BPAR   (rule 77)

    CLOSE_BPAR	shift, and go to state 1181
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303



state 1060

    optional_frame_identifier  ->  COMMA identifier optional_frame_identifier .   (rule 432)

    $default	reduce using rule 432 (optional_frame_identifier)



state 1061

    statement  ->  FRAME OPEN_PAR identifier optional_frame_identifier CLOSE_PAR AND . OPEN_PAR statement CLOSE_PAR   (rule 61)

    OPEN_PAR	shift, and go to state 1182



state 1062

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 130)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 278)

    OPEN_PAR	shift, and go to state 213
    CLOSE_PAR	shift, and go to state 1148
    MUL 	shift, and go to state 296
    ID  	shift, and go to state 297

    option_identifier_array_declaration	go to state 551
    identifier	go to state 299



state 1063

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 835
    MUL 	shift, and go to state 937



state 1064

    pbool_expression  ->  alg_exp relation_operator . alg_exp   (rule 31)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1183
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1065

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init CHOP for_sta_condition CHOP . for_sta_control CLOSE_PAR big_par   (rule 444)

    OPEN_PAR	shift, and go to state 416
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 283
    ID  	shift, and go to state 278

    $default	reduce using rule 451 (for_sta_control)

    ass_statement	go to state 1184
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 285
    value_exp	go to state 98
    identifier	go to state 107
    for_sta_control	go to state 1185
    struct_member_exp	go to state 114



state 1066

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR . bool_statement CLOSE_PAR   (rule 49)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 191
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    file_statement	go to state 194
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 195
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 1186
    prime_bool_statement	go to state 198
    identifier	go to state 167
    string	go to state 199
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1067

    ass_exp  ->  OPEN_PAR string CLOSE_PAR OPEN_PAR . type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 174)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51

    type_define	go to state 1187



state 1068

    inner_option_list_value  ->  COMMA error .   (rule 251)

    $default	reduce using rule 251 (inner_option_list_value)



state 1069

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    inner_option_list_value  ->  COMMA alg_exp . inner_option_list_value   (rule 246)

    COMMA	shift, and go to state 902
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 250 (inner_option_list_value)

    alg_operator	go to state 374
    inner_option_list_value	go to state 1188



state 1070

    list_exp  ->  list_exp . CON list_exp   (rule 234)
    inner_option_list_value  ->  COMMA list_exp . inner_option_list_value   (rule 249)

    COMMA	shift, and go to state 902
    CON 	shift, and go to state 696

    $default	reduce using rule 250 (inner_option_list_value)

    inner_option_list_value	go to state 1189



state 1071

    inner_option_list_value  ->  COMMA string . inner_option_list_value   (rule 247)

    COMMA	shift, and go to state 902

    $default	reduce using rule 250 (inner_option_list_value)

    inner_option_list_value	go to state 1190



state 1072

    factor  ->  charliteral .   (rule 218)
    inner_option_list_value  ->  COMMA charliteral . inner_option_list_value   (rule 248)

    COMMA	shift, and go to state 902

    COMMA	[reduce using rule 218 (factor)]
    CLOSE_BPAR	reduce using rule 218 (factor)
    CLOSE_BPAR	[reduce using rule 250 (inner_option_list_value)]
    CLOSE_MPAR	reduce using rule 218 (factor)
    CLOSE_MPAR	[reduce using rule 250 (inner_option_list_value)]
    $default	reduce using rule 218 (factor)

    inner_option_list_value	go to state 1191



state 1073

    option_struct_list_value  ->  OPEN_BPAR alg_exp inner_option_list_value CLOSE_BPAR .   (rule 242)

    $default	reduce using rule 242 (option_struct_list_value)



state 1074

    option_struct_list_value  ->  OPEN_BPAR list_exp inner_option_list_value CLOSE_BPAR .   (rule 245)

    $default	reduce using rule 245 (option_struct_list_value)



state 1075

    option_struct_list_value  ->  OPEN_BPAR string inner_option_list_value CLOSE_BPAR .   (rule 243)

    $default	reduce using rule 243 (option_struct_list_value)



state 1076

    option_struct_list_value  ->  OPEN_BPAR charliteral inner_option_list_value CLOSE_BPAR .   (rule 244)

    $default	reduce using rule 244 (option_struct_list_value)



state 1077

    option_list_value  ->  OPEN_MPAR alg_exp inner_option_list_value CLOSE_MPAR .   (rule 238)

    $default	reduce using rule 238 (option_list_value)



state 1078

    option_list_value  ->  OPEN_MPAR list_exp inner_option_list_value CLOSE_MPAR .   (rule 241)

    $default	reduce using rule 241 (option_list_value)



state 1079

    option_list_value  ->  OPEN_MPAR string inner_option_list_value CLOSE_MPAR .   (rule 239)

    $default	reduce using rule 239 (option_list_value)



state 1080

    option_list_value  ->  OPEN_MPAR charliteral inner_option_list_value CLOSE_MPAR .   (rule 240)

    $default	reduce using rule 240 (option_list_value)



state 1081

    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 886
    CHARDECLARATION	shift, and go to state 887
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 888
    OPEN_PAR	shift, and go to state 328
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 889
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337



state 1082

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift CLOSE_PAR .   (rule 177)

    $default	reduce using rule 177 (rightaddrshift)



state 1083

    option_output  ->  COMMA ass_exp option_output .   (rule 458)

    $default	reduce using rule 458 (option_output)



state 1084

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 394)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 224
    UNSIGNED	shift, and go to state 225
    ID  	shift, and go to state 226
    STRUCT_TYPE	shift, and go to state 227

    $default	reduce using rule 395 (option_function_parameter_list)

    type_define	go to state 228
    sign_type_define	go to state 229
    all_type_define	go to state 230
    option_function_parameter_list	go to state 1192



state 1085

    option_function_parameter_list  ->  ID MUL MUL identifier inner_optional_define_identifier .   (rule 378)

    $default	reduce using rule 378 (option_function_parameter_list)



state 1086

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier inner_optional_define_identifier .   (rule 374)

    $default	reduce using rule 374 (option_function_parameter_list)



state 1087

    option_function_parameter_list  ->  all_type_define MUL MUL identifier inner_optional_define_identifier .   (rule 393)

    $default	reduce using rule 393 (option_function_parameter_list)



state 1088

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY inner_optional_define_identifier .   (rule 387)

    $default	reduce using rule 387 (option_function_parameter_list)



state 1089

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR alg_exp . CLOSE_MPAR inner_optional_define_identifier   (rule 390)

    CLOSE_MPAR	shift, and go to state 1193
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374



state 1090

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR alg_exp COMMA . alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 389)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1194
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1091

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR alg_exp CLOSE_MPAR . inner_optional_define_identifier   (rule 388)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1195



state 1092

    option_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR . inner_option_array_declaration   (rule 134)

    COMMA	shift, and go to state 1196

    COMMA	[reduce using rule 136 (inner_option_array_declaration)]
    $default	reduce using rule 136 (inner_option_array_declaration)

    inner_option_array_declaration	go to state 1197



state 1093

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 324
    CHARDECLARATION	shift, and go to state 325
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 327
    OPEN_PAR	shift, and go to state 1198
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 329
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337



state 1094

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 96)
    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 178)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    identifier  ->  ID .   (rule 426)

    OPEN_PAR	shift, and go to state 294
    CLOSE_PAR	shift, and go to state 1199
    OPEN_MPAR	shift, and go to state 295

    CLOSE_PAR	[reduce using rule 426 (identifier)]
    $default	reduce using rule 426 (identifier)



state 1095

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    integer  ->  INTEGER .   (rule 429)

    CLOSE_PAR	shift, and go to state 1200

    CLOSE_PAR	[reduce using rule 429 (integer)]
    $default	reduce using rule 429 (integer)



state 1096

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 324
    CHARDECLARATION	shift, and go to state 325
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 327
    OPEN_PAR	shift, and go to state 1201
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 329
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337



state 1097

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 96)
    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 178)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    identifier  ->  ID .   (rule 426)

    OPEN_PAR	shift, and go to state 294
    CLOSE_PAR	shift, and go to state 1202
    OPEN_MPAR	shift, and go to state 295

    CLOSE_PAR	[reduce using rule 426 (identifier)]
    $default	reduce using rule 426 (identifier)



state 1098

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    integer  ->  INTEGER .   (rule 429)

    CLOSE_PAR	shift, and go to state 1203

    CLOSE_PAR	[reduce using rule 429 (integer)]
    $default	reduce using rule 429 (integer)



state 1099

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 96)
    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 178)
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    identifier  ->  ID .   (rule 426)

    OPEN_PAR	shift, and go to state 294
    CLOSE_PAR	shift, and go to state 1204
    OPEN_MPAR	shift, and go to state 295

    CLOSE_PAR	[reduce using rule 426 (identifier)]
    $default	reduce using rule 426 (identifier)



state 1100

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    integer  ->  INTEGER .   (rule 429)

    CLOSE_PAR	shift, and go to state 1205

    CLOSE_PAR	[reduce using rule 429 (integer)]
    $default	reduce using rule 429 (integer)



state 1101

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 265)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1206
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1156
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1102

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 268)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 1207
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1208
    INTEGER	shift, and go to state 1209
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1158
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1103

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 113)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 224
    UNSIGNED	shift, and go to state 225
    ID  	shift, and go to state 226
    STRUCT_TYPE	shift, and go to state 227

    $default	reduce using rule 395 (option_function_parameter_list)

    type_define	go to state 228
    sign_type_define	go to state 229
    all_type_define	go to state 230
    option_function_parameter_list	go to state 1210



state 1104

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)
    list  ->  ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 178)

    CLOSE_MPAR	shift, and go to state 1211



state 1105

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 112)

    CLOSE_PAR	shift, and go to state 1212



state 1106

    value_exp  ->  OPEN_PAR value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 191)

    CLOSE_MPAR	shift, and go to state 1213



state 1107

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY list option_struct_member_exp .   (rule 479)

    $default	reduce using rule 479 (struct_member_exp)



state 1108

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp .   (rule 475)

    $default	reduce using rule 475 (struct_member_exp)



state 1109

    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement . CLOSE_MPAR   (rule 60)

    CLOSE_MPAR	shift, and go to state 1214
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303



state 1110

    statement  ->  OPEN_BPAR statement optional_projection CLOSE_BPAR PROJECTION big_par .   (rule 62)

    $default	reduce using rule 62 (statement)



state 1111

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 65)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 1215
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114



state 1112

    statement  ->  SEND OPEN_PAR ass_ident COMMA ass_exp CLOSE_PAR .   (rule 72)

    $default	reduce using rule 72 (statement)



state 1113

    statement  ->  RECEIVE OPEN_PAR ass_ident COMMA identifier CLOSE_PAR .   (rule 74)

    $default	reduce using rule 74 (statement)



state 1114

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 66)

    OPEN_BPAR	shift, and go to state 1216



state 1115

    statement  ->  PUT OPEN_PAR ass_ident COMMA ass_exp CLOSE_PAR .   (rule 73)

    $default	reduce using rule 73 (statement)



state 1116

    statement  ->  GET OPEN_PAR ass_ident COMMA identifier CLOSE_PAR .   (rule 75)

    $default	reduce using rule 75 (statement)



state 1117

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR .   (rule 302)

    $default	reduce using rule 302 (String_Function_cat)



state 1118

    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR .   (rule 303)

    $default	reduce using rule 303 (String_Function_cmp)



state 1119

    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR .   (rule 304)

    $default	reduce using rule 304 (String_Function_cpy)



state 1120

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 780
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1217
    alg_operator	go to state 374



state 1121

    value_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR alg_exp .   (rule 192)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 192 (value_exp)]
    SUB 	[reduce using rule 192 (value_exp)]
    $default	reduce using rule 192 (value_exp)

    alg_operator	go to state 374



state 1122

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)

    OPEN_PAR	shift, and go to state 1218
    ID  	shift, and go to state 1219
    INTEGER	shift, and go to state 1220



state 1123

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)

    OPEN_PAR	shift, and go to state 1221
    ID  	shift, and go to state 1222
    INTEGER	shift, and go to state 1223



state 1124

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)
    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)

    ID  	shift, and go to state 1224
    INTEGER	shift, and go to state 1225



state 1125

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)

    CLOSE_PAR	shift, and go to state 1226



state 1126

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)

    CLOSE_PAR	shift, and go to state 1227



state 1127

    option_input  ->  COMMA list option_input .   (rule 466)

    $default	reduce using rule 466 (option_input)



state 1128

    option_input  ->  COMMA identifier option_input .   (rule 465)

    $default	reduce using rule 465 (option_input)



state 1129

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 96)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 415)

    COMMA	shift, and go to state 777

    COMMA	[reduce using rule 96 (function)]
    CLOSE_PAR	reduce using rule 96 (function)
    CLOSE_PAR	[reduce using rule 420 (inner_option_function_identifier)]
    $default	reduce using rule 96 (function)

    inner_option_function_identifier	go to state 1228



state 1130

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 96)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 419)

    IF  	shift, and go to state 120
    EMPTY	shift, and go to state 186
    POINTERNULL	shift, and go to state 187
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 188
    MY_TRUE	shift, and go to state 189
    MY_FALSE	shift, and go to state 190
    OPEN_PAR	shift, and go to state 446
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 546
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 449
    BNE 	shift, and go to state 150
    NEGATION	shift, and go to state 192
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 547
    STR 	shift, and go to state 193
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    $default	reduce using rule 416 (option_function_identifier)

    function	go to state 155
    file_statement	go to state 450
    ass_exp	go to state 548
    rightaddrshift	go to state 452
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 453
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    list_exp	go to state 454
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 196
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    bool_statement	go to state 457
    prime_bool_statement	go to state 198
    option_function_identifier	go to state 1229
    identifier	go to state 167
    string	go to state 458
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 459



state 1131

    inner_option_function_identifier  ->  COMMA ass_exp inner_option_function_identifier .   (rule 418)

    $default	reduce using rule 418 (inner_option_function_identifier)



state 1132

    option_alg_exp  ->  COMMA alg_exp option_alg_exp .   (rule 185)

    $default	reduce using rule 185 (option_alg_exp)



state 1133

    option_identifier_array_declaration  ->  ID ARRAY ASS_EQU list_exp inner_option_identifier_array_declaration .   (rule 126)

    $default	reduce using rule 126 (option_identifier_array_declaration)



state 1134

    option_identifier_array_declaration  ->  ID ARRAY ASS_EQU string inner_option_identifier_array_declaration .   (rule 127)

    $default	reduce using rule 127 (option_identifier_array_declaration)



state 1135

    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR . inner_option_identifier_array_declaration   (rule 123)
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR . ASS_EQU list_exp inner_option_identifier_array_declaration   (rule 128)
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR . ASS_EQU string inner_option_identifier_array_declaration   (rule 129)

    COMMA	shift, and go to state 554
    ASS_EQU	shift, and go to state 1230

    COMMA	[reduce using rule 133 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 133 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1231



state 1136

    option_struct_member_exp  ->  DOT list option_struct_member_exp .   (rule 486)

    $default	reduce using rule 486 (option_struct_member_exp)



state 1137

    option_struct_member_exp  ->  DOT identifier option_struct_member_exp .   (rule 485)

    $default	reduce using rule 485 (option_struct_member_exp)



state 1138

    option_struct_member_exp  ->  IMPLY list option_struct_member_exp .   (rule 488)

    $default	reduce using rule 488 (option_struct_member_exp)



state 1139

    option_struct_member_exp  ->  IMPLY identifier option_struct_member_exp .   (rule 487)

    $default	reduce using rule 487 (option_struct_member_exp)



state 1140

    INTERVAL_STATEMENT  ->  OPEN_PAR INTERVAL_STATEMENT CLOSE_PAR .   (rule 92)

    $default	reduce using rule 92 (INTERVAL_STATEMENT)



state 1141

    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . COMMA INTERVAL_STATEMENT   (rule 88)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT COMMA INTERVAL_STATEMENT .   (rule 88)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . INTER_OR INTERVAL_STATEMENT   (rule 89)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . OVEREP alg_exp   (rule 90)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . OVEREP NON_DETERMINED   (rule 91)

    OVEREP	shift, and go to state 995
    INTER_OR	shift, and go to state 996

    $default	reduce using rule 88 (INTERVAL_STATEMENT)



state 1142

    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT OVEREP NON_DETERMINED .   (rule 91)

    $default	reduce using rule 91 (INTERVAL_STATEMENT)



state 1143

    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT OVEREP alg_exp .   (rule 90)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 90 (INTERVAL_STATEMENT)

    alg_operator	go to state 374



state 1144

    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . COMMA INTERVAL_STATEMENT   (rule 88)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . INTER_OR INTERVAL_STATEMENT   (rule 89)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT INTER_OR INTERVAL_STATEMENT .   (rule 89)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . OVEREP alg_exp   (rule 90)
    INTERVAL_STATEMENT  ->  INTERVAL_STATEMENT . OVEREP NON_DETERMINED   (rule 91)

    OVEREP	shift, and go to state 995

    $default	reduce using rule 89 (INTERVAL_STATEMENT)



state 1145

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition . CLOSE_BPAR   (rule 24)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 27)

    CLOSE_BPAR	shift, and go to state 1232
    CHOP	shift, and go to state 179
    IFF 	shift, and go to state 180
    PROPIMPLY	shift, and go to state 181
    OR  	shift, and go to state 182
    AND 	shift, and go to state 183
    CHOPSTAR	shift, and go to state 184



state 1146

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    optional_exp_else_statement  ->  ELSE alg_exp .   (rule 201)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    ADD 	[reduce using rule 201 (optional_exp_else_statement)]
    SUB 	[reduce using rule 201 (optional_exp_else_statement)]
    $default	reduce using rule 201 (optional_exp_else_statement)

    alg_operator	go to state 374



state 1147

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 276)

    $default	reduce using rule 276 (type_cast)



state 1148

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 278)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1233
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1149

    type_cast_alg_exp  ->  simple_alg_exp alg_operator simple_alg_exp .   (rule 200)
    simple_alg_exp  ->  simple_alg_exp . mul_operator factor   (rule 204)

    INTER_OR	shift, and go to state 375
    CON 	shift, and go to state 376
    ADDRESS	shift, and go to state 377
    LST 	shift, and go to state 384
    RST 	shift, and go to state 385
    MUL 	shift, and go to state 386
    DIV 	shift, and go to state 387
    MOD 	shift, and go to state 388

    INTER_OR	[reduce using rule 200 (type_cast_alg_exp)]
    CON 	[reduce using rule 200 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 200 (type_cast_alg_exp)]
    LST 	[reduce using rule 200 (type_cast_alg_exp)]
    RST 	[reduce using rule 200 (type_cast_alg_exp)]
    MUL 	[reduce using rule 200 (type_cast_alg_exp)]
    DIV 	[reduce using rule 200 (type_cast_alg_exp)]
    MOD 	[reduce using rule 200 (type_cast_alg_exp)]
    $default	reduce using rule 200 (type_cast_alg_exp)

    mul_operator	go to state 389



state 1150

    casted_element  ->  MALLOC OPEN_PAR . alg_exp CLOSE_PAR   (rule 281)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1234
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1151

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 270)

    $default	reduce using rule 270 (type_cast)



state 1152

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 273)

    $default	reduce using rule 273 (type_cast)



state 1153

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 275)

    $default	reduce using rule 275 (type_cast)



state 1154

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 272)

    $default	reduce using rule 272 (type_cast)



state 1155

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 268)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1208
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1158
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1156

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 265)

    $default	reduce using rule 265 (type_cast)



state 1157

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 271)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1235
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1158

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 268)

    $default	reduce using rule 268 (type_cast)



state 1159

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 274)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1236
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1160

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 279)

    $default	reduce using rule 279 (type_cast)



state 1161

    Float_Function  ->  ATAN2 OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR .   (rule 328)

    $default	reduce using rule 328 (Float_Function)



state 1162

    Float_Function  ->  POW OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR .   (rule 329)

    $default	reduce using rule 329 (Float_Function)



state 1163

    Float_Function  ->  FMOD OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR .   (rule 330)

    $default	reduce using rule 330 (Float_Function)



state 1164

    Float_Function  ->  MODF OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR .   (rule 331)

    $default	reduce using rule 331 (Float_Function)



state 1165

    Float_Function  ->  LDEXP OPEN_PAR alg_exp COMMA alg_exp CLOSE_PAR .   (rule 332)

    $default	reduce using rule 332 (Float_Function)



state 1166

    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)

    ID  	shift, and go to state 1219



state 1167

    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)

    ID  	shift, and go to state 1222



state 1168

    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)

    ID  	shift, and go to state 1224



state 1169

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)

    CLOSE_PAR	shift, and go to state 1237



state 1170

    file_statement  ->  FGETS OPEN_PAR identifier COMMA integer COMMA identifier . CLOSE_PAR   (rule 139)

    CLOSE_PAR	shift, and go to state 1238



state 1171

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 64)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    CLOSE_BPAR	reduce using rule 95 (empty_statement)

    statement	go to state 1239
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    empty_statement	go to state 1240
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114



state 1172

    inner_optional_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 406)

    OPEN_PAR	shift, and go to state 1241



state 1173

    inner_optional_define_identifier  ->  COMMA ID identifier ARRAY inner_optional_define_identifier .   (rule 401)

    $default	reduce using rule 401 (inner_optional_define_identifier)



state 1174

    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier inner_optional_define_identifier .   (rule 400)

    $default	reduce using rule 400 (inner_optional_define_identifier)



state 1175

    inner_optional_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY inner_optional_define_identifier .   (rule 402)

    $default	reduce using rule 402 (inner_optional_define_identifier)



state 1176

    inner_optional_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY . inner_optional_define_identifier   (rule 404)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1242



state 1177

    inner_optional_define_identifier  ->  COMMA all_type_define MUL identifier inner_optional_define_identifier .   (rule 405)
    inner_optional_define_identifier  ->  COMMA all_type_define MUL identifier inner_optional_define_identifier .   (rule 411)

    $   	reduce using rule 405 (inner_optional_define_identifier)
    $   	[reduce using rule 411 (inner_optional_define_identifier)]
    COMMA	reduce using rule 405 (inner_optional_define_identifier)
    COMMA	[reduce using rule 411 (inner_optional_define_identifier)]
    COLON	reduce using rule 405 (inner_optional_define_identifier)
    COLON	[reduce using rule 411 (inner_optional_define_identifier)]
    CLOSE_PAR	reduce using rule 405 (inner_optional_define_identifier)
    CLOSE_PAR	[reduce using rule 411 (inner_optional_define_identifier)]
    CLOSE_BPAR	reduce using rule 405 (inner_optional_define_identifier)
    CLOSE_BPAR	[reduce using rule 411 (inner_optional_define_identifier)]
    CLOSE_MPAR	reduce using rule 405 (inner_optional_define_identifier)
    CLOSE_MPAR	[reduce using rule 411 (inner_optional_define_identifier)]
    CHOP	reduce using rule 405 (inner_optional_define_identifier)
    CHOP	[reduce using rule 411 (inner_optional_define_identifier)]
    OR  	reduce using rule 405 (inner_optional_define_identifier)
    OR  	[reduce using rule 411 (inner_optional_define_identifier)]
    PARALLEL	reduce using rule 405 (inner_optional_define_identifier)
    PARALLEL	[reduce using rule 411 (inner_optional_define_identifier)]
    AND 	reduce using rule 405 (inner_optional_define_identifier)
    AND 	[reduce using rule 411 (inner_optional_define_identifier)]
    $default	reduce using rule 405 (inner_optional_define_identifier)



state 1178

    inner_optional_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR . alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 410)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1243
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1179

    inner_optional_define_identifier  ->  COMMA all_type_define identifier ARRAY inner_optional_define_identifier .   (rule 403)

    $default	reduce using rule 403 (inner_optional_define_identifier)



state 1180

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR alg_exp . CLOSE_MPAR inner_optional_define_identifier   (rule 408)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR alg_exp . COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 409)

    COMMA	shift, and go to state 1244
    CLOSE_MPAR	shift, and go to state 1245
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374



state 1181

    statement  ->  EXIST identifier inner_optional_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR .   (rule 77)

    $default	reduce using rule 77 (statement)



state 1182

    statement  ->  FRAME OPEN_PAR identifier optional_frame_identifier CLOSE_PAR AND OPEN_PAR . statement CLOSE_PAR   (rule 61)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    statement	go to state 1246
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114



state 1183

    pbool_expression  ->  alg_exp relation_operator alg_exp .   (rule 31)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 31 (pbool_expression)

    alg_operator	go to state 374



state 1184

    for_sta_control  ->  ass_statement .   (rule 450)

    $default	reduce using rule 450 (for_sta_control)



state 1185

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init CHOP for_sta_condition CHOP for_sta_control . CLOSE_PAR big_par   (rule 444)

    CLOSE_PAR	shift, and go to state 1247



state 1186

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_statement . CLOSE_PAR   (rule 49)
    bool_statement  ->  bool_statement . AND bool_statement   (rule 348)
    bool_statement  ->  bool_statement . OR bool_statement   (rule 349)

    CLOSE_PAR	shift, and go to state 1248
    OR  	shift, and go to state 407
    AND 	shift, and go to state 408



state 1187

    ass_exp  ->  OPEN_PAR string CLOSE_PAR OPEN_PAR type_define . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 174)

    CLOSE_PAR	shift, and go to state 1249



state 1188

    inner_option_list_value  ->  COMMA alg_exp inner_option_list_value .   (rule 246)

    $default	reduce using rule 246 (inner_option_list_value)



state 1189

    inner_option_list_value  ->  COMMA list_exp inner_option_list_value .   (rule 249)

    $default	reduce using rule 249 (inner_option_list_value)



state 1190

    inner_option_list_value  ->  COMMA string inner_option_list_value .   (rule 247)

    $default	reduce using rule 247 (inner_option_list_value)



state 1191

    inner_option_list_value  ->  COMMA charliteral inner_option_list_value .   (rule 248)

    $default	reduce using rule 248 (inner_option_list_value)



state 1192

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_optional_define_identifier   (rule 394)

    CLOSE_PAR	shift, and go to state 1250



state 1193

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR alg_exp CLOSE_MPAR . inner_optional_define_identifier   (rule 390)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1251



state 1194

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR alg_exp COMMA alg_exp . CLOSE_MPAR inner_optional_define_identifier   (rule 389)

    CLOSE_MPAR	shift, and go to state 1252
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374



state 1195

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier .   (rule 388)

    $default	reduce using rule 388 (option_function_parameter_list)



state 1196

    inner_option_array_declaration  ->  COMMA . ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_array_declaration   (rule 135)
    inner_option_array_declaration  ->  COMMA . error   (rule 137)

    error	shift, and go to state 1253
    ID  	shift, and go to state 1254



state 1197

    option_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_array_declaration .   (rule 134)

    $default	reduce using rule 134 (option_array_declaration)



state 1198

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 1255
    CHARDECLARATION	shift, and go to state 1256
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 597
    OPEN_PAR	shift, and go to state 328
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 1257
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337



state 1199

    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)

    OPEN_MPAR	shift, and go to state 1258



state 1200

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)

    OPEN_MPAR	shift, and go to state 1259



state 1201

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 1260
    CHARDECLARATION	shift, and go to state 1261
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 597
    OPEN_PAR	shift, and go to state 328
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 1262
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337



state 1202

    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)

    OPEN_MPAR	shift, and go to state 1263



state 1203

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)

    OPEN_MPAR	shift, and go to state 1264



state 1204

    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)

    OPEN_MPAR	shift, and go to state 1265



state 1205

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)

    OPEN_MPAR	shift, and go to state 1266



state 1206

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 96)
    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 178)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    identifier  ->  ID .   (rule 426)

    OPEN_PAR	shift, and go to state 294
    CLOSE_PAR	shift, and go to state 1267
    OPEN_MPAR	shift, and go to state 295

    CLOSE_PAR	[reduce using rule 426 (identifier)]
    $default	reduce using rule 426 (identifier)



state 1207

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 324
    CHARDECLARATION	shift, and go to state 325
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 327
    OPEN_PAR	shift, and go to state 1268
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 329
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337



state 1208

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 96)
    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 178)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    identifier  ->  ID .   (rule 426)

    OPEN_PAR	shift, and go to state 294
    CLOSE_PAR	shift, and go to state 1269
    OPEN_MPAR	shift, and go to state 295

    CLOSE_PAR	[reduce using rule 426 (identifier)]
    $default	reduce using rule 426 (identifier)



state 1209

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    integer  ->  INTEGER .   (rule 429)

    CLOSE_PAR	shift, and go to state 1270

    CLOSE_PAR	[reduce using rule 429 (integer)]
    $default	reduce using rule 429 (integer)



state 1210

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 113)

    CLOSE_PAR	shift, and go to state 1271



state 1211

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)
    list  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 178)

    CLOSE_PAR	shift, and go to state 1272

    CLOSE_PAR	[reduce using rule 178 (list)]
    $default	reduce using rule 178 (list)



state 1212

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 112)

    $default	reduce using rule 112 (declaration)



state 1213

    value_exp  ->  OPEN_PAR value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 191)

    $default	reduce using rule 191 (value_exp)



state 1214

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR .   (rule 60)

    $default	reduce using rule 60 (statement)



state 1215

    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)
    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 65)

    CLOSE_BPAR	shift, and go to state 1273
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303



state 1216

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 66)

    error	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 37
    MY_FALSE	shift, and go to state 38
    EXIST	shift, and go to state 39
    FRAME	shift, and go to state 40
    FOR 	shift, and go to state 41
    WHILE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    POINTERDECLARATION	shift, and go to state 48
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    LISTDECLARATION	shift, and go to state 52
    OPEN_PAR	shift, and go to state 53
    OPEN_BPAR	shift, and go to state 54
    FUNCTION	shift, and go to state 55
    SEND	shift, and go to state 56
    RECEIVE	shift, and go to state 57
    PROCESS	shift, and go to state 58
    CHANNEL	shift, and go to state 59
    PUT 	shift, and go to state 60
    GET 	shift, and go to state 61
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SYSTEM	shift, and go to state 68
    UNSIGNED	shift, and go to state 69
    SIGNED	shift, and go to state 70
    FREE	shift, and go to state 71
    MUL 	shift, and go to state 72
    NEXT	shift, and go to state 73
    LENGTH	shift, and go to state 74
    REQUEST	shift, and go to state 75
    FINAL	shift, and go to state 76
    KEEP	shift, and go to state 77
    ALWAYS	shift, and go to state 78
    HALT	shift, and go to state 79
    W_NEXT	shift, and go to state 80
    PREFIX	shift, and go to state 81
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 83

    CLOSE_BPAR	reduce using rule 95 (empty_statement)

    statement	go to state 1239
    CYLINDER_STATEMENT	go to state 85
    OVER_STATEMENT	go to state 86
    empty_statement	go to state 1274
    function	go to state 87
    struct_define_statement	go to state 88
    struct_identifier	go to state 89
    sign_declaration	go to state 90
    declaration	go to state 91
    type_define	go to state 92
    file_statement	go to state 93
    ass_statement	go to state 94
    ass_ident	go to state 95
    leftaddrshift	go to state 96
    list	go to state 97
    value_exp	go to state 98
    String_Function	go to state 99
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    big_par	go to state 106
    identifier	go to state 107
    while_statement	go to state 108
    for_statement	go to state 109
    extend_for_statement	go to state 110
    if_statement	go to state 111
    display_statement	go to state 112
    request_statement	go to state 113
    struct_member_exp	go to state 114



state 1217

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)

    CLOSE_MPAR	shift, and go to state 1275



state 1218

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)

    OPEN_PAR	shift, and go to state 1276



state 1219

    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)

    CLOSE_PAR	shift, and go to state 1199



state 1220

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 155)

    CLOSE_PAR	shift, and go to state 1200



state 1221

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)

    OPEN_PAR	shift, and go to state 1277



state 1222

    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)

    CLOSE_PAR	shift, and go to state 1202



state 1223

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 153)

    CLOSE_PAR	shift, and go to state 1203



state 1224

    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)

    CLOSE_PAR	shift, and go to state 1204



state 1225

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 156)

    CLOSE_PAR	shift, and go to state 1205



state 1226

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)

    ID  	shift, and go to state 1278



state 1227

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)

    OPEN_PAR	shift, and go to state 1279
    ID  	shift, and go to state 1280
    INTEGER	shift, and go to state 1281



state 1228

    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 415)

    $default	reduce using rule 415 (option_function_identifier)



state 1229

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 96)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 419)

    CLOSE_PAR	shift, and go to state 1282



state 1230

    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU . list_exp inner_option_identifier_array_declaration   (rule 128)
    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU . string inner_option_identifier_array_declaration   (rule 129)

    OPEN_PAR	shift, and go to state 915
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448
    STR 	shift, and go to state 193

    list_exp	go to state 1283
    option_list_value	go to state 455
    option_struct_list_value	go to state 456
    string	go to state 1284



state 1231

    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_identifier_array_declaration .   (rule 123)

    $default	reduce using rule 123 (option_identifier_array_declaration)



state 1232

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR .   (rule 24)

    $default	reduce using rule 24 (complexProposition)



state 1233

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 278)

    $default	reduce using rule 278 (type_cast)



state 1234

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    casted_element  ->  MALLOC OPEN_PAR alg_exp . CLOSE_PAR   (rule 281)

    CLOSE_PAR	shift, and go to state 1285
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374



state 1235

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 271)

    $default	reduce using rule 271 (type_cast)



state 1236

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 274)

    $default	reduce using rule 274 (type_cast)



state 1237

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)

    ID  	shift, and go to state 1280



state 1238

    file_statement  ->  FGETS OPEN_PAR identifier COMMA integer COMMA identifier CLOSE_PAR .   (rule 139)

    $default	reduce using rule 139 (file_statement)



state 1239

    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)
    empty_statement  ->  statement .   (rule 94)

    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303

    $default	reduce using rule 94 (empty_statement)



state 1240

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 64)

    CLOSE_BPAR	shift, and go to state 1286



state 1241

    inner_optional_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_optional_define_identifier   (rule 406)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 224
    UNSIGNED	shift, and go to state 225
    ID  	shift, and go to state 226
    STRUCT_TYPE	shift, and go to state 227

    $default	reduce using rule 395 (option_function_parameter_list)

    type_define	go to state 228
    sign_type_define	go to state 229
    all_type_define	go to state 230
    option_function_parameter_list	go to state 1287



state 1242

    inner_optional_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY inner_optional_define_identifier .   (rule 404)

    $default	reduce using rule 404 (inner_optional_define_identifier)



state 1243

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR alg_exp . CLOSE_MPAR inner_optional_define_identifier   (rule 410)

    CLOSE_MPAR	shift, and go to state 1288
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374



state 1244

    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR alg_exp COMMA . alg_exp CLOSE_MPAR inner_optional_define_identifier   (rule 409)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1289
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1245

    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR alg_exp CLOSE_MPAR . inner_optional_define_identifier   (rule 408)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1290



state 1246

    statement  ->  statement . AND statement   (rule 32)
    statement  ->  statement . OR statement   (rule 33)
    statement  ->  statement . CHOP statement   (rule 34)
    statement  ->  statement . PARALLEL statement   (rule 59)
    statement  ->  FRAME OPEN_PAR identifier optional_frame_identifier CLOSE_PAR AND OPEN_PAR statement . CLOSE_PAR   (rule 61)

    CLOSE_PAR	shift, and go to state 1291
    CHOP	shift, and go to state 300
    OR  	shift, and go to state 301
    PARALLEL	shift, and go to state 302
    AND 	shift, and go to state 303



state 1247

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init CHOP for_sta_condition CHOP for_sta_control CLOSE_PAR . big_par   (rule 444)

    error	shift, and go to state 22
    OPEN_BPAR	shift, and go to state 443

    big_par	go to state 1292



state 1248

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_statement CLOSE_PAR .   (rule 49)

    $default	reduce using rule 49 (statement)



state 1249

    ass_exp  ->  OPEN_PAR string CLOSE_PAR OPEN_PAR type_define CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 174)

    OPEN_PAR	shift, and go to state 1293



state 1250

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_optional_define_identifier   (rule 394)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1294



state 1251

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier .   (rule 390)

    $default	reduce using rule 390 (option_function_parameter_list)



state 1252

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR . inner_optional_define_identifier   (rule 389)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1295



state 1253

    inner_option_array_declaration  ->  COMMA error .   (rule 137)

    $default	reduce using rule 137 (inner_option_array_declaration)



state 1254

    inner_option_array_declaration  ->  COMMA ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_array_declaration   (rule 135)

    OPEN_MPAR	shift, and go to state 1296



state 1255

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 1297



state 1256

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 1298



state 1257

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)

    INTDECLARATION	shift, and go to state 831
    CHARDECLARATION	shift, and go to state 1299



state 1258

    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 179)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1300
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1259

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 155)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1301
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1260

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 1302



state 1261

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 1303



state 1262

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)

    INTDECLARATION	shift, and go to state 831
    CHARDECLARATION	shift, and go to state 1304



state 1263

    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 182)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1305
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1264

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 153)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1306
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1265

    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 181)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1307
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1266

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 156)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1308
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1267

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)

    OPEN_MPAR	shift, and go to state 1309



state 1268

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 191)
    value_exp  ->  OPEN_PAR . value_exp CLOSE_PAR   (rule 194)
    factor  ->  OPEN_PAR . alg_exp CLOSE_PAR   (rule 216)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 256)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 258)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 260)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 261)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 266)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 269)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 270)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 272)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 273)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 275)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 276)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 277)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 278)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 279)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 427)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 475)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY list option_struct_member_exp   (rule 479)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 483)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 323
    INTDECLARATION	shift, and go to state 1310
    CHARDECLARATION	shift, and go to state 1311
    VOIDDECLARATION	shift, and go to state 326
    FLOATDECLARATION	shift, and go to state 597
    OPEN_PAR	shift, and go to state 328
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    UNSIGNED	shift, and go to state 1312
    SIGNED	shift, and go to state 330
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    STRUCT_TYPE	shift, and go to state 331
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 332
    value_exp	go to state 333
    alg_exp	go to state 334
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 335
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 336
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 337



state 1269

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)

    OPEN_MPAR	shift, and go to state 1313



state 1270

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)

    OPEN_MPAR	shift, and go to state 1314



state 1271

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 113)

    $default	reduce using rule 113 (declaration)



state 1272

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)

    OPEN_PAR	shift, and go to state 1315



state 1273

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 65)

    $default	reduce using rule 65 (statement)



state 1274

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 66)

    CLOSE_BPAR	shift, and go to state 1316



state 1275

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)

    CLOSE_PAR	shift, and go to state 1272



state 1276

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)

    INTDECLARATION	shift, and go to state 1317
    CHARDECLARATION	shift, and go to state 1318
    UNSIGNED	shift, and go to state 1319



state 1277

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)

    INTDECLARATION	shift, and go to state 1320
    CHARDECLARATION	shift, and go to state 1321
    UNSIGNED	shift, and go to state 1322



state 1278

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)

    CLOSE_PAR	shift, and go to state 1267



state 1279

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)

    OPEN_PAR	shift, and go to state 1323



state 1280

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)

    CLOSE_PAR	shift, and go to state 1269



state 1281

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 154)

    CLOSE_PAR	shift, and go to state 1270



state 1282

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 96)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 419)

    COMMA	shift, and go to state 777

    COMMA	[reduce using rule 96 (function)]
    CLOSE_PAR	reduce using rule 96 (function)
    CLOSE_PAR	[reduce using rule 420 (inner_option_function_identifier)]
    $default	reduce using rule 96 (function)

    inner_option_function_identifier	go to state 1324



state 1283

    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU list_exp . inner_option_identifier_array_declaration   (rule 128)
    list_exp  ->  list_exp . CON list_exp   (rule 234)

    COMMA	shift, and go to state 554
    CON 	shift, and go to state 696

    COMMA	[reduce using rule 133 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 133 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1325



state 1284

    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU string . inner_option_identifier_array_declaration   (rule 129)

    COMMA	shift, and go to state 554

    COMMA	[reduce using rule 133 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 133 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1326



state 1285

    casted_element  ->  MALLOC OPEN_PAR alg_exp CLOSE_PAR .   (rule 281)

    $default	reduce using rule 281 (casted_element)



state 1286

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 64)

    $default	reduce using rule 64 (statement)



state 1287

    inner_optional_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_optional_define_identifier   (rule 406)

    CLOSE_PAR	shift, and go to state 1327



state 1288

    inner_optional_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR alg_exp CLOSE_MPAR . inner_optional_define_identifier   (rule 410)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1328



state 1289

    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)
    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR alg_exp COMMA alg_exp . CLOSE_MPAR inner_optional_define_identifier   (rule 409)

    CLOSE_MPAR	shift, and go to state 1329
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    alg_operator	go to state 374



state 1290

    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier .   (rule 408)

    $default	reduce using rule 408 (inner_optional_define_identifier)



state 1291

    statement  ->  FRAME OPEN_PAR identifier optional_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR .   (rule 61)

    $default	reduce using rule 61 (statement)



state 1292

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init CHOP for_sta_condition CHOP for_sta_control CLOSE_PAR big_par .   (rule 444)

    $default	reduce using rule 444 (extend_for_statement)



state 1293

    ass_exp  ->  OPEN_PAR string CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR function   (rule 174)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 224
    UNSIGNED	shift, and go to state 225
    ID  	shift, and go to state 226
    STRUCT_TYPE	shift, and go to state 227

    $default	reduce using rule 395 (option_function_parameter_list)

    type_define	go to state 228
    sign_type_define	go to state 229
    all_type_define	go to state 230
    option_function_parameter_list	go to state 1330



state 1294

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier .   (rule 394)

    $default	reduce using rule 394 (option_function_parameter_list)



state 1295

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier .   (rule 389)

    $default	reduce using rule 389 (option_function_parameter_list)



state 1296

    inner_option_array_declaration  ->  COMMA ID OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR inner_option_array_declaration   (rule 135)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1331
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1297

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 1332
    MUL 	shift, and go to state 819



state 1298

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 1333
    MUL 	shift, and go to state 822



state 1299

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 835
    MUL 	shift, and go to state 1334



state 1300

    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 179)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 780
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1335
    alg_operator	go to state 374



state 1301

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 155)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 780
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1336
    alg_operator	go to state 374



state 1302

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 1337
    MUL 	shift, and go to state 819



state 1303

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 1338
    MUL 	shift, and go to state 822



state 1304

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 835
    MUL 	shift, and go to state 1339



state 1305

    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 182)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 780
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1340
    alg_operator	go to state 374



state 1306

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 153)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 780
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1341
    alg_operator	go to state 374



state 1307

    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 181)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 780
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1342
    alg_operator	go to state 374



state 1308

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 156)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 780
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1343
    alg_operator	go to state 374



state 1309

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 180)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1344
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1310

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 257)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 1345



state 1311

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 259)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 1346



state 1312

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 262)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 265)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 271)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 274)

    INTDECLARATION	shift, and go to state 831
    CHARDECLARATION	shift, and go to state 1347



state 1313

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 183)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1348
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1314

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 154)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1349
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1315

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_EQU list_exp   (rule 115)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 49
    VOIDDECLARATION	shift, and go to state 50
    FLOATDECLARATION	shift, and go to state 51
    OPEN_PAR	shift, and go to state 224
    UNSIGNED	shift, and go to state 225
    ID  	shift, and go to state 226
    STRUCT_TYPE	shift, and go to state 227

    $default	reduce using rule 395 (option_function_parameter_list)

    type_define	go to state 228
    sign_type_define	go to state 229
    all_type_define	go to state 230
    option_function_parameter_list	go to state 1350



state 1316

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 66)

    $default	reduce using rule 66 (statement)



state 1317

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)

    MUL 	shift, and go to state 1351



state 1318

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)

    MUL 	shift, and go to state 1352



state 1319

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)

    CHARDECLARATION	shift, and go to state 1353



state 1320

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)

    MUL 	shift, and go to state 1354



state 1321

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)

    MUL 	shift, and go to state 1355



state 1322

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)

    CHARDECLARATION	shift, and go to state 1356



state 1323

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)

    INTDECLARATION	shift, and go to state 1357
    CHARDECLARATION	shift, and go to state 1358
    UNSIGNED	shift, and go to state 1359



state 1324

    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 419)

    $default	reduce using rule 419 (inner_option_function_identifier)



state 1325

    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU list_exp inner_option_identifier_array_declaration .   (rule 128)

    $default	reduce using rule 128 (option_identifier_array_declaration)



state 1326

    option_identifier_array_declaration  ->  ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR ASS_EQU string inner_option_identifier_array_declaration .   (rule 129)

    $default	reduce using rule 129 (option_identifier_array_declaration)



state 1327

    inner_optional_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_optional_define_identifier   (rule 406)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1360



state 1328

    inner_optional_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR alg_exp CLOSE_MPAR inner_optional_define_identifier .   (rule 410)

    $default	reduce using rule 410 (inner_optional_define_identifier)



state 1329

    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR . inner_optional_define_identifier   (rule 409)

    COMMA	shift, and go to state 427

    COMMA	[reduce using rule 407 (inner_optional_define_identifier)]
    $default	reduce using rule 407 (inner_optional_define_identifier)

    inner_optional_define_identifier	go to state 1361



state 1330

    ass_exp  ->  OPEN_PAR string CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR function   (rule 174)

    CLOSE_PAR	shift, and go to state 1362



state 1331

    inner_option_array_declaration  ->  COMMA ID OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR inner_option_array_declaration   (rule 135)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 780
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1363
    alg_operator	go to state 374



state 1332

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 264)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1094
    INTEGER	shift, and go to state 1364
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1005
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1333

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 267)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1097
    INTEGER	shift, and go to state 1365
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1007
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1334

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 1366
    MUL 	shift, and go to state 1022



state 1335

    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 179)

    CLOSE_MPAR	shift, and go to state 1367



state 1336

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 155)

    CLOSE_MPAR	shift, and go to state 1368



state 1337

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 264)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1094
    INTEGER	shift, and go to state 1369
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1005
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1338

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 267)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1097
    INTEGER	shift, and go to state 1370
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1007
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1339

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 1371
    MUL 	shift, and go to state 1022



state 1340

    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 182)

    CLOSE_MPAR	shift, and go to state 1372



state 1341

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 153)

    CLOSE_MPAR	shift, and go to state 1373



state 1342

    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 181)

    CLOSE_MPAR	shift, and go to state 1374



state 1343

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 156)

    CLOSE_MPAR	shift, and go to state 1375



state 1344

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 180)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 780
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1376
    alg_operator	go to state 374



state 1345

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 264)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 270)

    CLOSE_PAR	shift, and go to state 1377
    MUL 	shift, and go to state 819



state 1346

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 267)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 273)

    CLOSE_PAR	shift, and go to state 1378
    MUL 	shift, and go to state 822



state 1347

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 263)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 835
    MUL 	shift, and go to state 1379



state 1348

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 183)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 780
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1380
    alg_operator	go to state 374



state 1349

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 154)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 780
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1381
    alg_operator	go to state 374



state 1350

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 114)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_EQU list_exp   (rule 115)

    CLOSE_PAR	shift, and go to state 1382



state 1351

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)

    CLOSE_PAR	shift, and go to state 1383



state 1352

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)

    CLOSE_PAR	shift, and go to state 1384



state 1353

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)

    MUL 	shift, and go to state 1385



state 1354

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)

    CLOSE_PAR	shift, and go to state 1386



state 1355

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)

    CLOSE_PAR	shift, and go to state 1387



state 1356

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)

    MUL 	shift, and go to state 1388



state 1357

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)

    MUL 	shift, and go to state 1389



state 1358

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)

    MUL 	shift, and go to state 1390



state 1359

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)

    CHARDECLARATION	shift, and go to state 1391



state 1360

    inner_optional_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_optional_define_identifier .   (rule 406)

    $default	reduce using rule 406 (inner_optional_define_identifier)



state 1361

    inner_optional_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR alg_exp COMMA alg_exp CLOSE_MPAR inner_optional_define_identifier .   (rule 409)

    $default	reduce using rule 409 (inner_optional_define_identifier)



state 1362

    ass_exp  ->  OPEN_PAR string CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . function   (rule 174)

    OPEN_PAR	shift, and go to state 1392
    ID  	shift, and go to state 1393

    function	go to state 1394
    list	go to state 1395



state 1363

    inner_option_array_declaration  ->  COMMA ID OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR inner_option_array_declaration   (rule 135)

    CLOSE_MPAR	shift, and go to state 1396



state 1364

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)
    integer  ->  INTEGER .   (rule 429)

    CLOSE_PAR	shift, and go to state 1397

    CLOSE_PAR	[reduce using rule 429 (integer)]
    $default	reduce using rule 429 (integer)



state 1365

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)
    integer  ->  INTEGER .   (rule 429)

    CLOSE_PAR	shift, and go to state 1398

    CLOSE_PAR	[reduce using rule 429 (integer)]
    $default	reduce using rule 429 (integer)



state 1366

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 268)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1208
    INTEGER	shift, and go to state 1399
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1158
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1367

    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 179)

    $default	reduce using rule 179 (list)



state 1368

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 155)

    $default	reduce using rule 155 (leftaddrshift)



state 1369

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)
    integer  ->  INTEGER .   (rule 429)

    CLOSE_PAR	shift, and go to state 1400

    CLOSE_PAR	[reduce using rule 429 (integer)]
    $default	reduce using rule 429 (integer)



state 1370

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)
    integer  ->  INTEGER .   (rule 429)

    CLOSE_PAR	shift, and go to state 1401

    CLOSE_PAR	[reduce using rule 429 (integer)]
    $default	reduce using rule 429 (integer)



state 1371

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 268)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1208
    INTEGER	shift, and go to state 1402
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1158
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1372

    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 182)

    $default	reduce using rule 182 (list)



state 1373

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 153)

    $default	reduce using rule 153 (leftaddrshift)



state 1374

    list  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 181)

    $default	reduce using rule 181 (list)



state 1375

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 156)

    $default	reduce using rule 156 (leftaddrshift)



state 1376

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 180)

    CLOSE_MPAR	shift, and go to state 1403



state 1377

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    list  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 264)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1094
    INTEGER	shift, and go to state 1404
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1005
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1378

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    list  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 267)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1097
    INTEGER	shift, and go to state 1405
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1007
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1379

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 268)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 274)

    CLOSE_PAR	shift, and go to state 1406
    MUL 	shift, and go to state 1022



state 1380

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 183)

    CLOSE_MPAR	shift, and go to state 1407



state 1381

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 154)

    CLOSE_MPAR	shift, and go to state 1408



state 1382

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 114)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_EQU list_exp   (rule 115)

    ASS_EQU	shift, and go to state 1409

    $default	reduce using rule 114 (declaration)



state 1383

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)

    INTEGER	shift, and go to state 1410



state 1384

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)

    INTEGER	shift, and go to state 1411



state 1385

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)

    CLOSE_PAR	shift, and go to state 1412



state 1386

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)

    INTEGER	shift, and go to state 1413



state 1387

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)

    INTEGER	shift, and go to state 1414



state 1388

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)

    CLOSE_PAR	shift, and go to state 1415



state 1389

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)

    CLOSE_PAR	shift, and go to state 1416



state 1390

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)

    CLOSE_PAR	shift, and go to state 1417



state 1391

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)

    MUL 	shift, and go to state 1418



state 1392

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)

    OPEN_PAR	shift, and go to state 1419
    ID  	shift, and go to state 1420

    list	go to state 656



state 1393

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 96)
    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 178)

    OPEN_PAR	shift, and go to state 294
    OPEN_MPAR	shift, and go to state 295



state 1394

    ass_exp  ->  OPEN_PAR string CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function .   (rule 174)

    $default	reduce using rule 174 (ass_exp)



state 1395

    function  ->  list . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 97)

    OPEN_PAR	shift, and go to state 311



state 1396

    inner_option_array_declaration  ->  COMMA ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR . inner_option_array_declaration   (rule 135)

    COMMA	shift, and go to state 1196

    COMMA	[reduce using rule 136 (inner_option_array_declaration)]
    $default	reduce using rule 136 (inner_option_array_declaration)

    inner_option_array_declaration	go to state 1421



state 1397

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)

    CLOSE_PAR	shift, and go to state 1422



state 1398

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)

    CLOSE_PAR	shift, and go to state 1423



state 1399

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)
    integer  ->  INTEGER .   (rule 429)

    CLOSE_PAR	shift, and go to state 1424

    CLOSE_PAR	[reduce using rule 429 (integer)]
    $default	reduce using rule 429 (integer)



state 1400

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)

    CLOSE_PAR	shift, and go to state 1425



state 1401

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)

    CLOSE_PAR	shift, and go to state 1426



state 1402

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)
    integer  ->  INTEGER .   (rule 429)

    CLOSE_PAR	shift, and go to state 1427

    CLOSE_PAR	[reduce using rule 429 (integer)]
    $default	reduce using rule 429 (integer)



state 1403

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 180)

    $default	reduce using rule 180 (list)



state 1404

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)
    integer  ->  INTEGER .   (rule 429)

    CLOSE_PAR	shift, and go to state 1428

    CLOSE_PAR	[reduce using rule 429 (integer)]
    $default	reduce using rule 429 (integer)



state 1405

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)
    integer  ->  INTEGER .   (rule 429)

    CLOSE_PAR	shift, and go to state 1429

    CLOSE_PAR	[reduce using rule 429 (integer)]
    $default	reduce using rule 429 (integer)



state 1406

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 268)

    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    MALLOC	shift, and go to state 1003
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 1208
    INTEGER	shift, and go to state 1430
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    type_cast_alg_exp	go to state 1004
    simple_alg_exp	go to state 817
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    casted_element	go to state 1158
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1407

    list  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 183)

    $default	reduce using rule 183 (list)



state 1408

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 154)

    $default	reduce using rule 154 (leftaddrshift)



state 1409

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU . list_exp   (rule 115)

    OPEN_PAR	shift, and go to state 915
    OPEN_BPAR	shift, and go to state 447
    OPEN_MPAR	shift, and go to state 448

    list_exp	go to state 1431
    option_list_value	go to state 455
    option_struct_list_value	go to state 456



state 1410

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)

    CLOSE_PAR	shift, and go to state 1397



state 1411

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)

    CLOSE_PAR	shift, and go to state 1398



state 1412

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)

    INTEGER	shift, and go to state 1432



state 1413

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)

    CLOSE_PAR	shift, and go to state 1400



state 1414

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)

    CLOSE_PAR	shift, and go to state 1401



state 1415

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)

    INTEGER	shift, and go to state 1433



state 1416

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)

    INTEGER	shift, and go to state 1434



state 1417

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)

    INTEGER	shift, and go to state 1435



state 1418

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)

    CLOSE_PAR	shift, and go to state 1436



state 1419

    list  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 179)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 180)
    list  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 181)
    list  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 182)
    list  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 183)
    list  ->  OPEN_PAR . list CLOSE_PAR   (rule 184)

    INTDECLARATION	shift, and go to state 857
    CHARDECLARATION	shift, and go to state 858
    FLOATDECLARATION	shift, and go to state 859
    OPEN_PAR	shift, and go to state 1419
    UNSIGNED	shift, and go to state 860
    ID  	shift, and go to state 1420

    list	go to state 656



state 1420

    list  ->  ID . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 178)

    OPEN_MPAR	shift, and go to state 295



state 1421

    inner_option_array_declaration  ->  COMMA ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR inner_option_array_declaration .   (rule 135)

    $default	reduce using rule 135 (inner_option_array_declaration)



state 1422

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 165)

    OPEN_MPAR	shift, and go to state 1437



state 1423

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 163)

    OPEN_MPAR	shift, and go to state 1438



state 1424

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)

    CLOSE_PAR	shift, and go to state 1439



state 1425

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 159)

    OPEN_MPAR	shift, and go to state 1440



state 1426

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 157)

    OPEN_MPAR	shift, and go to state 1441



state 1427

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)

    CLOSE_PAR	shift, and go to state 1442



state 1428

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)

    CLOSE_PAR	shift, and go to state 1443



state 1429

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)

    CLOSE_PAR	shift, and go to state 1444



state 1430

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)
    integer  ->  INTEGER .   (rule 429)

    CLOSE_PAR	shift, and go to state 1445

    CLOSE_PAR	[reduce using rule 429 (integer)]
    $default	reduce using rule 429 (integer)



state 1431

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_EQU list_exp .   (rule 115)
    list_exp  ->  list_exp . CON list_exp   (rule 234)

    CON 	shift, and go to state 696

    $default	reduce using rule 115 (declaration)



state 1432

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)

    CLOSE_PAR	shift, and go to state 1424



state 1433

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)

    CLOSE_PAR	shift, and go to state 1427



state 1434

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)

    CLOSE_PAR	shift, and go to state 1428



state 1435

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)

    CLOSE_PAR	shift, and go to state 1429



state 1436

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)

    INTEGER	shift, and go to state 1446



state 1437

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 165)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1447
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1438

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 163)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1448
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1439

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 164)

    OPEN_MPAR	shift, and go to state 1449



state 1440

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 159)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1450
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1441

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 157)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1451
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1442

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 158)

    OPEN_MPAR	shift, and go to state 1452



state 1443

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 162)

    OPEN_MPAR	shift, and go to state 1453



state 1444

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 160)

    OPEN_MPAR	shift, and go to state 1454



state 1445

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR . CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)

    CLOSE_PAR	shift, and go to state 1455



state 1446

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER . CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)

    CLOSE_PAR	shift, and go to state 1445



state 1447

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 165)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 780
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1456
    alg_operator	go to state 374



state 1448

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 163)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 780
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1457
    alg_operator	go to state 374



state 1449

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 164)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1458
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1450

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 159)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 780
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1459
    alg_operator	go to state 374



state 1451

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 157)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 780
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1460
    alg_operator	go to state 374



state 1452

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 158)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1461
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1453

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 162)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1462
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1454

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 160)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1463
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1455

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR . OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR   (rule 161)

    OPEN_MPAR	shift, and go to state 1464



state 1456

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 165)

    CLOSE_MPAR	shift, and go to state 1465



state 1457

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 163)

    CLOSE_MPAR	shift, and go to state 1466



state 1458

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 164)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 780
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1467
    alg_operator	go to state 374



state 1459

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 159)

    CLOSE_MPAR	shift, and go to state 1468



state 1460

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 157)

    CLOSE_MPAR	shift, and go to state 1469



state 1461

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 158)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 780
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1470
    alg_operator	go to state 374



state 1462

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 162)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 780
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1471
    alg_operator	go to state 374



state 1463

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 160)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 780
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1472
    alg_operator	go to state 374



state 1464

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR . alg_exp option_alg_exp CLOSE_MPAR   (rule 161)

    IF  	shift, and go to state 120
    POINTERNULL	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    STRFUNCHEAD	shift, and go to state 62
    STRFUNCTAIL	shift, and go to state 63
    STRFUNCCAT	shift, and go to state 64
    STRFUNCCMP	shift, and go to state 65
    STRFUNCCPY	shift, and go to state 66
    STRFUNCLEN	shift, and go to state 67
    SIZEOF	shift, and go to state 123
    CEIL	shift, and go to state 124
    FLOOR	shift, and go to state 125
    ROUND	shift, and go to state 126
    SIN 	shift, and go to state 127
    COS 	shift, and go to state 128
    TAN 	shift, and go to state 129
    ASIN	shift, and go to state 130
    ACOS	shift, and go to state 131
    ATAN	shift, and go to state 132
    SINH	shift, and go to state 133
    COSH	shift, and go to state 134
    TANH	shift, and go to state 135
    EXP 	shift, and go to state 136
    LOG 	shift, and go to state 137
    LOG10	shift, and go to state 138
    SQRT	shift, and go to state 139
    ATAN2	shift, and go to state 140
    POW 	shift, and go to state 141
    ABS 	shift, and go to state 142
    FABS	shift, and go to state 143
    LABS	shift, and go to state 144
    FMOD	shift, and go to state 145
    MODF	shift, and go to state 146
    LDEXP	shift, and go to state 147
    ADDRESS	shift, and go to state 148
    SUB 	shift, and go to state 149
    MUL 	shift, and go to state 72
    BNE 	shift, and go to state 150
    PREVIOUS	shift, and go to state 151
    ID  	shift, and go to state 82
    INTEGER	shift, and go to state 152
    FLOATLITERAL	shift, and go to state 153
    CHARLITERAL	shift, and go to state 154

    function	go to state 155
    list	go to state 156
    value_exp	go to state 157
    alg_exp	go to state 1473
    simple_alg_exp	go to state 159
    factor	go to state 160
    pre_next	go to state 161
    address_exp	go to state 162
    type_cast	go to state 163
    size_of	go to state 164
    String_Function	go to state 165
    String_Function_head	go to state 100
    String_Function_tail	go to state 101
    String_Function_cat	go to state 102
    String_Function_cmp	go to state 103
    String_Function_cpy	go to state 104
    String_Function_len	go to state 105
    Float_Function	go to state 166
    identifier	go to state 167
    integer	go to state 200
    charliteral	go to state 169
    floatliteral	go to state 170
    struct_member_exp	go to state 171



state 1465

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 165)

    $default	reduce using rule 165 (leftaddrshift)



state 1466

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 163)

    $default	reduce using rule 163 (leftaddrshift)



state 1467

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 164)

    CLOSE_MPAR	shift, and go to state 1474



state 1468

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 159)

    $default	reduce using rule 159 (leftaddrshift)



state 1469

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 157)

    $default	reduce using rule 157 (leftaddrshift)



state 1470

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 158)

    CLOSE_MPAR	shift, and go to state 1475



state 1471

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 162)

    CLOSE_MPAR	shift, and go to state 1476



state 1472

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 160)

    CLOSE_MPAR	shift, and go to state 1477



state 1473

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp . option_alg_exp CLOSE_MPAR   (rule 161)
    alg_exp  ->  alg_exp . alg_operator simple_alg_exp   (rule 197)

    COMMA	shift, and go to state 780
    ADD 	shift, and go to state 372
    SUB 	shift, and go to state 373

    $default	reduce using rule 187 (option_alg_exp)

    option_alg_exp	go to state 1478
    alg_operator	go to state 374



state 1474

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 164)

    $default	reduce using rule 164 (leftaddrshift)



state 1475

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 158)

    $default	reduce using rule 158 (leftaddrshift)



state 1476

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 162)

    $default	reduce using rule 162 (leftaddrshift)



state 1477

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 160)

    $default	reduce using rule 160 (leftaddrshift)



state 1478

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp . CLOSE_MPAR   (rule 161)

    CLOSE_MPAR	shift, and go to state 1479



state 1479

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTEGER CLOSE_PAR CLOSE_PAR OPEN_MPAR alg_exp option_alg_exp CLOSE_MPAR .   (rule 161)

    $default	reduce using rule 161 (leftaddrshift)



state 1480

    $   	go to state 1481



state 1481

    $   	go to state 1482



state 1482

    $default	accept
