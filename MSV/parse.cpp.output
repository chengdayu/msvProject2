Useless nonterminals:

   option_array_declaration
   inner_option_array_declaration


Terminals which are not used:

   POINTERDECLARATION
   LISTDECLARATION
   OVER
   CYLINDER
   OVEREP
   NON_DETERMINED
   SEND
   RECEIVE
   PROCESS
   CHANNEL
   PUT
   GET
   ERROR_TOKEN
   STRFUNCHEAD
   STRFUNCTAIL
   STRFUNCCAT
   STRFUNCCMP
   STRFUNCCPY
   STRFUNCLEN
   PREFIX


Useless rules:

<<<<<<< HEAD
#106   option_array_declaration :	 ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#107   inner_option_array_declaration :	 COMMA ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#108   inner_option_array_declaration :	;
#109   inner_option_array_declaration :	 COMMA error;


Conflict in state 85 between rule 13 and token CHOP resolved as reduce.
Conflict in state 85 between rule 13 and token IFF resolved as reduce.
Conflict in state 85 between rule 13 and token PROPIMPLY resolved as reduce.
Conflict in state 85 between rule 13 and token OR resolved as reduce.
Conflict in state 85 between rule 13 and token AND resolved as reduce.
Conflict in state 85 between rule 13 and token CHOPSTAR resolved as an error.
Conflict in state 86 between rule 22 and token CHOP resolved as reduce.
Conflict in state 86 between rule 22 and token IFF resolved as reduce.
Conflict in state 86 between rule 22 and token PROPIMPLY resolved as reduce.
Conflict in state 86 between rule 22 and token OR resolved as reduce.
Conflict in state 86 between rule 22 and token AND resolved as reduce.
Conflict in state 86 between rule 22 and token CHOPSTAR resolved as an error.
Conflict in state 109 between rule 21 and token CHOP resolved as reduce.
Conflict in state 109 between rule 21 and token IFF resolved as reduce.
Conflict in state 109 between rule 21 and token PROPIMPLY resolved as reduce.
Conflict in state 109 between rule 21 and token OR resolved as reduce.
Conflict in state 109 between rule 21 and token AND resolved as reduce.
Conflict in state 109 between rule 21 and token CHOPSTAR resolved as an error.
Conflict in state 110 between rule 10 and token CHOP resolved as reduce.
Conflict in state 110 between rule 10 and token IFF resolved as reduce.
Conflict in state 110 between rule 10 and token PROPIMPLY resolved as reduce.
Conflict in state 110 between rule 10 and token OR resolved as reduce.
Conflict in state 110 between rule 10 and token AND resolved as reduce.
Conflict in state 110 between rule 10 and token CHOPSTAR resolved as an error.
Conflict in state 111 between rule 9 and token CHOP resolved as reduce.
Conflict in state 111 between rule 9 and token IFF resolved as reduce.
Conflict in state 111 between rule 9 and token PROPIMPLY resolved as reduce.
Conflict in state 111 between rule 9 and token OR resolved as reduce.
Conflict in state 111 between rule 9 and token AND resolved as reduce.
Conflict in state 111 between rule 9 and token CHOPSTAR resolved as an error.
Conflict in state 112 between rule 20 and token CHOP resolved as reduce.
Conflict in state 112 between rule 20 and token IFF resolved as reduce.
Conflict in state 112 between rule 20 and token PROPIMPLY resolved as reduce.
Conflict in state 112 between rule 20 and token OR resolved as reduce.
Conflict in state 112 between rule 20 and token AND resolved as reduce.
Conflict in state 112 between rule 20 and token CHOPSTAR resolved as an error.
Conflict in state 113 between rule 12 and token CHOP resolved as reduce.
Conflict in state 113 between rule 12 and token IFF resolved as reduce.
Conflict in state 113 between rule 12 and token PROPIMPLY resolved as reduce.
Conflict in state 113 between rule 12 and token OR resolved as reduce.
Conflict in state 113 between rule 12 and token AND resolved as reduce.
Conflict in state 113 between rule 12 and token CHOPSTAR resolved as an error.
Conflict in state 114 between rule 11 and token CHOP resolved as reduce.
Conflict in state 114 between rule 11 and token IFF resolved as reduce.
Conflict in state 114 between rule 11 and token PROPIMPLY resolved as reduce.
Conflict in state 114 between rule 11 and token OR resolved as reduce.
Conflict in state 114 between rule 11 and token AND resolved as reduce.
Conflict in state 114 between rule 11 and token CHOPSTAR resolved as an error.
Conflict in state 230 between rule 207 and token IMPLY resolved as reduce.
Conflict in state 233 between rule 206 and token IMPLY resolved as reduce.
Conflict in state 256 between rule 8 and token CHOP resolved as reduce.
Conflict in state 256 between rule 8 and token IFF resolved as shift.
Conflict in state 256 between rule 8 and token PROPIMPLY resolved as shift.
Conflict in state 256 between rule 8 and token OR resolved as shift.
Conflict in state 256 between rule 8 and token AND resolved as shift.
Conflict in state 256 between rule 8 and token CHOPSTAR resolved as shift.
Conflict in state 257 between rule 6 and token CHOP resolved as reduce.
Conflict in state 257 between rule 6 and token IFF resolved as reduce.
Conflict in state 257 between rule 6 and token PROPIMPLY resolved as reduce.
Conflict in state 257 between rule 6 and token OR resolved as shift.
Conflict in state 257 between rule 6 and token AND resolved as shift.
Conflict in state 257 between rule 6 and token CHOPSTAR resolved as shift.
Conflict in state 258 between rule 7 and token CHOP resolved as reduce.
Conflict in state 258 between rule 7 and token IFF resolved as reduce.
Conflict in state 258 between rule 7 and token PROPIMPLY resolved as reduce.
Conflict in state 258 between rule 7 and token OR resolved as shift.
Conflict in state 258 between rule 7 and token AND resolved as shift.
Conflict in state 258 between rule 7 and token CHOPSTAR resolved as shift.
Conflict in state 259 between rule 5 and token CHOP resolved as reduce.
Conflict in state 259 between rule 5 and token IFF resolved as reduce.
Conflict in state 259 between rule 5 and token PROPIMPLY resolved as reduce.
Conflict in state 259 between rule 5 and token OR resolved as reduce.
Conflict in state 259 between rule 5 and token AND resolved as shift.
Conflict in state 259 between rule 5 and token CHOPSTAR resolved as shift.
Conflict in state 260 between rule 4 and token CHOP resolved as reduce.
Conflict in state 260 between rule 4 and token IFF resolved as reduce.
Conflict in state 260 between rule 4 and token PROPIMPLY resolved as reduce.
Conflict in state 260 between rule 4 and token OR resolved as reduce.
Conflict in state 260 between rule 4 and token AND resolved as reduce.
Conflict in state 260 between rule 4 and token CHOPSTAR resolved as shift.
Conflict in state 267 between rule 236 and token OR resolved as reduce.
Conflict in state 267 between rule 236 and token AND resolved as reduce.
Conflict in state 326 between rule 329 and token OR resolved as reduce.
Conflict in state 326 between rule 329 and token AND resolved as reduce.
Conflict in state 377 between rule 32 and token CHOP resolved as reduce.
Conflict in state 377 between rule 32 and token OR resolved as shift.
Conflict in state 377 between rule 32 and token PARALLEL resolved as shift.
Conflict in state 377 between rule 32 and token AND resolved as shift.
Conflict in state 378 between rule 31 and token CHOP resolved as reduce.
Conflict in state 378 between rule 31 and token OR resolved as reduce.
Conflict in state 378 between rule 31 and token PARALLEL resolved as reduce.
Conflict in state 378 between rule 31 and token AND resolved as shift.
Conflict in state 379 between rule 55 and token CHOP resolved as reduce.
Conflict in state 379 between rule 55 and token OR resolved as reduce.
Conflict in state 379 between rule 55 and token PARALLEL resolved as reduce.
Conflict in state 379 between rule 55 and token AND resolved as shift.
Conflict in state 380 between rule 30 and token CHOP resolved as reduce.
Conflict in state 380 between rule 30 and token OR resolved as reduce.
Conflict in state 380 between rule 30 and token PARALLEL resolved as reduce.
Conflict in state 380 between rule 30 and token AND resolved as reduce.
Conflict in state 444 between rule 238 and token OR resolved as reduce.
Conflict in state 444 between rule 238 and token AND resolved as shift.
Conflict in state 445 between rule 237 and token OR resolved as reduce.
Conflict in state 445 between rule 237 and token AND resolved as reduce.
Conflict in state 506 between rule 331 and token OR resolved as reduce.
Conflict in state 506 between rule 331 and token AND resolved as shift.
Conflict in state 507 between rule 330 and token OR resolved as reduce.
Conflict in state 507 between rule 330 and token AND resolved as reduce.
Conflict in state 653 between rule 191 and token CON resolved as reduce.
State 97 contains 2 shift/reduce conflicts.
State 98 contains 2 shift/reduce conflicts.
State 100 contains 14 shift/reduce conflicts.
State 104 contains 2 shift/reduce conflicts.
State 124 contains 2 shift/reduce conflicts.
State 156 contains 3 reduce/reduce conflicts.
State 158 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 159 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 160 contains 1 shift/reduce conflict.
State 162 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 164 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 165 contains 1 shift/reduce conflict.
State 192 contains 1 shift/reduce conflict.
State 223 contains 1 shift/reduce conflict.
State 224 contains 1 shift/reduce conflict.
State 226 contains 1 shift/reduce conflict.
State 227 contains 1 shift/reduce conflict.
State 228 contains 1 shift/reduce conflict.
State 230 contains 1 shift/reduce conflict.
State 233 contains 1 shift/reduce conflict.
State 265 contains 1 shift/reduce conflict.
State 268 contains 2 shift/reduce conflicts.
State 269 contains 2 shift/reduce conflicts.
State 287 contains 1 shift/reduce conflict.
State 288 contains 1 shift/reduce conflict.
State 289 contains 1 shift/reduce conflict.
State 290 contains 1 shift/reduce conflict.
State 307 contains 1 shift/reduce conflict.
State 316 contains 1 shift/reduce conflict.
State 317 contains 1 shift/reduce conflict.
State 318 contains 1 shift/reduce conflict.
State 324 contains 1 shift/reduce conflict.
State 352 contains 1 shift/reduce conflict.
State 353 contains 1 shift/reduce conflict.
State 355 contains 1 shift/reduce conflict.
State 356 contains 1 shift/reduce conflict.
State 360 contains 1 shift/reduce conflict.
State 361 contains 1 shift/reduce conflict.
State 385 contains 2 shift/reduce conflicts.
State 386 contains 2 shift/reduce conflicts.
State 388 contains 2 shift/reduce conflicts.
State 389 contains 2 shift/reduce conflicts.
State 390 contains 2 shift/reduce conflicts.
State 391 contains 2 shift/reduce conflicts.
=======
#107   option_array_declaration :	 ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#108   inner_option_array_declaration :	 COMMA ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#109   inner_option_array_declaration :	;
#110   inner_option_array_declaration :	 COMMA error;


Conflict in state 86 between rule 13 and token CHOP resolved as reduce.
Conflict in state 86 between rule 13 and token IFF resolved as reduce.
Conflict in state 86 between rule 13 and token PROPIMPLY resolved as reduce.
Conflict in state 86 between rule 13 and token OR resolved as reduce.
Conflict in state 86 between rule 13 and token AND resolved as reduce.
Conflict in state 86 between rule 13 and token CHOPSTAR resolved as an error.
Conflict in state 87 between rule 22 and token CHOP resolved as reduce.
Conflict in state 87 between rule 22 and token IFF resolved as reduce.
Conflict in state 87 between rule 22 and token PROPIMPLY resolved as reduce.
Conflict in state 87 between rule 22 and token OR resolved as reduce.
Conflict in state 87 between rule 22 and token AND resolved as reduce.
Conflict in state 87 between rule 22 and token CHOPSTAR resolved as an error.
Conflict in state 110 between rule 21 and token CHOP resolved as reduce.
Conflict in state 110 between rule 21 and token IFF resolved as reduce.
Conflict in state 110 between rule 21 and token PROPIMPLY resolved as reduce.
Conflict in state 110 between rule 21 and token OR resolved as reduce.
Conflict in state 110 between rule 21 and token AND resolved as reduce.
Conflict in state 110 between rule 21 and token CHOPSTAR resolved as an error.
Conflict in state 111 between rule 10 and token CHOP resolved as reduce.
Conflict in state 111 between rule 10 and token IFF resolved as reduce.
Conflict in state 111 between rule 10 and token PROPIMPLY resolved as reduce.
Conflict in state 111 between rule 10 and token OR resolved as reduce.
Conflict in state 111 between rule 10 and token AND resolved as reduce.
Conflict in state 111 between rule 10 and token CHOPSTAR resolved as an error.
Conflict in state 112 between rule 9 and token CHOP resolved as reduce.
Conflict in state 112 between rule 9 and token IFF resolved as reduce.
Conflict in state 112 between rule 9 and token PROPIMPLY resolved as reduce.
Conflict in state 112 between rule 9 and token OR resolved as reduce.
Conflict in state 112 between rule 9 and token AND resolved as reduce.
Conflict in state 112 between rule 9 and token CHOPSTAR resolved as an error.
Conflict in state 113 between rule 20 and token CHOP resolved as reduce.
Conflict in state 113 between rule 20 and token IFF resolved as reduce.
Conflict in state 113 between rule 20 and token PROPIMPLY resolved as reduce.
Conflict in state 113 between rule 20 and token OR resolved as reduce.
Conflict in state 113 between rule 20 and token AND resolved as reduce.
Conflict in state 113 between rule 20 and token CHOPSTAR resolved as an error.
Conflict in state 114 between rule 12 and token CHOP resolved as reduce.
Conflict in state 114 between rule 12 and token IFF resolved as reduce.
Conflict in state 114 between rule 12 and token PROPIMPLY resolved as reduce.
Conflict in state 114 between rule 12 and token OR resolved as reduce.
Conflict in state 114 between rule 12 and token AND resolved as reduce.
Conflict in state 114 between rule 12 and token CHOPSTAR resolved as an error.
Conflict in state 115 between rule 11 and token CHOP resolved as reduce.
Conflict in state 115 between rule 11 and token IFF resolved as reduce.
Conflict in state 115 between rule 11 and token PROPIMPLY resolved as reduce.
Conflict in state 115 between rule 11 and token OR resolved as reduce.
Conflict in state 115 between rule 11 and token AND resolved as reduce.
Conflict in state 115 between rule 11 and token CHOPSTAR resolved as an error.
<<<<<<< HEAD
Conflict in state 241 between rule 208 and token IMPLY resolved as reduce.
Conflict in state 244 between rule 207 and token IMPLY resolved as reduce.
Conflict in state 267 between rule 8 and token CHOP resolved as reduce.
Conflict in state 267 between rule 8 and token IFF resolved as shift.
Conflict in state 267 between rule 8 and token PROPIMPLY resolved as shift.
Conflict in state 267 between rule 8 and token OR resolved as shift.
Conflict in state 267 between rule 8 and token AND resolved as shift.
Conflict in state 267 between rule 8 and token CHOPSTAR resolved as shift.
Conflict in state 268 between rule 6 and token CHOP resolved as reduce.
Conflict in state 268 between rule 6 and token IFF resolved as reduce.
Conflict in state 268 between rule 6 and token PROPIMPLY resolved as reduce.
Conflict in state 268 between rule 6 and token OR resolved as shift.
Conflict in state 268 between rule 6 and token AND resolved as shift.
Conflict in state 268 between rule 6 and token CHOPSTAR resolved as shift.
Conflict in state 269 between rule 7 and token CHOP resolved as reduce.
Conflict in state 269 between rule 7 and token IFF resolved as reduce.
Conflict in state 269 between rule 7 and token PROPIMPLY resolved as reduce.
Conflict in state 269 between rule 7 and token OR resolved as shift.
Conflict in state 269 between rule 7 and token AND resolved as shift.
Conflict in state 269 between rule 7 and token CHOPSTAR resolved as shift.
Conflict in state 270 between rule 5 and token CHOP resolved as reduce.
Conflict in state 270 between rule 5 and token IFF resolved as reduce.
Conflict in state 270 between rule 5 and token PROPIMPLY resolved as reduce.
Conflict in state 270 between rule 5 and token OR resolved as reduce.
Conflict in state 270 between rule 5 and token AND resolved as shift.
Conflict in state 270 between rule 5 and token CHOPSTAR resolved as shift.
Conflict in state 271 between rule 4 and token CHOP resolved as reduce.
Conflict in state 271 between rule 4 and token IFF resolved as reduce.
Conflict in state 271 between rule 4 and token PROPIMPLY resolved as reduce.
Conflict in state 271 between rule 4 and token OR resolved as reduce.
Conflict in state 271 between rule 4 and token AND resolved as reduce.
Conflict in state 271 between rule 4 and token CHOPSTAR resolved as shift.
Conflict in state 292 between rule 237 and token OR resolved as reduce.
Conflict in state 292 between rule 237 and token AND resolved as reduce.
Conflict in state 341 between rule 330 and token OR resolved as reduce.
Conflict in state 341 between rule 330 and token AND resolved as reduce.
Conflict in state 392 between rule 32 and token CHOP resolved as reduce.
Conflict in state 392 between rule 32 and token OR resolved as shift.
Conflict in state 392 between rule 32 and token PARALLEL resolved as shift.
Conflict in state 392 between rule 32 and token AND resolved as shift.
Conflict in state 393 between rule 31 and token CHOP resolved as reduce.
Conflict in state 393 between rule 31 and token OR resolved as reduce.
Conflict in state 393 between rule 31 and token PARALLEL resolved as reduce.
Conflict in state 393 between rule 31 and token AND resolved as shift.
Conflict in state 394 between rule 55 and token CHOP resolved as reduce.
Conflict in state 394 between rule 55 and token OR resolved as reduce.
Conflict in state 394 between rule 55 and token PARALLEL resolved as reduce.
Conflict in state 394 between rule 55 and token AND resolved as shift.
Conflict in state 395 between rule 30 and token CHOP resolved as reduce.
Conflict in state 395 between rule 30 and token OR resolved as reduce.
Conflict in state 395 between rule 30 and token PARALLEL resolved as reduce.
Conflict in state 395 between rule 30 and token AND resolved as reduce.
Conflict in state 463 between rule 192 and token CON resolved as reduce.
Conflict in state 475 between rule 239 and token OR resolved as reduce.
Conflict in state 475 between rule 239 and token AND resolved as shift.
Conflict in state 476 between rule 238 and token OR resolved as reduce.
Conflict in state 476 between rule 238 and token AND resolved as reduce.
Conflict in state 523 between rule 332 and token OR resolved as reduce.
Conflict in state 523 between rule 332 and token AND resolved as shift.
Conflict in state 524 between rule 331 and token OR resolved as reduce.
Conflict in state 524 between rule 331 and token AND resolved as reduce.
=======
Conflict in state 235 between rule 213 and token IMPLY resolved as reduce.
Conflict in state 238 between rule 212 and token IMPLY resolved as reduce.
Conflict in state 261 between rule 8 and token CHOP resolved as reduce.
Conflict in state 261 between rule 8 and token IFF resolved as shift.
Conflict in state 261 between rule 8 and token PROPIMPLY resolved as shift.
Conflict in state 261 between rule 8 and token OR resolved as shift.
Conflict in state 261 between rule 8 and token AND resolved as shift.
Conflict in state 261 between rule 8 and token CHOPSTAR resolved as shift.
Conflict in state 262 between rule 6 and token CHOP resolved as reduce.
Conflict in state 262 between rule 6 and token IFF resolved as reduce.
Conflict in state 262 between rule 6 and token PROPIMPLY resolved as reduce.
Conflict in state 262 between rule 6 and token OR resolved as shift.
Conflict in state 262 between rule 6 and token AND resolved as shift.
Conflict in state 262 between rule 6 and token CHOPSTAR resolved as shift.
Conflict in state 263 between rule 7 and token CHOP resolved as reduce.
Conflict in state 263 between rule 7 and token IFF resolved as reduce.
Conflict in state 263 between rule 7 and token PROPIMPLY resolved as reduce.
Conflict in state 263 between rule 7 and token OR resolved as shift.
Conflict in state 263 between rule 7 and token AND resolved as shift.
Conflict in state 263 between rule 7 and token CHOPSTAR resolved as shift.
Conflict in state 264 between rule 5 and token CHOP resolved as reduce.
Conflict in state 264 between rule 5 and token IFF resolved as reduce.
Conflict in state 264 between rule 5 and token PROPIMPLY resolved as reduce.
Conflict in state 264 between rule 5 and token OR resolved as reduce.
Conflict in state 264 between rule 5 and token AND resolved as shift.
Conflict in state 264 between rule 5 and token CHOPSTAR resolved as shift.
Conflict in state 265 between rule 4 and token CHOP resolved as reduce.
Conflict in state 265 between rule 4 and token IFF resolved as reduce.
Conflict in state 265 between rule 4 and token PROPIMPLY resolved as reduce.
Conflict in state 265 between rule 4 and token OR resolved as reduce.
Conflict in state 265 between rule 4 and token AND resolved as reduce.
Conflict in state 265 between rule 4 and token CHOPSTAR resolved as shift.
Conflict in state 272 between rule 242 and token OR resolved as reduce.
Conflict in state 272 between rule 242 and token AND resolved as reduce.
Conflict in state 331 between rule 336 and token OR resolved as reduce.
Conflict in state 331 between rule 336 and token AND resolved as reduce.
Conflict in state 384 between rule 32 and token CHOP resolved as reduce.
Conflict in state 384 between rule 32 and token OR resolved as shift.
Conflict in state 384 between rule 32 and token PARALLEL resolved as shift.
Conflict in state 384 between rule 32 and token AND resolved as shift.
Conflict in state 385 between rule 31 and token CHOP resolved as reduce.
Conflict in state 385 between rule 31 and token OR resolved as reduce.
Conflict in state 385 between rule 31 and token PARALLEL resolved as reduce.
Conflict in state 385 between rule 31 and token AND resolved as shift.
Conflict in state 386 between rule 55 and token CHOP resolved as reduce.
Conflict in state 386 between rule 55 and token OR resolved as reduce.
Conflict in state 386 between rule 55 and token PARALLEL resolved as reduce.
Conflict in state 386 between rule 55 and token AND resolved as shift.
Conflict in state 387 between rule 30 and token CHOP resolved as reduce.
Conflict in state 387 between rule 30 and token OR resolved as reduce.
Conflict in state 387 between rule 30 and token PARALLEL resolved as reduce.
Conflict in state 387 between rule 30 and token AND resolved as reduce.
Conflict in state 451 between rule 244 and token OR resolved as reduce.
Conflict in state 451 between rule 244 and token AND resolved as shift.
Conflict in state 452 between rule 243 and token OR resolved as reduce.
Conflict in state 452 between rule 243 and token AND resolved as reduce.
Conflict in state 513 between rule 338 and token OR resolved as reduce.
Conflict in state 513 between rule 338 and token AND resolved as shift.
Conflict in state 514 between rule 337 and token OR resolved as reduce.
Conflict in state 514 between rule 337 and token AND resolved as reduce.
Conflict in state 663 between rule 197 and token CON resolved as reduce.
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
State 98 contains 2 shift/reduce conflicts.
State 99 contains 2 shift/reduce conflicts.
State 101 contains 14 shift/reduce conflicts.
State 105 contains 2 shift/reduce conflicts.
State 136 contains 2 shift/reduce conflicts.
State 167 contains 3 reduce/reduce conflicts.
State 169 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 170 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 171 contains 1 shift/reduce conflict.
State 173 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 175 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 176 contains 1 shift/reduce conflict.
State 203 contains 1 shift/reduce conflict.
State 234 contains 1 shift/reduce conflict.
State 235 contains 1 shift/reduce conflict.
State 237 contains 1 shift/reduce conflict.
State 238 contains 1 shift/reduce conflict.
State 239 contains 1 shift/reduce conflict.
State 241 contains 1 shift/reduce conflict.
State 244 contains 1 shift/reduce conflict.
State 275 contains 1 shift/reduce conflict.
State 276 contains 1 shift/reduce conflict.
State 277 contains 1 shift/reduce conflict.
State 290 contains 1 shift/reduce conflict.
State 293 contains 2 shift/reduce conflicts.
State 294 contains 2 shift/reduce conflicts.
State 312 contains 1 shift/reduce conflict.
State 313 contains 1 shift/reduce conflict.
State 314 contains 1 shift/reduce conflict.
State 315 contains 1 shift/reduce conflict.
State 328 contains 1 shift/reduce conflict.
State 331 contains 1 shift/reduce conflict.
State 332 contains 1 shift/reduce conflict.
State 333 contains 1 shift/reduce conflict.
State 339 contains 1 shift/reduce conflict.
State 367 contains 1 shift/reduce conflict.
<<<<<<< HEAD
State 368 contains 1 shift/reduce conflict.
State 370 contains 1 shift/reduce conflict.
State 371 contains 1 shift/reduce conflict.
State 375 contains 1 shift/reduce conflict.
State 376 contains 1 shift/reduce conflict.
State 400 contains 2 shift/reduce conflicts.
State 401 contains 2 shift/reduce conflicts.
State 403 contains 2 shift/reduce conflicts.
State 404 contains 2 shift/reduce conflicts.
State 405 contains 2 shift/reduce conflicts.
State 406 contains 2 shift/reduce conflicts.
State 407 contains 2 shift/reduce conflicts.
State 408 contains 2 shift/reduce conflicts.
State 410 contains 2 shift/reduce conflicts.
State 411 contains 2 shift/reduce conflicts.
State 413 contains 2 shift/reduce conflicts.
State 414 contains 2 shift/reduce conflicts.
State 437 contains 1 shift/reduce conflict.
State 444 contains 8 shift/reduce conflicts.
State 446 contains 2 shift/reduce conflicts.
State 510 contains 1 shift/reduce conflict.
State 511 contains 1 shift/reduce conflict.
State 515 contains 1 shift/reduce conflict.
State 537 contains 1 shift/reduce conflict.
State 538 contains 1 shift/reduce conflict.
State 539 contains 1 shift/reduce conflict.
State 543 contains 1 shift/reduce conflict.
State 565 contains 1 shift/reduce conflict.
State 587 contains 3 shift/reduce conflicts.
State 590 contains 10 shift/reduce conflicts.
State 679 contains 2 shift/reduce conflicts.
State 680 contains 2 shift/reduce conflicts.
=======
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
State 392 contains 2 shift/reduce conflicts.
State 393 contains 2 shift/reduce conflicts.
State 395 contains 2 shift/reduce conflicts.
State 396 contains 2 shift/reduce conflicts.
State 398 contains 2 shift/reduce conflicts.
State 399 contains 2 shift/reduce conflicts.
<<<<<<< HEAD
State 422 contains 1 shift/reduce conflict.
State 429 contains 8 shift/reduce conflicts.
State 431 contains 2 shift/reduce conflicts.
State 474 contains 1 shift/reduce conflict.
State 475 contains 1 shift/reduce conflict.
State 476 contains 1 shift/reduce conflict.
State 493 contains 1 shift/reduce conflict.
State 494 contains 1 shift/reduce conflict.
State 498 contains 1 shift/reduce conflict.
State 520 contains 1 shift/reduce conflict.
State 521 contains 1 shift/reduce conflict.
State 522 contains 1 shift/reduce conflict.
State 526 contains 1 shift/reduce conflict.
State 547 contains 1 shift/reduce conflict.
State 569 contains 3 shift/reduce conflicts.
State 572 contains 10 shift/reduce conflicts.
State 664 contains 2 shift/reduce conflicts.
State 665 contains 2 shift/reduce conflicts.
State 678 contains 1 shift/reduce conflict.
State 679 contains 1 shift/reduce conflict.
State 694 contains 1 shift/reduce conflict.
State 695 contains 1 shift/reduce conflict.
State 700 contains 2 shift/reduce conflicts.
State 701 contains 2 shift/reduce conflicts.
State 703 contains 2 shift/reduce conflicts.
State 704 contains 2 shift/reduce conflicts.
State 793 contains 1 shift/reduce conflict.
State 794 contains 1 shift/reduce conflict.
State 796 contains 1 shift/reduce conflict.
State 797 contains 1 shift/reduce conflict.
State 798 contains 1 shift/reduce conflict.
State 799 contains 1 shift/reduce conflict.
State 812 contains 2 shift/reduce conflicts.
State 826 contains 1 shift/reduce conflict.
State 832 contains 2 shift/reduce conflicts.
State 835 contains 8 shift/reduce conflicts.
State 894 contains 1 shift/reduce conflict.
State 896 contains 1 shift/reduce conflict.
State 897 contains 1 shift/reduce conflict.
State 899 contains 1 shift/reduce conflict.
State 968 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 969 contains 1 shift/reduce conflict.
State 970 contains 1 shift/reduce conflict.
State 1053 contains 1 shift/reduce conflict.
State 1054 contains 1 shift/reduce conflict.
State 1058 contains 1 shift/reduce conflict.
State 1059 contains 1 shift/reduce conflict.
State 1090 contains 1 shift/reduce conflict.
State 1093 contains 1 shift/reduce conflict.
State 1095 contains 1 shift/reduce conflict.
State 1096 contains 1 shift/reduce conflict.
State 1121 contains 1 shift/reduce conflict.
=======
State 400 contains 2 shift/reduce conflicts.
State 402 contains 2 shift/reduce conflicts.
State 403 contains 2 shift/reduce conflicts.
State 405 contains 2 shift/reduce conflicts.
State 406 contains 2 shift/reduce conflicts.
State 429 contains 1 shift/reduce conflict.
State 436 contains 8 shift/reduce conflicts.
State 438 contains 2 shift/reduce conflicts.
State 481 contains 1 shift/reduce conflict.
State 482 contains 1 shift/reduce conflict.
State 483 contains 1 shift/reduce conflict.
State 500 contains 1 shift/reduce conflict.
State 501 contains 1 shift/reduce conflict.
State 505 contains 1 shift/reduce conflict.
State 529 contains 1 shift/reduce conflict.
State 530 contains 1 shift/reduce conflict.
State 531 contains 1 shift/reduce conflict.
State 535 contains 1 shift/reduce conflict.
State 557 contains 1 shift/reduce conflict.
State 579 contains 3 shift/reduce conflicts.
State 582 contains 10 shift/reduce conflicts.
State 674 contains 2 shift/reduce conflicts.
State 675 contains 2 shift/reduce conflicts.
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
State 693 contains 1 shift/reduce conflict.
State 694 contains 1 shift/reduce conflict.
State 710 contains 1 shift/reduce conflict.
State 711 contains 1 shift/reduce conflict.
State 716 contains 2 shift/reduce conflicts.
State 717 contains 2 shift/reduce conflicts.
State 719 contains 2 shift/reduce conflicts.
State 720 contains 2 shift/reduce conflicts.
<<<<<<< HEAD
State 800 contains 1 shift/reduce conflict.
State 801 contains 1 shift/reduce conflict.
State 803 contains 1 shift/reduce conflict.
State 804 contains 1 shift/reduce conflict.
State 805 contains 1 shift/reduce conflict.
State 806 contains 1 shift/reduce conflict.
State 819 contains 2 shift/reduce conflicts.
State 828 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 834 contains 1 shift/reduce conflict.
State 840 contains 2 shift/reduce conflicts.
State 843 contains 8 shift/reduce conflicts.
State 899 contains 1 shift/reduce conflict.
State 901 contains 1 shift/reduce conflict.
State 902 contains 1 shift/reduce conflict.
State 904 contains 1 shift/reduce conflict.
State 974 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 975 contains 1 shift/reduce conflict.
State 976 contains 1 shift/reduce conflict.
State 1062 contains 1 shift/reduce conflict.
State 1063 contains 1 shift/reduce conflict.
State 1067 contains 1 shift/reduce conflict.
State 1068 contains 1 shift/reduce conflict.
State 1097 contains 1 shift/reduce conflict.
State 1100 contains 1 shift/reduce conflict.
State 1102 contains 1 shift/reduce conflict.
State 1103 contains 1 shift/reduce conflict.
State 1126 contains 1 shift/reduce conflict.
=======
State 809 contains 1 shift/reduce conflict.
State 810 contains 1 shift/reduce conflict.
State 812 contains 1 shift/reduce conflict.
State 813 contains 1 shift/reduce conflict.
State 814 contains 1 shift/reduce conflict.
State 815 contains 1 shift/reduce conflict.
State 833 contains 2 shift/reduce conflicts.
State 842 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 848 contains 1 shift/reduce conflict.
State 854 contains 2 shift/reduce conflicts.
State 857 contains 8 shift/reduce conflicts.
State 916 contains 1 shift/reduce conflict.
State 918 contains 1 shift/reduce conflict.
State 919 contains 1 shift/reduce conflict.
State 921 contains 1 shift/reduce conflict.
State 1001 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 1002 contains 1 shift/reduce conflict.
State 1003 contains 1 shift/reduce conflict.
State 1097 contains 1 shift/reduce conflict.
State 1098 contains 1 shift/reduce conflict.
State 1102 contains 1 shift/reduce conflict.
State 1103 contains 1 shift/reduce conflict.
State 1137 contains 1 shift/reduce conflict.
State 1140 contains 1 shift/reduce conflict.
State 1142 contains 1 shift/reduce conflict.
State 1143 contains 1 shift/reduce conflict.
State 1169 contains 1 shift/reduce conflict.
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

Grammar
rule 1    program -> gComplexProposition statement
rule 2    gComplexProposition -> PBEGIN complexProposition PEND
rule 3    gComplexProposition ->		/* empty */
rule 4    complexProposition -> complexProposition AND complexProposition
rule 5    complexProposition -> complexProposition OR complexProposition
rule 6    complexProposition -> complexProposition IFF complexProposition
rule 7    complexProposition -> complexProposition PROPIMPLY complexProposition
rule 8    complexProposition -> complexProposition CHOP complexProposition
rule 9    complexProposition -> ALWAYS complexProposition
rule 10   complexProposition -> KEEP complexProposition
rule 11   complexProposition -> SOMETIMES complexProposition
rule 12   complexProposition -> W_NEXT complexProposition
rule 13   complexProposition -> NEXT complexProposition
rule 14   complexProposition -> SKIP
rule 15   complexProposition -> MY_TRUE
rule 16   complexProposition -> MY_FALSE
rule 17   complexProposition -> LENGTH ari_exp
rule 18   complexProposition -> EMPTY
rule 19   complexProposition -> MORE
rule 20   complexProposition -> HALT complexProposition
rule 21   complexProposition -> FINAL complexProposition
rule 22   complexProposition -> NEGATION complexProposition
rule 23   complexProposition -> OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR
rule 24   complexProposition -> ID
rule 25   complexProposition -> DEFINE ID COLON prime_bool_exp
rule 26   complexProposition -> complexProposition CHOPSTAR
rule 27   complexProposition -> OPEN_PAR complexProposition CLOSE_PAR
rule 28   poptional_projection -> COMMA complexProposition poptional_projection
rule 29   poptional_projection ->		/* empty */
rule 30   statement -> statement AND statement
rule 31   statement -> statement OR statement
rule 32   statement -> statement CHOP statement
rule 33   statement -> ass_statement
rule 34   statement -> sign_declaration
rule 35   statement -> switch_statement
rule 36   statement -> RETURN ass_right
rule 37   statement -> if_statement
rule 38   statement -> while_statement
rule 39   statement -> for_statement
rule 40   statement -> extend_for_statement
rule 41   statement -> NEXT OPEN_PAR statement CLOSE_PAR
rule 42   statement -> KEEP OPEN_PAR statement CLOSE_PAR
rule 43   statement -> ALWAYS OPEN_PAR statement CLOSE_PAR
rule 44   statement -> AWAIT OPEN_PAR bool_exp CLOSE_PAR
rule 45   statement -> REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR
rule 46   statement -> SKIP
rule 47   statement -> EMPTY
rule 48   statement -> MORE
rule 49   statement -> LENGTH OPEN_PAR ari_exp CLOSE_PAR
rule 50   statement -> input_statement
rule 51   statement -> output_statement
rule 52   statement -> TRUE
rule 53   statement -> FALSE
rule 54   statement -> FINAL OPEN_PAR statement CLOSE_PAR
rule 55   statement -> statement PARALLEL statement
rule 56   statement -> OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR
rule 57   statement -> FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR
rule 58   statement -> OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar
rule 59   statement -> OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar
rule 60   statement -> FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 61   statement -> DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR
rule 62   statement -> struct_define_statement
rule 63   statement -> function
rule 64   statement -> EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR
rule 65   statement -> OPEN_PAR statement CLOSE_PAR
rule 66   option_struct_declaration -> sign_declaration
rule 67   option_struct_declaration -> sign_declaration AND option_struct_declaration
rule 68   empty_statement -> statement
rule 69   empty_statement ->		/* empty */
<<<<<<< HEAD
rule 70   function -> ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 71   function -> EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 72   function -> array OPEN_PAR option_function_identifier CLOSE_PAR
rule 73   struct_define_statement -> struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR
rule 74   struct_identifier -> STRUCT ID
rule 75   struct_identifier -> UNION ID
rule 76   sign_declaration -> SIGNED declaration
rule 77   sign_declaration -> UNSIGNED declaration
rule 78   sign_declaration -> declaration
rule 79   declaration -> type_define option_identifier_array_declaration
rule 80   declaration -> STRUCT_TYPE option_identifier_array_declaration
rule 81   declaration -> STRUCT ID option_identifier_array_declaration
rule 82   declaration -> UNION ID option_identifier_array_declaration
rule 83   declaration -> STRUCT STRUCT_TYPE option_identifier_array_declaration
rule 84   declaration -> UNION STRUCT_TYPE option_identifier_array_declaration
rule 85   declaration -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 86   declaration -> OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 87   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 88   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp
rule 89   type_define -> INTDECLARATION
rule 90   type_define -> FLOATDECLARATION
rule 91   type_define -> CHARDECLARATION
rule 92   type_define -> STRDECLARATION
rule 93   type_define -> VOIDDECLARATION
rule 94   type_define -> FILEDECLARATION
rule 95   option_identifier_array_declaration -> identifier inner_option_identifier_array_declaration
rule 96   option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration
rule 97   option_identifier_array_declaration -> identifier ASS_P ass_right inner_option_identifier_array_declaration
rule 98   option_identifier_array_declaration -> ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration
rule 99   option_identifier_array_declaration -> ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration
rule 100  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration
rule 101  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration
rule 102  option_identifier_array_declaration -> MUL option_identifier_array_declaration
rule 103  inner_option_identifier_array_declaration -> COMMA option_identifier_array_declaration
rule 104  inner_option_identifier_array_declaration -> COMMA error
rule 105  inner_option_identifier_array_declaration ->		/* empty */
rule 110  ass_statement -> ass_left assign_operator ass_right
rule 111  ass_left -> identifier
rule 112  ass_left -> struct_member_exp
rule 113  ass_left -> array
rule 114  ass_left -> point_exp
rule 115  ass_left -> OPEN_PAR ass_left CLOSE_PAR
rule 116  ass_left -> NEXT ass_left
rule 117  ass_left -> leftaddrshift
rule 118  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 119  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 120  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 121  leftaddrshift -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 122  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 123  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 124  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 125  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 126  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 127  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 128  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 129  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 130  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 131  assign_operator -> ASS_P
rule 132  assign_operator -> ASS_N
rule 133  ass_right -> ari_exp
rule 134  ass_right -> array_exp
rule 135  ass_right -> strliteral
rule 136  ass_right -> OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function
rule 137  ass_right -> OPEN_PAR ass_right CLOSE_PAR
rule 138  ass_right -> rightaddrshift
rule 139  rightaddrshift -> MUL OPEN_PAR leftaddrshift CLOSE_PAR
rule 140  array -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 141  array -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 142  array -> OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 143  array -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 144  array -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 145  array -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 146  array -> OPEN_PAR array CLOSE_PAR
rule 147  option_ari_exp -> COMMA ari_exp option_ari_exp
rule 148  option_ari_exp -> COMMA error
rule 149  option_ari_exp ->		/* empty */
rule 150  point_exp -> MUL identifier
rule 151  point_exp -> MUL point_exp
rule 152  point_exp -> MUL array
rule 153  point_exp -> OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 154  point_exp -> MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp
rule 155  point_exp -> MUL OPEN_PAR ari_exp CLOSE_PAR
rule 156  point_exp -> OPEN_PAR point_exp CLOSE_PAR
rule 157  ari_exp -> simple_ari_exp
rule 158  ari_exp -> simple_ari_exp relation_operator ari_exp
rule 159  ari_exp -> ari_exp ari_operator simple_ari_exp
rule 160  ari_exp -> IF bool_exp THEN ari_exp option_exp_else_statement
rule 161  type_cast_alg_exp -> simple_ari_exp
rule 162  type_cast_alg_exp -> simple_ari_exp ari_operator simple_ari_exp
rule 163  option_exp_else_statement -> ELSE ari_exp
rule 164  option_exp_else_statement ->		/* empty */
rule 165  simple_ari_exp -> member_in_exp
rule 166  simple_ari_exp -> simple_ari_exp bi_operator member_in_exp
rule 167  member_in_exp -> intliteral
rule 168  member_in_exp -> SUB member_in_exp
rule 169  member_in_exp -> BNE member_in_exp
rule 170  member_in_exp -> POINTERNULL
rule 171  member_in_exp -> floatliteral
rule 172  member_in_exp -> identifier
rule 173  member_in_exp -> array
rule 174  member_in_exp -> point_exp
rule 175  member_in_exp -> function
rule 176  member_in_exp -> OPEN_PAR ari_exp CLOSE_PAR
rule 177  member_in_exp -> charliteral
rule 178  member_in_exp -> address_exp
rule 179  member_in_exp -> type_cast
rule 180  member_in_exp -> struct_member_exp
rule 181  bi_operator -> MUL
rule 182  bi_operator -> DIV
rule 183  bi_operator -> MOD
rule 184  bi_operator -> LST
rule 185  bi_operator -> RST
rule 186  bi_operator -> ADDRESS
rule 187  bi_operator -> INTER_OR
rule 188  bi_operator -> CON
rule 189  ari_operator -> ADD
rule 190  ari_operator -> SUB
rule 191  array_exp -> array_exp CON array_exp
rule 192  array_exp -> option_list_value
rule 193  array_exp -> option_struct_list_value
rule 194  array_exp -> OPEN_PAR array_exp CLOSE_PAR
rule 195  option_list_value -> OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR
rule 196  option_list_value -> OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR
rule 197  option_list_value -> OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR
rule 198  option_struct_list_value -> OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR
rule 199  option_struct_list_value -> OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR
rule 200  option_struct_list_value -> OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR
rule 201  inner_option_list_value -> COMMA ari_exp inner_option_list_value
rule 202  inner_option_list_value -> COMMA strliteral inner_option_list_value
rule 203  inner_option_list_value -> COMMA array_exp inner_option_list_value
rule 204  inner_option_list_value ->		/* empty */
rule 205  inner_option_list_value -> COMMA error
rule 206  address_exp -> ADDRESS identifier
rule 207  address_exp -> ADDRESS array
rule 208  address_exp -> ADDRESS struct_member_exp
rule 209  address_exp -> ADDRESS address_exp
rule 210  address_exp -> OPEN_PAR address_exp CLOSE_PAR
rule 211  type_cast -> OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 212  type_cast -> OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp
rule 213  type_cast -> OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 214  type_cast -> OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 215  type_cast -> OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 216  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 217  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 218  type_cast -> OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element
rule 219  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element
rule 220  type_cast -> OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element
rule 221  type_cast -> OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element
rule 222  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element
rule 223  type_cast -> OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element
rule 224  type_cast -> OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 225  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 226  type_cast -> OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element
rule 227  type_cast -> OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 228  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 229  type_cast -> OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element
rule 230  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 231  type_cast -> OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 232  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 233  type_cast -> OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 234  casted_element -> type_cast_alg_exp
rule 235  bool_exp -> prime_bool_exp
rule 236  bool_exp -> NEGATION bool_exp
rule 237  bool_exp -> bool_exp AND bool_exp
rule 238  bool_exp -> bool_exp OR bool_exp
rule 239  bool_exp -> OPEN_PAR bool_exp CLOSE_PAR
rule 240  prime_bool_exp -> ari_exp relation_operator ari_exp
rule 241  prime_bool_exp -> MY_TRUE
rule 242  prime_bool_exp -> MY_FALSE
rule 243  prime_bool_exp -> ari_exp
rule 244  prime_bool_exp -> ari_exp EQ strliteral
rule 245  prime_bool_exp -> ari_exp NE strliteral
rule 246  prime_bool_exp -> strliteral EQ ari_exp
rule 247  prime_bool_exp -> strliteral NE ari_exp
rule 248  prime_bool_exp -> ari_exp EQ POINTERNULL
rule 249  prime_bool_exp -> ari_exp NE POINTERNULL
rule 250  prime_bool_exp -> POINTERNULL EQ ari_exp
rule 251  prime_bool_exp -> POINTERNULL NE ari_exp
rule 252  prime_bool_exp -> ari_exp EQ charliteral
rule 253  prime_bool_exp -> ari_exp NE charliteral
rule 254  relation_operator -> GE
rule 255  relation_operator -> LE
rule 256  relation_operator -> NE
rule 257  relation_operator -> GT
rule 258  relation_operator -> LT
rule 259  relation_operator -> EQ
rule 260  sign_type_define -> UNSIGNED INTDECLARATION
rule 261  sign_type_define -> UNSIGNED CHARDECLARATION
rule 262  all_type_define -> sign_type_define
rule 263  all_type_define -> type_define
rule 264  option_function_parameter_list -> all_type_define identifier inner_option_define_identifier
rule 265  option_function_parameter_list -> all_type_define inner_option_define_identifier
rule 266  option_function_parameter_list -> STRUCT_TYPE identifier inner_option_define_identifier
rule 267  option_function_parameter_list -> STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 268  option_function_parameter_list -> STRUCT_TYPE MUL MUL identifier inner_option_define_identifier
rule 269  option_function_parameter_list -> STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 270  option_function_parameter_list -> ID identifier inner_option_define_identifier
rule 271  option_function_parameter_list -> ID MUL identifier inner_option_define_identifier
rule 272  option_function_parameter_list -> ID MUL MUL identifier inner_option_define_identifier
rule 273  option_function_parameter_list -> ID identifier ARRAY inner_option_define_identifier
rule 274  option_function_parameter_list -> STRUCT_TYPE inner_option_define_identifier
rule 275  option_function_parameter_list -> STRUCT_TYPE MUL inner_option_define_identifier
rule 276  option_function_parameter_list -> STRUCT_TYPE MUL MUL inner_option_define_identifier
rule 277  option_function_parameter_list -> ID inner_option_define_identifier
rule 278  option_function_parameter_list -> ID MUL inner_option_define_identifier
rule 279  option_function_parameter_list -> ID MUL MUL inner_option_define_identifier
rule 280  option_function_parameter_list -> all_type_define identifier ARRAY inner_option_define_identifier
rule 281  option_function_parameter_list -> all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 282  option_function_parameter_list -> all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 283  option_function_parameter_list -> all_type_define MUL identifier inner_option_define_identifier
rule 284  option_function_parameter_list -> all_type_define MUL inner_option_define_identifier
rule 285  option_function_parameter_list -> all_type_define MUL MUL identifier inner_option_define_identifier
rule 286  option_function_parameter_list -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 287  option_function_parameter_list ->		/* empty */
rule 288  inner_option_define_identifier -> COMMA all_type_define identifier inner_option_define_identifier
rule 289  inner_option_define_identifier -> COMMA all_type_define inner_option_define_identifier
rule 290  inner_option_define_identifier -> COMMA ID identifier inner_option_define_identifier
rule 291  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier inner_option_define_identifier
rule 292  inner_option_define_identifier -> COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 293  inner_option_define_identifier -> COMMA ID identifier ARRAY inner_option_define_identifier
rule 294  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 295  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY inner_option_define_identifier
rule 296  inner_option_define_identifier -> COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 297  inner_option_define_identifier -> COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 298  inner_option_define_identifier ->		/* empty */
rule 299  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 300  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 301  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 302  inner_option_define_identifier -> COMMA all_type_define MUL identifier inner_option_define_identifier
rule 303  inner_option_define_identifier -> COMMA all_type_define MUL inner_option_define_identifier
rule 304  inner_option_define_identifier -> COMMA error
rule 305  option_function_identifier -> ass_right inner_option_function_identifier
rule 306  option_function_identifier -> all_type_define
rule 307  option_function_identifier ->		/* empty */
rule 308  option_function_identifier -> ADDRESS error
rule 309  inner_option_function_identifier -> COMMA ass_right inner_option_function_identifier
rule 310  inner_option_function_identifier -> COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 311  inner_option_function_identifier ->		/* empty */
rule 312  inner_option_function_identifier -> COMMA error
rule 313  statement_bpar -> OPEN_BPAR statement CLOSE_BPAR
rule 314  statement_bpar -> error CLOSE_BPAR
rule 315  bool_par -> OPEN_PAR bool_exp CLOSE_PAR
rule 316  bool_par -> error CLOSE_PAR
rule 317  identifier -> ID
rule 318  identifier -> OPEN_PAR identifier CLOSE_PAR
rule 319  strliteral -> STRLITERAL
rule 320  intliteral -> INTLITERAL
rule 321  charliteral -> CHARLITERAL
rule 322  floatliteral -> FLOATLITERAL
rule 323  option_frame_identifier -> COMMA identifier option_frame_identifier
rule 324  option_frame_identifier ->		/* empty */
rule 325  option_frame_identifier -> COMMA error
rule 326  option_projection ->		/* empty */
rule 327  option_projection -> COMMA statement option_projection
rule 328  imply_pre -> prime_bool_exp
rule 329  imply_pre -> NEGATION imply_pre
rule 330  imply_pre -> imply_pre AND imply_pre
rule 331  imply_pre -> imply_pre OR imply_pre
rule 332  imply_pre -> OPEN_PAR imply_pre CLOSE_PAR
rule 333  while_statement -> WHILE bool_par statement_bpar
rule 334  for_statement -> FOR ari_exp TIMES DO statement_bpar
rule 335  extend_for_statement -> FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar
rule 336  for_sta_init -> ass_statement
rule 337  for_sta_init -> declaration
rule 338  for_sta_init ->		/* empty */
rule 339  for_sta_condition -> bool_exp
rule 340  for_sta_condition ->		/* empty */
rule 341  for_sta_control -> ass_statement
rule 342  for_sta_control ->		/* empty */
rule 343  switch_statement -> SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR
rule 344  case_par -> CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par
rule 345  case_par -> DEFAULT COLON OPEN_PAR statement CLOSE_PAR
rule 346  init_case_par -> BREAK case_par
rule 347  init_case_par -> case_par
rule 348  init_case_par ->		/* empty */
rule 349  if_statement -> IF bool_exp THEN statement_bpar option_else_statement
rule 350  option_else_statement -> ELSE statement_bpar
rule 351  option_else_statement ->		/* empty */
rule 352  output_statement -> DISPLAY OPEN_PAR ass_right CLOSE_PAR
rule 353  output_statement -> DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR
rule 354  option_output ->		/* empty */
rule 355  option_output -> COMMA ass_right option_output
rule 356  input_statement -> REQUEST OPEN_PAR identifier CLOSE_PAR
rule 357  input_statement -> REQUEST OPEN_PAR identifier option_input CLOSE_PAR
rule 358  input_statement -> REQUEST OPEN_PAR array CLOSE_PAR
rule 359  input_statement -> REQUEST OPEN_PAR array option_input CLOSE_PAR
rule 360  input_statement -> REQUEST OPEN_PAR struct_member_exp CLOSE_PAR
rule 361  option_input ->		/* empty */
rule 362  option_input -> COMMA identifier option_input
rule 363  option_input -> COMMA array option_input
rule 364  struct_member_exp -> identifier DOT identifier option_struct_member_exp
rule 365  struct_member_exp -> array DOT identifier option_struct_member_exp
rule 366  struct_member_exp -> point_exp DOT identifier option_struct_member_exp
rule 367  struct_member_exp -> identifier DOT array option_struct_member_exp
rule 368  struct_member_exp -> array DOT array option_struct_member_exp
rule 369  struct_member_exp -> point_exp DOT array option_struct_member_exp
rule 370  struct_member_exp -> identifier IMPLY identifier option_struct_member_exp
rule 371  struct_member_exp -> array IMPLY identifier option_struct_member_exp
rule 372  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp
rule 373  struct_member_exp -> point_exp IMPLY identifier option_struct_member_exp
rule 374  struct_member_exp -> identifier IMPLY array option_struct_member_exp
rule 375  struct_member_exp -> array IMPLY array option_struct_member_exp
rule 376  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp
rule 377  struct_member_exp -> identifier DOT function
rule 378  struct_member_exp -> identifier IMPLY function
rule 379  struct_member_exp -> point_exp IMPLY array option_struct_member_exp
rule 380  struct_member_exp -> OPEN_PAR struct_member_exp CLOSE_PAR
rule 381  option_struct_member_exp ->		/* empty */
rule 382  option_struct_member_exp -> DOT identifier option_struct_member_exp
rule 383  option_struct_member_exp -> DOT array option_struct_member_exp
rule 384  option_struct_member_exp -> IMPLY identifier option_struct_member_exp
rule 385  option_struct_member_exp -> IMPLY array option_struct_member_exp
rule 386  option_struct_member_exp -> DOT function
rule 387  option_struct_member_exp -> IMPLY function
=======
<<<<<<< HEAD
rule 70   function_define -> FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 71   function -> ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 72   function -> EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 73   function -> array OPEN_PAR option_function_identifier CLOSE_PAR
rule 74   struct_define_statement -> struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR
rule 75   struct_identifier -> STRUCT ID
rule 76   struct_identifier -> UNION ID
rule 77   sign_declaration -> SIGNED declaration
rule 78   sign_declaration -> UNSIGNED declaration
rule 79   sign_declaration -> declaration
rule 80   declaration -> type_define option_identifier_array_declaration
rule 81   declaration -> STRUCT_TYPE option_identifier_array_declaration
rule 82   declaration -> STRUCT ID option_identifier_array_declaration
rule 83   declaration -> UNION ID option_identifier_array_declaration
rule 84   declaration -> STRUCT STRUCT_TYPE option_identifier_array_declaration
rule 85   declaration -> UNION STRUCT_TYPE option_identifier_array_declaration
rule 86   declaration -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 87   declaration -> OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 88   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 89   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp
rule 90   type_define -> INTDECLARATION
rule 91   type_define -> FLOATDECLARATION
rule 92   type_define -> CHARDECLARATION
rule 93   type_define -> STRDECLARATION
rule 94   type_define -> VOIDDECLARATION
rule 95   type_define -> FILEDECLARATION
rule 96   option_identifier_array_declaration -> identifier inner_option_identifier_array_declaration
rule 97   option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration
rule 98   option_identifier_array_declaration -> identifier ASS_P ass_right inner_option_identifier_array_declaration
rule 99   option_identifier_array_declaration -> ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration
rule 100  option_identifier_array_declaration -> ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration
rule 101  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration
rule 102  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration
rule 103  option_identifier_array_declaration -> MUL option_identifier_array_declaration
rule 104  inner_option_identifier_array_declaration -> COMMA option_identifier_array_declaration
rule 105  inner_option_identifier_array_declaration -> COMMA error
rule 106  inner_option_identifier_array_declaration ->		/* empty */
rule 111  ass_statement -> ass_left assign_operator ass_right
rule 112  ass_left -> identifier
rule 113  ass_left -> struct_member_exp
rule 114  ass_left -> array
rule 115  ass_left -> point_exp
rule 116  ass_left -> OPEN_PAR ass_left CLOSE_PAR
rule 117  ass_left -> NEXT ass_left
rule 118  ass_left -> leftaddrshift
rule 119  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 120  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 121  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 122  leftaddrshift -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 123  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 124  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 125  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 126  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 127  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 128  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 129  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 130  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 131  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 132  assign_operator -> ASS_P
rule 133  assign_operator -> ASS_N
rule 134  ass_right -> ari_exp
rule 135  ass_right -> array_exp
rule 136  ass_right -> strliteral
rule 137  ass_right -> OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function
rule 138  ass_right -> OPEN_PAR ass_right CLOSE_PAR
rule 139  ass_right -> rightaddrshift
rule 140  rightaddrshift -> MUL OPEN_PAR leftaddrshift CLOSE_PAR
rule 141  array -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 142  array -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 143  array -> OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 144  array -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 145  array -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 146  array -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 147  array -> OPEN_PAR array CLOSE_PAR
rule 148  option_ari_exp -> COMMA ari_exp option_ari_exp
rule 149  option_ari_exp -> COMMA error
rule 150  option_ari_exp ->		/* empty */
rule 151  point_exp -> MUL identifier
rule 152  point_exp -> MUL point_exp
rule 153  point_exp -> MUL array
rule 154  point_exp -> OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 155  point_exp -> MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp
rule 156  point_exp -> MUL OPEN_PAR ari_exp CLOSE_PAR
rule 157  point_exp -> OPEN_PAR point_exp CLOSE_PAR
rule 158  ari_exp -> simple_ari_exp
rule 159  ari_exp -> simple_ari_exp relation_operator ari_exp
rule 160  ari_exp -> ari_exp ari_operator simple_ari_exp
rule 161  ari_exp -> IF bool_exp THEN ari_exp option_exp_else_statement
rule 162  type_cast_alg_exp -> simple_ari_exp
rule 163  type_cast_alg_exp -> simple_ari_exp ari_operator simple_ari_exp
rule 164  option_exp_else_statement -> ELSE ari_exp
rule 165  option_exp_else_statement ->		/* empty */
rule 166  simple_ari_exp -> member_in_exp
rule 167  simple_ari_exp -> simple_ari_exp bi_operator member_in_exp
rule 168  member_in_exp -> intliteral
rule 169  member_in_exp -> SUB member_in_exp
rule 170  member_in_exp -> BNE member_in_exp
rule 171  member_in_exp -> POINTERNULL
rule 172  member_in_exp -> floatliteral
rule 173  member_in_exp -> identifier
rule 174  member_in_exp -> array
rule 175  member_in_exp -> point_exp
rule 176  member_in_exp -> function
rule 177  member_in_exp -> OPEN_PAR ari_exp CLOSE_PAR
rule 178  member_in_exp -> charliteral
rule 179  member_in_exp -> address_exp
rule 180  member_in_exp -> type_cast
rule 181  member_in_exp -> struct_member_exp
rule 182  bi_operator -> MUL
rule 183  bi_operator -> DIV
rule 184  bi_operator -> MOD
rule 185  bi_operator -> LST
rule 186  bi_operator -> RST
rule 187  bi_operator -> ADDRESS
rule 188  bi_operator -> INTER_OR
rule 189  bi_operator -> CON
rule 190  ari_operator -> ADD
rule 191  ari_operator -> SUB
rule 192  array_exp -> array_exp CON array_exp
rule 193  array_exp -> option_list_value
rule 194  array_exp -> option_struct_list_value
rule 195  array_exp -> OPEN_PAR array_exp CLOSE_PAR
rule 196  option_list_value -> OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR
rule 197  option_list_value -> OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR
rule 198  option_list_value -> OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR
rule 199  option_struct_list_value -> OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR
rule 200  option_struct_list_value -> OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR
rule 201  option_struct_list_value -> OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR
rule 202  inner_option_list_value -> COMMA ari_exp inner_option_list_value
rule 203  inner_option_list_value -> COMMA strliteral inner_option_list_value
rule 204  inner_option_list_value -> COMMA array_exp inner_option_list_value
rule 205  inner_option_list_value ->		/* empty */
rule 206  inner_option_list_value -> COMMA error
rule 207  address_exp -> ADDRESS identifier
rule 208  address_exp -> ADDRESS array
rule 209  address_exp -> ADDRESS struct_member_exp
rule 210  address_exp -> ADDRESS address_exp
rule 211  address_exp -> OPEN_PAR address_exp CLOSE_PAR
rule 212  type_cast -> OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 213  type_cast -> OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp
rule 214  type_cast -> OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 215  type_cast -> OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 216  type_cast -> OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 217  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 218  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 219  type_cast -> OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element
rule 220  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element
rule 221  type_cast -> OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element
rule 222  type_cast -> OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element
rule 223  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element
rule 224  type_cast -> OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element
rule 225  type_cast -> OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 226  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 227  type_cast -> OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element
rule 228  type_cast -> OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 229  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 230  type_cast -> OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element
rule 231  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 232  type_cast -> OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 233  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 234  type_cast -> OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 235  casted_element -> type_cast_alg_exp
rule 236  bool_exp -> prime_bool_exp
rule 237  bool_exp -> NEGATION bool_exp
rule 238  bool_exp -> bool_exp AND bool_exp
rule 239  bool_exp -> bool_exp OR bool_exp
rule 240  bool_exp -> OPEN_PAR bool_exp CLOSE_PAR
rule 241  prime_bool_exp -> ari_exp relation_operator ari_exp
rule 242  prime_bool_exp -> MY_TRUE
rule 243  prime_bool_exp -> MY_FALSE
rule 244  prime_bool_exp -> ari_exp
rule 245  prime_bool_exp -> ari_exp EQ strliteral
rule 246  prime_bool_exp -> ari_exp NE strliteral
rule 247  prime_bool_exp -> strliteral EQ ari_exp
rule 248  prime_bool_exp -> strliteral NE ari_exp
rule 249  prime_bool_exp -> ari_exp EQ POINTERNULL
rule 250  prime_bool_exp -> ari_exp NE POINTERNULL
rule 251  prime_bool_exp -> POINTERNULL EQ ari_exp
rule 252  prime_bool_exp -> POINTERNULL NE ari_exp
rule 253  prime_bool_exp -> ari_exp EQ charliteral
rule 254  prime_bool_exp -> ari_exp NE charliteral
rule 255  relation_operator -> GE
rule 256  relation_operator -> LE
rule 257  relation_operator -> NE
rule 258  relation_operator -> GT
rule 259  relation_operator -> LT
rule 260  relation_operator -> EQ
rule 261  sign_type_define -> UNSIGNED INTDECLARATION
rule 262  sign_type_define -> UNSIGNED CHARDECLARATION
rule 263  all_type_define -> sign_type_define
rule 264  all_type_define -> type_define
rule 265  option_function_parameter_list -> all_type_define identifier inner_option_define_identifier
rule 266  option_function_parameter_list -> all_type_define inner_option_define_identifier
rule 267  option_function_parameter_list -> STRUCT_TYPE identifier inner_option_define_identifier
rule 268  option_function_parameter_list -> STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 269  option_function_parameter_list -> STRUCT_TYPE MUL MUL identifier inner_option_define_identifier
rule 270  option_function_parameter_list -> STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 271  option_function_parameter_list -> ID identifier inner_option_define_identifier
rule 272  option_function_parameter_list -> ID MUL identifier inner_option_define_identifier
rule 273  option_function_parameter_list -> ID MUL MUL identifier inner_option_define_identifier
rule 274  option_function_parameter_list -> ID identifier ARRAY inner_option_define_identifier
rule 275  option_function_parameter_list -> STRUCT_TYPE inner_option_define_identifier
rule 276  option_function_parameter_list -> STRUCT_TYPE MUL inner_option_define_identifier
rule 277  option_function_parameter_list -> STRUCT_TYPE MUL MUL inner_option_define_identifier
rule 278  option_function_parameter_list -> ID inner_option_define_identifier
rule 279  option_function_parameter_list -> ID MUL inner_option_define_identifier
rule 280  option_function_parameter_list -> ID MUL MUL inner_option_define_identifier
rule 281  option_function_parameter_list -> all_type_define identifier ARRAY inner_option_define_identifier
rule 282  option_function_parameter_list -> all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 283  option_function_parameter_list -> all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 284  option_function_parameter_list -> all_type_define MUL identifier inner_option_define_identifier
rule 285  option_function_parameter_list -> all_type_define MUL inner_option_define_identifier
rule 286  option_function_parameter_list -> all_type_define MUL MUL identifier inner_option_define_identifier
rule 287  option_function_parameter_list -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 288  option_function_parameter_list ->		/* empty */
rule 289  inner_option_define_identifier -> COMMA all_type_define identifier inner_option_define_identifier
rule 290  inner_option_define_identifier -> COMMA all_type_define inner_option_define_identifier
rule 291  inner_option_define_identifier -> COMMA ID identifier inner_option_define_identifier
rule 292  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier inner_option_define_identifier
rule 293  inner_option_define_identifier -> COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 294  inner_option_define_identifier -> COMMA ID identifier ARRAY inner_option_define_identifier
rule 295  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 296  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY inner_option_define_identifier
rule 297  inner_option_define_identifier -> COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 298  inner_option_define_identifier -> COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 299  inner_option_define_identifier ->		/* empty */
rule 300  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 301  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 302  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 303  inner_option_define_identifier -> COMMA all_type_define MUL identifier inner_option_define_identifier
rule 304  inner_option_define_identifier -> COMMA all_type_define MUL inner_option_define_identifier
rule 305  inner_option_define_identifier -> COMMA error
rule 306  option_function_identifier -> ass_right inner_option_function_identifier
rule 307  option_function_identifier -> ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 308  option_function_identifier ->		/* empty */
rule 309  option_function_identifier -> ADDRESS error
rule 310  inner_option_function_identifier -> COMMA ass_right inner_option_function_identifier
rule 311  inner_option_function_identifier -> COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 312  inner_option_function_identifier ->		/* empty */
rule 313  inner_option_function_identifier -> COMMA error
rule 314  statement_bpar -> OPEN_BPAR statement CLOSE_BPAR
rule 315  statement_bpar -> error CLOSE_BPAR
rule 316  bool_par -> OPEN_PAR bool_exp CLOSE_PAR
rule 317  bool_par -> error CLOSE_PAR
rule 318  identifier -> ID
rule 319  identifier -> OPEN_PAR identifier CLOSE_PAR
rule 320  strliteral -> STRLITERAL
rule 321  intliteral -> INTLITERAL
rule 322  charliteral -> CHARLITERAL
rule 323  floatliteral -> FLOATLITERAL
rule 324  option_frame_identifier -> COMMA identifier option_frame_identifier
rule 325  option_frame_identifier ->		/* empty */
rule 326  option_frame_identifier -> COMMA error
rule 327  option_projection ->		/* empty */
rule 328  option_projection -> COMMA statement option_projection
rule 329  imply_pre -> prime_bool_exp
rule 330  imply_pre -> NEGATION imply_pre
rule 331  imply_pre -> imply_pre AND imply_pre
rule 332  imply_pre -> imply_pre OR imply_pre
rule 333  imply_pre -> OPEN_PAR imply_pre CLOSE_PAR
rule 334  while_statement -> WHILE bool_par statement_bpar
rule 335  for_statement -> FOR ari_exp TIMES DO statement_bpar
rule 336  extend_for_statement -> FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar
rule 337  for_sta_init -> ass_statement
rule 338  for_sta_init -> declaration
rule 339  for_sta_init ->		/* empty */
rule 340  for_sta_condition -> bool_exp
rule 341  for_sta_condition ->		/* empty */
rule 342  for_sta_control -> ass_statement
rule 343  for_sta_control ->		/* empty */
rule 344  switch_statement -> SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR
rule 345  case_par -> CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par
rule 346  case_par -> DEFAULT COLON OPEN_PAR statement CLOSE_PAR
rule 347  init_case_par -> BREAK case_par
rule 348  init_case_par -> case_par
rule 349  init_case_par ->		/* empty */
rule 350  if_statement -> IF bool_exp THEN statement_bpar option_else_statement
rule 351  option_else_statement -> ELSE statement_bpar
rule 352  option_else_statement ->		/* empty */
rule 353  output_statement -> DISPLAY OPEN_PAR ass_right CLOSE_PAR
rule 354  output_statement -> DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR
rule 355  option_output ->		/* empty */
rule 356  option_output -> COMMA ass_right option_output
rule 357  input_statement -> REQUEST OPEN_PAR identifier CLOSE_PAR
rule 358  input_statement -> REQUEST OPEN_PAR identifier option_input CLOSE_PAR
rule 359  input_statement -> REQUEST OPEN_PAR array CLOSE_PAR
rule 360  input_statement -> REQUEST OPEN_PAR array option_input CLOSE_PAR
rule 361  input_statement -> REQUEST OPEN_PAR struct_member_exp CLOSE_PAR
rule 362  option_input ->		/* empty */
rule 363  option_input -> COMMA identifier option_input
rule 364  option_input -> COMMA array option_input
rule 365  struct_member_exp -> identifier DOT identifier option_struct_member_exp
rule 366  struct_member_exp -> array DOT identifier option_struct_member_exp
rule 367  struct_member_exp -> point_exp DOT identifier option_struct_member_exp
rule 368  struct_member_exp -> identifier DOT array option_struct_member_exp
rule 369  struct_member_exp -> array DOT array option_struct_member_exp
rule 370  struct_member_exp -> point_exp DOT array option_struct_member_exp
rule 371  struct_member_exp -> identifier IMPLY identifier option_struct_member_exp
rule 372  struct_member_exp -> array IMPLY identifier option_struct_member_exp
rule 373  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp
rule 374  struct_member_exp -> point_exp IMPLY identifier option_struct_member_exp
rule 375  struct_member_exp -> identifier IMPLY array option_struct_member_exp
rule 376  struct_member_exp -> array IMPLY array option_struct_member_exp
rule 377  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp
rule 378  struct_member_exp -> identifier DOT function
rule 379  struct_member_exp -> identifier IMPLY function
rule 380  struct_member_exp -> point_exp IMPLY array option_struct_member_exp
rule 381  struct_member_exp -> OPEN_PAR struct_member_exp CLOSE_PAR
rule 382  option_struct_member_exp ->		/* empty */
rule 383  option_struct_member_exp -> DOT identifier option_struct_member_exp
rule 384  option_struct_member_exp -> DOT array option_struct_member_exp
rule 385  option_struct_member_exp -> IMPLY identifier option_struct_member_exp
rule 386  option_struct_member_exp -> IMPLY array option_struct_member_exp
rule 387  option_struct_member_exp -> DOT function
rule 388  option_struct_member_exp -> IMPLY function
=======
rule 70   function_define -> FUNCTION all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 71   function_define -> FUNCTION all_type_define MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 72   function_define -> FUNCTION all_type_define MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 73   function_define -> FUNCTION STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 74   function_define -> FUNCTION STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 75   function_define -> FUNCTION STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 76   function -> ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 77   function -> EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 78   function -> array OPEN_PAR option_function_identifier CLOSE_PAR
rule 79   struct_define_statement -> struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR
rule 80   struct_identifier -> STRUCT ID
rule 81   struct_identifier -> UNION ID
rule 82   sign_declaration -> SIGNED declaration
rule 83   sign_declaration -> UNSIGNED declaration
rule 84   sign_declaration -> declaration
rule 85   declaration -> type_define option_identifier_array_declaration
rule 86   declaration -> STRUCT_TYPE option_identifier_array_declaration
rule 87   declaration -> STRUCT ID option_identifier_array_declaration
rule 88   declaration -> UNION ID option_identifier_array_declaration
rule 89   declaration -> STRUCT STRUCT_TYPE option_identifier_array_declaration
rule 90   declaration -> UNION STRUCT_TYPE option_identifier_array_declaration
rule 91   declaration -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 92   declaration -> OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 93   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 94   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp
rule 95   type_define -> INTDECLARATION
rule 96   type_define -> FLOATDECLARATION
rule 97   type_define -> CHARDECLARATION
rule 98   type_define -> STRDECLARATION
rule 99   type_define -> VOIDDECLARATION
rule 100  type_define -> FILEDECLARATION
rule 101  option_identifier_array_declaration -> identifier inner_option_identifier_array_declaration
rule 102  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration
rule 103  option_identifier_array_declaration -> identifier ASS_P ass_right inner_option_identifier_array_declaration
rule 104  option_identifier_array_declaration -> ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration
rule 105  option_identifier_array_declaration -> ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration
rule 106  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration
rule 107  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration
rule 108  option_identifier_array_declaration -> MUL option_identifier_array_declaration
rule 109  inner_option_identifier_array_declaration -> COMMA option_identifier_array_declaration
rule 110  inner_option_identifier_array_declaration -> COMMA error
rule 111  inner_option_identifier_array_declaration ->		/* empty */
rule 116  ass_statement -> ass_left assign_operator ass_right
rule 117  ass_left -> identifier
rule 118  ass_left -> struct_member_exp
rule 119  ass_left -> array
rule 120  ass_left -> point_exp
rule 121  ass_left -> OPEN_PAR ass_left CLOSE_PAR
rule 122  ass_left -> NEXT ass_left
rule 123  ass_left -> leftaddrshift
rule 124  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 125  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 126  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 127  leftaddrshift -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 128  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 129  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 130  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 131  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 132  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 133  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 134  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 135  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 136  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 137  assign_operator -> ASS_P
rule 138  assign_operator -> ASS_N
rule 139  ass_right -> ari_exp
rule 140  ass_right -> array_exp
rule 141  ass_right -> strliteral
rule 142  ass_right -> OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function
rule 143  ass_right -> OPEN_PAR ass_right CLOSE_PAR
rule 144  ass_right -> rightaddrshift
rule 145  rightaddrshift -> MUL OPEN_PAR leftaddrshift CLOSE_PAR
rule 146  array -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 147  array -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 148  array -> OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 149  array -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 150  array -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 151  array -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 152  array -> OPEN_PAR array CLOSE_PAR
rule 153  option_ari_exp -> COMMA ari_exp option_ari_exp
rule 154  option_ari_exp -> COMMA error
rule 155  option_ari_exp ->		/* empty */
rule 156  point_exp -> MUL identifier
rule 157  point_exp -> MUL point_exp
rule 158  point_exp -> MUL array
rule 159  point_exp -> OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 160  point_exp -> MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp
rule 161  point_exp -> MUL OPEN_PAR ari_exp CLOSE_PAR
rule 162  point_exp -> OPEN_PAR point_exp CLOSE_PAR
rule 163  ari_exp -> simple_ari_exp
rule 164  ari_exp -> simple_ari_exp relation_operator ari_exp
rule 165  ari_exp -> ari_exp ari_operator simple_ari_exp
rule 166  ari_exp -> IF bool_exp THEN ari_exp option_exp_else_statement
rule 167  type_cast_alg_exp -> simple_ari_exp
rule 168  type_cast_alg_exp -> simple_ari_exp ari_operator simple_ari_exp
rule 169  option_exp_else_statement -> ELSE ari_exp
rule 170  option_exp_else_statement ->		/* empty */
rule 171  simple_ari_exp -> member_in_exp
rule 172  simple_ari_exp -> simple_ari_exp bi_operator member_in_exp
rule 173  member_in_exp -> intliteral
rule 174  member_in_exp -> SUB member_in_exp
rule 175  member_in_exp -> BNE member_in_exp
rule 176  member_in_exp -> POINTERNULL
rule 177  member_in_exp -> floatliteral
rule 178  member_in_exp -> identifier
rule 179  member_in_exp -> array
rule 180  member_in_exp -> point_exp
rule 181  member_in_exp -> function
rule 182  member_in_exp -> OPEN_PAR ari_exp CLOSE_PAR
rule 183  member_in_exp -> charliteral
rule 184  member_in_exp -> address_exp
rule 185  member_in_exp -> type_cast
rule 186  member_in_exp -> struct_member_exp
rule 187  bi_operator -> MUL
rule 188  bi_operator -> DIV
rule 189  bi_operator -> MOD
rule 190  bi_operator -> LST
rule 191  bi_operator -> RST
rule 192  bi_operator -> ADDRESS
rule 193  bi_operator -> INTER_OR
rule 194  bi_operator -> CON
rule 195  ari_operator -> ADD
rule 196  ari_operator -> SUB
rule 197  array_exp -> array_exp CON array_exp
rule 198  array_exp -> option_list_value
rule 199  array_exp -> option_struct_list_value
rule 200  array_exp -> OPEN_PAR array_exp CLOSE_PAR
rule 201  option_list_value -> OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR
rule 202  option_list_value -> OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR
rule 203  option_list_value -> OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR
rule 204  option_struct_list_value -> OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR
rule 205  option_struct_list_value -> OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR
rule 206  option_struct_list_value -> OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR
rule 207  inner_option_list_value -> COMMA ari_exp inner_option_list_value
rule 208  inner_option_list_value -> COMMA strliteral inner_option_list_value
rule 209  inner_option_list_value -> COMMA array_exp inner_option_list_value
rule 210  inner_option_list_value ->		/* empty */
rule 211  inner_option_list_value -> COMMA error
rule 212  address_exp -> ADDRESS identifier
rule 213  address_exp -> ADDRESS array
rule 214  address_exp -> ADDRESS struct_member_exp
rule 215  address_exp -> ADDRESS address_exp
rule 216  address_exp -> OPEN_PAR address_exp CLOSE_PAR
rule 217  type_cast -> OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 218  type_cast -> OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp
rule 219  type_cast -> OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 220  type_cast -> OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 221  type_cast -> OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 222  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 223  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 224  type_cast -> OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element
rule 225  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element
rule 226  type_cast -> OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element
rule 227  type_cast -> OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element
rule 228  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element
rule 229  type_cast -> OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element
rule 230  type_cast -> OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 231  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 232  type_cast -> OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element
rule 233  type_cast -> OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 234  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 235  type_cast -> OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element
rule 236  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 237  type_cast -> OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 238  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 239  type_cast -> OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 240  casted_element -> type_cast_alg_exp
rule 241  bool_exp -> prime_bool_exp
rule 242  bool_exp -> NEGATION bool_exp
rule 243  bool_exp -> bool_exp AND bool_exp
rule 244  bool_exp -> bool_exp OR bool_exp
rule 245  bool_exp -> OPEN_PAR bool_exp CLOSE_PAR
rule 246  prime_bool_exp -> ari_exp relation_operator ari_exp
rule 247  prime_bool_exp -> MY_TRUE
rule 248  prime_bool_exp -> MY_FALSE
rule 249  prime_bool_exp -> ari_exp
rule 250  prime_bool_exp -> ari_exp EQ strliteral
rule 251  prime_bool_exp -> ari_exp NE strliteral
rule 252  prime_bool_exp -> strliteral EQ ari_exp
rule 253  prime_bool_exp -> strliteral NE ari_exp
rule 254  prime_bool_exp -> ari_exp EQ POINTERNULL
rule 255  prime_bool_exp -> ari_exp NE POINTERNULL
rule 256  prime_bool_exp -> POINTERNULL EQ ari_exp
rule 257  prime_bool_exp -> POINTERNULL NE ari_exp
rule 258  prime_bool_exp -> ari_exp EQ charliteral
rule 259  prime_bool_exp -> ari_exp NE charliteral
rule 260  relation_operator -> GE
rule 261  relation_operator -> LE
rule 262  relation_operator -> NE
rule 263  relation_operator -> GT
rule 264  relation_operator -> LT
rule 265  relation_operator -> EQ
rule 266  sign_type_define -> UNSIGNED INTDECLARATION
rule 267  sign_type_define -> UNSIGNED CHARDECLARATION
rule 268  all_type_define -> sign_type_define
rule 269  all_type_define -> type_define
rule 270  option_function_parameter_list -> all_type_define identifier inner_option_define_identifier
rule 271  option_function_parameter_list -> all_type_define inner_option_define_identifier
rule 272  option_function_parameter_list -> STRUCT_TYPE identifier inner_option_define_identifier
rule 273  option_function_parameter_list -> STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 274  option_function_parameter_list -> STRUCT_TYPE MUL MUL identifier inner_option_define_identifier
rule 275  option_function_parameter_list -> STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 276  option_function_parameter_list -> ID identifier inner_option_define_identifier
rule 277  option_function_parameter_list -> ID MUL identifier inner_option_define_identifier
rule 278  option_function_parameter_list -> ID MUL MUL identifier inner_option_define_identifier
rule 279  option_function_parameter_list -> ID identifier ARRAY inner_option_define_identifier
rule 280  option_function_parameter_list -> STRUCT_TYPE inner_option_define_identifier
rule 281  option_function_parameter_list -> STRUCT_TYPE MUL inner_option_define_identifier
rule 282  option_function_parameter_list -> STRUCT_TYPE MUL MUL inner_option_define_identifier
rule 283  option_function_parameter_list -> ID inner_option_define_identifier
rule 284  option_function_parameter_list -> ID MUL inner_option_define_identifier
rule 285  option_function_parameter_list -> ID MUL MUL inner_option_define_identifier
rule 286  option_function_parameter_list -> all_type_define identifier ARRAY inner_option_define_identifier
rule 287  option_function_parameter_list -> all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 288  option_function_parameter_list -> all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 289  option_function_parameter_list -> all_type_define MUL identifier inner_option_define_identifier
rule 290  option_function_parameter_list -> all_type_define MUL inner_option_define_identifier
rule 291  option_function_parameter_list -> all_type_define MUL MUL identifier inner_option_define_identifier
rule 292  option_function_parameter_list -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 293  option_function_parameter_list ->		/* empty */
rule 294  inner_option_define_identifier -> COMMA all_type_define identifier inner_option_define_identifier
rule 295  inner_option_define_identifier -> COMMA all_type_define inner_option_define_identifier
rule 296  inner_option_define_identifier -> COMMA ID identifier inner_option_define_identifier
rule 297  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier inner_option_define_identifier
rule 298  inner_option_define_identifier -> COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 299  inner_option_define_identifier -> COMMA ID identifier ARRAY inner_option_define_identifier
rule 300  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 301  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY inner_option_define_identifier
rule 302  inner_option_define_identifier -> COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 303  inner_option_define_identifier -> COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 304  inner_option_define_identifier ->		/* empty */
rule 305  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 306  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 307  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 308  inner_option_define_identifier -> COMMA all_type_define MUL identifier inner_option_define_identifier
rule 309  inner_option_define_identifier -> COMMA all_type_define MUL inner_option_define_identifier
rule 310  inner_option_define_identifier -> COMMA error
rule 311  option_function_identifier -> ass_right inner_option_function_identifier
rule 312  option_function_identifier -> ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 313  option_function_identifier -> all_type_define
rule 314  option_function_identifier ->		/* empty */
rule 315  option_function_identifier -> ADDRESS error
rule 316  inner_option_function_identifier -> COMMA ass_right inner_option_function_identifier
rule 317  inner_option_function_identifier -> COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 318  inner_option_function_identifier ->		/* empty */
rule 319  inner_option_function_identifier -> COMMA error
rule 320  statement_bpar -> OPEN_BPAR statement CLOSE_BPAR
rule 321  statement_bpar -> error CLOSE_BPAR
rule 322  bool_par -> OPEN_PAR bool_exp CLOSE_PAR
rule 323  bool_par -> error CLOSE_PAR
rule 324  identifier -> ID
rule 325  identifier -> OPEN_PAR identifier CLOSE_PAR
rule 326  strliteral -> STRLITERAL
rule 327  intliteral -> INTLITERAL
rule 328  charliteral -> CHARLITERAL
rule 329  floatliteral -> FLOATLITERAL
rule 330  option_frame_identifier -> COMMA identifier option_frame_identifier
rule 331  option_frame_identifier ->		/* empty */
rule 332  option_frame_identifier -> COMMA error
rule 333  option_projection ->		/* empty */
rule 334  option_projection -> COMMA statement option_projection
rule 335  imply_pre -> prime_bool_exp
rule 336  imply_pre -> NEGATION imply_pre
rule 337  imply_pre -> imply_pre AND imply_pre
rule 338  imply_pre -> imply_pre OR imply_pre
rule 339  imply_pre -> OPEN_PAR imply_pre CLOSE_PAR
rule 340  while_statement -> WHILE bool_par statement_bpar
rule 341  for_statement -> FOR ari_exp TIMES DO statement_bpar
rule 342  extend_for_statement -> FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar
rule 343  for_sta_init -> ass_statement
rule 344  for_sta_init -> declaration
rule 345  for_sta_init ->		/* empty */
rule 346  for_sta_condition -> bool_exp
rule 347  for_sta_condition ->		/* empty */
rule 348  for_sta_control -> ass_statement
rule 349  for_sta_control ->		/* empty */
rule 350  switch_statement -> SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR
rule 351  case_par -> CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par
rule 352  case_par -> DEFAULT COLON OPEN_PAR statement CLOSE_PAR
rule 353  init_case_par -> BREAK case_par
rule 354  init_case_par -> case_par
rule 355  init_case_par ->		/* empty */
rule 356  if_statement -> IF bool_exp THEN statement_bpar option_else_statement
rule 357  option_else_statement -> ELSE statement_bpar
rule 358  option_else_statement ->		/* empty */
rule 359  output_statement -> DISPLAY OPEN_PAR ass_right CLOSE_PAR
rule 360  output_statement -> DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR
rule 361  option_output ->		/* empty */
rule 362  option_output -> COMMA ass_right option_output
rule 363  input_statement -> REQUEST OPEN_PAR identifier CLOSE_PAR
rule 364  input_statement -> REQUEST OPEN_PAR identifier option_input CLOSE_PAR
rule 365  input_statement -> REQUEST OPEN_PAR array CLOSE_PAR
rule 366  input_statement -> REQUEST OPEN_PAR array option_input CLOSE_PAR
rule 367  input_statement -> REQUEST OPEN_PAR struct_member_exp CLOSE_PAR
rule 368  option_input ->		/* empty */
rule 369  option_input -> COMMA identifier option_input
rule 370  option_input -> COMMA array option_input
rule 371  struct_member_exp -> identifier DOT identifier option_struct_member_exp
rule 372  struct_member_exp -> array DOT identifier option_struct_member_exp
rule 373  struct_member_exp -> point_exp DOT identifier option_struct_member_exp
rule 374  struct_member_exp -> identifier DOT array option_struct_member_exp
rule 375  struct_member_exp -> array DOT array option_struct_member_exp
rule 376  struct_member_exp -> point_exp DOT array option_struct_member_exp
rule 377  struct_member_exp -> identifier IMPLY identifier option_struct_member_exp
rule 378  struct_member_exp -> array IMPLY identifier option_struct_member_exp
rule 379  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp
rule 380  struct_member_exp -> point_exp IMPLY identifier option_struct_member_exp
rule 381  struct_member_exp -> identifier IMPLY array option_struct_member_exp
rule 382  struct_member_exp -> array IMPLY array option_struct_member_exp
rule 383  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp
rule 384  struct_member_exp -> identifier DOT function
rule 385  struct_member_exp -> identifier IMPLY function
rule 386  struct_member_exp -> point_exp IMPLY array option_struct_member_exp
rule 387  struct_member_exp -> OPEN_PAR struct_member_exp CLOSE_PAR
rule 388  option_struct_member_exp ->		/* empty */
rule 389  option_struct_member_exp -> DOT identifier option_struct_member_exp
rule 390  option_struct_member_exp -> DOT array option_struct_member_exp
rule 391  option_struct_member_exp -> IMPLY identifier option_struct_member_exp
rule 392  option_struct_member_exp -> IMPLY array option_struct_member_exp
rule 393  option_struct_member_exp -> DOT function
rule 394  option_struct_member_exp -> IMPLY function
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

Terminals, with rules where they appear

$ (-1)
<<<<<<< HEAD
error (256) 104 109 148 205 304 308 312 314 316 325
SWITCH (258) 343
CASE (259) 344
BREAK (260) 346
DEFAULT (261) 345
RETURN (262) 36
IF (263) 160 349
ELSE (264) 163 350
=======
<<<<<<< HEAD
error (256) 105 110 149 206 305 309 313 315 317 326
SWITCH (258) 344
CASE (259) 345
BREAK (260) 347
DEFAULT (261) 346
RETURN (262) 36
IF (263) 161 350
ELSE (264) 164 351
=======
error (256) 110 115 154 211 310 315 319 321 323 332
SWITCH (258) 350
CASE (259) 351
BREAK (260) 353
DEFAULT (261) 352
RETURN (262) 36
IF (263) 166 356
ELSE (264) 169 357
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
EMPTY (265) 18 47
AWAIT (266) 44
PROJECTION (267) 23 58 59
PBEGIN (268) 2
PEND (269) 2
<<<<<<< HEAD
POINTERNULL (270) 170 248 249 250 251
ARRAY (271) 98 99 269 273 280 281 282 293 294 295 296 301
STRUCT (272) 74 81 83 230 232
DOT (273) 364 365 366 367 368 369 377 382 383 386
UNION (274) 75 82 84
FILEDECLARATION (275) 94
MORE (276) 19 48
DEFINE (277) 25 61
MY_TRUE (278) 15 241
MY_FALSE (279) 16 242
EXIST (280) 64
FRAME (281) 57
FOR (282) 334 335
WHILE (283) 333
DO (284) 334
=======
<<<<<<< HEAD
POINTERNULL (270) 171 249 250 251 252
ARRAY (271) 99 100 270 274 281 282 283 294 295 296 297 302
STRUCT (272) 75 82 84 231 233
DOT (273) 365 366 367 368 369 370 378 383 384 387
UNION (274) 76 83 85
FILEDECLARATION (275) 95
=======
POINTERNULL (270) 176 254 255 256 257
ARRAY (271) 104 105 275 279 286 287 288 299 300 301 302 307
STRUCT (272) 73 74 75 80 87 89 236 238
DOT (273) 371 372 373 374 375 376 384 389 390 393
UNION (274) 81 88 90
FILEDECLARATION (275) 100
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
MORE (276) 19 48
DEFINE (277) 25 60
MY_TRUE (278) 15 242
MY_FALSE (279) 16 243
EXIST (280) 64
FRAME (281) 57
<<<<<<< HEAD
FOR (282) 335 336
WHILE (283) 334
DO (284) 335
=======
FOR (282) 341 342
WHILE (283) 340
DO (284) 341
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
TRUE (285) 52
FALSE (286) 53
REPEAT (287) 45
UNTIL (288) 45
<<<<<<< HEAD
DISPLAY (289) 352 353
SKIP (290) 14 46
THEN (291) 160 349
COMMA (292) 28 103 104 107 109 147 148 201 202 203 205 288 289 290
    291 292 293 294 295 296 297 299 300 301 302 303 304 309 310 312
    323 325 327 335 355 362 363
COLON (293) 25 64 344 345
INTDECLARATION (294) 89 120 124 127 128 129 130 141 142 211 214 216
    218 219 224 225 260
STRDECLARATION (295) 92
POINTERDECLARATION (296)
CHARDECLARATION (297) 91 118 119 122 123 124 125 126 127 128 129 144
    145 213 215 217 221 222 227 228 261
VOIDDECLARATION (298) 93 223 229
FLOATDECLARATION (299) 90 121 143 212 220 226
LISTDECLARATION (300)
OPEN_PAR (301) 27 41 42 43 44 45 49 54 56 57 60 61 65 70 71 72 85 86
    87 88 115 118 119 120 121 122 123 124 125 126 127 128 129 130 136
    137 139 141 142 143 144 145 146 153 154 155 156 176 194 210 211
    212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227
    228 229 230 231 232 233 239 286 297 310 315 318 332 335 343 344
    345 352 353 356 357 358 359 360 372 376 380
CLOSE_PAR (302) 27 41 42 43 44 45 49 54 56 57 60 61 65 70 71 72 85
    86 87 88 115 118 119 120 121 122 123 124 125 126 127 128 129 130
    136 137 139 141 142 143 144 145 146 153 154 155 156 176 194 210
    211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226
    227 228 229 230 231 232 233 239 286 297 310 315 316 318 332 335
    343 344 345 352 353 356 357 358 359 360 372 376 380
TIMES (303) 334
OPEN_BPAR (304) 23 45 58 59 60 61 64 73 198 199 200 313 343
CLOSE_BPAR (305) 23 45 58 59 60 61 64 73 198 199 200 313 314 343
OPEN_MPAR (306) 56 87 88 96 100 101 106 107 118 119 120 121 122 123
    124 125 126 127 128 129 130 140 141 142 143 144 145 153 195 196
    197 282 299 300 301
CLOSE_MPAR (307) 56 87 88 96 100 101 106 107 118 119 120 121 122 123
    124 125 126 127 128 129 130 140 141 142 143 144 145 153 195 196
    197 282 299 300 301
FUNCTION (308) 60
OVER (309)
CYLINDER (310)
OVEREP (311)
INTER_OR (312) 187
=======
<<<<<<< HEAD
DISPLAY (289) 353 354
SKIP (290) 14 46
THEN (291) 161 350
COMMA (292) 28 104 105 108 110 148 149 202 203 204 206 289 290 291
    292 293 294 295 296 297 298 300 301 302 303 304 305 310 311 313
    324 326 328 336 356 363 364
COLON (293) 25 64 345 346
INTDECLARATION (294) 90 121 125 128 129 130 131 142 143 212 215 217
    219 220 225 226 261
STRDECLARATION (295) 93
=======
DISPLAY (289) 359 360
SKIP (290) 14 46
THEN (291) 166 356
COMMA (292) 28 109 110 113 115 153 154 207 208 209 211 294 295 296
    297 298 299 300 301 302 303 305 306 307 308 309 310 316 317 319
    330 332 334 342 362 369 370
COLON (293) 25 64 351 352
INTDECLARATION (294) 95 126 130 133 134 135 136 147 148 217 220 222
    224 225 230 231 266
STRDECLARATION (295) 98
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
POINTERDECLARATION (296)
CHARDECLARATION (297) 92 119 120 123 124 125 126 127 128 129 130 145
    146 214 216 218 222 223 228 229 262
VOIDDECLARATION (298) 94 224 230
FLOATDECLARATION (299) 91 122 144 213 221 227
LISTDECLARATION (300)
<<<<<<< HEAD
OPEN_PAR (301) 27 41 42 43 44 45 49 54 56 57 60 65 70 71 72 73 86 87
    88 89 116 119 120 121 122 123 124 125 126 127 128 129 130 131 137
    138 140 142 143 144 145 146 147 154 155 156 157 177 195 211 212
    213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228
    229 230 231 232 233 234 240 287 298 307 311 316 319 333 336 344
    345 346 353 354 357 358 359 360 361 373 377 381
CLOSE_PAR (302) 27 41 42 43 44 45 49 54 56 57 60 65 70 71 72 73 86
    87 88 89 116 119 120 121 122 123 124 125 126 127 128 129 130 131
    137 138 140 142 143 144 145 146 147 154 155 156 157 177 195 211
    212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227
    228 229 230 231 232 233 234 240 287 298 307 311 316 317 319 333
    336 344 345 346 353 354 357 358 359 360 361 373 377 381
TIMES (303) 335
OPEN_BPAR (304) 23 45 58 59 60 64 70 74 199 200 201 314 344
CLOSE_BPAR (305) 23 45 58 59 60 64 70 74 199 200 201 314 315 344
OPEN_MPAR (306) 56 88 89 97 101 102 107 108 119 120 121 122 123 124
    125 126 127 128 129 130 131 141 142 143 144 145 146 154 196 197
    198 283 300 301 302
CLOSE_MPAR (307) 56 88 89 97 101 102 107 108 119 120 121 122 123 124
    125 126 127 128 129 130 131 141 142 143 144 145 146 154 196 197
    198 283 300 301 302
FUNCTION (308) 70
=======
OPEN_PAR (301) 27 41 42 43 44 45 49 54 56 57 60 65 70 71 72 73 74 75
    76 77 78 91 92 93 94 121 124 125 126 127 128 129 130 131 132 133
    134 135 136 142 143 145 147 148 149 150 151 152 159 160 161 162
    182 200 216 217 218 219 220 221 222 223 224 225 226 227 228 229
    230 231 232 233 234 235 236 237 238 239 245 292 303 312 317 322
    325 339 342 350 351 352 359 360 363 364 365 366 367 379 383 387
CLOSE_PAR (302) 27 41 42 43 44 45 49 54 56 57 60 65 70 71 72 73 74
    75 76 77 78 91 92 93 94 121 124 125 126 127 128 129 130 131 132
    133 134 135 136 142 143 145 147 148 149 150 151 152 159 160 161
    162 182 200 216 217 218 219 220 221 222 223 224 225 226 227 228
    229 230 231 232 233 234 235 236 237 238 239 245 292 303 312 317
    322 323 325 339 342 350 351 352 359 360 363 364 365 366 367 379
    383 387
TIMES (303) 341
OPEN_BPAR (304) 23 45 58 59 60 64 70 71 72 73 74 75 79 204 205 206
    320 350
CLOSE_BPAR (305) 23 45 58 59 60 64 70 71 72 73 74 75 79 204 205 206
    320 321 350
OPEN_MPAR (306) 56 93 94 102 106 107 112 113 124 125 126 127 128 129
    130 131 132 133 134 135 136 146 147 148 149 150 151 159 201 202
    203 288 305 306 307
CLOSE_MPAR (307) 56 93 94 102 106 107 112 113 124 125 126 127 128 129
    130 131 132 133 134 135 136 146 147 148 149 150 151 159 201 202
    203 288 305 306 307
FUNCTION (308) 70 71 72 73 74 75
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
OVER (309)
CYLINDER (310)
OVEREP (311)
INTER_OR (312) 188
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
NON_DETERMINED (313)
SEND (314)
RECEIVE (315)
PROCESS (316)
CHANNEL (317)
PUT (318)
GET (319)
ERROR_TOKEN (320)
STRFUNCHEAD (321)
STRFUNCTAIL (322)
STRFUNCCAT (323)
STRFUNCCMP (324)
STRFUNCCPY (325)
STRFUNCLEN (326)
<<<<<<< HEAD
EXTERN (327) 71
UNSIGNED (328) 77 119 123 125 126 127 129 142 145 216 217 219 222 225
    228 260 261
SIGNED (329) 76 214 215
CHOP (330) 8 32
IMPLY (331) 56 370 371 372 373 374 375 376 378 379 384 385 387
=======
EXTERN (327) 72
UNSIGNED (328) 78 120 124 126 127 128 130 143 146 217 218 220 223 226
    229 261 262
SIGNED (329) 77 215 216
CHOP (330) 8 32
<<<<<<< HEAD
IMPLY (331) 56 371 372 373 374 375 376 377 379 380 385 386 388
IFF (332) 6
PROPIMPLY (333) 7
OR (334) 5 31 239 332
PARALLEL (335) 55
AND (336) 4 30 57 67 238 331
ASS_P (337) 60 89 98 99 100 101 102 132
ASS_N (338) 133
CON (339) 189 192
ADDRESS (340) 187 207 208 209 210 309
NE (341) 246 248 250 252 254 257
EQ (342) 245 247 249 251 253 260
GE (343) 255
LE (344) 256
GT (345) 258
LT (346) 259
LST (347) 185
RST (348) 186
ADD (349) 190
SUB (350) 169 191
MUL (351) 86 87 88 89 103 119 120 121 122 123 124 125 126 127 128 129
    130 131 140 142 143 144 145 146 151 152 153 155 156 182 219 220
    221 222 223 224 225 226 227 228 229 230 231 232 233 234 268 269
    272 273 276 277 279 280 282 284 285 286 287 293 297 298 303 304
DIV (352) 183
MOD (353) 184
BNE (354) 170
CHOPSTAR (355) 26
NEXT (356) 13 41 117
NEGATION (357) 22 237 330
LENGTH (358) 17 49
REQUEST (359) 357 358 359 360 361
=======
IMPLY (331) 56 377 378 379 380 381 382 383 385 386 391 392 394
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
IFF (332) 6
PROPIMPLY (333) 7
OR (334) 5 31 238 331
PARALLEL (335) 55
AND (336) 4 30 57 67 237 330
ASS_P (337) 61 88 97 98 99 100 101 131
ASS_N (338) 132
CON (339) 188 191
ADDRESS (340) 186 206 207 208 209 308
NE (341) 245 247 249 251 253 256
EQ (342) 244 246 248 250 252 259
GE (343) 254
LE (344) 255
GT (345) 257
LT (346) 258
LST (347) 184
RST (348) 185
ADD (349) 189
SUB (350) 168 190
MUL (351) 85 86 87 88 102 118 119 120 121 122 123 124 125 126 127 128
    129 130 139 141 142 143 144 145 150 151 152 154 155 181 218 219
    220 221 222 223 224 225 226 227 228 229 230 231 232 233 267 268
    271 272 275 276 278 279 281 283 284 285 286 292 296 297 302 303
DIV (352) 182
MOD (353) 183
BNE (354) 169
CHOPSTAR (355) 26
NEXT (356) 13 41 116
NEGATION (357) 22 236 329
LENGTH (358) 17 49
<<<<<<< HEAD
REQUEST (359) 356 357 358 359 360
=======
REQUEST (359) 363 364 365 366 367
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
FINAL (360) 21 54
KEEP (361) 10 42
ALWAYS (362) 9 43
HALT (363) 20
W_NEXT (364) 12
PREFIX (365)
SOMETIMES (366) 11
<<<<<<< HEAD
ID (367) 24 25 36 60 61 70 71 74 75 81 82 87 88 96 98 99 100 101 106
    107 140 141 142 143 144 145 270 271 272 273 277 278 279 290 293
    310 317
STRLITERAL (368) 319
STRUCT_TYPE (369) 80 83 84 230 231 232 233 266 267 268 269 274 275
    276 291 292 294
INTLITERAL (370) 118 119 120 121 122 123 124 125 126 127 128 129 130
    320
FLOATLITERAL (371) 322
CHARLITERAL (372) 321
=======
<<<<<<< HEAD
ID (367) 24 25 60 70 71 72 75 76 82 83 88 89 97 99 100 101 102 107
    108 141 142 143 144 145 146 271 272 273 274 278 279 280 291 294
    307 311 318
STRLITERAL (368) 320
STRUCT_TYPE (369) 81 84 85 231 232 233 234 267 268 269 270 275 276
    277 292 293 295
INTLITERAL (370) 119 120 121 122 123 124 125 126 127 128 129 130 131
    321
FLOATLITERAL (371) 323
CHARLITERAL (372) 322
=======
ID (367) 24 25 36 60 70 71 72 73 74 75 76 77 80 81 87 88 93 94 102
    104 105 106 107 112 113 146 147 148 149 150 151 276 277 278 279
    283 284 285 296 299 312 317 324
STRLITERAL (368) 326
STRUCT_TYPE (369) 73 74 75 86 89 90 236 237 238 239 272 273 274 275
    280 281 282 297 298 300
INTLITERAL (370) 124 125 126 127 128 129 130 131 132 133 134 135 136
    327
FLOATLITERAL (371) 329
CHARLITERAL (372) 328
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

Nonterminals, with rules where they appear

program (118)
    on left: 1
gComplexProposition (119)
    on left: 2 3, on right: 1
complexProposition (120)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27, on right: 2 4 5 6 7 8 9 10 11 12 13 20 21 22 23 26
    27 28
poptional_projection (121)
    on left: 28 29, on right: 23 28
statement (122)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65,
<<<<<<< HEAD
    on right: 1 30 31 32 41 42 43 45 54 55 56 57 58 59 60 64 65 68
    313 327 344 345
option_struct_declaration (123)
    on left: 66 67, on right: 67 73
empty_statement (124)
    on left: 68 69, on right: 61
function (125)
    on left: 70 71 72, on right: 63 136 175 377 378 386 387
struct_define_statement (126)
    on left: 73, on right: 62
struct_identifier (127)
    on left: 74 75, on right: 73
sign_declaration (128)
    on left: 76 77 78, on right: 34 66 67
declaration (129)
    on left: 79 80 81 82 83 84 85 86 87 88, on right: 76 77 78 337
type_define (130)
    on left: 89 90 91 92 93 94, on right: 79 136 263
option_identifier_array_declaration (131)
    on left: 95 96 97 98 99 100 101 102, on right: 79 80 81 82 83 84
    102 103
inner_option_identifier_array_declaration (132)
    on left: 103 104 105, on right: 95 96 97 98 99 100 101
ass_statement (133)
    on left: 110, on right: 33 336 341
ass_left (134)
    on left: 111 112 113 114 115 116 117, on right: 110 115 116
leftaddrshift (135)
    on left: 118 119 120 121 122 123 124 125 126 127 128 129 130,
    on right: 117 139
assign_operator (136)
    on left: 131 132, on right: 110
ass_right (137)
    on left: 133 134 135 136 137 138, on right: 97 110 137 305 309
    352 353 355
rightaddrshift (138)
    on left: 139, on right: 138
array (139)
    on left: 140 141 142 143 144 145 146, on right: 72 113 146 152
    173 207 358 359 363 365 367 368 369 371 374 375 376 379 383 385
option_ari_exp (140)
    on left: 147 148 149, on right: 87 88 96 100 101 106 107 118 119
    120 121 122 123 124 125 126 127 128 129 130 140 141 142 143 144
    145 147 153
point_exp (141)
    on left: 150 151 152 153 154 155 156, on right: 114 151 153 156
    174 366 369 373 379
ari_exp (142)
    on left: 157 158 159 160, on right: 17 49 87 88 96 100 101 106
    107 118 119 120 121 122 123 124 125 126 127 128 129 130 133 140
    141 142 143 144 145 147 153 154 155 158 159 160 163 176 195 198
    201 240 243 244 245 246 247 248 249 250 251 252 253 282 299 300
    301 334
type_cast_alg_exp (143)
    on left: 161 162, on right: 211 212 213 214 215 216 217 234
option_exp_else_statement (144)
    on left: 163 164, on right: 160
simple_ari_exp (145)
    on left: 165 166, on right: 157 158 159 161 162 166
member_in_exp (146)
    on left: 167 168 169 170 171 172 173 174 175 176 177 178 179 180
   , on right: 165 166 168 169 343 344
bi_operator (147)
    on left: 181 182 183 184 185 186 187 188, on right: 166
ari_operator (148)
    on left: 189 190, on right: 159 162
array_exp (149)
    on left: 191 192 193 194, on right: 88 98 100 134 191 194 197 200
    203
option_list_value (150)
    on left: 195 196 197, on right: 192
option_struct_list_value (151)
    on left: 198 199 200, on right: 193
inner_option_list_value (152)
    on left: 201 202 203 204 205, on right: 195 196 197 198 199 200
    201 202 203
address_exp (153)
    on left: 206 207 208 209 210, on right: 178 209 210 372 376
type_cast (154)
    on left: 211 212 213 214 215 216 217 218 219 220 221 222 223 224
    225 226 227 228 229 230 231 232 233, on right: 179
casted_element (155)
    on left: 234, on right: 218 219 220 221 222 223 224 225 226 227
    228 229 230 231 232 233
bool_exp (156)
    on left: 235 236 237 238 239, on right: 44 45 160 236 237 238 239
    315 339 349
prime_bool_exp (157)
    on left: 240 241 242 243 244 245 246 247 248 249 250 251 252 253
   , on right: 25 235 328
relation_operator (158)
    on left: 254 255 256 257 258 259, on right: 158 240
sign_type_define (159)
    on left: 260 261, on right: 262
all_type_define (160)
    on left: 262 263, on right: 154 264 265 280 281 282 283 284 285
    288 289 295 296 299 300 301 302 303 306
option_function_parameter_list (161)
    on left: 264 265 266 267 268 269 270 271 272 273 274 275 276 277
    278 279 280 281 282 283 284 285 286 287, on right: 60 61 85 86
    87 88 136 286 297
inner_option_define_identifier (162)
    on left: 288 289 290 291 292 293 294 295 296 297 298 299 300 301
    302 303 304, on right: 64 264 265 266 267 268 269 270 271 272 273
    274 275 276 277 278 279 280 281 282 283 284 285 286 288 289 290
    291 292 293 294 295 296 297 299 300 301 302 303
option_function_identifier (163)
    on left: 305 306 307 308, on right: 70 71 72 310
inner_option_function_identifier (164)
    on left: 309 310 311 312, on right: 305 309 310
statement_bpar (165)
    on left: 313 314, on right: 58 59 333 334 335 349 350
bool_par (166)
    on left: 315 316, on right: 333
identifier (167)
    on left: 317 318, on right: 57 64 85 86 95 97 111 150 172 206 264
    266 267 268 269 270 271 272 273 280 281 282 283 285 286 288 290
    291 292 293 294 295 296 297 299 300 301 302 318 323 356 357 362
    364 365 366 367 370 371 372 373 374 377 378 382 384
strliteral (168)
    on left: 319, on right: 99 101 135 136 196 199 202 244 245 246
    247
intliteral (169)
    on left: 320, on right: 167
charliteral (170)
    on left: 321, on right: 177 252 253
floatliteral (171)
    on left: 322, on right: 171
option_frame_identifier (172)
    on left: 323 324 325, on right: 57 323
option_projection (173)
    on left: 326 327, on right: 58 327
imply_pre (174)
    on left: 328 329 330 331 332, on right: 56 329 330 331 332
while_statement (175)
    on left: 333, on right: 38
for_statement (176)
    on left: 334, on right: 39
extend_for_statement (177)
    on left: 335, on right: 40
for_sta_init (178)
    on left: 336 337 338, on right: 335
for_sta_condition (179)
    on left: 339 340, on right: 335
for_sta_control (180)
    on left: 341 342, on right: 335
switch_statement (181)
    on left: 343, on right: 35
case_par (182)
    on left: 344 345, on right: 343 346 347
init_case_par (183)
    on left: 346 347 348, on right: 344
if_statement (184)
    on left: 349, on right: 37
option_else_statement (185)
    on left: 350 351, on right: 349
output_statement (186)
    on left: 352 353, on right: 51
option_output (187)
    on left: 354 355, on right: 353 355
input_statement (188)
    on left: 356 357 358 359 360, on right: 50
option_input (189)
    on left: 361 362 363, on right: 357 359 362 363
struct_member_exp (190)
    on left: 364 365 366 367 368 369 370 371 372 373 374 375 376 377
    378 379 380, on right: 112 180 208 360 380
option_struct_member_exp (191)
    on left: 381 382 383 384 385 386 387, on right: 364 365 366 367
    368 369 370 371 372 373 374 375 376 379 382 383 384 385
=======
    on right: 1 30 31 32 41 42 43 45 54 55 56 57 58 59 64 65 68 70
<<<<<<< HEAD
    314 328 345 346
=======
    71 72 73 74 75 320 334 351 352
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
option_struct_declaration (123)
    on left: 66 67, on right: 67 74
empty_statement (124)
    on left: 68 69, on right: 60
function_define (125)
    on left: 70, on right: 62
function (126)
<<<<<<< HEAD
    on left: 71 72 73, on right: 63 137 176 378 379 387 388
=======
    on left: 76 77 78, on right: 63 142 181 384 385 393 394
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
struct_define_statement (127)
    on left: 74, on right: 61
struct_identifier (128)
    on left: 75 76, on right: 74
sign_declaration (129)
    on left: 77 78 79, on right: 34 66 67
declaration (130)
<<<<<<< HEAD
    on left: 80 81 82 83 84 85 86 87 88 89, on right: 77 78 79 338
=======
    on left: 85 86 87 88 89 90 91 92 93 94, on right: 82 83 84 344
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
type_define (131)
    on left: 90 91 92 93 94 95, on right: 80 137 264
option_identifier_array_declaration (132)
    on left: 96 97 98 99 100 101 102 103, on right: 80 81 82 83 84
    85 103 104
inner_option_identifier_array_declaration (133)
    on left: 104 105 106, on right: 96 97 98 99 100 101 102
ass_statement (134)
<<<<<<< HEAD
    on left: 111, on right: 33 337 342
=======
    on left: 116, on right: 33 343 348
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
ass_left (135)
    on left: 112 113 114 115 116 117 118, on right: 111 116 117
leftaddrshift (136)
    on left: 119 120 121 122 123 124 125 126 127 128 129 130 131,
    on right: 118 140
assign_operator (137)
    on left: 132 133, on right: 111
ass_right (138)
<<<<<<< HEAD
    on left: 134 135 136 137 138 139, on right: 36 98 111 138 306 310
    353 354 356
=======
    on left: 139 140 141 142 143 144, on right: 103 116 143 311 316
    359 360 362
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
rightaddrshift (139)
    on left: 140, on right: 139
array (140)
<<<<<<< HEAD
    on left: 141 142 143 144 145 146 147, on right: 73 114 147 153
    174 208 359 360 364 366 368 369 370 372 375 376 377 380 384 386
=======
    on left: 146 147 148 149 150 151 152, on right: 78 119 152 158
    179 213 365 366 370 372 374 375 376 378 381 382 383 386 390 392
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
option_ari_exp (141)
    on left: 148 149 150, on right: 88 89 97 101 102 107 108 119 120
    121 122 123 124 125 126 127 128 129 130 131 141 142 143 144 145
    146 148 154
point_exp (142)
<<<<<<< HEAD
    on left: 151 152 153 154 155 156 157, on right: 115 152 154 157
    175 367 370 374 380
ari_exp (143)
    on left: 158 159 160 161, on right: 17 49 88 89 97 101 102 107
    108 119 120 121 122 123 124 125 126 127 128 129 130 131 134 141
    142 143 144 145 146 148 154 155 156 159 160 161 164 177 196 199
    202 241 244 245 246 247 248 249 250 251 252 253 254 283 300 301
    302 335
=======
    on left: 156 157 158 159 160 161 162, on right: 120 157 159 162
    180 373 376 380 386
ari_exp (143)
    on left: 163 164 165 166, on right: 17 49 93 94 102 106 107 112
    113 124 125 126 127 128 129 130 131 132 133 134 135 136 139 146
    147 148 149 150 151 153 159 160 161 164 165 166 169 182 201 204
    207 246 249 250 251 252 253 254 255 256 257 258 259 288 305 306
    307 341
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
type_cast_alg_exp (144)
    on left: 162 163, on right: 212 213 214 215 216 217 218 235
option_exp_else_statement (145)
    on left: 164 165, on right: 161
simple_ari_exp (146)
    on left: 166 167, on right: 158 159 160 162 163 167
member_in_exp (147)
<<<<<<< HEAD
    on left: 168 169 170 171 172 173 174 175 176 177 178 179 180 181
   , on right: 166 167 169 170 344 345
=======
    on left: 173 174 175 176 177 178 179 180 181 182 183 184 185 186
   , on right: 171 172 174 175 350 351
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
bi_operator (148)
    on left: 182 183 184 185 186 187 188 189, on right: 167
ari_operator (149)
    on left: 190 191, on right: 160 163
array_exp (150)
    on left: 192 193 194 195, on right: 89 99 101 135 192 195 198 201
    204
option_list_value (151)
    on left: 196 197 198, on right: 193
option_struct_list_value (152)
    on left: 199 200 201, on right: 194
inner_option_list_value (153)
    on left: 202 203 204 205 206, on right: 196 197 198 199 200 201
    202 203 204
address_exp (154)
<<<<<<< HEAD
    on left: 207 208 209 210 211, on right: 179 210 211 373 377
=======
    on left: 212 213 214 215 216, on right: 184 215 216 379 383
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
type_cast (155)
    on left: 212 213 214 215 216 217 218 219 220 221 222 223 224 225
    226 227 228 229 230 231 232 233 234, on right: 180
casted_element (156)
    on left: 235, on right: 219 220 221 222 223 224 225 226 227 228
    229 230 231 232 233 234
bool_exp (157)
<<<<<<< HEAD
    on left: 236 237 238 239 240, on right: 44 45 161 237 238 239 240
    316 340 350
prime_bool_exp (158)
    on left: 241 242 243 244 245 246 247 248 249 250 251 252 253 254
   , on right: 25 236 329
=======
    on left: 241 242 243 244 245, on right: 44 45 166 242 243 244 245
    322 346 356
prime_bool_exp (158)
    on left: 246 247 248 249 250 251 252 253 254 255 256 257 258 259
   , on right: 25 241 335
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
relation_operator (159)
    on left: 255 256 257 258 259 260, on right: 159 241
sign_type_define (160)
    on left: 261 262, on right: 263
all_type_define (161)
<<<<<<< HEAD
    on left: 263 264, on right: 155 265 266 281 282 283 284 285 286
    289 290 296 297 300 301 302 303 304
=======
    on left: 268 269, on right: 70 71 72 160 270 271 286 287 288 289
    290 291 294 295 301 302 305 306 307 308 309 313
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
option_function_parameter_list (162)
    on left: 265 266 267 268 269 270 271 272 273 274 275 276 277 278
    279 280 281 282 283 284 285 286 287 288, on right: 60 70 86 87
    88 89 137 287 298
inner_option_define_identifier (163)
    on left: 289 290 291 292 293 294 295 296 297 298 299 300 301 302
    303 304 305, on right: 64 265 266 267 268 269 270 271 272 273 274
    275 276 277 278 279 280 281 282 283 284 285 286 287 289 290 291
    292 293 294 295 296 297 298 300 301 302 303 304
option_function_identifier (164)
<<<<<<< HEAD
    on left: 306 307 308 309, on right: 71 72 73 307 311
inner_option_function_identifier (165)
    on left: 310 311 312 313, on right: 306 307 310 311
statement_bpar (166)
    on left: 314 315, on right: 58 59 334 335 336 350 351
bool_par (167)
    on left: 316 317, on right: 334
identifier (168)
    on left: 318 319, on right: 57 64 86 87 96 98 112 151 173 207 265
    267 268 269 270 271 272 273 274 281 282 283 284 286 287 289 291
    292 293 294 295 296 297 298 300 301 302 303 319 324 357 358 363
    365 366 367 368 371 372 373 374 375 378 379 383 385
strliteral (169)
    on left: 320, on right: 100 102 136 137 197 200 203 245 246 247
    248
intliteral (170)
    on left: 321, on right: 168
charliteral (171)
    on left: 322, on right: 178 253 254
floatliteral (172)
    on left: 323, on right: 172
option_frame_identifier (173)
    on left: 324 325 326, on right: 57 324
option_projection (174)
    on left: 327 328, on right: 58 328
imply_pre (175)
    on left: 329 330 331 332 333, on right: 56 330 331 332 333
while_statement (176)
    on left: 334, on right: 38
for_statement (177)
    on left: 335, on right: 39
extend_for_statement (178)
    on left: 336, on right: 40
for_sta_init (179)
    on left: 337 338 339, on right: 336
for_sta_condition (180)
    on left: 340 341, on right: 336
for_sta_control (181)
    on left: 342 343, on right: 336
switch_statement (182)
    on left: 344, on right: 35
case_par (183)
    on left: 345 346, on right: 344 347 348
init_case_par (184)
    on left: 347 348 349, on right: 345
if_statement (185)
    on left: 350, on right: 37
option_else_statement (186)
    on left: 351 352, on right: 350
output_statement (187)
    on left: 353 354, on right: 51
option_output (188)
    on left: 355 356, on right: 354 356
input_statement (189)
    on left: 357 358 359 360 361, on right: 50
option_input (190)
    on left: 362 363 364, on right: 358 360 363 364
struct_member_exp (191)
    on left: 365 366 367 368 369 370 371 372 373 374 375 376 377 378
    379 380 381, on right: 113 181 209 361 381
option_struct_member_exp (192)
    on left: 382 383 384 385 386 387 388, on right: 365 366 367 368
    369 370 371 372 373 374 375 376 377 380 383 384 385 386
=======
    on left: 311 312 313 314 315, on right: 76 77 78 312 317
inner_option_function_identifier (165)
    on left: 316 317 318 319, on right: 311 312 316 317
statement_bpar (166)
    on left: 320 321, on right: 58 59 340 341 342 356 357
bool_par (167)
    on left: 322 323, on right: 340
identifier (168)
    on left: 324 325, on right: 57 64 91 92 101 103 117 156 178 212
    270 272 273 274 275 276 277 278 279 286 287 288 289 291 292 294
    296 297 298 299 300 301 302 303 305 306 307 308 325 330 363 364
    369 371 372 373 374 377 378 379 380 381 384 385 389 391
strliteral (169)
    on left: 326, on right: 105 107 141 142 202 205 208 250 251 252
    253
intliteral (170)
    on left: 327, on right: 173
charliteral (171)
    on left: 328, on right: 183 258 259
floatliteral (172)
    on left: 329, on right: 177
option_frame_identifier (173)
    on left: 330 331 332, on right: 57 330
option_projection (174)
    on left: 333 334, on right: 58 334
imply_pre (175)
    on left: 335 336 337 338 339, on right: 56 336 337 338 339
while_statement (176)
    on left: 340, on right: 38
for_statement (177)
    on left: 341, on right: 39
extend_for_statement (178)
    on left: 342, on right: 40
for_sta_init (179)
    on left: 343 344 345, on right: 342
for_sta_condition (180)
    on left: 346 347, on right: 342
for_sta_control (181)
    on left: 348 349, on right: 342
switch_statement (182)
    on left: 350, on right: 35
case_par (183)
    on left: 351 352, on right: 350 353 354
init_case_par (184)
    on left: 353 354 355, on right: 351
if_statement (185)
    on left: 356, on right: 37
option_else_statement (186)
    on left: 357 358, on right: 356
output_statement (187)
    on left: 359 360, on right: 51
option_output (188)
    on left: 361 362, on right: 360 362
input_statement (189)
    on left: 363 364 365 366 367, on right: 50
option_input (190)
    on left: 368 369 370, on right: 364 366 369 370
struct_member_exp (191)
    on left: 371 372 373 374 375 376 377 378 379 380 381 382 383 384
    385 386 387, on right: 118 186 214 367 387
option_struct_member_exp (192)
    on left: 388 389 390 391 392 393 394, on right: 371 372 373 374
    375 376 377 378 379 380 381 382 383 386 389 390 391 392
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 0

    PBEGIN	shift, and go to state 1

    $default	reduce using rule 3 (gComplexProposition)

<<<<<<< HEAD
    program	go to state 1171
=======
<<<<<<< HEAD
    program	go to state 1176
=======
    program	go to state 1219
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    gComplexProposition	go to state 2



state 1

    gComplexProposition  ->  PBEGIN . complexProposition PEND   (rule 2)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 21



state 2

    program  ->  gComplexProposition . statement   (rule 1)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 3

    complexProposition  ->  EMPTY .   (rule 18)

    $default	reduce using rule 18 (complexProposition)



state 4

    complexProposition  ->  MORE .   (rule 19)

    $default	reduce using rule 19 (complexProposition)



state 5

    complexProposition  ->  DEFINE . ID COLON prime_bool_exp   (rule 25)

    ID  	shift, and go to state 82



state 6

    complexProposition  ->  MY_TRUE .   (rule 15)

    $default	reduce using rule 15 (complexProposition)



state 7

    complexProposition  ->  MY_FALSE .   (rule 16)

    $default	reduce using rule 16 (complexProposition)



state 8

    complexProposition  ->  SKIP .   (rule 14)

    $default	reduce using rule 14 (complexProposition)



state 9

    complexProposition  ->  OPEN_PAR . complexProposition CLOSE_PAR   (rule 27)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 83



state 10

    complexProposition  ->  OPEN_BPAR . complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 84



state 11

    complexProposition  ->  NEXT . complexProposition   (rule 13)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 85



state 12

    complexProposition  ->  NEGATION . complexProposition   (rule 22)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 86



state 13

    complexProposition  ->  LENGTH . ari_exp   (rule 17)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 99
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 14

    complexProposition  ->  FINAL . complexProposition   (rule 21)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 109



state 15

    complexProposition  ->  KEEP . complexProposition   (rule 10)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 110



state 16

    complexProposition  ->  ALWAYS . complexProposition   (rule 9)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 111



state 17

    complexProposition  ->  HALT . complexProposition   (rule 20)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 112



state 18

    complexProposition  ->  W_NEXT . complexProposition   (rule 12)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 113



state 19

    complexProposition  ->  SOMETIMES . complexProposition   (rule 11)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 114



state 20

    complexProposition  ->  ID .   (rule 24)

    $default	reduce using rule 24 (complexProposition)



state 21

    gComplexProposition  ->  PBEGIN complexProposition . PEND   (rule 2)
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    PEND	shift, and go to state 115
    CHOP	shift, and go to state 116
    IFF 	shift, and go to state 117
    PROPIMPLY	shift, and go to state 118
    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121



state 22

<<<<<<< HEAD
    switch_statement  ->  SWITCH . OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 343)
=======
<<<<<<< HEAD
    switch_statement  ->  SWITCH . OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 344)
=======
    switch_statement  ->  SWITCH . OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 350)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    OPEN_PAR	shift, and go to state 122



state 23

    statement  ->  RETURN . ass_right   (rule 36)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 124
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 127
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

<<<<<<< HEAD
    ID  	shift, and go to state 123
=======
    function	go to state 97
    ass_right	go to state 129
    rightaddrshift	go to state 130
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 132
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    strliteral	go to state 135
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 24

<<<<<<< HEAD
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 349)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
=======
<<<<<<< HEAD
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 350)
=======
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 356)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 139
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
<<<<<<< HEAD
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 131
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
=======
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 140
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 142
    prime_bool_exp	go to state 143
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 25

    statement  ->  EMPTY .   (rule 47)

    $default	reduce using rule 47 (statement)



state 26

    statement  ->  AWAIT . OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 134
=======
    OPEN_PAR	shift, and go to state 145
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 27

<<<<<<< HEAD
    struct_identifier  ->  STRUCT . ID   (rule 74)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 81)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 83)

    ID  	shift, and go to state 135
    STRUCT_TYPE	shift, and go to state 136
=======
    struct_identifier  ->  STRUCT . ID   (rule 75)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 82)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 84)

    ID  	shift, and go to state 146
    STRUCT_TYPE	shift, and go to state 147
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 28

<<<<<<< HEAD
    struct_identifier  ->  UNION . ID   (rule 75)
    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 82)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 84)

    ID  	shift, and go to state 137
    STRUCT_TYPE	shift, and go to state 138
=======
    struct_identifier  ->  UNION . ID   (rule 76)
    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 83)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 85)

    ID  	shift, and go to state 148
    STRUCT_TYPE	shift, and go to state 149
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 29

<<<<<<< HEAD
    type_define  ->  FILEDECLARATION .   (rule 94)

    $default	reduce using rule 94 (type_define)
=======
    type_define  ->  FILEDECLARATION .   (rule 95)

    $default	reduce using rule 95 (type_define)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 30

    statement  ->  MORE .   (rule 48)

    $default	reduce using rule 48 (statement)



state 31

    statement  ->  DEFINE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

<<<<<<< HEAD
    ID  	shift, and go to state 139
=======
    ID  	shift, and go to state 150
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 32

    statement  ->  EXIST . identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 64)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 142
=======
    OPEN_PAR	shift, and go to state 151
    ID  	shift, and go to state 152

    identifier	go to state 153
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 33

    statement  ->  FRAME . OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 143
=======
    OPEN_PAR	shift, and go to state 154
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 34

<<<<<<< HEAD
    for_statement  ->  FOR . ari_exp TIMES DO statement_bpar   (rule 334)
    extend_for_statement  ->  FOR . OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 335)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 144
=======
<<<<<<< HEAD
    for_statement  ->  FOR . ari_exp TIMES DO statement_bpar   (rule 335)
    extend_for_statement  ->  FOR . OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 336)
=======
    for_statement  ->  FOR . ari_exp TIMES DO statement_bpar   (rule 341)
    extend_for_statement  ->  FOR . OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 342)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 155
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 145
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 156
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 35

<<<<<<< HEAD
    while_statement  ->  WHILE . bool_par statement_bpar   (rule 333)

    error	shift, and go to state 146
    OPEN_PAR	shift, and go to state 147

    bool_par	go to state 148
=======
<<<<<<< HEAD
    while_statement  ->  WHILE . bool_par statement_bpar   (rule 334)
=======
    while_statement  ->  WHILE . bool_par statement_bpar   (rule 340)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    error	shift, and go to state 157
    OPEN_PAR	shift, and go to state 158

    bool_par	go to state 159
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 36

    statement  ->  TRUE .   (rule 52)

    $default	reduce using rule 52 (statement)



state 37

    statement  ->  FALSE .   (rule 53)

    $default	reduce using rule 53 (statement)



state 38

    statement  ->  REPEAT . OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

<<<<<<< HEAD
    OPEN_BPAR	shift, and go to state 149
=======
    OPEN_BPAR	shift, and go to state 160
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 39

<<<<<<< HEAD
    output_statement  ->  DISPLAY . OPEN_PAR ass_right CLOSE_PAR   (rule 352)
    output_statement  ->  DISPLAY . OPEN_PAR ass_right option_output CLOSE_PAR   (rule 353)

    OPEN_PAR	shift, and go to state 150
=======
<<<<<<< HEAD
    output_statement  ->  DISPLAY . OPEN_PAR ass_right CLOSE_PAR   (rule 353)
    output_statement  ->  DISPLAY . OPEN_PAR ass_right option_output CLOSE_PAR   (rule 354)
=======
    output_statement  ->  DISPLAY . OPEN_PAR ass_right CLOSE_PAR   (rule 359)
    output_statement  ->  DISPLAY . OPEN_PAR ass_right option_output CLOSE_PAR   (rule 360)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    OPEN_PAR	shift, and go to state 161
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 40

    statement  ->  SKIP .   (rule 46)

    $default	reduce using rule 46 (statement)



state 41

<<<<<<< HEAD
    type_define  ->  INTDECLARATION .   (rule 89)

    $default	reduce using rule 89 (type_define)
=======
    type_define  ->  INTDECLARATION .   (rule 90)

    $default	reduce using rule 90 (type_define)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 42

<<<<<<< HEAD
    type_define  ->  STRDECLARATION .   (rule 92)

    $default	reduce using rule 92 (type_define)
=======
    type_define  ->  STRDECLARATION .   (rule 93)

    $default	reduce using rule 93 (type_define)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 43

<<<<<<< HEAD
    type_define  ->  CHARDECLARATION .   (rule 91)

    $default	reduce using rule 91 (type_define)
=======
    type_define  ->  CHARDECLARATION .   (rule 92)

    $default	reduce using rule 92 (type_define)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 44

<<<<<<< HEAD
    type_define  ->  VOIDDECLARATION .   (rule 93)

    $default	reduce using rule 93 (type_define)
=======
    type_define  ->  VOIDDECLARATION .   (rule 94)

    $default	reduce using rule 94 (type_define)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 45

<<<<<<< HEAD
    type_define  ->  FLOATDECLARATION .   (rule 90)

    $default	reduce using rule 90 (type_define)
=======
    type_define  ->  FLOATDECLARATION .   (rule 91)

    $default	reduce using rule 91 (type_define)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 46

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 65)
<<<<<<< HEAD
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 115)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 151
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 124
=======
<<<<<<< HEAD
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)
=======
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 162
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 136
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
<<<<<<< HEAD
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
=======
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 152
=======
    OPEN_PAR	shift, and go to state 163
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
<<<<<<< HEAD
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 153
    BNE 	shift, and go to state 92
    NEXT	shift, and go to state 53
    NEGATION	shift, and go to state 154
=======
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 164
    BNE 	shift, and go to state 93
    NEXT	shift, and go to state 53
    NEGATION	shift, and go to state 165
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
<<<<<<< HEAD
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 60
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    statement	go to state 155
    function	go to state 156
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 157
    leftaddrshift	go to state 70
    array	go to state 158
    point_exp	go to state 159
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 160
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 162
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 163
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 164
=======
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 60
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    statement	go to state 166
    function_define	go to state 62
    function	go to state 167
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 168
    leftaddrshift	go to state 71
    array	go to state 169
    point_exp	go to state 170
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 171
    type_cast	go to state 104
    prime_bool_exp	go to state 172
    identifier	go to state 173
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    imply_pre	go to state 174
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 175
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 47

    statement  ->  OPEN_BPAR . statement option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 58)
    statement  ->  OPEN_BPAR . statement CLOSE_BPAR PROJECTION statement_bpar   (rule 59)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

<<<<<<< HEAD
    statement	go to state 165
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81
=======
    statement	go to state 176
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 48

<<<<<<< HEAD
    statement  ->  FUNCTION . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 60)

    ID  	shift, and go to state 166
=======
    function_define  ->  FUNCTION . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    ID  	shift, and go to state 177
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 49

<<<<<<< HEAD
    function  ->  EXTERN . ID OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)

    ID  	shift, and go to state 167
=======
    function  ->  EXTERN . ID OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)

    ID  	shift, and go to state 178
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 50

<<<<<<< HEAD
    sign_declaration  ->  UNSIGNED . declaration   (rule 77)

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
=======
    sign_declaration  ->  UNSIGNED . declaration   (rule 78)

    STRUCT	shift, and go to state 179
    UNION	shift, and go to state 180
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 170
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 171
    type_define	go to state 67
=======
    OPEN_PAR	shift, and go to state 181
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 182
    type_define	go to state 68
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 51

<<<<<<< HEAD
    sign_declaration  ->  SIGNED . declaration   (rule 76)

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
=======
    sign_declaration  ->  SIGNED . declaration   (rule 77)

    STRUCT	shift, and go to state 179
    UNION	shift, and go to state 180
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 170
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 172
    type_define	go to state 67
=======
    OPEN_PAR	shift, and go to state 181
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 183
    type_define	go to state 68
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 52

<<<<<<< HEAD
    point_exp  ->  MUL . identifier   (rule 150)
    point_exp  ->  MUL . point_exp   (rule 151)
    point_exp  ->  MUL . array   (rule 152)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 154)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 155)

    OPEN_PAR	shift, and go to state 173
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 174

    array	go to state 175
    point_exp	go to state 176
    identifier	go to state 177
=======
    point_exp  ->  MUL . identifier   (rule 151)
    point_exp  ->  MUL . point_exp   (rule 152)
    point_exp  ->  MUL . array   (rule 153)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 155)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 156)

    OPEN_PAR	shift, and go to state 184
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 185

    array	go to state 186
    point_exp	go to state 187
    identifier	go to state 188
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 53

    statement  ->  NEXT . OPEN_PAR statement CLOSE_PAR   (rule 41)
<<<<<<< HEAD
    ass_left  ->  NEXT . ass_left   (rule 116)

    OPEN_PAR	shift, and go to state 178
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 179
    ID  	shift, and go to state 174

    ass_left	go to state 180
    leftaddrshift	go to state 70
    array	go to state 181
    point_exp	go to state 72
    identifier	go to state 73
    struct_member_exp	go to state 81
=======
    ass_left  ->  NEXT . ass_left   (rule 117)

    OPEN_PAR	shift, and go to state 189
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 190
    ID  	shift, and go to state 185

    ass_left	go to state 191
    leftaddrshift	go to state 71
    array	go to state 192
    point_exp	go to state 73
    identifier	go to state 74
    struct_member_exp	go to state 82
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 54

    statement  ->  LENGTH . OPEN_PAR ari_exp CLOSE_PAR   (rule 49)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 182
=======
    OPEN_PAR	shift, and go to state 193
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 55

<<<<<<< HEAD
    input_statement  ->  REQUEST . OPEN_PAR identifier CLOSE_PAR   (rule 356)
    input_statement  ->  REQUEST . OPEN_PAR identifier option_input CLOSE_PAR   (rule 357)
    input_statement  ->  REQUEST . OPEN_PAR array CLOSE_PAR   (rule 358)
    input_statement  ->  REQUEST . OPEN_PAR array option_input CLOSE_PAR   (rule 359)
    input_statement  ->  REQUEST . OPEN_PAR struct_member_exp CLOSE_PAR   (rule 360)

    OPEN_PAR	shift, and go to state 183
=======
<<<<<<< HEAD
    input_statement  ->  REQUEST . OPEN_PAR identifier CLOSE_PAR   (rule 357)
    input_statement  ->  REQUEST . OPEN_PAR identifier option_input CLOSE_PAR   (rule 358)
    input_statement  ->  REQUEST . OPEN_PAR array CLOSE_PAR   (rule 359)
    input_statement  ->  REQUEST . OPEN_PAR array option_input CLOSE_PAR   (rule 360)
    input_statement  ->  REQUEST . OPEN_PAR struct_member_exp CLOSE_PAR   (rule 361)
=======
    input_statement  ->  REQUEST . OPEN_PAR identifier CLOSE_PAR   (rule 363)
    input_statement  ->  REQUEST . OPEN_PAR identifier option_input CLOSE_PAR   (rule 364)
    input_statement  ->  REQUEST . OPEN_PAR array CLOSE_PAR   (rule 365)
    input_statement  ->  REQUEST . OPEN_PAR array option_input CLOSE_PAR   (rule 366)
    input_statement  ->  REQUEST . OPEN_PAR struct_member_exp CLOSE_PAR   (rule 367)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    OPEN_PAR	shift, and go to state 194
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 56

    statement  ->  FINAL . OPEN_PAR statement CLOSE_PAR   (rule 54)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 184
=======
    OPEN_PAR	shift, and go to state 195
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 57

    statement  ->  KEEP . OPEN_PAR statement CLOSE_PAR   (rule 42)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 185
=======
    OPEN_PAR	shift, and go to state 196
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 58

    statement  ->  ALWAYS . OPEN_PAR statement CLOSE_PAR   (rule 43)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 186
=======
    OPEN_PAR	shift, and go to state 197
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 59

<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    identifier  ->  ID .   (rule 317)

    OPEN_PAR	shift, and go to state 187
    OPEN_MPAR	shift, and go to state 188

    $default	reduce using rule 317 (identifier)
=======
<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    identifier  ->  ID .   (rule 318)
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    identifier  ->  ID .   (rule 324)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    OPEN_PAR	shift, and go to state 198
    OPEN_MPAR	shift, and go to state 199

<<<<<<< HEAD
    $default	reduce using rule 318 (identifier)
=======
    $default	reduce using rule 324 (identifier)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 60

<<<<<<< HEAD
    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 80)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 189
    ID  	shift, and go to state 190

    option_identifier_array_declaration	go to state 191
    identifier	go to state 192
=======
    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 81)

    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 200
    ID  	shift, and go to state 201

    option_identifier_array_declaration	go to state 202
    identifier	go to state 203
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 61

    program  ->  gComplexProposition statement .   (rule 1)
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)

<<<<<<< HEAD
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196
=======
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 1 (program)



state 62

    statement  ->  function .   (rule 63)

    $default	reduce using rule 63 (statement)



state 63

    statement  ->  struct_define_statement .   (rule 62)

    $default	reduce using rule 62 (statement)



state 64

    struct_define_statement  ->  struct_identifier . OPEN_BPAR option_struct_declaration CLOSE_BPAR   (rule 73)

    OPEN_BPAR	shift, and go to state 197



state 65

<<<<<<< HEAD
    statement  ->  sign_declaration .   (rule 34)

    $default	reduce using rule 34 (statement)
=======
    struct_define_statement  ->  struct_identifier . OPEN_BPAR option_struct_declaration CLOSE_BPAR   (rule 74)

    OPEN_BPAR	shift, and go to state 208
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 66

    sign_declaration  ->  declaration .   (rule 78)

    $default	reduce using rule 78 (sign_declaration)



state 67

<<<<<<< HEAD
    declaration  ->  type_define . option_identifier_array_declaration   (rule 79)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 189
    ID  	shift, and go to state 190
=======
    sign_declaration  ->  declaration .   (rule 79)

    $default	reduce using rule 79 (sign_declaration)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_identifier_array_declaration	go to state 198
    identifier	go to state 192



<<<<<<< HEAD
state 68

    statement  ->  ass_statement .   (rule 33)

    $default	reduce using rule 33 (statement)
=======
    declaration  ->  type_define . option_identifier_array_declaration   (rule 80)

    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 200
    ID  	shift, and go to state 201

    option_identifier_array_declaration	go to state 209
    identifier	go to state 203
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 69

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 110)

    ASS_P	shift, and go to state 199
    ASS_N	shift, and go to state 200

    assign_operator	go to state 201



<<<<<<< HEAD
state 70

    ass_left  ->  leftaddrshift .   (rule 117)

    $default	reduce using rule 117 (ass_left)
=======
    ass_statement  ->  ass_left . assign_operator ass_right   (rule 111)

    ASS_P	shift, and go to state 210
    ASS_N	shift, and go to state 211

    assign_operator	go to state 212
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 71

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    ass_left  ->  array .   (rule 113)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 202
    OPEN_PAR	shift, and go to state 203
    IMPLY	shift, and go to state 204

    $default	reduce using rule 113 (ass_left)
=======
    ass_left  ->  leftaddrshift .   (rule 118)

    $default	reduce using rule 118 (ass_left)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 72

<<<<<<< HEAD
    ass_left  ->  point_exp .   (rule 114)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 379)

    DOT 	shift, and go to state 205
    IMPLY	shift, and go to state 206
=======
<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    ass_left  ->  array .   (rule 114)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 376)
=======
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    ass_left  ->  array .   (rule 119)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 382)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    DOT 	shift, and go to state 213
    OPEN_PAR	shift, and go to state 214
    IMPLY	shift, and go to state 215
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 114 (ass_left)



state 73

<<<<<<< HEAD
    ass_left  ->  identifier .   (rule 111)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . DOT function   (rule 377)
    struct_member_exp  ->  identifier . IMPLY function   (rule 378)

    DOT 	shift, and go to state 207
    IMPLY	shift, and go to state 208

    $default	reduce using rule 111 (ass_left)
=======
<<<<<<< HEAD
    ass_left  ->  point_exp .   (rule 115)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 380)
=======
    ass_left  ->  point_exp .   (rule 120)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 386)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    DOT 	shift, and go to state 216
    IMPLY	shift, and go to state 217

    $default	reduce using rule 115 (ass_left)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 74

<<<<<<< HEAD
=======
<<<<<<< HEAD
    ass_left  ->  identifier .   (rule 112)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . DOT function   (rule 378)
    struct_member_exp  ->  identifier . IMPLY function   (rule 379)
=======
    ass_left  ->  identifier .   (rule 117)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 381)
    struct_member_exp  ->  identifier . DOT function   (rule 384)
    struct_member_exp  ->  identifier . IMPLY function   (rule 385)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    DOT 	shift, and go to state 218
    IMPLY	shift, and go to state 219

    $default	reduce using rule 112 (ass_left)



state 75

>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    statement  ->  while_statement .   (rule 38)

    $default	reduce using rule 38 (statement)



state 75

    statement  ->  for_statement .   (rule 39)

    $default	reduce using rule 39 (statement)



state 76

    statement  ->  extend_for_statement .   (rule 40)

    $default	reduce using rule 40 (statement)



state 77

    statement  ->  switch_statement .   (rule 35)

    $default	reduce using rule 35 (statement)



state 78

    statement  ->  if_statement .   (rule 37)

    $default	reduce using rule 37 (statement)



state 79

    statement  ->  output_statement .   (rule 51)

    $default	reduce using rule 51 (statement)



state 80

    statement  ->  input_statement .   (rule 50)

    $default	reduce using rule 50 (statement)



state 81

<<<<<<< HEAD
    ass_left  ->  struct_member_exp .   (rule 112)

    $default	reduce using rule 112 (ass_left)
=======
    ass_left  ->  struct_member_exp .   (rule 113)

    $default	reduce using rule 113 (ass_left)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 82

    complexProposition  ->  DEFINE ID . COLON prime_bool_exp   (rule 25)

<<<<<<< HEAD
    COLON	shift, and go to state 209
=======
    COLON	shift, and go to state 220
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 83

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    complexProposition  ->  OPEN_PAR complexProposition . CLOSE_PAR   (rule 27)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 210
    CHOP	shift, and go to state 116
    IFF 	shift, and go to state 117
    PROPIMPLY	shift, and go to state 118
    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121
=======
    CLOSE_PAR	shift, and go to state 221
    CHOP	shift, and go to state 117
    IFF 	shift, and go to state 118
    PROPIMPLY	shift, and go to state 119
    OR  	shift, and go to state 120
    AND 	shift, and go to state 121
    CHOPSTAR	shift, and go to state 122
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 84

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition . poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

<<<<<<< HEAD
    COMMA	shift, and go to state 211
    CHOP	shift, and go to state 116
    IFF 	shift, and go to state 117
    PROPIMPLY	shift, and go to state 118
    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 212
=======
    COMMA	shift, and go to state 222
    CHOP	shift, and go to state 117
    IFF 	shift, and go to state 118
    PROPIMPLY	shift, and go to state 119
    OR  	shift, and go to state 120
    AND 	shift, and go to state 121
    CHOPSTAR	shift, and go to state 122

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 223
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 85

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEXT complexProposition .   (rule 13)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 13 (complexProposition)



state 86

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEGATION complexProposition .   (rule 22)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 22 (complexProposition)



state 87

<<<<<<< HEAD
    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 160)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
=======
    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 161)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 139
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
<<<<<<< HEAD
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 213
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
=======
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 140
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 224
    prime_bool_exp	go to state 143
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 88

<<<<<<< HEAD
    member_in_exp  ->  POINTERNULL .   (rule 170)

    $default	reduce using rule 170 (member_in_exp)
=======
    member_in_exp  ->  POINTERNULL .   (rule 171)

    $default	reduce using rule 171 (member_in_exp)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 89

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 215
    CHARDECLARATION	shift, and go to state 216
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 218
    OPEN_PAR	shift, and go to state 219
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 220
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
=======
<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 226
    CHARDECLARATION	shift, and go to state 227
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 229
    OPEN_PAR	shift, and go to state 230
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 231
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228
=======
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 90

<<<<<<< HEAD
    address_exp  ->  ADDRESS . identifier   (rule 206)
    address_exp  ->  ADDRESS . array   (rule 207)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 208)
    address_exp  ->  ADDRESS . address_exp   (rule 209)

    OPEN_PAR	shift, and go to state 229
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 174

    array	go to state 230
    point_exp	go to state 231
    address_exp	go to state 232
    identifier	go to state 233
    struct_member_exp	go to state 234
=======
    address_exp  ->  ADDRESS . identifier   (rule 207)
    address_exp  ->  ADDRESS . array   (rule 208)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 209)
    address_exp  ->  ADDRESS . address_exp   (rule 210)

    OPEN_PAR	shift, and go to state 240
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 185

    array	go to state 241
    point_exp	go to state 242
    address_exp	go to state 243
    identifier	go to state 244
    struct_member_exp	go to state 245
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 91

<<<<<<< HEAD
    member_in_exp  ->  SUB . member_in_exp   (rule 168)
=======
    member_in_exp  ->  SUB . member_in_exp   (rule 169)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

<<<<<<< HEAD
    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    member_in_exp	go to state 235
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
=======
    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    member_in_exp	go to state 246
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 92

<<<<<<< HEAD
    member_in_exp  ->  BNE . member_in_exp   (rule 169)
=======
    member_in_exp  ->  BNE . member_in_exp   (rule 170)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    member_in_exp	go to state 236
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 93

<<<<<<< HEAD
    intliteral  ->  INTLITERAL .   (rule 320)

    $default	reduce using rule 320 (intliteral)
=======
    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    member_in_exp	go to state 247
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 94

<<<<<<< HEAD
    floatliteral  ->  FLOATLITERAL .   (rule 322)

    $default	reduce using rule 322 (floatliteral)
=======
<<<<<<< HEAD
    intliteral  ->  INTLITERAL .   (rule 321)

    $default	reduce using rule 321 (intliteral)
=======
    intliteral  ->  INTLITERAL .   (rule 327)

    $default	reduce using rule 327 (intliteral)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 95

<<<<<<< HEAD
    charliteral  ->  CHARLITERAL .   (rule 321)

    $default	reduce using rule 321 (charliteral)
=======
<<<<<<< HEAD
    floatliteral  ->  FLOATLITERAL .   (rule 323)

    $default	reduce using rule 323 (floatliteral)
=======
    floatliteral  ->  FLOATLITERAL .   (rule 329)

    $default	reduce using rule 329 (floatliteral)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 96

<<<<<<< HEAD
    member_in_exp  ->  function .   (rule 175)

    $default	reduce using rule 175 (member_in_exp)
=======
<<<<<<< HEAD
    charliteral  ->  CHARLITERAL .   (rule 322)

    $default	reduce using rule 322 (charliteral)
=======
    charliteral  ->  CHARLITERAL .   (rule 328)

    $default	reduce using rule 328 (charliteral)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 97

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    member_in_exp  ->  array .   (rule 173)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 202
    OPEN_PAR	shift, and go to state 203
    IMPLY	shift, and go to state 204

    DOT 	[reduce using rule 173 (member_in_exp)]
    IMPLY	[reduce using rule 173 (member_in_exp)]
    $default	reduce using rule 173 (member_in_exp)
=======
    member_in_exp  ->  function .   (rule 176)

    $default	reduce using rule 176 (member_in_exp)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 98

<<<<<<< HEAD
    member_in_exp  ->  point_exp .   (rule 174)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 379)

    DOT 	shift, and go to state 205
    IMPLY	shift, and go to state 206
=======
<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    member_in_exp  ->  array .   (rule 174)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 376)
=======
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    member_in_exp  ->  array .   (rule 179)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 382)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    DOT 	shift, and go to state 213
    OPEN_PAR	shift, and go to state 214
    IMPLY	shift, and go to state 215
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    DOT 	[reduce using rule 174 (member_in_exp)]
    IMPLY	[reduce using rule 174 (member_in_exp)]
    $default	reduce using rule 174 (member_in_exp)



state 99

<<<<<<< HEAD
    complexProposition  ->  LENGTH ari_exp .   (rule 17)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
=======
<<<<<<< HEAD
    member_in_exp  ->  point_exp .   (rule 175)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 380)
=======
    member_in_exp  ->  point_exp .   (rule 180)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 386)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    DOT 	shift, and go to state 216
    IMPLY	shift, and go to state 217

    DOT 	[reduce using rule 175 (member_in_exp)]
    IMPLY	[reduce using rule 175 (member_in_exp)]
    $default	reduce using rule 175 (member_in_exp)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 17 (complexProposition)

    ari_operator	go to state 239

<<<<<<< HEAD

=======
    complexProposition  ->  LENGTH ari_exp .   (rule 17)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 100

<<<<<<< HEAD
    ari_exp  ->  simple_ari_exp .   (rule 157)
    ari_exp  ->  simple_ari_exp . relation_operator ari_exp   (rule 158)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 166)

    INTER_OR	shift, and go to state 240
    CON 	shift, and go to state 241
    ADDRESS	shift, and go to state 242
    NE  	shift, and go to state 243
    EQ  	shift, and go to state 244
    GE  	shift, and go to state 245
    LE  	shift, and go to state 246
    GT  	shift, and go to state 247
    LT  	shift, and go to state 248
    LST 	shift, and go to state 249
    RST 	shift, and go to state 250
    MUL 	shift, and go to state 251
    DIV 	shift, and go to state 252
    MOD 	shift, and go to state 253

    INTER_OR	[reduce using rule 157 (ari_exp)]
    CON 	[reduce using rule 157 (ari_exp)]
    ADDRESS	[reduce using rule 157 (ari_exp)]
    NE  	[reduce using rule 157 (ari_exp)]
    EQ  	[reduce using rule 157 (ari_exp)]
    GE  	[reduce using rule 157 (ari_exp)]
    LE  	[reduce using rule 157 (ari_exp)]
    GT  	[reduce using rule 157 (ari_exp)]
    LT  	[reduce using rule 157 (ari_exp)]
    LST 	[reduce using rule 157 (ari_exp)]
    RST 	[reduce using rule 157 (ari_exp)]
    MUL 	[reduce using rule 157 (ari_exp)]
    DIV 	[reduce using rule 157 (ari_exp)]
    MOD 	[reduce using rule 157 (ari_exp)]
    $default	reduce using rule 157 (ari_exp)

    bi_operator	go to state 254
    relation_operator	go to state 255
=======
    ari_operator	go to state 250
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 101

<<<<<<< HEAD
    simple_ari_exp  ->  member_in_exp .   (rule 165)

    $default	reduce using rule 165 (simple_ari_exp)
=======
    ari_exp  ->  simple_ari_exp .   (rule 158)
    ari_exp  ->  simple_ari_exp . relation_operator ari_exp   (rule 159)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 167)

    INTER_OR	shift, and go to state 251
    CON 	shift, and go to state 252
    ADDRESS	shift, and go to state 253
    NE  	shift, and go to state 254
    EQ  	shift, and go to state 255
    GE  	shift, and go to state 256
    LE  	shift, and go to state 257
    GT  	shift, and go to state 258
    LT  	shift, and go to state 259
    LST 	shift, and go to state 260
    RST 	shift, and go to state 261
    MUL 	shift, and go to state 262
    DIV 	shift, and go to state 263
    MOD 	shift, and go to state 264

    INTER_OR	[reduce using rule 158 (ari_exp)]
    CON 	[reduce using rule 158 (ari_exp)]
    ADDRESS	[reduce using rule 158 (ari_exp)]
    NE  	[reduce using rule 158 (ari_exp)]
    EQ  	[reduce using rule 158 (ari_exp)]
    GE  	[reduce using rule 158 (ari_exp)]
    LE  	[reduce using rule 158 (ari_exp)]
    GT  	[reduce using rule 158 (ari_exp)]
    LT  	[reduce using rule 158 (ari_exp)]
    LST 	[reduce using rule 158 (ari_exp)]
    RST 	[reduce using rule 158 (ari_exp)]
    MUL 	[reduce using rule 158 (ari_exp)]
    DIV 	[reduce using rule 158 (ari_exp)]
    MOD 	[reduce using rule 158 (ari_exp)]
    $default	reduce using rule 158 (ari_exp)

    bi_operator	go to state 265
    relation_operator	go to state 266
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 102

<<<<<<< HEAD
    member_in_exp  ->  address_exp .   (rule 178)

    $default	reduce using rule 178 (member_in_exp)
=======
    simple_ari_exp  ->  member_in_exp .   (rule 166)

    $default	reduce using rule 166 (simple_ari_exp)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 103

<<<<<<< HEAD
    member_in_exp  ->  type_cast .   (rule 179)
=======
    member_in_exp  ->  address_exp .   (rule 179)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 179 (member_in_exp)



state 104

<<<<<<< HEAD
    member_in_exp  ->  identifier .   (rule 172)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . DOT function   (rule 377)
    struct_member_exp  ->  identifier . IMPLY function   (rule 378)

    DOT 	shift, and go to state 207
    IMPLY	shift, and go to state 208

    DOT 	[reduce using rule 172 (member_in_exp)]
    IMPLY	[reduce using rule 172 (member_in_exp)]
    $default	reduce using rule 172 (member_in_exp)
=======
    member_in_exp  ->  type_cast .   (rule 180)

    $default	reduce using rule 180 (member_in_exp)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 105

<<<<<<< HEAD
    member_in_exp  ->  intliteral .   (rule 167)

    $default	reduce using rule 167 (member_in_exp)
=======
<<<<<<< HEAD
    member_in_exp  ->  identifier .   (rule 173)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . DOT function   (rule 378)
    struct_member_exp  ->  identifier . IMPLY function   (rule 379)
=======
    member_in_exp  ->  identifier .   (rule 178)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 381)
    struct_member_exp  ->  identifier . DOT function   (rule 384)
    struct_member_exp  ->  identifier . IMPLY function   (rule 385)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    DOT 	shift, and go to state 218
    IMPLY	shift, and go to state 219

    DOT 	[reduce using rule 173 (member_in_exp)]
    IMPLY	[reduce using rule 173 (member_in_exp)]
    $default	reduce using rule 173 (member_in_exp)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 106

<<<<<<< HEAD
    member_in_exp  ->  charliteral .   (rule 177)

    $default	reduce using rule 177 (member_in_exp)
=======
    member_in_exp  ->  intliteral .   (rule 168)

    $default	reduce using rule 168 (member_in_exp)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 107

<<<<<<< HEAD
    member_in_exp  ->  floatliteral .   (rule 171)

    $default	reduce using rule 171 (member_in_exp)
=======
    member_in_exp  ->  charliteral .   (rule 178)

    $default	reduce using rule 178 (member_in_exp)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 108

<<<<<<< HEAD
    member_in_exp  ->  struct_member_exp .   (rule 180)

    $default	reduce using rule 180 (member_in_exp)
=======
    member_in_exp  ->  floatliteral .   (rule 172)

    $default	reduce using rule 172 (member_in_exp)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 109

<<<<<<< HEAD
=======
    member_in_exp  ->  struct_member_exp .   (rule 181)

    $default	reduce using rule 181 (member_in_exp)



state 110

>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  FINAL complexProposition .   (rule 21)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 21 (complexProposition)



state 110

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  KEEP complexProposition .   (rule 10)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 10 (complexProposition)



state 111

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  ALWAYS complexProposition .   (rule 9)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 9 (complexProposition)



state 112

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  HALT complexProposition .   (rule 20)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 20 (complexProposition)



state 113

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  W_NEXT complexProposition .   (rule 12)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 12 (complexProposition)



state 114

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  SOMETIMES complexProposition .   (rule 11)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 11 (complexProposition)



state 115

    gComplexProposition  ->  PBEGIN complexProposition PEND .   (rule 2)

    $default	reduce using rule 2 (gComplexProposition)



state 116

    complexProposition  ->  complexProposition CHOP . complexProposition   (rule 8)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 256
=======
    complexProposition	go to state 267
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 117

    complexProposition  ->  complexProposition IFF . complexProposition   (rule 6)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 257
=======
    complexProposition	go to state 268
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 118

    complexProposition  ->  complexProposition PROPIMPLY . complexProposition   (rule 7)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 258
=======
    complexProposition	go to state 269
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 119

    complexProposition  ->  complexProposition OR . complexProposition   (rule 5)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 259
=======
    complexProposition	go to state 270
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 120

    complexProposition  ->  complexProposition AND . complexProposition   (rule 4)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 260
=======
    complexProposition	go to state 271
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 121

    complexProposition  ->  complexProposition CHOPSTAR .   (rule 26)

    $default	reduce using rule 26 (complexProposition)



state 122

<<<<<<< HEAD
    switch_statement  ->  SWITCH OPEN_PAR . member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 343)
=======
<<<<<<< HEAD
    switch_statement  ->  SWITCH OPEN_PAR . member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 344)
=======
    switch_statement  ->  SWITCH OPEN_PAR . member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 350)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

<<<<<<< HEAD
    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    member_in_exp	go to state 261
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
=======
    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    member_in_exp	go to state 272
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 123

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 138)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 195)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)
=======
    statement  ->  RETURN ID .   (rule 36)

    $default	reduce using rule 36 (statement)



state 124

    member_in_exp  ->  POINTERNULL .   (rule 170)
    prime_bool_exp  ->  POINTERNULL . EQ ari_exp   (rule 250)
    prime_bool_exp  ->  POINTERNULL . NE ari_exp   (rule 251)

    NE  	shift, and go to state 262
    EQ  	shift, and go to state 263

    NE  	[reduce using rule 170 (member_in_exp)]
    EQ  	[reduce using rule 170 (member_in_exp)]
    $default	reduce using rule 170 (member_in_exp)



state 125

    prime_bool_exp  ->  MY_TRUE .   (rule 241)

    $default	reduce using rule 241 (prime_bool_exp)



state 126

    prime_bool_exp  ->  MY_FALSE .   (rule 242)

    $default	reduce using rule 242 (prime_bool_exp)



state 127

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 214
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    INTDECLARATION	shift, and go to state 215
    CHARDECLARATION	shift, and go to state 216
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 218
    OPEN_PAR	shift, and go to state 264
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 220
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 265
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    bool_exp	go to state 266
    prime_bool_exp	go to state 132
    identifier	go to state 227
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 128

    bool_exp  ->  NEGATION . bool_exp   (rule 236)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 226
    CHARDECLARATION	shift, and go to state 227
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 229
    OPEN_PAR	shift, and go to state 273
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 231
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 127
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    ass_right	go to state 274
    rightaddrshift	go to state 130
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 275
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 276
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    strliteral	go to state 277
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239



state 125

    option_struct_list_value  ->  OPEN_BPAR . ari_exp inner_option_list_value CLOSE_BPAR   (rule 199)
    option_struct_list_value  ->  OPEN_BPAR . strliteral inner_option_list_value CLOSE_BPAR   (rule 200)
    option_struct_list_value  ->  OPEN_BPAR . array_exp inner_option_list_value CLOSE_BPAR   (rule 201)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 278
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
<<<<<<< HEAD
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 267
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 129
=======
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 279
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 280
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    strliteral	go to state 281
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 126
=======
state 130
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    strliteral  ->  STRLITERAL .   (rule 319)

    $default	reduce using rule 319 (strliteral)



state 130

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 240)
    prime_bool_exp  ->  ari_exp .   (rule 243)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 244)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 245)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 248)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 249)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 252)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 253)

    NE  	shift, and go to state 268
    EQ  	shift, and go to state 269
    GE  	shift, and go to state 245
    LE  	shift, and go to state 246
    GT  	shift, and go to state 247
    LT  	shift, and go to state 248
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 243 (prime_bool_exp)

    ari_operator	go to state 239
    relation_operator	go to state 270



state 131

    bool_exp  ->  bool_exp . AND bool_exp   (rule 237)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 238)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 349)

    THEN	shift, and go to state 271
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273



state 132

    bool_exp  ->  prime_bool_exp .   (rule 235)

    $default	reduce using rule 235 (bool_exp)



state 133

    prime_bool_exp  ->  strliteral . EQ ari_exp   (rule 246)
    prime_bool_exp  ->  strliteral . NE ari_exp   (rule 247)

    NE  	shift, and go to state 274
    EQ  	shift, and go to state 275


<<<<<<< HEAD

state 134
=======
state 135
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_list_value  ->  OPEN_MPAR . ari_exp inner_option_list_value CLOSE_MPAR   (rule 196)
    option_list_value  ->  OPEN_MPAR . strliteral inner_option_list_value CLOSE_MPAR   (rule 197)
    option_list_value  ->  OPEN_MPAR . array_exp inner_option_list_value CLOSE_MPAR   (rule 198)

<<<<<<< HEAD
    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
=======
    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 278
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
<<<<<<< HEAD
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 276
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 135

    struct_identifier  ->  STRUCT ID .   (rule 74)
    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 81)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 189
    ID  	shift, and go to state 190

    $default	reduce using rule 74 (struct_identifier)

    option_identifier_array_declaration	go to state 277
    identifier	go to state 192
=======
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 282
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 283
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    strliteral	go to state 284
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 127

    rightaddrshift  ->  MUL . OPEN_PAR leftaddrshift CLOSE_PAR   (rule 140)
    point_exp  ->  MUL . identifier   (rule 151)
    point_exp  ->  MUL . point_exp   (rule 152)
    point_exp  ->  MUL . array   (rule 153)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 155)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 156)

    OPEN_PAR	shift, and go to state 285
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 185

    array	go to state 186
    point_exp	go to state 187
    identifier	go to state 188

>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 128

<<<<<<< HEAD
state 136

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 83)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 189
    ID  	shift, and go to state 190

    option_identifier_array_declaration	go to state 278
    identifier	go to state 192
=======
    strliteral  ->  STRLITERAL .   (rule 320)

    $default	reduce using rule 320 (strliteral)


>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 129

    statement  ->  RETURN ass_right .   (rule 36)

<<<<<<< HEAD
state 137

    struct_identifier  ->  UNION ID .   (rule 75)
    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 82)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 189
    ID  	shift, and go to state 190

    $default	reduce using rule 75 (struct_identifier)

    option_identifier_array_declaration	go to state 279
    identifier	go to state 192



state 138

    declaration  ->  UNION STRUCT_TYPE . option_identifier_array_declaration   (rule 84)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 189
    ID  	shift, and go to state 190

    option_identifier_array_declaration	go to state 280
    identifier	go to state 192
=======
    $default	reduce using rule 36 (statement)



state 130

    ass_right  ->  rightaddrshift .   (rule 139)

    $default	reduce using rule 139 (ass_right)



state 131

    ass_right  ->  ari_exp .   (rule 134)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 134 (ass_right)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    ari_operator	go to state 250


<<<<<<< HEAD
state 139

    statement  ->  DEFINE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    OPEN_PAR	shift, and go to state 281
=======

state 132

    ass_right  ->  array_exp .   (rule 135)
    array_exp  ->  array_exp . CON array_exp   (rule 192)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CON 	shift, and go to state 286

    $default	reduce using rule 135 (ass_right)


<<<<<<< HEAD
state 140

    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)

    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 282



state 141

    identifier  ->  ID .   (rule 317)

    $default	reduce using rule 317 (identifier)



state 142
=======

<<<<<<< HEAD
state 133
=======
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array_exp  ->  option_list_value .   (rule 193)

    $default	reduce using rule 193 (array_exp)



state 134

<<<<<<< HEAD
    array_exp  ->  option_struct_list_value .   (rule 194)

    $default	reduce using rule 194 (array_exp)
=======
    identifier  ->  ID .   (rule 324)

    $default	reduce using rule 324 (identifier)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 135
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    ass_right  ->  strliteral .   (rule 136)

<<<<<<< HEAD
    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 284
=======
    $default	reduce using rule 136 (ass_right)


>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 136

    member_in_exp  ->  POINTERNULL .   (rule 171)
    prime_bool_exp  ->  POINTERNULL . EQ ari_exp   (rule 251)
    prime_bool_exp  ->  POINTERNULL . NE ari_exp   (rule 252)

<<<<<<< HEAD
state 143
=======
    NE  	shift, and go to state 287
    EQ  	shift, and go to state 288
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    NE  	[reduce using rule 171 (member_in_exp)]
    EQ  	[reduce using rule 171 (member_in_exp)]
    $default	reduce using rule 171 (member_in_exp)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 285
=======

>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 137

    prime_bool_exp  ->  MY_TRUE .   (rule 242)

<<<<<<< HEAD
state 144

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    extend_for_statement  ->  FOR OPEN_PAR . for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 335)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 286
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 287
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 288
    VOIDDECLARATION	shift, and go to state 289
    FLOATDECLARATION	shift, and go to state 290
    OPEN_PAR	shift, and go to state 291
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 220
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEXT	shift, and go to state 179
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 292
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    $default	reduce using rule 338 (for_sta_init)

    function	go to state 96
    declaration	go to state 293
    type_define	go to state 67
    ass_statement	go to state 294
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 158
    point_exp	go to state 159
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 162
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    for_sta_init	go to state 295
    struct_member_exp	go to state 164



state 145

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    for_statement  ->  FOR ari_exp . TIMES DO statement_bpar   (rule 334)

    TIMES	shift, and go to state 296
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ari_operator	go to state 239



state 146

    bool_par  ->  error . CLOSE_PAR   (rule 316)

    CLOSE_PAR	shift, and go to state 297



state 147

    bool_par  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 315)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
=======
    $default	reduce using rule 242 (prime_bool_exp)



state 138

    prime_bool_exp  ->  MY_FALSE .   (rule 243)

    $default	reduce using rule 243 (prime_bool_exp)

<<<<<<< HEAD


state 139

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 240)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    extend_for_statement  ->  FOR OPEN_PAR . for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 342)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    STRUCT	shift, and go to state 225
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    INTDECLARATION	shift, and go to state 226
    CHARDECLARATION	shift, and go to state 227
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 229
    OPEN_PAR	shift, and go to state 289
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 231
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 140
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

<<<<<<< HEAD
    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 290
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    bool_exp	go to state 291
    prime_bool_exp	go to state 143
    identifier	go to state 238
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239



state 140

    bool_exp  ->  NEGATION . bool_exp   (rule 237)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 139
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 140
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96
=======
    $default	reduce using rule 345 (for_sta_init)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 292
    prime_bool_exp	go to state 143
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 141

<<<<<<< HEAD
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 241)
    prime_bool_exp  ->  ari_exp .   (rule 244)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 245)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 246)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 249)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 250)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 253)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 254)
=======
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    for_statement  ->  FOR ari_exp . TIMES DO statement_bpar   (rule 341)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    NE  	shift, and go to state 293
    EQ  	shift, and go to state 294
    GE  	shift, and go to state 256
    LE  	shift, and go to state 257
    GT  	shift, and go to state 258
    LT  	shift, and go to state 259
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 244 (prime_bool_exp)

    ari_operator	go to state 250
    relation_operator	go to state 295



<<<<<<< HEAD
state 142
=======
    bool_par  ->  error . CLOSE_PAR   (rule 323)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 350)

    THEN	shift, and go to state 296
    OR  	shift, and go to state 297
    AND 	shift, and go to state 298



<<<<<<< HEAD
state 143

    bool_exp  ->  prime_bool_exp .   (rule 236)

    $default	reduce using rule 236 (bool_exp)



state 144

    prime_bool_exp  ->  strliteral . EQ ari_exp   (rule 247)
    prime_bool_exp  ->  strliteral . NE ari_exp   (rule 248)

    NE  	shift, and go to state 299
    EQ  	shift, and go to state 300



state 145

    statement  ->  AWAIT OPEN_PAR . bool_exp CLOSE_PAR   (rule 44)
=======
    bool_par  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 322)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 139
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 140
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 301
    prime_bool_exp	go to state 143
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 146

<<<<<<< HEAD
    struct_identifier  ->  STRUCT ID .   (rule 75)
    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 82)
=======
    while_statement  ->  WHILE bool_par . statement_bpar   (rule 340)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 200
    ID  	shift, and go to state 201

    $default	reduce using rule 75 (struct_identifier)

    option_identifier_array_declaration	go to state 302
    identifier	go to state 203



state 147

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 84)

    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 200
    ID  	shift, and go to state 201

    option_identifier_array_declaration	go to state 303
    identifier	go to state 203



state 148

    struct_identifier  ->  UNION ID .   (rule 76)
    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 83)

    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 200
    ID  	shift, and go to state 201

    $default	reduce using rule 76 (struct_identifier)

    option_identifier_array_declaration	go to state 304
    identifier	go to state 203



state 149

    declaration  ->  UNION STRUCT_TYPE . option_identifier_array_declaration   (rule 85)

    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 200
    ID  	shift, and go to state 201

    option_identifier_array_declaration	go to state 305
    identifier	go to state 203



state 150

    statement  ->  DEFINE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    OPEN_PAR	shift, and go to state 306



state 151

    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)

    OPEN_PAR	shift, and go to state 151
    ID  	shift, and go to state 152

    identifier	go to state 307



state 152

    identifier  ->  ID .   (rule 318)

    $default	reduce using rule 318 (identifier)



state 153

    statement  ->  EXIST identifier . inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 64)

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 309



state 154

    statement  ->  FRAME OPEN_PAR . identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    OPEN_PAR	shift, and go to state 151
    ID  	shift, and go to state 152

    identifier	go to state 310



state 155

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    extend_for_statement  ->  FOR OPEN_PAR . for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 336)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 311
    UNION	shift, and go to state 180
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 312
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 313
    VOIDDECLARATION	shift, and go to state 314
    FLOATDECLARATION	shift, and go to state 315
    OPEN_PAR	shift, and go to state 316
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 231
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEXT	shift, and go to state 190
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 317
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    $default	reduce using rule 339 (for_sta_init)

    function	go to state 97
    declaration	go to state 318
    type_define	go to state 68
    ass_statement	go to state 319
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 169
    point_exp	go to state 170
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 173
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    for_sta_init	go to state 320
    struct_member_exp	go to state 175



state 156

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    for_statement  ->  FOR ari_exp . TIMES DO statement_bpar   (rule 335)

    TIMES	shift, and go to state 321
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    ari_operator	go to state 250



state 157

    bool_par  ->  error . CLOSE_PAR   (rule 317)

    CLOSE_PAR	shift, and go to state 322



state 158

    bool_par  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 316)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 139
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
<<<<<<< HEAD
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 298
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 148

    while_statement  ->  WHILE bool_par . statement_bpar   (rule 333)

    error	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300

    statement_bpar	go to state 301



state 149
=======
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 140
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 323
    prime_bool_exp	go to state 143
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 159

    while_statement  ->  WHILE bool_par . statement_bpar   (rule 334)

    error	shift, and go to state 324
    OPEN_BPAR	shift, and go to state 325

    statement_bpar	go to state 326



state 160
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  REPEAT OPEN_BPAR . statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

<<<<<<< HEAD
    statement	go to state 302
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 150

    output_statement  ->  DISPLAY OPEN_PAR . ass_right CLOSE_PAR   (rule 352)
    output_statement  ->  DISPLAY OPEN_PAR . ass_right option_output CLOSE_PAR   (rule 353)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 307
    rightaddrshift	go to state 308
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 151

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 160)
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 349)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
=======
    statement	go to state 327
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 161

<<<<<<< HEAD
    output_statement  ->  DISPLAY OPEN_PAR . ass_right CLOSE_PAR   (rule 353)
    output_statement  ->  DISPLAY OPEN_PAR . ass_right option_output CLOSE_PAR   (rule 354)
=======
    output_statement  ->  DISPLAY OPEN_PAR . ass_right CLOSE_PAR   (rule 359)
    output_statement  ->  DISPLAY OPEN_PAR . ass_right option_output CLOSE_PAR   (rule 360)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 124
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 127
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    ass_right	go to state 328
    rightaddrshift	go to state 130
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 132
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    strliteral	go to state 135
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 162

<<<<<<< HEAD
    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 161)
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 350)
=======
    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 166)
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 356)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 139
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
<<<<<<< HEAD
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 314
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 152

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 65)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 115)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 332)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 151
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 315
=======
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 140
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 329
    prime_bool_exp	go to state 143
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 163

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 65)
<<<<<<< HEAD
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 333)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)
=======
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 339)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 162
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 136
    STRUCT	shift, and go to state 330
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
<<<<<<< HEAD
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
=======
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 316
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 317
    VOIDDECLARATION	shift, and go to state 289
    FLOATDECLARATION	shift, and go to state 318
    OPEN_PAR	shift, and go to state 152
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 319
    SIGNED	shift, and go to state 320
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 153
    BNE 	shift, and go to state 92
    NEXT	shift, and go to state 53
    NEGATION	shift, and go to state 154
=======
    INTDECLARATION	shift, and go to state 331
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 332
    VOIDDECLARATION	shift, and go to state 314
    FLOATDECLARATION	shift, and go to state 333
    OPEN_PAR	shift, and go to state 163
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 334
    SIGNED	shift, and go to state 335
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 164
    BNE 	shift, and go to state 93
    NEXT	shift, and go to state 53
    NEGATION	shift, and go to state 165
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
<<<<<<< HEAD
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 292
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    statement	go to state 155
    function	go to state 156
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 157
    leftaddrshift	go to state 70
    array	go to state 158
    point_exp	go to state 159
    ari_exp	go to state 265
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 162
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 321
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 164



state 153

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    point_exp  ->  MUL . identifier   (rule 150)
    point_exp  ->  MUL . point_exp   (rule 151)
    point_exp  ->  MUL . array   (rule 152)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 154)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 155)

    OPEN_PAR	shift, and go to state 173
    MUL 	shift, and go to state 322
    ID  	shift, and go to state 323

    array	go to state 175
    point_exp	go to state 176
    identifier	go to state 324



state 154

    imply_pre  ->  NEGATION . imply_pre   (rule 329)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 325
=======
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 317
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    statement	go to state 166
    function_define	go to state 62
    function	go to state 167
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 168
    leftaddrshift	go to state 71
    array	go to state 169
    point_exp	go to state 170
    ari_exp	go to state 290
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    prime_bool_exp	go to state 172
    identifier	go to state 173
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    imply_pre	go to state 336
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 175



state 164

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    point_exp  ->  MUL . identifier   (rule 151)
    point_exp  ->  MUL . point_exp   (rule 152)
    point_exp  ->  MUL . array   (rule 153)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 155)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 156)

    OPEN_PAR	shift, and go to state 184
    MUL 	shift, and go to state 337
    ID  	shift, and go to state 338

    array	go to state 186
    point_exp	go to state 187
    identifier	go to state 339



state 165

<<<<<<< HEAD
    imply_pre  ->  NEGATION . imply_pre   (rule 330)
=======
    imply_pre  ->  NEGATION . imply_pre   (rule 336)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 340
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
<<<<<<< HEAD
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 154
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 326
    struct_member_exp	go to state 108



state 155
=======
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 165
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    prime_bool_exp	go to state 172
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    imply_pre	go to state 341
    struct_member_exp	go to state 109



state 166
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_PAR statement . CLOSE_PAR   (rule 65)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 327
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196



state 156

    statement  ->  function .   (rule 63)
    member_in_exp  ->  function .   (rule 175)

    CLOSE_PAR	reduce using rule 63 (statement)
    CLOSE_PAR	[reduce using rule 175 (member_in_exp)]
    CHOP	reduce using rule 63 (statement)
    OR  	reduce using rule 63 (statement)
    OR  	[reduce using rule 175 (member_in_exp)]
    PARALLEL	reduce using rule 63 (statement)
    AND 	reduce using rule 63 (statement)
    AND 	[reduce using rule 175 (member_in_exp)]
    $default	reduce using rule 175 (member_in_exp)



state 157

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 110)
    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 115)

    CLOSE_PAR	shift, and go to state 328
    ASS_P	shift, and go to state 199
    ASS_N	shift, and go to state 200

    assign_operator	go to state 201



state 158

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    ass_left  ->  array .   (rule 113)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 146)
    member_in_exp  ->  array .   (rule 173)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 202
    OPEN_PAR	shift, and go to state 203
    CLOSE_PAR	shift, and go to state 329
    IMPLY	shift, and go to state 204

    CLOSE_PAR	[reduce using rule 113 (ass_left)]
    CLOSE_PAR	[reduce using rule 173 (member_in_exp)]
    ASS_P	reduce using rule 113 (ass_left)
    ASS_N	reduce using rule 113 (ass_left)
    $default	reduce using rule 173 (member_in_exp)



state 159

    ass_left  ->  point_exp .   (rule 114)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 156)
    member_in_exp  ->  point_exp .   (rule 174)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 379)

    DOT 	shift, and go to state 205
    CLOSE_PAR	shift, and go to state 330
    IMPLY	shift, and go to state 206

    CLOSE_PAR	[reduce using rule 114 (ass_left)]
    CLOSE_PAR	[reduce using rule 174 (member_in_exp)]
    ASS_P	reduce using rule 114 (ass_left)
    ASS_N	reduce using rule 114 (ass_left)
    $default	reduce using rule 174 (member_in_exp)
=======
    CLOSE_PAR	shift, and go to state 342
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207



state 167

    statement  ->  function .   (rule 63)
    member_in_exp  ->  function .   (rule 176)

    CLOSE_PAR	reduce using rule 63 (statement)
    CLOSE_PAR	[reduce using rule 176 (member_in_exp)]
    CHOP	reduce using rule 63 (statement)
    OR  	reduce using rule 63 (statement)
    OR  	[reduce using rule 176 (member_in_exp)]
    PARALLEL	reduce using rule 63 (statement)
    AND 	reduce using rule 63 (statement)
    AND 	[reduce using rule 176 (member_in_exp)]
    $default	reduce using rule 176 (member_in_exp)



state 168

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 111)
    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 116)

    CLOSE_PAR	shift, and go to state 343
    ASS_P	shift, and go to state 210
    ASS_N	shift, and go to state 211

    assign_operator	go to state 212



state 169

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    ass_left  ->  array .   (rule 114)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 147)
    member_in_exp  ->  array .   (rule 174)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 376)

    DOT 	shift, and go to state 213
    OPEN_PAR	shift, and go to state 214
    CLOSE_PAR	shift, and go to state 344
    IMPLY	shift, and go to state 215

    CLOSE_PAR	[reduce using rule 114 (ass_left)]
    CLOSE_PAR	[reduce using rule 174 (member_in_exp)]
    ASS_P	reduce using rule 114 (ass_left)
    ASS_N	reduce using rule 114 (ass_left)
    $default	reduce using rule 174 (member_in_exp)
=======
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    ass_left  ->  array .   (rule 119)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 152)
    member_in_exp  ->  array .   (rule 179)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 382)

    DOT 	shift, and go to state 207
    OPEN_PAR	shift, and go to state 208
    CLOSE_PAR	shift, and go to state 334
    IMPLY	shift, and go to state 209

    CLOSE_PAR	[reduce using rule 119 (ass_left)]
    CLOSE_PAR	[reduce using rule 179 (member_in_exp)]
    ASS_P	reduce using rule 119 (ass_left)
    ASS_N	reduce using rule 119 (ass_left)
    $default	reduce using rule 179 (member_in_exp)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 170

<<<<<<< HEAD
    member_in_exp  ->  address_exp .   (rule 178)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
=======
<<<<<<< HEAD
    ass_left  ->  point_exp .   (rule 115)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 157)
    member_in_exp  ->  point_exp .   (rule 175)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 380)

    DOT 	shift, and go to state 216
    CLOSE_PAR	shift, and go to state 345
    IMPLY	shift, and go to state 217

    CLOSE_PAR	[reduce using rule 115 (ass_left)]
    CLOSE_PAR	[reduce using rule 175 (member_in_exp)]
    ASS_P	reduce using rule 115 (ass_left)
    ASS_N	reduce using rule 115 (ass_left)
    $default	reduce using rule 175 (member_in_exp)
=======
    ass_left  ->  point_exp .   (rule 120)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 162)
    member_in_exp  ->  point_exp .   (rule 180)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 386)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_PAR	shift, and go to state 331

<<<<<<< HEAD
    CLOSE_PAR	[reduce using rule 178 (member_in_exp)]
    $default	reduce using rule 178 (member_in_exp)
=======
    CLOSE_PAR	[reduce using rule 120 (ass_left)]
    CLOSE_PAR	[reduce using rule 180 (member_in_exp)]
    ASS_P	reduce using rule 120 (ass_left)
    ASS_N	reduce using rule 120 (ass_left)
    $default	reduce using rule 180 (member_in_exp)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 171

<<<<<<< HEAD
    imply_pre  ->  prime_bool_exp .   (rule 328)

    $default	reduce using rule 328 (imply_pre)
=======
<<<<<<< HEAD
    member_in_exp  ->  address_exp .   (rule 179)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
=======
    member_in_exp  ->  address_exp .   (rule 184)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    CLOSE_PAR	shift, and go to state 346

    CLOSE_PAR	[reduce using rule 179 (member_in_exp)]
    $default	reduce using rule 179 (member_in_exp)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 172

<<<<<<< HEAD
    imply_pre  ->  prime_bool_exp .   (rule 329)

<<<<<<< HEAD
    ass_left  ->  identifier .   (rule 111)
    member_in_exp  ->  identifier .   (rule 172)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 318)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . DOT function   (rule 377)
    struct_member_exp  ->  identifier . IMPLY function   (rule 378)
=======
    $default	reduce using rule 329 (imply_pre)
=======
    imply_pre  ->  prime_bool_exp .   (rule 335)

    $default	reduce using rule 335 (imply_pre)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    DOT 	shift, and go to state 207
    CLOSE_PAR	shift, and go to state 332
    IMPLY	shift, and go to state 208

<<<<<<< HEAD
    CLOSE_PAR	[reduce using rule 111 (ass_left)]
    CLOSE_PAR	[reduce using rule 172 (member_in_exp)]
    ASS_P	reduce using rule 111 (ass_left)
    ASS_N	reduce using rule 111 (ass_left)
    $default	reduce using rule 172 (member_in_exp)



state 163

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 330)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 331)

    CLOSE_PAR	shift, and go to state 333
    OR  	shift, and go to state 334
    AND 	shift, and go to state 335



state 164

    ass_left  ->  struct_member_exp .   (rule 112)
    member_in_exp  ->  struct_member_exp .   (rule 180)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 380)

    CLOSE_PAR	shift, and go to state 336

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    CLOSE_PAR	[reduce using rule 180 (member_in_exp)]
    ASS_P	reduce using rule 112 (ass_left)
    ASS_N	reduce using rule 112 (ass_left)
    $default	reduce using rule 180 (member_in_exp)



state 165
=======
state 173

<<<<<<< HEAD
    ass_left  ->  identifier .   (rule 112)
    member_in_exp  ->  identifier .   (rule 173)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 319)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . DOT function   (rule 378)
    struct_member_exp  ->  identifier . IMPLY function   (rule 379)

    DOT 	shift, and go to state 218
    CLOSE_PAR	shift, and go to state 347
    IMPLY	shift, and go to state 219

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    CLOSE_PAR	[reduce using rule 173 (member_in_exp)]
    ASS_P	reduce using rule 112 (ass_left)
    ASS_N	reduce using rule 112 (ass_left)
    $default	reduce using rule 173 (member_in_exp)
=======
    ass_left  ->  identifier .   (rule 117)
    member_in_exp  ->  identifier .   (rule 178)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 325)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 381)
    struct_member_exp  ->  identifier . DOT function   (rule 384)
    struct_member_exp  ->  identifier . IMPLY function   (rule 385)

    DOT 	shift, and go to state 212
    CLOSE_PAR	shift, and go to state 337
    IMPLY	shift, and go to state 213

    CLOSE_PAR	[reduce using rule 117 (ass_left)]
    CLOSE_PAR	[reduce using rule 178 (member_in_exp)]
    ASS_P	reduce using rule 117 (ass_left)
    ASS_N	reduce using rule 117 (ass_left)
    $default	reduce using rule 178 (member_in_exp)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 174

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
<<<<<<< HEAD
    imply_pre  ->  imply_pre . AND imply_pre   (rule 331)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 332)
=======
    imply_pre  ->  imply_pre . AND imply_pre   (rule 337)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 338)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    CLOSE_PAR	shift, and go to state 348
    OR  	shift, and go to state 349
    AND 	shift, and go to state 350



state 175

<<<<<<< HEAD
    ass_left  ->  struct_member_exp .   (rule 113)
    member_in_exp  ->  struct_member_exp .   (rule 181)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 381)
=======
    ass_left  ->  struct_member_exp .   (rule 118)
    member_in_exp  ->  struct_member_exp .   (rule 186)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 387)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    CLOSE_PAR	shift, and go to state 351

    CLOSE_PAR	[reduce using rule 113 (ass_left)]
    CLOSE_PAR	[reduce using rule 181 (member_in_exp)]
    ASS_P	reduce using rule 113 (ass_left)
    ASS_N	reduce using rule 113 (ass_left)
    $default	reduce using rule 181 (member_in_exp)



state 176
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_BPAR statement . option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 58)
    statement  ->  OPEN_BPAR statement . CLOSE_BPAR PROJECTION statement_bpar   (rule 59)

<<<<<<< HEAD
    COMMA	shift, and go to state 337
    CLOSE_BPAR	shift, and go to state 338
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196
=======
<<<<<<< HEAD
    COMMA	shift, and go to state 352
    CLOSE_BPAR	shift, and go to state 353
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207
=======
    COMMA	shift, and go to state 342
    CLOSE_BPAR	shift, and go to state 343
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_BPAR	[reduce using rule 326 (option_projection)]
    $default	reduce using rule 326 (option_projection)

    option_projection	go to state 339



state 166

    statement  ->  FUNCTION ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 60)

    OPEN_PAR	shift, and go to state 340



state 167

    function  ->  EXTERN ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)

    OPEN_PAR	shift, and go to state 341



state 168

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 81)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 83)

    ID  	shift, and go to state 342
    STRUCT_TYPE	shift, and go to state 136



state 169

    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 82)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 84)

<<<<<<< HEAD
    ID  	shift, and go to state 343
    STRUCT_TYPE	shift, and go to state 138
=======
    $default	reduce using rule 269 (all_type_define)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_BPAR	[reduce using rule 327 (option_projection)]
    $default	reduce using rule 327 (option_projection)

    option_projection	go to state 354

<<<<<<< HEAD
state 170

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)

    MUL 	shift, and go to state 344
=======
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 177

<<<<<<< HEAD
state 171

    sign_declaration  ->  UNSIGNED declaration .   (rule 77)

    $default	reduce using rule 77 (sign_declaration)
=======
    function_define  ->  FUNCTION ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    OPEN_PAR	shift, and go to state 355
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 178

<<<<<<< HEAD
    sign_declaration  ->  SIGNED declaration .   (rule 76)

    $default	reduce using rule 76 (sign_declaration)
=======
    function  ->  EXTERN ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)

    OPEN_PAR	shift, and go to state 356
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 179

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 154)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 155)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
=======
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 82)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 84)

    ID  	shift, and go to state 357
    STRUCT_TYPE	shift, and go to state 147



state 180

    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 83)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 85)

    ID  	shift, and go to state 358
    STRUCT_TYPE	shift, and go to state 149



state 181

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)

    MUL 	shift, and go to state 359



state 182

    sign_declaration  ->  UNSIGNED declaration .   (rule 78)

    $default	reduce using rule 78 (sign_declaration)



state 183

    sign_declaration  ->  SIGNED declaration .   (rule 77)

    $default	reduce using rule 77 (sign_declaration)



state 184

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 155)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 160)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 161)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 219
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 345
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
=======
    OPEN_PAR	shift, and go to state 230
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 360
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    type_define	go to state 346
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 347
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    sign_type_define	go to state 348
    all_type_define	go to state 349
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 174

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    identifier  ->  ID .   (rule 317)

    OPEN_MPAR	shift, and go to state 188

    $default	reduce using rule 317 (identifier)



state 175

    point_exp  ->  MUL array .   (rule 152)

    $default	reduce using rule 152 (point_exp)



state 176

    point_exp  ->  MUL point_exp .   (rule 151)

    $default	reduce using rule 151 (point_exp)



state 177

    point_exp  ->  MUL identifier .   (rule 150)

    $default	reduce using rule 150 (point_exp)



state 178

    statement  ->  NEXT OPEN_PAR . statement CLOSE_PAR   (rule 41)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 115)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    type_define	go to state 361
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 362
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    sign_type_define	go to state 363
    all_type_define	go to state 364
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 185

<<<<<<< HEAD
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    identifier  ->  ID .   (rule 318)
=======
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    identifier  ->  ID .   (rule 324)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    OPEN_MPAR	shift, and go to state 199

<<<<<<< HEAD
    $default	reduce using rule 318 (identifier)
=======
    $default	reduce using rule 324 (identifier)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 186

    point_exp  ->  MUL array .   (rule 153)

    $default	reduce using rule 153 (point_exp)



state 187

    point_exp  ->  MUL point_exp .   (rule 152)

    $default	reduce using rule 152 (point_exp)



state 188

    point_exp  ->  MUL identifier .   (rule 151)

    $default	reduce using rule 151 (point_exp)



state 189

    statement  ->  NEXT OPEN_PAR . statement CLOSE_PAR   (rule 41)
<<<<<<< HEAD
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)
=======
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 350
=======
    OPEN_PAR	shift, and go to state 365
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

<<<<<<< HEAD
    statement	go to state 351
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 157
    leftaddrshift	go to state 70
    array	go to state 352
    point_exp	go to state 353
    address_exp	go to state 354
    identifier	go to state 355
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 356



state 179

    ass_left  ->  NEXT . ass_left   (rule 116)

    OPEN_PAR	shift, and go to state 357
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 179
    ID  	shift, and go to state 174

    ass_left	go to state 180
    leftaddrshift	go to state 70
    array	go to state 181
    point_exp	go to state 72
    identifier	go to state 73
    struct_member_exp	go to state 81



state 180

    ass_left  ->  NEXT ass_left .   (rule 116)

    $default	reduce using rule 116 (ass_left)



state 181

    ass_left  ->  array .   (rule 113)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 202
    IMPLY	shift, and go to state 204

    $default	reduce using rule 113 (ass_left)



state 182
=======
    statement	go to state 366
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 168
    leftaddrshift	go to state 71
    array	go to state 367
    point_exp	go to state 368
    address_exp	go to state 369
    identifier	go to state 370
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 371



state 190

    ass_left  ->  NEXT . ass_left   (rule 117)

    OPEN_PAR	shift, and go to state 372
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 190
    ID  	shift, and go to state 185

    ass_left	go to state 191
    leftaddrshift	go to state 71
    array	go to state 192
    point_exp	go to state 73
    identifier	go to state 74
    struct_member_exp	go to state 82



state 191

    ass_left  ->  NEXT ass_left .   (rule 117)

    $default	reduce using rule 117 (ass_left)



state 192

<<<<<<< HEAD
    ass_left  ->  array .   (rule 114)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 376)
=======
    ass_left  ->  array .   (rule 119)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 382)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    DOT 	shift, and go to state 213
    IMPLY	shift, and go to state 215

    $default	reduce using rule 114 (ass_left)



state 193
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  LENGTH OPEN_PAR . ari_exp CLOSE_PAR   (rule 49)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 358
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 183

    input_statement  ->  REQUEST OPEN_PAR . identifier CLOSE_PAR   (rule 356)
    input_statement  ->  REQUEST OPEN_PAR . identifier option_input CLOSE_PAR   (rule 357)
    input_statement  ->  REQUEST OPEN_PAR . array CLOSE_PAR   (rule 358)
    input_statement  ->  REQUEST OPEN_PAR . array option_input CLOSE_PAR   (rule 359)
    input_statement  ->  REQUEST OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 360)

    OPEN_PAR	shift, and go to state 359
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 174

    array	go to state 360
    point_exp	go to state 231
    identifier	go to state 361
    struct_member_exp	go to state 362



state 184
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 373
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 194

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR . identifier CLOSE_PAR   (rule 357)
    input_statement  ->  REQUEST OPEN_PAR . identifier option_input CLOSE_PAR   (rule 358)
    input_statement  ->  REQUEST OPEN_PAR . array CLOSE_PAR   (rule 359)
    input_statement  ->  REQUEST OPEN_PAR . array option_input CLOSE_PAR   (rule 360)
    input_statement  ->  REQUEST OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 361)
=======
    input_statement  ->  REQUEST OPEN_PAR . identifier CLOSE_PAR   (rule 363)
    input_statement  ->  REQUEST OPEN_PAR . identifier option_input CLOSE_PAR   (rule 364)
    input_statement  ->  REQUEST OPEN_PAR . array CLOSE_PAR   (rule 365)
    input_statement  ->  REQUEST OPEN_PAR . array option_input CLOSE_PAR   (rule 366)
    input_statement  ->  REQUEST OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 367)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    OPEN_PAR	shift, and go to state 374
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 185

    array	go to state 375
    point_exp	go to state 242
    identifier	go to state 376
    struct_member_exp	go to state 377



state 195
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  FINAL OPEN_PAR . statement CLOSE_PAR   (rule 54)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

<<<<<<< HEAD
    statement	go to state 363
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 185
=======
    statement	go to state 378
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 196
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  KEEP OPEN_PAR . statement CLOSE_PAR   (rule 42)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

<<<<<<< HEAD
    statement	go to state 364
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 186
=======
    statement	go to state 379
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 197
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  ALWAYS OPEN_PAR . statement CLOSE_PAR   (rule 43)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

<<<<<<< HEAD
    statement	go to state 365
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 187

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 70)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
=======
    statement	go to state 380
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 198

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 71)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 124
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 381
=======
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
<<<<<<< HEAD
    UNSIGNED	shift, and go to state 345
    ADDRESS	shift, and go to state 366
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    $default	reduce using rule 307 (option_function_identifier)

    function	go to state 96
    type_define	go to state 346
    ass_right	go to state 367
    rightaddrshift	go to state 308
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    sign_type_define	go to state 348
    all_type_define	go to state 368
    option_function_identifier	go to state 369
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 188

    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
=======
    UNSIGNED	shift, and go to state 168
    ADDRESS	shift, and go to state 372
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 127
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 382
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

<<<<<<< HEAD
    $default	reduce using rule 308 (option_function_identifier)

    function	go to state 97
    ass_right	go to state 383
    rightaddrshift	go to state 130
=======
    $default	reduce using rule 314 (option_function_identifier)

    function	go to state 97
    type_define	go to state 169
    ass_right	go to state 374
    rightaddrshift	go to state 313
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 132
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
<<<<<<< HEAD
    option_function_identifier	go to state 384
=======
    sign_type_define	go to state 170
    all_type_define	go to state 375
    option_function_identifier	go to state 376
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    identifier	go to state 105
    strliteral	go to state 135
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 199

    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 370
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 189

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 102)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 189
    ID  	shift, and go to state 190

    option_identifier_array_declaration	go to state 371
    identifier	go to state 192



state 190

    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 96)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 98)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 101)
    identifier  ->  ID .   (rule 317)
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 385
=======
    ari_exp	go to state 377
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 200

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 103)

    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 200
    ID  	shift, and go to state 201

<<<<<<< HEAD
    option_identifier_array_declaration	go to state 386
    identifier	go to state 203
=======
    option_identifier_array_declaration	go to state 378
    identifier	go to state 197
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 201

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 102)
    identifier  ->  ID .   (rule 318)

    ARRAY	shift, and go to state 387
    OPEN_MPAR	shift, and go to state 388

    $default	reduce using rule 318 (identifier)
=======
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 105)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 106)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 107)
    identifier  ->  ID .   (rule 324)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    ARRAY	shift, and go to state 372
    OPEN_MPAR	shift, and go to state 373

<<<<<<< HEAD
    $default	reduce using rule 317 (identifier)



state 191

    declaration  ->  STRUCT_TYPE option_identifier_array_declaration .   (rule 80)

    $default	reduce using rule 80 (declaration)



state 192

    option_identifier_array_declaration  ->  identifier . inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  identifier . ASS_P ass_right inner_option_identifier_array_declaration   (rule 97)

    COMMA	shift, and go to state 374
    ASS_P	shift, and go to state 375

    COMMA	[reduce using rule 105 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 105 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 376



state 193
=======
    $default	reduce using rule 324 (identifier)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 202

    declaration  ->  STRUCT_TYPE option_identifier_array_declaration .   (rule 81)

    $default	reduce using rule 81 (declaration)



state 203

    option_identifier_array_declaration  ->  identifier . inner_option_identifier_array_declaration   (rule 96)
    option_identifier_array_declaration  ->  identifier . ASS_P ass_right inner_option_identifier_array_declaration   (rule 98)

<<<<<<< HEAD
    COMMA	shift, and go to state 389
    ASS_P	shift, and go to state 390
=======
    COMMA	shift, and go to state 381
    ASS_P	shift, and go to state 382
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)

<<<<<<< HEAD
    inner_option_identifier_array_declaration	go to state 391
=======
    inner_option_identifier_array_declaration	go to state 383
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 204
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  statement CHOP . statement   (rule 32)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

<<<<<<< HEAD
    statement	go to state 377
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 194
=======
<<<<<<< HEAD
    statement	go to state 392
=======
    statement	go to state 384
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 205
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  statement OR . statement   (rule 31)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

<<<<<<< HEAD
    statement	go to state 378
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 195
=======
<<<<<<< HEAD
    statement	go to state 393
=======
    statement	go to state 385
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 206
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  statement PARALLEL . statement   (rule 55)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

<<<<<<< HEAD
    statement	go to state 379
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 196
=======
<<<<<<< HEAD
    statement	go to state 394
=======
    statement	go to state 386
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 207
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  statement AND . statement   (rule 30)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

<<<<<<< HEAD
    statement	go to state 380
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 197

    struct_define_statement  ->  struct_identifier OPEN_BPAR . option_struct_declaration CLOSE_BPAR   (rule 73)

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
=======
<<<<<<< HEAD
    statement	go to state 395
=======
    statement	go to state 387
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 208

    struct_define_statement  ->  struct_identifier OPEN_BPAR . option_struct_declaration CLOSE_BPAR   (rule 74)

    STRUCT	shift, and go to state 179
    UNION	shift, and go to state 180
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 170
=======
    OPEN_PAR	shift, and go to state 181
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    STRUCT_TYPE	shift, and go to state 60

<<<<<<< HEAD
    option_struct_declaration	go to state 381
    sign_declaration	go to state 382
    declaration	go to state 66
    type_define	go to state 67



state 198

    declaration  ->  type_define option_identifier_array_declaration .   (rule 79)

    $default	reduce using rule 79 (declaration)



state 199

    assign_operator  ->  ASS_P .   (rule 131)

    $default	reduce using rule 131 (assign_operator)



state 200

    assign_operator  ->  ASS_N .   (rule 132)

    $default	reduce using rule 132 (assign_operator)



state 201

    ass_statement  ->  ass_left assign_operator . ass_right   (rule 110)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 383
    rightaddrshift	go to state 308
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 202

    struct_member_exp  ->  array DOT . identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  array DOT . array option_struct_member_exp   (rule 368)
=======
<<<<<<< HEAD
    option_struct_declaration	go to state 396
    sign_declaration	go to state 397
=======
    option_struct_declaration	go to state 388
    sign_declaration	go to state 389
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    declaration	go to state 67
    type_define	go to state 68



state 209

    declaration  ->  type_define option_identifier_array_declaration .   (rule 80)

    $default	reduce using rule 80 (declaration)



state 210

    assign_operator  ->  ASS_P .   (rule 132)

    $default	reduce using rule 132 (assign_operator)



state 211

    assign_operator  ->  ASS_N .   (rule 133)

    $default	reduce using rule 133 (assign_operator)



state 212

    ass_statement  ->  ass_left assign_operator . ass_right   (rule 111)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 124
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 127
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
<<<<<<< HEAD
    ass_right	go to state 398
    rightaddrshift	go to state 130
=======
    ass_right	go to state 390
    rightaddrshift	go to state 313
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 132
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    strliteral	go to state 135
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 213

<<<<<<< HEAD
    struct_member_exp  ->  array DOT . identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array DOT . array option_struct_member_exp   (rule 369)

    OPEN_PAR	shift, and go to state 399
    ID  	shift, and go to state 185

    array	go to state 400
    identifier	go to state 401
=======
    struct_member_exp  ->  array DOT . identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array DOT . array option_struct_member_exp   (rule 375)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    OPEN_PAR	shift, and go to state 384
    ID  	shift, and go to state 174

<<<<<<< HEAD
    array	go to state 385
    identifier	go to state 386



state 203

    function  ->  array OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 72)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
=======
    array	go to state 392
    identifier	go to state 393
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 214

    function  ->  array OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 73)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 124
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 381
=======
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
<<<<<<< HEAD
    UNSIGNED	shift, and go to state 345
    ADDRESS	shift, and go to state 366
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    $default	reduce using rule 307 (option_function_identifier)

    function	go to state 96
    type_define	go to state 346
    ass_right	go to state 367
    rightaddrshift	go to state 308
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    sign_type_define	go to state 348
    all_type_define	go to state 368
    option_function_identifier	go to state 387
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 204

    struct_member_exp  ->  array IMPLY . identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array IMPLY . array option_struct_member_exp   (rule 375)
=======
    UNSIGNED	shift, and go to state 168
    ADDRESS	shift, and go to state 372
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 127
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 382
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

<<<<<<< HEAD
    $default	reduce using rule 308 (option_function_identifier)

    function	go to state 97
    ass_right	go to state 383
    rightaddrshift	go to state 130
=======
    $default	reduce using rule 314 (option_function_identifier)

    function	go to state 97
    type_define	go to state 169
    ass_right	go to state 374
    rightaddrshift	go to state 313
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 132
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
<<<<<<< HEAD
    option_function_identifier	go to state 402
=======
    sign_type_define	go to state 170
    all_type_define	go to state 375
    option_function_identifier	go to state 394
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    identifier	go to state 105
    strliteral	go to state 135
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 215

<<<<<<< HEAD
    struct_member_exp  ->  array IMPLY . identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array IMPLY . array option_struct_member_exp   (rule 376)

    OPEN_PAR	shift, and go to state 399
    ID  	shift, and go to state 185

    array	go to state 403
    identifier	go to state 404
=======
    struct_member_exp  ->  array IMPLY . identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  array IMPLY . array option_struct_member_exp   (rule 382)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    OPEN_PAR	shift, and go to state 384
    ID  	shift, and go to state 174

<<<<<<< HEAD
    array	go to state 388
    identifier	go to state 389



state 205

    struct_member_exp  ->  point_exp DOT . identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  point_exp DOT . array option_struct_member_exp   (rule 369)
=======
    array	go to state 395
    identifier	go to state 396
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 216

<<<<<<< HEAD
    struct_member_exp  ->  point_exp DOT . identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  point_exp DOT . array option_struct_member_exp   (rule 370)

    OPEN_PAR	shift, and go to state 399
    ID  	shift, and go to state 185

    array	go to state 405
    identifier	go to state 406
=======
    struct_member_exp  ->  point_exp DOT . identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp DOT . array option_struct_member_exp   (rule 376)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    OPEN_PAR	shift, and go to state 384
    ID  	shift, and go to state 174

<<<<<<< HEAD
    array	go to state 390
    identifier	go to state 391



state 206

    struct_member_exp  ->  point_exp IMPLY . identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp IMPLY . array option_struct_member_exp   (rule 379)
=======
    array	go to state 397
    identifier	go to state 398
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 217

<<<<<<< HEAD
    struct_member_exp  ->  point_exp IMPLY . identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp IMPLY . array option_struct_member_exp   (rule 380)

    OPEN_PAR	shift, and go to state 399
    ID  	shift, and go to state 185

    array	go to state 407
    identifier	go to state 408
=======
    struct_member_exp  ->  point_exp IMPLY . identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  point_exp IMPLY . array option_struct_member_exp   (rule 386)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    OPEN_PAR	shift, and go to state 384
    ID  	shift, and go to state 174

<<<<<<< HEAD
    array	go to state 392
    identifier	go to state 393



state 207

    struct_member_exp  ->  identifier DOT . identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  identifier DOT . array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier DOT . function   (rule 377)
=======
    array	go to state 399
    identifier	go to state 400
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 218

<<<<<<< HEAD
    struct_member_exp  ->  identifier DOT . identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier DOT . array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  identifier DOT . function   (rule 378)

    OPEN_PAR	shift, and go to state 399
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59

    function	go to state 409
    array	go to state 410
    identifier	go to state 411
=======
    struct_member_exp  ->  identifier DOT . identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier DOT . array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier DOT . function   (rule 384)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    OPEN_PAR	shift, and go to state 384
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59

<<<<<<< HEAD
    function	go to state 394
    array	go to state 395
    identifier	go to state 396



state 208

    struct_member_exp  ->  identifier IMPLY . identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier IMPLY . array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier IMPLY . function   (rule 378)
=======
    function	go to state 401
    array	go to state 402
    identifier	go to state 403
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 219

<<<<<<< HEAD
    struct_member_exp  ->  identifier IMPLY . identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier IMPLY . array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier IMPLY . function   (rule 379)

    OPEN_PAR	shift, and go to state 399
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59

    function	go to state 412
    array	go to state 413
    identifier	go to state 414
=======
    struct_member_exp  ->  identifier IMPLY . identifier option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier IMPLY . array option_struct_member_exp   (rule 381)
    struct_member_exp  ->  identifier IMPLY . function   (rule 385)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    OPEN_PAR	shift, and go to state 384
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59

<<<<<<< HEAD
    function	go to state 397
    array	go to state 398
    identifier	go to state 399



state 209

    complexProposition  ->  DEFINE ID COLON . prime_bool_exp   (rule 25)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 89
=======
    function	go to state 404
    array	go to state 405
    identifier	go to state 406
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 220

    complexProposition  ->  DEFINE ID COLON . prime_bool_exp   (rule 25)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 90
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    prime_bool_exp	go to state 400
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 210
=======
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
<<<<<<< HEAD
    prime_bool_exp	go to state 415
=======
    prime_bool_exp	go to state 407
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 221
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    complexProposition  ->  OPEN_PAR complexProposition CLOSE_PAR .   (rule 27)

    $default	reduce using rule 27 (complexProposition)



<<<<<<< HEAD
state 211
=======
state 222
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    poptional_projection  ->  COMMA . complexProposition poptional_projection   (rule 28)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 401



state 212

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection . CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    CLOSE_BPAR	shift, and go to state 402



state 213

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 160)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 237)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 238)

    THEN	shift, and go to state 403
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273



state 214

    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)

    STRUCT_TYPE	shift, and go to state 404



state 215

    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 405
    MUL 	shift, and go to state 406



state 216

    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 408



state 217

    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    MUL 	shift, and go to state 409
=======
<<<<<<< HEAD
    complexProposition	go to state 416
=======
    complexProposition	go to state 408
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 223

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection . CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

<<<<<<< HEAD
    CLOSE_BPAR	shift, and go to state 417
=======
    CLOSE_BPAR	shift, and go to state 409
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 224

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 411
=======
    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 161)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)

<<<<<<< HEAD
    THEN	shift, and go to state 418
    OR  	shift, and go to state 297
    AND 	shift, and go to state 298
=======
    THEN	shift, and go to state 410
    OR  	shift, and go to state 277
    AND 	shift, and go to state 278
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 225

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 412
    CHARDECLARATION	shift, and go to state 413
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 219
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 415
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228
=======
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)

<<<<<<< HEAD
    STRUCT_TYPE	shift, and go to state 419
=======
    STRUCT_TYPE	shift, and go to state 411
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 226

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)

    INTDECLARATION	shift, and go to state 416
    CHARDECLARATION	shift, and go to state 417
=======
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 420
    MUL 	shift, and go to state 421
=======
    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 413
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 227

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)

    INTDECLARATION	shift, and go to state 418
    CHARDECLARATION	shift, and go to state 419
=======
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 422
    MUL 	shift, and go to state 423
=======
    CLOSE_PAR	shift, and go to state 414
    MUL 	shift, and go to state 415
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 228

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 233)

    MUL 	shift, and go to state 420
=======
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

<<<<<<< HEAD
    MUL 	shift, and go to state 424
=======
    MUL 	shift, and go to state 416
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 229

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 146)
    member_in_exp  ->  array .   (rule 173)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 202
    OPEN_PAR	shift, and go to state 203
    CLOSE_PAR	shift, and go to state 329
    IMPLY	shift, and go to state 204

    CLOSE_PAR	[reduce using rule 173 (member_in_exp)]
    $default	reduce using rule 173 (member_in_exp)
=======
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 425
    MUL 	shift, and go to state 426
=======
    CLOSE_PAR	shift, and go to state 417
    MUL 	shift, and go to state 418
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 230

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

<<<<<<< HEAD
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 156)
    member_in_exp  ->  point_exp .   (rule 174)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 379)

    DOT 	shift, and go to state 205
    CLOSE_PAR	shift, and go to state 330
    IMPLY	shift, and go to state 206

    CLOSE_PAR	[reduce using rule 174 (member_in_exp)]
    $default	reduce using rule 174 (member_in_exp)

=======
    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 427
    CHARDECLARATION	shift, and go to state 428
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 429
    OPEN_PAR	shift, and go to state 230
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 430
    SIGNED	shift, and go to state 232
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 219
    INTDECLARATION	shift, and go to state 419
    CHARDECLARATION	shift, and go to state 420
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 421
    OPEN_PAR	shift, and go to state 224
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 422
    SIGNED	shift, and go to state 226
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



<<<<<<< HEAD
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 176)

    CLOSE_PAR	shift, and go to state 421
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ari_operator	go to state 239
=======
state 231

    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 431
    CHARDECLARATION	shift, and go to state 432
=======
    INTDECLARATION	shift, and go to state 423
    CHARDECLARATION	shift, and go to state 424
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 232

<<<<<<< HEAD
    member_in_exp  ->  address_exp .   (rule 178)
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 210)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)

    CLOSE_PAR	shift, and go to state 422

    CLOSE_PAR	[reduce using rule 178 (member_in_exp)]
    $default	reduce using rule 178 (member_in_exp)
=======
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)

<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 433
    CHARDECLARATION	shift, and go to state 434
=======
    INTDECLARATION	shift, and go to state 425
    CHARDECLARATION	shift, and go to state 426
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 233

<<<<<<< HEAD
    member_in_exp  ->  identifier .   (rule 172)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 318)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . DOT function   (rule 377)
    struct_member_exp  ->  identifier . IMPLY function   (rule 378)

    DOT 	shift, and go to state 207
    CLOSE_PAR	shift, and go to state 332
    IMPLY	shift, and go to state 208

    CLOSE_PAR	[reduce using rule 172 (member_in_exp)]
    $default	reduce using rule 172 (member_in_exp)
=======
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 234)

<<<<<<< HEAD
    MUL 	shift, and go to state 435
=======
    MUL 	shift, and go to state 427
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 234

<<<<<<< HEAD
    member_in_exp  ->  struct_member_exp .   (rule 180)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 380)

    CLOSE_PAR	shift, and go to state 336

    CLOSE_PAR	[reduce using rule 180 (member_in_exp)]
    $default	reduce using rule 180 (member_in_exp)
=======
<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 147)
    member_in_exp  ->  array .   (rule 174)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 376)
=======
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 152)
    member_in_exp  ->  array .   (rule 179)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 382)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    DOT 	shift, and go to state 213
    OPEN_PAR	shift, and go to state 214
    CLOSE_PAR	shift, and go to state 344
    IMPLY	shift, and go to state 215

    CLOSE_PAR	[reduce using rule 174 (member_in_exp)]
    $default	reduce using rule 174 (member_in_exp)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 235

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    OPEN_PAR	shift, and go to state 423
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 174

    array	go to state 424
    point_exp	go to state 425
    address_exp	go to state 426
    identifier	go to state 427
    struct_member_exp	go to state 428
=======
<<<<<<< HEAD
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 157)
    member_in_exp  ->  point_exp .   (rule 175)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 380)
=======
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 162)
    member_in_exp  ->  point_exp .   (rule 180)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 386)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    DOT 	shift, and go to state 216
    CLOSE_PAR	shift, and go to state 345
    IMPLY	shift, and go to state 217

    CLOSE_PAR	[reduce using rule 175 (member_in_exp)]
    $default	reduce using rule 175 (member_in_exp)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 236

<<<<<<< HEAD
    address_exp  ->  ADDRESS array .   (rule 207)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 202

    DOT 	[reduce using rule 207 (address_exp)]
    $default	reduce using rule 207 (address_exp)
=======
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 177)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 436
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    CLOSE_PAR	shift, and go to state 428
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    ari_operator	go to state 250
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 237

<<<<<<< HEAD
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 379)

    DOT 	shift, and go to state 205
    IMPLY	shift, and go to state 206
=======
<<<<<<< HEAD
    member_in_exp  ->  address_exp .   (rule 179)
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 211)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)

    CLOSE_PAR	shift, and go to state 437
=======
    member_in_exp  ->  address_exp .   (rule 184)
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 216)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)

    CLOSE_PAR	shift, and go to state 429
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    CLOSE_PAR	[reduce using rule 179 (member_in_exp)]
    $default	reduce using rule 179 (member_in_exp)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 238

<<<<<<< HEAD
    address_exp  ->  ADDRESS address_exp .   (rule 209)

    $default	reduce using rule 209 (address_exp)
=======
<<<<<<< HEAD
    member_in_exp  ->  identifier .   (rule 173)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 319)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . DOT function   (rule 378)
    struct_member_exp  ->  identifier . IMPLY function   (rule 379)
=======
    member_in_exp  ->  identifier .   (rule 178)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 325)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 381)
    struct_member_exp  ->  identifier . DOT function   (rule 384)
    struct_member_exp  ->  identifier . IMPLY function   (rule 385)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    DOT 	shift, and go to state 218
    CLOSE_PAR	shift, and go to state 347
    IMPLY	shift, and go to state 219

    CLOSE_PAR	[reduce using rule 173 (member_in_exp)]
    $default	reduce using rule 173 (member_in_exp)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 239

<<<<<<< HEAD
    address_exp  ->  ADDRESS identifier .   (rule 206)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . DOT function   (rule 377)
    struct_member_exp  ->  identifier . IMPLY function   (rule 378)

    DOT 	shift, and go to state 207

    DOT 	[reduce using rule 206 (address_exp)]
    $default	reduce using rule 206 (address_exp)
=======
<<<<<<< HEAD
    member_in_exp  ->  struct_member_exp .   (rule 181)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 381)
=======
    member_in_exp  ->  struct_member_exp .   (rule 186)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 387)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    CLOSE_PAR	shift, and go to state 351

    CLOSE_PAR	[reduce using rule 181 (member_in_exp)]
    $default	reduce using rule 181 (member_in_exp)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 240

<<<<<<< HEAD
    address_exp  ->  ADDRESS struct_member_exp .   (rule 208)

    $default	reduce using rule 208 (address_exp)
=======
<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    OPEN_PAR	shift, and go to state 438
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    OPEN_PAR	shift, and go to state 430
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 185

<<<<<<< HEAD
    array	go to state 439
    point_exp	go to state 440
    address_exp	go to state 441
    identifier	go to state 442
    struct_member_exp	go to state 443
=======
    array	go to state 431
    point_exp	go to state 432
    address_exp	go to state 433
    identifier	go to state 434
    struct_member_exp	go to state 435
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 241

<<<<<<< HEAD
    member_in_exp  ->  SUB member_in_exp .   (rule 168)

    $default	reduce using rule 168 (member_in_exp)
=======
<<<<<<< HEAD
    address_exp  ->  ADDRESS array .   (rule 208)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 376)
=======
    address_exp  ->  ADDRESS array .   (rule 213)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 382)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    DOT 	shift, and go to state 213

    DOT 	[reduce using rule 208 (address_exp)]
    $default	reduce using rule 208 (address_exp)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 242

<<<<<<< HEAD
    member_in_exp  ->  BNE member_in_exp .   (rule 169)

    $default	reduce using rule 169 (member_in_exp)
=======
<<<<<<< HEAD
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 380)
=======
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 386)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    DOT 	shift, and go to state 216
    IMPLY	shift, and go to state 217
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 243

<<<<<<< HEAD
    ari_operator  ->  ADD .   (rule 189)

    $default	reduce using rule 189 (ari_operator)
=======
    address_exp  ->  ADDRESS address_exp .   (rule 210)

    $default	reduce using rule 210 (address_exp)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 244

<<<<<<< HEAD
    ari_operator  ->  SUB .   (rule 190)

    $default	reduce using rule 190 (ari_operator)
=======
<<<<<<< HEAD
    address_exp  ->  ADDRESS identifier .   (rule 207)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . DOT function   (rule 378)
    struct_member_exp  ->  identifier . IMPLY function   (rule 379)
=======
    address_exp  ->  ADDRESS identifier .   (rule 212)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 381)
    struct_member_exp  ->  identifier . DOT function   (rule 384)
    struct_member_exp  ->  identifier . IMPLY function   (rule 385)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    DOT 	shift, and go to state 218

    DOT 	[reduce using rule 207 (address_exp)]
    $default	reduce using rule 207 (address_exp)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 245

<<<<<<< HEAD
    ari_exp  ->  ari_exp ari_operator . simple_ari_exp   (rule 159)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    simple_ari_exp	go to state 429
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
=======
    address_exp  ->  ADDRESS struct_member_exp .   (rule 209)

    $default	reduce using rule 209 (address_exp)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 246

<<<<<<< HEAD
    bi_operator  ->  INTER_OR .   (rule 187)

    $default	reduce using rule 187 (bi_operator)
=======
    member_in_exp  ->  SUB member_in_exp .   (rule 169)

    $default	reduce using rule 169 (member_in_exp)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 247

<<<<<<< HEAD
    bi_operator  ->  CON .   (rule 188)

    $default	reduce using rule 188 (bi_operator)
=======
    member_in_exp  ->  BNE member_in_exp .   (rule 170)

    $default	reduce using rule 170 (member_in_exp)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 248

<<<<<<< HEAD
    bi_operator  ->  ADDRESS .   (rule 186)

    $default	reduce using rule 186 (bi_operator)
=======
    ari_operator  ->  ADD .   (rule 190)

    $default	reduce using rule 190 (ari_operator)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 249

<<<<<<< HEAD
    relation_operator  ->  NE .   (rule 256)

    $default	reduce using rule 256 (relation_operator)
=======
    ari_operator  ->  SUB .   (rule 191)

    $default	reduce using rule 191 (ari_operator)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 250

<<<<<<< HEAD
    relation_operator  ->  EQ .   (rule 259)

    $default	reduce using rule 259 (relation_operator)
=======
    ari_exp  ->  ari_exp ari_operator . simple_ari_exp   (rule 160)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    simple_ari_exp	go to state 444
=======
    simple_ari_exp	go to state 436
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 251

<<<<<<< HEAD
    relation_operator  ->  GE .   (rule 254)

    $default	reduce using rule 254 (relation_operator)
=======
    bi_operator  ->  INTER_OR .   (rule 188)

    $default	reduce using rule 188 (bi_operator)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 252

<<<<<<< HEAD
    relation_operator  ->  LE .   (rule 255)

    $default	reduce using rule 255 (relation_operator)
=======
    bi_operator  ->  CON .   (rule 189)

    $default	reduce using rule 189 (bi_operator)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 253

<<<<<<< HEAD
    relation_operator  ->  GT .   (rule 257)

    $default	reduce using rule 257 (relation_operator)
=======
    bi_operator  ->  ADDRESS .   (rule 187)

    $default	reduce using rule 187 (bi_operator)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 254

<<<<<<< HEAD
    relation_operator  ->  LT .   (rule 258)

    $default	reduce using rule 258 (relation_operator)
=======
    relation_operator  ->  NE .   (rule 257)

    $default	reduce using rule 257 (relation_operator)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 255

<<<<<<< HEAD
    bi_operator  ->  LST .   (rule 184)

    $default	reduce using rule 184 (bi_operator)
=======
    relation_operator  ->  EQ .   (rule 260)

    $default	reduce using rule 260 (relation_operator)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 256

<<<<<<< HEAD
    bi_operator  ->  RST .   (rule 185)

    $default	reduce using rule 185 (bi_operator)
=======
    relation_operator  ->  GE .   (rule 255)

    $default	reduce using rule 255 (relation_operator)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 257

<<<<<<< HEAD
    bi_operator  ->  MUL .   (rule 181)

    $default	reduce using rule 181 (bi_operator)
=======
    relation_operator  ->  LE .   (rule 256)

    $default	reduce using rule 256 (relation_operator)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 258

<<<<<<< HEAD
    bi_operator  ->  DIV .   (rule 182)

    $default	reduce using rule 182 (bi_operator)
=======
    relation_operator  ->  GT .   (rule 258)

    $default	reduce using rule 258 (relation_operator)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 259

<<<<<<< HEAD
    bi_operator  ->  MOD .   (rule 183)

    $default	reduce using rule 183 (bi_operator)
=======
    relation_operator  ->  LT .   (rule 259)

    $default	reduce using rule 259 (relation_operator)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 260

<<<<<<< HEAD
    simple_ari_exp  ->  simple_ari_exp bi_operator . member_in_exp   (rule 166)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    member_in_exp	go to state 430
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
=======
    bi_operator  ->  LST .   (rule 185)

    $default	reduce using rule 185 (bi_operator)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 261

<<<<<<< HEAD
    ari_exp  ->  simple_ari_exp relation_operator . ari_exp   (rule 158)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 431
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
=======
    bi_operator  ->  RST .   (rule 186)

    $default	reduce using rule 186 (bi_operator)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 262

<<<<<<< HEAD
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition CHOP complexProposition .   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    IFF 	shift, and go to state 117
    PROPIMPLY	shift, and go to state 118
    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 8 (complexProposition)
=======
    bi_operator  ->  MUL .   (rule 182)

    $default	reduce using rule 182 (bi_operator)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 263

<<<<<<< HEAD
=======
    bi_operator  ->  DIV .   (rule 183)

    $default	reduce using rule 183 (bi_operator)



state 264

    bi_operator  ->  MOD .   (rule 184)

    $default	reduce using rule 184 (bi_operator)



state 265

    simple_ari_exp  ->  simple_ari_exp bi_operator . member_in_exp   (rule 167)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    member_in_exp	go to state 445
=======
    member_in_exp	go to state 437
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 266

    ari_exp  ->  simple_ari_exp relation_operator . ari_exp   (rule 159)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 446
=======
    ari_exp	go to state 438
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 267

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition CHOP complexProposition .   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    IFF 	shift, and go to state 118
    PROPIMPLY	shift, and go to state 119
    OR  	shift, and go to state 120
    AND 	shift, and go to state 121
    CHOPSTAR	shift, and go to state 122

    $default	reduce using rule 8 (complexProposition)



state 268

>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition IFF complexProposition .   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 6 (complexProposition)



<<<<<<< HEAD
state 258
=======
state 269
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition PROPIMPLY complexProposition .   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 7 (complexProposition)



<<<<<<< HEAD
state 259
=======
state 270
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition OR complexProposition .   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 5 (complexProposition)



<<<<<<< HEAD
state 260
=======
state 271
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition AND complexProposition .   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 4 (complexProposition)



<<<<<<< HEAD
state 261

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp . CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 343)

    CLOSE_PAR	shift, and go to state 432



state 262

    prime_bool_exp  ->  POINTERNULL NE . ari_exp   (rule 251)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 433
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
=======
state 272

<<<<<<< HEAD
    switch_statement  ->  SWITCH OPEN_PAR member_in_exp . CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 344)

    CLOSE_PAR	shift, and go to state 447
=======
    switch_statement  ->  SWITCH OPEN_PAR member_in_exp . CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 350)

    CLOSE_PAR	shift, and go to state 439
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 273

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 138)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 195)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 427
    CHARDECLARATION	shift, and go to state 428
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 429
    OPEN_PAR	shift, and go to state 273
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 430
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 127
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
<<<<<<< HEAD
    ass_right	go to state 274
    rightaddrshift	go to state 130
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 275
=======
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 440
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 276
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    strliteral	go to state 277
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239



state 274

    ass_right  ->  OPEN_PAR ass_right . CLOSE_PAR   (rule 138)

    CLOSE_PAR	shift, and go to state 448



state 275

    ass_right  ->  ari_exp .   (rule 134)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 177)

    CLOSE_PAR	shift, and go to state 436
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    CLOSE_PAR	[reduce using rule 134 (ass_right)]
    $default	reduce using rule 134 (ass_right)

    ari_operator	go to state 250



state 276

    ass_right  ->  array_exp .   (rule 135)
    array_exp  ->  array_exp . CON array_exp   (rule 192)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 195)

    CLOSE_PAR	shift, and go to state 449
    CON 	shift, and go to state 286

    CLOSE_PAR	[reduce using rule 135 (ass_right)]
    $default	reduce using rule 135 (ass_right)



state 277

    ass_right  ->  strliteral .   (rule 136)
    ass_right  ->  OPEN_PAR strliteral . CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_PAR	shift, and go to state 450

    CLOSE_PAR	[reduce using rule 136 (ass_right)]
    $default	reduce using rule 136 (ass_right)


<<<<<<< HEAD
state 263

    prime_bool_exp  ->  POINTERNULL EQ . ari_exp   (rule 250)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
=======

state 278

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 195)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 226
    CHARDECLARATION	shift, and go to state 227
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 229
    OPEN_PAR	shift, and go to state 451
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 231
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 434
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 264

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 214
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    INTDECLARATION	shift, and go to state 412
    CHARDECLARATION	shift, and go to state 413
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 264
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 415
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 265
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    bool_exp	go to state 266
    prime_bool_exp	go to state 132
    identifier	go to state 227
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 265

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 176)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 240)
    prime_bool_exp  ->  ari_exp .   (rule 243)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 244)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 245)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 248)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 249)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 252)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 253)

    CLOSE_PAR	shift, and go to state 421
    NE  	shift, and go to state 268
    EQ  	shift, and go to state 269
    GE  	shift, and go to state 245
    LE  	shift, and go to state 246
    GT  	shift, and go to state 247
    LT  	shift, and go to state 248
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    CLOSE_PAR	[reduce using rule 243 (prime_bool_exp)]
    $default	reduce using rule 243 (prime_bool_exp)

    ari_operator	go to state 239
    relation_operator	go to state 270



state 266

    bool_exp  ->  bool_exp . AND bool_exp   (rule 237)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 238)
    bool_exp  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 239)

    CLOSE_PAR	shift, and go to state 435
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273
=======
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
<<<<<<< HEAD
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 236
=======
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 441
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 452
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239



state 279

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    option_struct_list_value  ->  OPEN_BPAR ari_exp . inner_option_list_value CLOSE_BPAR   (rule 199)

    COMMA	shift, and go to state 453
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 205 (inner_option_list_value)

    ari_operator	go to state 250
    inner_option_list_value	go to state 454



state 280

    array_exp  ->  array_exp . CON array_exp   (rule 192)
    option_struct_list_value  ->  OPEN_BPAR array_exp . inner_option_list_value CLOSE_BPAR   (rule 201)

    COMMA	shift, and go to state 453
    CON 	shift, and go to state 286

    $default	reduce using rule 205 (inner_option_list_value)

    inner_option_list_value	go to state 455



state 281

    option_struct_list_value  ->  OPEN_BPAR strliteral . inner_option_list_value CLOSE_BPAR   (rule 200)

    COMMA	shift, and go to state 453

    $default	reduce using rule 205 (inner_option_list_value)

    inner_option_list_value	go to state 456



state 282

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    option_list_value  ->  OPEN_MPAR ari_exp . inner_option_list_value CLOSE_MPAR   (rule 196)

    COMMA	shift, and go to state 453
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 205 (inner_option_list_value)

    ari_operator	go to state 250
    inner_option_list_value	go to state 457


<<<<<<< HEAD

state 283

    array_exp  ->  array_exp . CON array_exp   (rule 192)
    option_list_value  ->  OPEN_MPAR array_exp . inner_option_list_value CLOSE_MPAR   (rule 198)

    COMMA	shift, and go to state 453
    CON 	shift, and go to state 286

    $default	reduce using rule 205 (inner_option_list_value)

    inner_option_list_value	go to state 458



state 284

    option_list_value  ->  OPEN_MPAR strliteral . inner_option_list_value CLOSE_MPAR   (rule 197)

    COMMA	shift, and go to state 453

    $default	reduce using rule 205 (inner_option_list_value)

    inner_option_list_value	go to state 459



state 285

    rightaddrshift  ->  MUL OPEN_PAR . leftaddrshift CLOSE_PAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 155)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 156)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 460
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 360
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 125
    STRUCT	shift, and go to state 219
    MY_TRUE	shift, and go to state 126
    MY_FALSE	shift, and go to state 127
    INTDECLARATION	shift, and go to state 419
    CHARDECLARATION	shift, and go to state 420
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 421
    OPEN_PAR	shift, and go to state 269
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 422
    SIGNED	shift, and go to state 226
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    type_define	go to state 361
    leftaddrshift	go to state 461
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 362
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    sign_type_define	go to state 363
    all_type_define	go to state 364
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 286

<<<<<<< HEAD
    array_exp  ->  array_exp CON . array_exp   (rule 192)
=======
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 182)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 246)
    prime_bool_exp  ->  ari_exp .   (rule 249)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 250)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 251)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 254)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 255)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 258)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 259)

    CLOSE_PAR	shift, and go to state 428
    NE  	shift, and go to state 273
    EQ  	shift, and go to state 274
    GE  	shift, and go to state 250
    LE  	shift, and go to state 251
    GT  	shift, and go to state 252
    LT  	shift, and go to state 253
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243

    CLOSE_PAR	[reduce using rule 249 (prime_bool_exp)]
    $default	reduce using rule 249 (prime_bool_exp)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    OPEN_PAR	shift, and go to state 462
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126

    array_exp	go to state 463
    option_list_value	go to state 133
    option_struct_list_value	go to state 134



state 287

    prime_bool_exp  ->  POINTERNULL NE . ari_exp   (rule 252)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 464
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109


<<<<<<< HEAD
=======
    CLOSE_PAR	shift, and go to state 442
    OR  	shift, and go to state 277
    AND 	shift, and go to state 278
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 288
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    prime_bool_exp  ->  POINTERNULL EQ . ari_exp   (rule 251)

<<<<<<< HEAD

state 267
=======
    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 465
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    bool_exp  ->  NEGATION bool_exp .   (rule 236)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 237)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 238)


<<<<<<< HEAD
    $default	reduce using rule 236 (bool_exp)
=======
state 289
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 240)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

<<<<<<< HEAD

state 268

    prime_bool_exp  ->  ari_exp NE . strliteral   (rule 245)
    prime_bool_exp  ->  ari_exp NE . POINTERNULL   (rule 249)
    prime_bool_exp  ->  ari_exp NE . charliteral   (rule 253)
    relation_operator  ->  NE .   (rule 256)

    POINTERNULL	shift, and go to state 436
    STRLITERAL	shift, and go to state 129
    CHARLITERAL	shift, and go to state 95

    POINTERNULL	[reduce using rule 256 (relation_operator)]
    CHARLITERAL	[reduce using rule 256 (relation_operator)]
    $default	reduce using rule 256 (relation_operator)
=======
    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    STRUCT	shift, and go to state 225
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    INTDECLARATION	shift, and go to state 427
    CHARDECLARATION	shift, and go to state 428
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 429
    OPEN_PAR	shift, and go to state 289
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 430
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 140
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 290
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    bool_exp	go to state 291
    prime_bool_exp	go to state 143
    identifier	go to state 238
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239



state 290

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 177)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 241)
    prime_bool_exp  ->  ari_exp .   (rule 244)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 245)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 246)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 249)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 250)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 253)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 254)

    CLOSE_PAR	shift, and go to state 436
    NE  	shift, and go to state 293
    EQ  	shift, and go to state 294
    GE  	shift, and go to state 256
    LE  	shift, and go to state 257
    GT  	shift, and go to state 258
    LT  	shift, and go to state 259
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    CLOSE_PAR	[reduce using rule 244 (prime_bool_exp)]
    $default	reduce using rule 244 (prime_bool_exp)

    ari_operator	go to state 250
    relation_operator	go to state 295



state 291

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    bool_exp  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 240)

    CLOSE_PAR	shift, and go to state 466
    OR  	shift, and go to state 297
    AND 	shift, and go to state 298



state 292

    bool_exp  ->  NEGATION bool_exp .   (rule 237)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)


    $default	reduce using rule 237 (bool_exp)



state 293

    prime_bool_exp  ->  ari_exp NE . strliteral   (rule 246)
    prime_bool_exp  ->  ari_exp NE . POINTERNULL   (rule 250)
    prime_bool_exp  ->  ari_exp NE . charliteral   (rule 254)
    relation_operator  ->  NE .   (rule 257)

<<<<<<< HEAD
    POINTERNULL	shift, and go to state 467
    STRLITERAL	shift, and go to state 128
=======
    POINTERNULL	shift, and go to state 443
    STRLITERAL	shift, and go to state 130
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    CHARLITERAL	shift, and go to state 96

    POINTERNULL	[reduce using rule 257 (relation_operator)]
    CHARLITERAL	[reduce using rule 257 (relation_operator)]
    $default	reduce using rule 257 (relation_operator)

<<<<<<< HEAD
    strliteral	go to state 468
    charliteral	go to state 469
=======
    strliteral	go to state 444
    charliteral	go to state 445
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    strliteral	go to state 437
    charliteral	go to state 438


<<<<<<< HEAD

state 269

    prime_bool_exp  ->  ari_exp EQ . strliteral   (rule 244)
    prime_bool_exp  ->  ari_exp EQ . POINTERNULL   (rule 248)
    prime_bool_exp  ->  ari_exp EQ . charliteral   (rule 252)
    relation_operator  ->  EQ .   (rule 259)

    POINTERNULL	shift, and go to state 439
    STRLITERAL	shift, and go to state 129
    CHARLITERAL	shift, and go to state 95

    POINTERNULL	[reduce using rule 259 (relation_operator)]
    CHARLITERAL	[reduce using rule 259 (relation_operator)]
    $default	reduce using rule 259 (relation_operator)
=======
state 294

    prime_bool_exp  ->  ari_exp EQ . strliteral   (rule 245)
    prime_bool_exp  ->  ari_exp EQ . POINTERNULL   (rule 249)
    prime_bool_exp  ->  ari_exp EQ . charliteral   (rule 253)
    relation_operator  ->  EQ .   (rule 260)

<<<<<<< HEAD
    POINTERNULL	shift, and go to state 470
    STRLITERAL	shift, and go to state 128
=======
    POINTERNULL	shift, and go to state 446
    STRLITERAL	shift, and go to state 130
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    CHARLITERAL	shift, and go to state 96

    POINTERNULL	[reduce using rule 260 (relation_operator)]
    CHARLITERAL	[reduce using rule 260 (relation_operator)]
    $default	reduce using rule 260 (relation_operator)

<<<<<<< HEAD
    strliteral	go to state 471
    charliteral	go to state 472
=======
    strliteral	go to state 447
    charliteral	go to state 448
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    strliteral	go to state 440
    charliteral	go to state 441


<<<<<<< HEAD

state 270

    prime_bool_exp  ->  ari_exp relation_operator . ari_exp   (rule 240)
=======
state 295

    prime_bool_exp  ->  ari_exp relation_operator . ari_exp   (rule 241)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 442
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 271

    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 349)

    error	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300

    statement_bpar	go to state 443



state 272

    bool_exp  ->  bool_exp OR . bool_exp   (rule 238)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 473
=======
    ari_exp	go to state 449
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 296

<<<<<<< HEAD
    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 350)
=======
    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 356)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    error	shift, and go to state 324
    OPEN_BPAR	shift, and go to state 325

<<<<<<< HEAD
    statement_bpar	go to state 474
=======
    statement_bpar	go to state 450
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 297

    bool_exp  ->  bool_exp OR . bool_exp   (rule 239)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 139
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
<<<<<<< HEAD
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 444
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 273

    bool_exp  ->  bool_exp AND . bool_exp   (rule 237)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
=======
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 140
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
<<<<<<< HEAD
    bool_exp	go to state 475
    prime_bool_exp	go to state 143
=======
    bool_exp	go to state 451
    prime_bool_exp	go to state 133
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 298

    bool_exp  ->  bool_exp AND . bool_exp   (rule 238)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 139
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
<<<<<<< HEAD
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 445
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 274

    prime_bool_exp  ->  strliteral NE . ari_exp   (rule 247)
=======
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 140
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
<<<<<<< HEAD
    bool_exp	go to state 476
    prime_bool_exp	go to state 143
=======
    bool_exp	go to state 452
    prime_bool_exp	go to state 133
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 299

    prime_bool_exp  ->  strliteral NE . ari_exp   (rule 248)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 446
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 275

    prime_bool_exp  ->  strliteral EQ . ari_exp   (rule 246)
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 477
=======
    ari_exp	go to state 453
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 300

    prime_bool_exp  ->  strliteral EQ . ari_exp   (rule 247)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 447
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 276

    statement  ->  AWAIT OPEN_PAR bool_exp . CLOSE_PAR   (rule 44)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 237)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 238)

    CLOSE_PAR	shift, and go to state 448
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273



state 277

    declaration  ->  STRUCT ID option_identifier_array_declaration .   (rule 81)

    $default	reduce using rule 81 (declaration)



state 278

    declaration  ->  STRUCT STRUCT_TYPE option_identifier_array_declaration .   (rule 83)

    $default	reduce using rule 83 (declaration)



state 279

    declaration  ->  UNION ID option_identifier_array_declaration .   (rule 82)

    $default	reduce using rule 82 (declaration)



state 280

    declaration  ->  UNION STRUCT_TYPE option_identifier_array_declaration .   (rule 84)

    $default	reduce using rule 84 (declaration)



state 281
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 478
=======
    ari_exp	go to state 454
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 301

    statement  ->  AWAIT OPEN_PAR bool_exp . CLOSE_PAR   (rule 44)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 479
    OR  	shift, and go to state 297
    AND 	shift, and go to state 298
=======
    CLOSE_PAR	shift, and go to state 455
    OR  	shift, and go to state 277
    AND 	shift, and go to state 278
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 302

    declaration  ->  STRUCT ID option_identifier_array_declaration .   (rule 82)

    $default	reduce using rule 82 (declaration)



state 303

    declaration  ->  STRUCT STRUCT_TYPE option_identifier_array_declaration .   (rule 84)

    $default	reduce using rule 84 (declaration)



state 304

    declaration  ->  UNION ID option_identifier_array_declaration .   (rule 83)

    $default	reduce using rule 83 (declaration)



state 305

    declaration  ->  UNION STRUCT_TYPE option_identifier_array_declaration .   (rule 85)

    $default	reduce using rule 85 (declaration)



state 306
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  DEFINE ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 449
    UNSIGNED	shift, and go to state 345
    ID  	shift, and go to state 450
    STRUCT_TYPE	shift, and go to state 451

    $default	reduce using rule 287 (option_function_parameter_list)

    type_define	go to state 346
    sign_type_define	go to state 348
    all_type_define	go to state 452
    option_function_parameter_list	go to state 453



state 282

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 318)

    CLOSE_PAR	shift, and go to state 332



state 283

    inner_option_define_identifier  ->  COMMA . all_type_define identifier inner_option_define_identifier   (rule 288)
    inner_option_define_identifier  ->  COMMA . all_type_define inner_option_define_identifier   (rule 289)
    inner_option_define_identifier  ->  COMMA . ID identifier inner_option_define_identifier   (rule 290)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE MUL identifier inner_option_define_identifier   (rule 292)
    inner_option_define_identifier  ->  COMMA . ID identifier ARRAY inner_option_define_identifier   (rule 293)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier ARRAY inner_option_define_identifier   (rule 294)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier ARRAY inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA . OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA . error   (rule 304)

    error	shift, and go to state 454
=======
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 480
    UNSIGNED	shift, and go to state 360
    ID  	shift, and go to state 481
    STRUCT_TYPE	shift, and go to state 482
=======
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 168
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 288 (option_function_parameter_list)

<<<<<<< HEAD
    type_define	go to state 361
    sign_type_define	go to state 363
    all_type_define	go to state 483
    option_function_parameter_list	go to state 484
=======
    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 459
    option_function_parameter_list	go to state 460
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 307

<<<<<<< HEAD
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 319)
=======
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 325)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    CLOSE_PAR	shift, and go to state 347



state 308

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA . all_type_define identifier inner_option_define_identifier   (rule 289)
    inner_option_define_identifier  ->  COMMA . all_type_define inner_option_define_identifier   (rule 290)
    inner_option_define_identifier  ->  COMMA . ID identifier inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier inner_option_define_identifier   (rule 292)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE MUL identifier inner_option_define_identifier   (rule 293)
    inner_option_define_identifier  ->  COMMA . ID identifier ARRAY inner_option_define_identifier   (rule 294)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier ARRAY inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier ARRAY inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA . OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL inner_option_define_identifier   (rule 304)
    inner_option_define_identifier  ->  COMMA . error   (rule 305)

    error	shift, and go to state 485
=======
    inner_option_define_identifier  ->  COMMA . all_type_define identifier inner_option_define_identifier   (rule 294)
    inner_option_define_identifier  ->  COMMA . all_type_define inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA . ID identifier inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE MUL identifier inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA . ID identifier ARRAY inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier ARRAY inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier ARRAY inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA . OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 305)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 306)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 307)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier inner_option_define_identifier   (rule 308)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL inner_option_define_identifier   (rule 309)
    inner_option_define_identifier  ->  COMMA . error   (rule 310)

    error	shift, and go to state 461
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 455
    UNSIGNED	shift, and go to state 345
    ID  	shift, and go to state 456
    STRUCT_TYPE	shift, and go to state 457

    type_define	go to state 346
    sign_type_define	go to state 348
    all_type_define	go to state 458



state 284

    statement  ->  EXIST identifier inner_option_define_identifier . COLON OPEN_BPAR statement CLOSE_BPAR   (rule 64)

    COLON	shift, and go to state 459



state 285

    statement  ->  FRAME OPEN_PAR identifier . option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    COMMA	shift, and go to state 460
=======
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 486
    UNSIGNED	shift, and go to state 360
    ID  	shift, and go to state 487
    STRUCT_TYPE	shift, and go to state 488

    type_define	go to state 361
    sign_type_define	go to state 363
    all_type_define	go to state 489
=======
    OPEN_PAR	shift, and go to state 462
    UNSIGNED	shift, and go to state 168
    ID  	shift, and go to state 463
    STRUCT_TYPE	shift, and go to state 464

    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 465
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 309

    statement  ->  EXIST identifier inner_option_define_identifier . COLON OPEN_BPAR statement CLOSE_BPAR   (rule 64)

<<<<<<< HEAD
    COLON	shift, and go to state 490
=======
    COLON	shift, and go to state 466
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 310

    statement  ->  FRAME OPEN_PAR identifier . option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

<<<<<<< HEAD
    COMMA	shift, and go to state 491

    $default	reduce using rule 325 (option_frame_identifier)

    option_frame_identifier	go to state 492
=======
    COMMA	shift, and go to state 467
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 324 (option_frame_identifier)

<<<<<<< HEAD
    option_frame_identifier	go to state 461



state 286

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 81)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 83)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)

    ID  	shift, and go to state 342
    STRUCT_TYPE	shift, and go to state 462



state 287

    type_define  ->  INTDECLARATION .   (rule 89)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 405
    MUL 	shift, and go to state 406

    MUL 	[reduce using rule 89 (type_define)]
    $default	reduce using rule 89 (type_define)



state 288

    type_define  ->  CHARDECLARATION .   (rule 91)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 408

    MUL 	[reduce using rule 91 (type_define)]
    $default	reduce using rule 91 (type_define)



state 289

    type_define  ->  VOIDDECLARATION .   (rule 93)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    MUL 	shift, and go to state 409

    MUL 	[reduce using rule 93 (type_define)]
    $default	reduce using rule 93 (type_define)



state 290

    type_define  ->  FLOATDECLARATION .   (rule 90)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 411

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 291

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 115)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 412
    CHARDECLARATION	shift, and go to state 413
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 463
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 415
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 153
    BNE 	shift, and go to state 92
    NEXT	shift, and go to state 179
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_left	go to state 464
    leftaddrshift	go to state 70
    array	go to state 158
    point_exp	go to state 159
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 162
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 164



state 292

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 80)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 233)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 465
    ID  	shift, and go to state 190

    option_identifier_array_declaration	go to state 191
    identifier	go to state 192



state 293

    for_sta_init  ->  declaration .   (rule 337)

    $default	reduce using rule 337 (for_sta_init)



state 294

    for_sta_init  ->  ass_statement .   (rule 336)

    $default	reduce using rule 336 (for_sta_init)



state 295

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init . COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 335)

    COMMA	shift, and go to state 466



state 296

    for_statement  ->  FOR ari_exp TIMES . DO statement_bpar   (rule 334)

    DO  	shift, and go to state 467



state 297

    bool_par  ->  error CLOSE_PAR .   (rule 316)

    $default	reduce using rule 316 (bool_par)



state 298

    bool_exp  ->  bool_exp . AND bool_exp   (rule 237)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 238)
    bool_par  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 315)

    CLOSE_PAR	shift, and go to state 468
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273



state 299

    statement_bpar  ->  error . CLOSE_BPAR   (rule 314)

    CLOSE_BPAR	shift, and go to state 469



state 300

    statement_bpar  ->  OPEN_BPAR . statement CLOSE_BPAR   (rule 313)
=======
    option_frame_identifier	go to state 468
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 311

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 82)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 84)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)

<<<<<<< HEAD
    ID  	shift, and go to state 357
    STRUCT_TYPE	shift, and go to state 493
=======
    ID  	shift, and go to state 351
    STRUCT_TYPE	shift, and go to state 469
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 312

    type_define  ->  INTDECLARATION .   (rule 90)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 420
    MUL 	shift, and go to state 421
=======
    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 413
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 313

    type_define  ->  CHARDECLARATION .   (rule 92)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 422
    MUL 	shift, and go to state 423
=======
    CLOSE_PAR	shift, and go to state 414
    MUL 	shift, and go to state 415
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)



state 314

    type_define  ->  VOIDDECLARATION .   (rule 94)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

<<<<<<< HEAD
    MUL 	shift, and go to state 424
=======
    MUL 	shift, and go to state 416
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    MUL 	[reduce using rule 94 (type_define)]
    $default	reduce using rule 94 (type_define)



state 315

    type_define  ->  FLOATDECLARATION .   (rule 91)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 425
    MUL 	shift, and go to state 426
=======
    CLOSE_PAR	shift, and go to state 417
    MUL 	shift, and go to state 418
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    MUL 	[reduce using rule 91 (type_define)]
    $default	reduce using rule 91 (type_define)



state 316

<<<<<<< HEAD
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 427
    CHARDECLARATION	shift, and go to state 428
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 429
    OPEN_PAR	shift, and go to state 494
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 430
    SIGNED	shift, and go to state 232
=======
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 219
    INTDECLARATION	shift, and go to state 419
    CHARDECLARATION	shift, and go to state 420
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 421
    OPEN_PAR	shift, and go to state 470
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 422
    SIGNED	shift, and go to state 226
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 164
    BNE 	shift, and go to state 93
    NEXT	shift, and go to state 190
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
<<<<<<< HEAD
    ass_left	go to state 495
=======
    ass_left	go to state 471
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    leftaddrshift	go to state 71
    array	go to state 169
    point_exp	go to state 170
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 173
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 175



state 317

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 81)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 234)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 496
    ID  	shift, and go to state 201
=======
    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 472
    ID  	shift, and go to state 195
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_identifier_array_declaration	go to state 202
    identifier	go to state 203



state 318

<<<<<<< HEAD
    for_sta_init  ->  declaration .   (rule 338)

    $default	reduce using rule 338 (for_sta_init)
=======
    for_sta_init  ->  declaration .   (rule 344)

    $default	reduce using rule 344 (for_sta_init)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 319

<<<<<<< HEAD
    for_sta_init  ->  ass_statement .   (rule 337)

    $default	reduce using rule 337 (for_sta_init)
=======
    for_sta_init  ->  ass_statement .   (rule 343)

    $default	reduce using rule 343 (for_sta_init)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 320

<<<<<<< HEAD
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init . COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 336)

    COMMA	shift, and go to state 497
=======
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init . COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 342)

    COMMA	shift, and go to state 473
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 321

<<<<<<< HEAD
    for_statement  ->  FOR ari_exp TIMES . DO statement_bpar   (rule 335)

    DO  	shift, and go to state 498
=======
    for_statement  ->  FOR ari_exp TIMES . DO statement_bpar   (rule 341)

    DO  	shift, and go to state 474
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 322

<<<<<<< HEAD
    bool_par  ->  error CLOSE_PAR .   (rule 317)

    $default	reduce using rule 317 (bool_par)
=======
    bool_par  ->  error CLOSE_PAR .   (rule 323)

    $default	reduce using rule 323 (bool_par)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 323

<<<<<<< HEAD
    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    bool_par  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 316)

    CLOSE_PAR	shift, and go to state 499
    OR  	shift, and go to state 297
    AND 	shift, and go to state 298
=======
    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)
    bool_par  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 322)

    CLOSE_PAR	shift, and go to state 475
    OR  	shift, and go to state 277
    AND 	shift, and go to state 278
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 324

<<<<<<< HEAD
    statement_bpar  ->  error . CLOSE_BPAR   (rule 315)

    CLOSE_BPAR	shift, and go to state 500
=======
    statement_bpar  ->  error . CLOSE_BPAR   (rule 321)

    CLOSE_BPAR	shift, and go to state 476
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 325

<<<<<<< HEAD
    statement_bpar  ->  OPEN_BPAR . statement CLOSE_BPAR   (rule 314)
=======
    statement_bpar  ->  OPEN_BPAR . statement CLOSE_BPAR   (rule 320)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

<<<<<<< HEAD
    statement	go to state 470
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 301

    while_statement  ->  WHILE bool_par statement_bpar .   (rule 333)

    $default	reduce using rule 333 (while_statement)



state 302
=======
<<<<<<< HEAD
    statement	go to state 501
=======
    statement	go to state 477
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 326

<<<<<<< HEAD
    while_statement  ->  WHILE bool_par statement_bpar .   (rule 334)

    $default	reduce using rule 334 (while_statement)
=======
    while_statement  ->  WHILE bool_par statement_bpar .   (rule 340)

    $default	reduce using rule 340 (while_statement)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 327
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  REPEAT OPEN_BPAR statement . CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)
    statement  ->  statement . PARALLEL statement   (rule 55)

<<<<<<< HEAD
    CLOSE_BPAR	shift, and go to state 471
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196



state 303

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 136)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 137)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 194)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 215
    CHARDECLARATION	shift, and go to state 216
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 218
    OPEN_PAR	shift, and go to state 472
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
=======
<<<<<<< HEAD
    CLOSE_BPAR	shift, and go to state 502
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207
=======
    CLOSE_BPAR	shift, and go to state 478
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 328

<<<<<<< HEAD
    output_statement  ->  DISPLAY OPEN_PAR ass_right . CLOSE_PAR   (rule 353)
    output_statement  ->  DISPLAY OPEN_PAR ass_right . option_output CLOSE_PAR   (rule 354)

    COMMA	shift, and go to state 503
    CLOSE_PAR	shift, and go to state 504

    CLOSE_PAR	[reduce using rule 355 (option_output)]
    $default	reduce using rule 355 (option_output)
=======
    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 142)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 200)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 219
    INTDECLARATION	shift, and go to state 220
    CHARDECLARATION	shift, and go to state 221
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 223
    OPEN_PAR	shift, and go to state 479
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 220
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 473
    rightaddrshift	go to state 308
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 474
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 475
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    strliteral	go to state 476
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 304

    option_struct_list_value  ->  OPEN_BPAR . ari_exp inner_option_list_value CLOSE_BPAR   (rule 198)
    option_struct_list_value  ->  OPEN_BPAR . strliteral inner_option_list_value CLOSE_BPAR   (rule 199)
    option_struct_list_value  ->  OPEN_BPAR . array_exp inner_option_list_value CLOSE_BPAR   (rule 200)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 477
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 478
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 479
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 480
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 305

    option_list_value  ->  OPEN_MPAR . ari_exp inner_option_list_value CLOSE_MPAR   (rule 195)
    option_list_value  ->  OPEN_MPAR . strliteral inner_option_list_value CLOSE_MPAR   (rule 196)
    option_list_value  ->  OPEN_MPAR . array_exp inner_option_list_value CLOSE_MPAR   (rule 197)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 477
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 481
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 482
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 483
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 306

    rightaddrshift  ->  MUL . OPEN_PAR leftaddrshift CLOSE_PAR   (rule 139)
    point_exp  ->  MUL . identifier   (rule 150)
    point_exp  ->  MUL . point_exp   (rule 151)
    point_exp  ->  MUL . array   (rule 152)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 154)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 155)

    OPEN_PAR	shift, and go to state 484
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 174

    array	go to state 175
    point_exp	go to state 176
    identifier	go to state 177



state 307

    output_statement  ->  DISPLAY OPEN_PAR ass_right . CLOSE_PAR   (rule 352)
    output_statement  ->  DISPLAY OPEN_PAR ass_right . option_output CLOSE_PAR   (rule 353)

    COMMA	shift, and go to state 485
    CLOSE_PAR	shift, and go to state 486

    CLOSE_PAR	[reduce using rule 354 (option_output)]
    $default	reduce using rule 354 (option_output)

    option_output	go to state 487



state 308

    ass_right  ->  rightaddrshift .   (rule 138)

    $default	reduce using rule 138 (ass_right)



state 309

    ass_right  ->  ari_exp .   (rule 133)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 133 (ass_right)

    ari_operator	go to state 239



state 310

    ass_right  ->  array_exp .   (rule 134)
    array_exp  ->  array_exp . CON array_exp   (rule 191)

    CON 	shift, and go to state 488

    $default	reduce using rule 134 (ass_right)



state 311

    array_exp  ->  option_list_value .   (rule 192)

    $default	reduce using rule 192 (array_exp)



state 312

    array_exp  ->  option_struct_list_value .   (rule 193)

    $default	reduce using rule 193 (array_exp)



<<<<<<< HEAD
state 313

    ass_right  ->  strliteral .   (rule 135)

    $default	reduce using rule 135 (ass_right)
=======
state 318
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_output	go to state 505


>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 329

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 161)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 350)

<<<<<<< HEAD
state 314

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 160)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 237)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 238)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 349)

    THEN	shift, and go to state 489
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273
=======
<<<<<<< HEAD
    THEN	shift, and go to state 506
    OR  	shift, and go to state 297
    AND 	shift, and go to state 298

=======
    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 166)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 356)

    THEN	shift, and go to state 496
    OR  	shift, and go to state 277
    AND 	shift, and go to state 278
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 330

<<<<<<< HEAD
state 315

    struct_identifier  ->  STRUCT . ID   (rule 74)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 81)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 83)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)

    ID  	shift, and go to state 135
    STRUCT_TYPE	shift, and go to state 462
=======
    struct_identifier  ->  STRUCT . ID   (rule 75)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 82)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 84)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)

    ID  	shift, and go to state 146
    STRUCT_TYPE	shift, and go to state 493

<<<<<<< HEAD
=======
    ID  	shift, and go to state 136
    STRUCT_TYPE	shift, and go to state 469
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 331

<<<<<<< HEAD
state 316

    type_define  ->  INTDECLARATION .   (rule 89)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 405
    MUL 	shift, and go to state 490

    MUL 	[reduce using rule 89 (type_define)]
    $default	reduce using rule 89 (type_define)



state 317

    type_define  ->  CHARDECLARATION .   (rule 91)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 491

    MUL 	[reduce using rule 91 (type_define)]
    $default	reduce using rule 91 (type_define)



state 318

    type_define  ->  FLOATDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 492

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 319

    sign_declaration  ->  UNSIGNED . declaration   (rule 77)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 493
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 494
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 170
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 171
    type_define	go to state 67



state 320

    sign_declaration  ->  SIGNED . declaration   (rule 76)
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 495
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 496
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 170
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 172
    type_define	go to state 67



state 321

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 330)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 331)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 332)

    CLOSE_PAR	shift, and go to state 497
    OR  	shift, and go to state 334
    AND 	shift, and go to state 335



state 322

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    point_exp  ->  MUL . identifier   (rule 150)
    point_exp  ->  MUL . point_exp   (rule 151)
    point_exp  ->  MUL . array   (rule 152)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 154)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 155)

    OPEN_PAR	shift, and go to state 173
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 174

    array	go to state 175
    point_exp	go to state 176
    identifier	go to state 498



state 323

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    identifier  ->  ID .   (rule 317)
=======
    type_define  ->  INTDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 420
    MUL 	shift, and go to state 507
=======
    type_define  ->  INTDECLARATION .   (rule 95)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 497
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 332

    type_define  ->  CHARDECLARATION .   (rule 92)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 422
    MUL 	shift, and go to state 508
=======
    CLOSE_PAR	shift, and go to state 414
    MUL 	shift, and go to state 498
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)



state 333

    type_define  ->  FLOATDECLARATION .   (rule 91)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 425
    MUL 	shift, and go to state 509
=======
    CLOSE_PAR	shift, and go to state 417
    MUL 	shift, and go to state 499
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    MUL 	[reduce using rule 91 (type_define)]
    $default	reduce using rule 91 (type_define)



state 334

    sign_declaration  ->  UNSIGNED . declaration   (rule 78)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

    STRUCT	shift, and go to state 179
    UNION	shift, and go to state 180
    FILEDECLARATION	shift, and go to state 29
<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 510
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 511
=======
    INTDECLARATION	shift, and go to state 500
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 501
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 181
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 182
    type_define	go to state 68



state 335

    sign_declaration  ->  SIGNED . declaration   (rule 77)
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)

    STRUCT	shift, and go to state 179
    UNION	shift, and go to state 180
    FILEDECLARATION	shift, and go to state 29
<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 512
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 513
=======
    INTDECLARATION	shift, and go to state 502
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 503
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 181
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 183
    type_define	go to state 68



state 336

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
<<<<<<< HEAD
    imply_pre  ->  imply_pre . AND imply_pre   (rule 331)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 332)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 333)

    CLOSE_PAR	shift, and go to state 514
    OR  	shift, and go to state 349
    AND 	shift, and go to state 350
=======
    imply_pre  ->  imply_pre . AND imply_pre   (rule 337)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 338)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 339)

    CLOSE_PAR	shift, and go to state 504
    OR  	shift, and go to state 339
    AND 	shift, and go to state 340
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 337

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    point_exp  ->  MUL . identifier   (rule 151)
    point_exp  ->  MUL . point_exp   (rule 152)
    point_exp  ->  MUL . array   (rule 153)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 155)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 156)

    OPEN_PAR	shift, and go to state 184
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 185

<<<<<<< HEAD
    array	go to state 186
    point_exp	go to state 187
    identifier	go to state 515
=======
    array	go to state 180
    point_exp	go to state 181
    identifier	go to state 505
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 338

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    identifier  ->  ID .   (rule 318)

    OPEN_MPAR	shift, and go to state 516

    $default	reduce using rule 318 (identifier)
=======
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    identifier  ->  ID .   (rule 324)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    OPEN_MPAR	shift, and go to state 499

<<<<<<< HEAD
    $default	reduce using rule 317 (identifier)



state 324

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    point_exp  ->  MUL identifier .   (rule 150)

    CLOSE_PAR	shift, and go to state 500

    CLOSE_PAR	[reduce using rule 150 (point_exp)]
    $default	reduce using rule 150 (point_exp)



state 325

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 332)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 214
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    INTDECLARATION	shift, and go to state 215
    CHARDECLARATION	shift, and go to state 216
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 218
    OPEN_PAR	shift, and go to state 501
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 220
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 154
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 265
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 227
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 502
    struct_member_exp	go to state 228



state 326

    imply_pre  ->  NEGATION imply_pre .   (rule 329)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 330)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 331)


    $default	reduce using rule 329 (imply_pre)



state 327
=======
    $default	reduce using rule 324 (identifier)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 339

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    point_exp  ->  MUL identifier .   (rule 151)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 517
=======
    CLOSE_PAR	shift, and go to state 507
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    CLOSE_PAR	[reduce using rule 151 (point_exp)]
    $default	reduce using rule 151 (point_exp)



state 340

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 333)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    STRUCT	shift, and go to state 225
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    INTDECLARATION	shift, and go to state 226
    CHARDECLARATION	shift, and go to state 227
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 229
    OPEN_PAR	shift, and go to state 518
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 339)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 125
    STRUCT	shift, and go to state 219
    MY_TRUE	shift, and go to state 126
    MY_FALSE	shift, and go to state 127
    INTDECLARATION	shift, and go to state 220
    CHARDECLARATION	shift, and go to state 221
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 223
    OPEN_PAR	shift, and go to state 508
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 231
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 165
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 290
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    prime_bool_exp	go to state 172
    identifier	go to state 238
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
<<<<<<< HEAD
    imply_pre	go to state 519
    struct_member_exp	go to state 239
=======
    imply_pre	go to state 509
    struct_member_exp	go to state 233
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 341

<<<<<<< HEAD
    imply_pre  ->  NEGATION imply_pre .   (rule 330)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 331)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 332)


    $default	reduce using rule 330 (imply_pre)
=======
    imply_pre  ->  NEGATION imply_pre .   (rule 336)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 337)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 338)


    $default	reduce using rule 336 (imply_pre)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 342
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  OPEN_PAR statement CLOSE_PAR .   (rule 65)

    $default	reduce using rule 65 (statement)



<<<<<<< HEAD
state 328

    ass_left  ->  OPEN_PAR ass_left CLOSE_PAR .   (rule 115)

    $default	reduce using rule 115 (ass_left)



state 329

    array  ->  OPEN_PAR array CLOSE_PAR .   (rule 146)

    $default	reduce using rule 146 (array)



state 330

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR .   (rule 156)

    OPEN_MPAR	shift, and go to state 503

    $default	reduce using rule 156 (point_exp)



state 331

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 376)

    IMPLY	shift, and go to state 504



state 332

    identifier  ->  OPEN_PAR identifier CLOSE_PAR .   (rule 318)

    $default	reduce using rule 318 (identifier)



state 333

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)

    IMPLY	shift, and go to state 505



state 334

    imply_pre  ->  imply_pre OR . imply_pre   (rule 331)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 325
=======
state 343

    ass_left  ->  OPEN_PAR ass_left CLOSE_PAR .   (rule 116)

    $default	reduce using rule 116 (ass_left)



state 344

    array  ->  OPEN_PAR array CLOSE_PAR .   (rule 147)

    $default	reduce using rule 147 (array)



state 345

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR .   (rule 157)

<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 520
=======
    OPEN_MPAR	shift, and go to state 510
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 157 (point_exp)



state 346

<<<<<<< HEAD
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 377)

    IMPLY	shift, and go to state 521
=======
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 383)

    IMPLY	shift, and go to state 511
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 347

<<<<<<< HEAD
    identifier  ->  OPEN_PAR identifier CLOSE_PAR .   (rule 319)

    $default	reduce using rule 319 (identifier)
=======
    identifier  ->  OPEN_PAR identifier CLOSE_PAR .   (rule 325)

    $default	reduce using rule 325 (identifier)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 348

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)

<<<<<<< HEAD
    IMPLY	shift, and go to state 522
=======
    IMPLY	shift, and go to state 512
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 349

<<<<<<< HEAD
    imply_pre  ->  imply_pre OR . imply_pre   (rule 332)
=======
    imply_pre  ->  imply_pre OR . imply_pre   (rule 338)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 340
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
<<<<<<< HEAD
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 154
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 506
    struct_member_exp	go to state 108



state 335

    imply_pre  ->  imply_pre AND . imply_pre   (rule 330)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 325
=======
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 165
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    prime_bool_exp	go to state 172
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
<<<<<<< HEAD
    imply_pre	go to state 523
=======
    imply_pre	go to state 513
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    struct_member_exp	go to state 109



state 350

<<<<<<< HEAD
    imply_pre  ->  imply_pre AND . imply_pre   (rule 331)
=======
    imply_pre  ->  imply_pre AND . imply_pre   (rule 337)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 340
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
<<<<<<< HEAD
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 154
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 507
    struct_member_exp	go to state 108



state 336

    struct_member_exp  ->  OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 380)

    $default	reduce using rule 380 (struct_member_exp)



state 337

    option_projection  ->  COMMA . statement option_projection   (rule 327)
=======
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 165
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    prime_bool_exp	go to state 172
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
<<<<<<< HEAD
    imply_pre	go to state 524
=======
    imply_pre	go to state 514
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    struct_member_exp	go to state 109



state 351

<<<<<<< HEAD
    struct_member_exp  ->  OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 381)

    $default	reduce using rule 381 (struct_member_exp)
=======
    struct_member_exp  ->  OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 387)

    $default	reduce using rule 387 (struct_member_exp)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 352

<<<<<<< HEAD
    option_projection  ->  COMMA . statement option_projection   (rule 328)
=======
    option_projection  ->  COMMA . statement option_projection   (rule 334)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

<<<<<<< HEAD
    statement	go to state 508
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 338

    statement  ->  OPEN_BPAR statement CLOSE_BPAR . PROJECTION statement_bpar   (rule 59)

    PROJECTION	shift, and go to state 509



state 339

    statement  ->  OPEN_BPAR statement option_projection . CLOSE_BPAR PROJECTION statement_bpar   (rule 58)

    CLOSE_BPAR	shift, and go to state 510
=======
<<<<<<< HEAD
    statement	go to state 525
=======
    statement	go to state 515
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 353

    statement  ->  OPEN_BPAR statement CLOSE_BPAR . PROJECTION statement_bpar   (rule 59)

<<<<<<< HEAD
    PROJECTION	shift, and go to state 526
=======
    PROJECTION	shift, and go to state 516
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 354

    statement  ->  OPEN_BPAR statement option_projection . CLOSE_BPAR PROJECTION statement_bpar   (rule 58)

<<<<<<< HEAD
    CLOSE_BPAR	shift, and go to state 527



state 355
=======
    CLOSE_BPAR	shift, and go to state 517
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 340

    statement  ->  FUNCTION ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 60)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 449
    UNSIGNED	shift, and go to state 345
    ID  	shift, and go to state 450
    STRUCT_TYPE	shift, and go to state 451

    $default	reduce using rule 287 (option_function_parameter_list)

    type_define	go to state 346
    sign_type_define	go to state 348
    all_type_define	go to state 452
    option_function_parameter_list	go to state 511



state 341

    function  ->  EXTERN ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 71)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 345
    ADDRESS	shift, and go to state 366
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    $default	reduce using rule 307 (option_function_identifier)

    function	go to state 96
    type_define	go to state 346
    ass_right	go to state 367
    rightaddrshift	go to state 308
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    sign_type_define	go to state 348
    all_type_define	go to state 368
    option_function_identifier	go to state 512
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 342

    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 81)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 189
    ID  	shift, and go to state 190

    option_identifier_array_declaration	go to state 277
    identifier	go to state 192



<<<<<<< HEAD
state 343

    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 82)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 189
    ID  	shift, and go to state 190

    option_identifier_array_declaration	go to state 279
    identifier	go to state 192

=======
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    function_define  ->  FUNCTION ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 480
    UNSIGNED	shift, and go to state 360
    ID  	shift, and go to state 481
    STRUCT_TYPE	shift, and go to state 482

    $default	reduce using rule 288 (option_function_parameter_list)

<<<<<<< HEAD
    type_define	go to state 361
    sign_type_define	go to state 363
    all_type_define	go to state 483
    option_function_parameter_list	go to state 528
=======
    OPEN_PAR	shift, and go to state 522
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 344

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 513
    ID  	shift, and go to state 514
=======
state 356

    function  ->  EXTERN ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 72)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 124
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 381
=======
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 308
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 168
    ADDRESS	shift, and go to state 372
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 127
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 382
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

<<<<<<< HEAD
    $default	reduce using rule 308 (option_function_identifier)

    function	go to state 97
    ass_right	go to state 383
    rightaddrshift	go to state 130
=======
    $default	reduce using rule 314 (option_function_identifier)

    function	go to state 97
    type_define	go to state 169
    ass_right	go to state 374
    rightaddrshift	go to state 313
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 132
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
<<<<<<< HEAD
    option_function_identifier	go to state 529
=======
    sign_type_define	go to state 170
    all_type_define	go to state 375
    option_function_identifier	go to state 523
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    identifier	go to state 105
    strliteral	go to state 135
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    identifier	go to state 515


<<<<<<< HEAD

state 345
=======
state 357

    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 82)

    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 200
    ID  	shift, and go to state 201

    option_identifier_array_declaration	go to state 302
    identifier	go to state 203
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 260)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 261)

    INTDECLARATION	shift, and go to state 516
    CHARDECLARATION	shift, and go to state 517

<<<<<<< HEAD


state 346

    all_type_define  ->  type_define .   (rule 263)
=======
state 358

    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 83)

    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 200
    ID  	shift, and go to state 201

    option_identifier_array_declaration	go to state 304
    identifier	go to state 203
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 263 (all_type_define)


<<<<<<< HEAD

state 347

    point_exp  ->  MUL OPEN_PAR ari_exp . CLOSE_PAR   (rule 155)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    CLOSE_PAR	shift, and go to state 518
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238
=======
state 359

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 530
    ID  	shift, and go to state 531

    identifier	go to state 532
=======
    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 524
    ID  	shift, and go to state 525

    identifier	go to state 526
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    ari_operator	go to state 239


<<<<<<< HEAD

state 348

    all_type_define  ->  sign_type_define .   (rule 262)

    $default	reduce using rule 262 (all_type_define)
=======
state 360

    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 261)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 262)

<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 533
    CHARDECLARATION	shift, and go to state 534
=======
    CLOSE_PAR	shift, and go to state 527
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 361

<<<<<<< HEAD
state 349

    point_exp  ->  MUL OPEN_PAR all_type_define . MUL CLOSE_PAR ari_exp   (rule 154)

    MUL 	shift, and go to state 519
=======
    all_type_define  ->  type_define .   (rule 264)

    $default	reduce using rule 264 (all_type_define)

<<<<<<< HEAD
=======
    MUL 	shift, and go to state 528
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 362

<<<<<<< HEAD
state 350
=======
    point_exp  ->  MUL OPEN_PAR ari_exp . CLOSE_PAR   (rule 156)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 535
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 65)
<<<<<<< HEAD
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 115)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 151
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 124
=======
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    ari_operator	go to state 250



state 363

    all_type_define  ->  sign_type_define .   (rule 263)

    $default	reduce using rule 263 (all_type_define)



state 364

    point_exp  ->  MUL OPEN_PAR all_type_define . MUL CLOSE_PAR ari_exp   (rule 155)

    MUL 	shift, and go to state 536



state 365

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 65)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 162
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 136
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
<<<<<<< HEAD
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
=======
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 520
=======
<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 537
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 538
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 539
    OPEN_PAR	shift, and go to state 163
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 540
=======
    INTDECLARATION	shift, and go to state 529
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 521
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 522
    OPEN_PAR	shift, and go to state 152
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
<<<<<<< HEAD
    UNSIGNED	shift, and go to state 523
    SIGNED	shift, and go to state 51
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 153
    BNE 	shift, and go to state 92
    NEXT	shift, and go to state 53
    NEGATION	shift, and go to state 154
=======
    UNSIGNED	shift, and go to state 532
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    SIGNED	shift, and go to state 51
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 164
    BNE 	shift, and go to state 93
    NEXT	shift, and go to state 53
    NEGATION	shift, and go to state 165
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
<<<<<<< HEAD
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 60
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    statement	go to state 155
    function	go to state 156
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 157
    leftaddrshift	go to state 70
    array	go to state 158
    point_exp	go to state 159
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 162
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 163
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 164



state 351
=======
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 60
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    statement	go to state 166
    function_define	go to state 62
    function	go to state 167
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 168
    leftaddrshift	go to state 71
    array	go to state 169
    point_exp	go to state 170
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    prime_bool_exp	go to state 172
    identifier	go to state 173
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    imply_pre	go to state 174
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 175



state 366
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  NEXT OPEN_PAR statement . CLOSE_PAR   (rule 41)
    statement  ->  statement . PARALLEL statement   (rule 55)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 524
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196



state 352

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    ass_left  ->  array .   (rule 113)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 146)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 202
    OPEN_PAR	shift, and go to state 203
    CLOSE_PAR	shift, and go to state 329
    IMPLY	shift, and go to state 204

    CLOSE_PAR	[reduce using rule 113 (ass_left)]
    $default	reduce using rule 113 (ass_left)



state 353

    ass_left  ->  point_exp .   (rule 114)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 156)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 379)

    DOT 	shift, and go to state 205
    CLOSE_PAR	shift, and go to state 330
    IMPLY	shift, and go to state 206

    CLOSE_PAR	[reduce using rule 114 (ass_left)]
    $default	reduce using rule 114 (ass_left)



state 354

    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)

    CLOSE_PAR	shift, and go to state 331



state 355

    ass_left  ->  identifier .   (rule 111)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 318)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . DOT function   (rule 377)
    struct_member_exp  ->  identifier . IMPLY function   (rule 378)

    DOT 	shift, and go to state 207
    CLOSE_PAR	shift, and go to state 332
    IMPLY	shift, and go to state 208

    CLOSE_PAR	[reduce using rule 111 (ass_left)]
    $default	reduce using rule 111 (ass_left)



state 356

    ass_left  ->  struct_member_exp .   (rule 112)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 380)

    CLOSE_PAR	shift, and go to state 336

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    $default	reduce using rule 112 (ass_left)



state 357

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 115)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    OPEN_PAR	shift, and go to state 525
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 179
    ID  	shift, and go to state 174
=======
<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 541
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207
=======
    CLOSE_PAR	shift, and go to state 533
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 367

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    ass_left  ->  array .   (rule 114)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 147)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 376)
=======
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    ass_left  ->  array .   (rule 119)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 152)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 382)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    DOT 	shift, and go to state 213
    OPEN_PAR	shift, and go to state 214
    CLOSE_PAR	shift, and go to state 344
    IMPLY	shift, and go to state 215

    CLOSE_PAR	[reduce using rule 114 (ass_left)]
    $default	reduce using rule 114 (ass_left)



state 368

<<<<<<< HEAD
    ass_left  ->  point_exp .   (rule 115)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 157)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 380)
=======
    ass_left  ->  point_exp .   (rule 120)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 162)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 386)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    DOT 	shift, and go to state 216
    CLOSE_PAR	shift, and go to state 345
    IMPLY	shift, and go to state 217

    CLOSE_PAR	[reduce using rule 115 (ass_left)]
    $default	reduce using rule 115 (ass_left)



state 369

<<<<<<< HEAD
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
=======
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    CLOSE_PAR	shift, and go to state 346



state 370

<<<<<<< HEAD
    ass_left  ->  identifier .   (rule 112)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 319)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . DOT function   (rule 378)
    struct_member_exp  ->  identifier . IMPLY function   (rule 379)
=======
    ass_left  ->  identifier .   (rule 117)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 325)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 381)
    struct_member_exp  ->  identifier . DOT function   (rule 384)
    struct_member_exp  ->  identifier . IMPLY function   (rule 385)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    DOT 	shift, and go to state 218
    CLOSE_PAR	shift, and go to state 347
    IMPLY	shift, and go to state 219

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    $default	reduce using rule 112 (ass_left)



state 371

<<<<<<< HEAD
    ass_left  ->  struct_member_exp .   (rule 113)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 381)
=======
    ass_left  ->  struct_member_exp .   (rule 118)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 387)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    CLOSE_PAR	shift, and go to state 351

    CLOSE_PAR	[reduce using rule 113 (ass_left)]
    $default	reduce using rule 113 (ass_left)



state 372

<<<<<<< HEAD
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    OPEN_PAR	shift, and go to state 542
=======
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    OPEN_PAR	shift, and go to state 534
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 190
    ID  	shift, and go to state 185

<<<<<<< HEAD
    ass_left	go to state 495
    leftaddrshift	go to state 71
    array	go to state 543
    point_exp	go to state 368
    address_exp	go to state 369
    identifier	go to state 370
    struct_member_exp	go to state 371
=======
    ass_left	go to state 471
    leftaddrshift	go to state 71
    array	go to state 535
    point_exp	go to state 359
    address_exp	go to state 360
    identifier	go to state 361
    struct_member_exp	go to state 362
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    ass_left	go to state 464
    leftaddrshift	go to state 70
    array	go to state 526
    point_exp	go to state 353
    address_exp	go to state 354
    identifier	go to state 355
    struct_member_exp	go to state 356


<<<<<<< HEAD

state 358

    statement  ->  LENGTH OPEN_PAR ari_exp . CLOSE_PAR   (rule 49)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    CLOSE_PAR	shift, and go to state 527
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ari_operator	go to state 239



state 359

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    OPEN_PAR	shift, and go to state 423
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 174

    array	go to state 424
    point_exp	go to state 425
    address_exp	go to state 354
    identifier	go to state 427
    struct_member_exp	go to state 428



state 360

    input_statement  ->  REQUEST OPEN_PAR array . CLOSE_PAR   (rule 358)
    input_statement  ->  REQUEST OPEN_PAR array . option_input CLOSE_PAR   (rule 359)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 375)
=======
state 373

    statement  ->  LENGTH OPEN_PAR ari_exp . CLOSE_PAR   (rule 49)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 544
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    CLOSE_PAR	shift, and go to state 536
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    ari_operator	go to state 250



state 374

<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    OPEN_PAR	shift, and go to state 438
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    OPEN_PAR	shift, and go to state 430
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 185

<<<<<<< HEAD
    array	go to state 439
    point_exp	go to state 440
    address_exp	go to state 369
    identifier	go to state 442
    struct_member_exp	go to state 443
=======
    array	go to state 431
    point_exp	go to state 432
    address_exp	go to state 360
    identifier	go to state 434
    struct_member_exp	go to state 435
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 375

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR array . CLOSE_PAR   (rule 359)
    input_statement  ->  REQUEST OPEN_PAR array . option_input CLOSE_PAR   (rule 360)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 376)

    DOT 	shift, and go to state 213
    COMMA	shift, and go to state 545
    CLOSE_PAR	shift, and go to state 546
    IMPLY	shift, and go to state 215

    CLOSE_PAR	[reduce using rule 362 (option_input)]
    $default	reduce using rule 362 (option_input)

    option_input	go to state 547
=======
    input_statement  ->  REQUEST OPEN_PAR array . CLOSE_PAR   (rule 365)
    input_statement  ->  REQUEST OPEN_PAR array . option_input CLOSE_PAR   (rule 366)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 382)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    DOT 	shift, and go to state 202
    COMMA	shift, and go to state 528
    CLOSE_PAR	shift, and go to state 529
    IMPLY	shift, and go to state 204

    CLOSE_PAR	[reduce using rule 361 (option_input)]
    $default	reduce using rule 361 (option_input)

<<<<<<< HEAD
    option_input	go to state 530



state 361

    input_statement  ->  REQUEST OPEN_PAR identifier . CLOSE_PAR   (rule 356)
    input_statement  ->  REQUEST OPEN_PAR identifier . option_input CLOSE_PAR   (rule 357)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . DOT function   (rule 377)
    struct_member_exp  ->  identifier . IMPLY function   (rule 378)
=======
    option_input	go to state 539
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 376

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR identifier . CLOSE_PAR   (rule 357)
    input_statement  ->  REQUEST OPEN_PAR identifier . option_input CLOSE_PAR   (rule 358)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . DOT function   (rule 378)
    struct_member_exp  ->  identifier . IMPLY function   (rule 379)

    DOT 	shift, and go to state 218
    COMMA	shift, and go to state 545
    CLOSE_PAR	shift, and go to state 548
    IMPLY	shift, and go to state 219

    CLOSE_PAR	[reduce using rule 362 (option_input)]
    $default	reduce using rule 362 (option_input)

    option_input	go to state 549
=======
    input_statement  ->  REQUEST OPEN_PAR identifier . CLOSE_PAR   (rule 363)
    input_statement  ->  REQUEST OPEN_PAR identifier . option_input CLOSE_PAR   (rule 364)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 381)
    struct_member_exp  ->  identifier . DOT function   (rule 384)
    struct_member_exp  ->  identifier . IMPLY function   (rule 385)

    DOT 	shift, and go to state 212
    COMMA	shift, and go to state 537
    CLOSE_PAR	shift, and go to state 540
    IMPLY	shift, and go to state 213
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    DOT 	shift, and go to state 207
    COMMA	shift, and go to state 528
    CLOSE_PAR	shift, and go to state 531
    IMPLY	shift, and go to state 208

<<<<<<< HEAD
    CLOSE_PAR	[reduce using rule 361 (option_input)]
    $default	reduce using rule 361 (option_input)
=======
    option_input	go to state 541
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_input	go to state 532


<<<<<<< HEAD

state 362

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 360)
=======
state 377

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 361)

    CLOSE_PAR	shift, and go to state 550
=======
    input_statement  ->  REQUEST OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 367)

    CLOSE_PAR	shift, and go to state 542
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_PAR	shift, and go to state 533


<<<<<<< HEAD

state 363
=======
state 378
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  FINAL OPEN_PAR statement . CLOSE_PAR   (rule 54)
    statement  ->  statement . PARALLEL statement   (rule 55)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 534
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196



state 364
=======
<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 551
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207
=======
    CLOSE_PAR	shift, and go to state 543
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 379
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  KEEP OPEN_PAR statement . CLOSE_PAR   (rule 42)
    statement  ->  statement . PARALLEL statement   (rule 55)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 535
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196



state 365
=======
<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 552
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207
=======
    CLOSE_PAR	shift, and go to state 544
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 380
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  ALWAYS OPEN_PAR statement . CLOSE_PAR   (rule 43)
    statement  ->  statement . PARALLEL statement   (rule 55)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 536
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196



state 366

    address_exp  ->  ADDRESS . identifier   (rule 206)
    address_exp  ->  ADDRESS . array   (rule 207)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 208)
    address_exp  ->  ADDRESS . address_exp   (rule 209)
    option_function_identifier  ->  ADDRESS . error   (rule 308)

    error	shift, and go to state 537
    OPEN_PAR	shift, and go to state 229
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 174

    array	go to state 230
    point_exp	go to state 231
    address_exp	go to state 232
    identifier	go to state 233
    struct_member_exp	go to state 234



state 367

    option_function_identifier  ->  ass_right . inner_option_function_identifier   (rule 305)

    COMMA	shift, and go to state 538
=======
<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 553
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207
=======
    CLOSE_PAR	shift, and go to state 545
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 381

<<<<<<< HEAD
    address_exp  ->  ADDRESS . identifier   (rule 207)
    address_exp  ->  ADDRESS . array   (rule 208)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 209)
    address_exp  ->  ADDRESS . address_exp   (rule 210)
    option_function_identifier  ->  ADDRESS . error   (rule 309)

    error	shift, and go to state 554
    OPEN_PAR	shift, and go to state 240
=======
    address_exp  ->  ADDRESS . identifier   (rule 212)
    address_exp  ->  ADDRESS . array   (rule 213)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 214)
    address_exp  ->  ADDRESS . address_exp   (rule 215)
    option_function_identifier  ->  ADDRESS . error   (rule 315)

    error	shift, and go to state 546
    OPEN_PAR	shift, and go to state 234
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 185

    array	go to state 241
    point_exp	go to state 242
    address_exp	go to state 243
    identifier	go to state 244
    struct_member_exp	go to state 245



state 382

<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    option_function_identifier  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 307)
    identifier  ->  ID .   (rule 318)

    OPEN_PAR	shift, and go to state 555
    OPEN_MPAR	shift, and go to state 199

    $default	reduce using rule 318 (identifier)
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    option_function_identifier  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 312)
    identifier  ->  ID .   (rule 324)

    OPEN_PAR	shift, and go to state 547
    OPEN_MPAR	shift, and go to state 193

    $default	reduce using rule 324 (identifier)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 383

    option_function_identifier  ->  ass_right . inner_option_function_identifier   (rule 306)

<<<<<<< HEAD
    COMMA	shift, and go to state 556

    $default	reduce using rule 312 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 557
=======
    COMMA	shift, and go to state 548
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 311 (inner_option_function_identifier)

<<<<<<< HEAD
    inner_option_function_identifier	go to state 539



state 368

    option_function_identifier  ->  all_type_define .   (rule 306)

    $default	reduce using rule 306 (option_function_identifier)



state 369

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 70)
=======
    inner_option_function_identifier	go to state 549
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 384

<<<<<<< HEAD
    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 71)

    CLOSE_PAR	shift, and go to state 558
=======
    option_function_identifier  ->  all_type_define .   (rule 313)

    $default	reduce using rule 313 (option_function_identifier)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 385

<<<<<<< HEAD
    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 141)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 559
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 76)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_PAR	shift, and go to state 540



state 370

    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 140)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

<<<<<<< HEAD
    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 542
    ari_operator	go to state 239



state 371

    option_identifier_array_declaration  ->  MUL option_identifier_array_declaration .   (rule 102)

    $default	reduce using rule 102 (option_identifier_array_declaration)



state 372

    option_identifier_array_declaration  ->  ID ARRAY . ASS_P array_exp inner_option_identifier_array_declaration   (rule 98)
    option_identifier_array_declaration  ->  ID ARRAY . ASS_P strliteral inner_option_identifier_array_declaration   (rule 99)

    ASS_P	shift, and go to state 543



state 373

    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 96)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 101)
=======
    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 560
    ari_operator	go to state 250



state 386
=======
    option_ari_exp	go to state 552
    ari_operator	go to state 244



state 378
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_identifier_array_declaration  ->  MUL option_identifier_array_declaration .   (rule 103)

    $default	reduce using rule 103 (option_identifier_array_declaration)



<<<<<<< HEAD
state 387
=======
state 379
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_identifier_array_declaration  ->  ID ARRAY . ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID ARRAY . ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)

<<<<<<< HEAD
    ASS_P	shift, and go to state 561



state 388
=======
    ASS_P	shift, and go to state 553



state 380
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 102)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 544
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 374

    inner_option_identifier_array_declaration  ->  COMMA . option_identifier_array_declaration   (rule 103)
    inner_option_identifier_array_declaration  ->  COMMA . error   (rule 104)

    error	shift, and go to state 545
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 189
    ID  	shift, and go to state 190
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 562
=======
    ari_exp	go to state 554
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 389
=======
state 381
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    inner_option_identifier_array_declaration  ->  COMMA . option_identifier_array_declaration   (rule 104)
    inner_option_identifier_array_declaration  ->  COMMA . error   (rule 105)

<<<<<<< HEAD
    error	shift, and go to state 563
    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 200
    ID  	shift, and go to state 201

    option_identifier_array_declaration	go to state 564
    identifier	go to state 203



state 390
=======
    error	shift, and go to state 555
    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 194
    ID  	shift, and go to state 195
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_identifier_array_declaration	go to state 546
    identifier	go to state 192



<<<<<<< HEAD
state 375

    option_identifier_array_declaration  ->  identifier ASS_P . ass_right inner_option_identifier_array_declaration   (rule 97)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 547
    rightaddrshift	go to state 308
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 376

    option_identifier_array_declaration  ->  identifier inner_option_identifier_array_declaration .   (rule 95)

    $default	reduce using rule 95 (option_identifier_array_declaration)



state 377
=======
state 382
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_identifier_array_declaration  ->  identifier ASS_P . ass_right inner_option_identifier_array_declaration   (rule 98)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 124
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 127
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
<<<<<<< HEAD
    ass_right	go to state 565
    rightaddrshift	go to state 130
=======
    ass_right	go to state 557
    rightaddrshift	go to state 313
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 132
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    strliteral	go to state 135
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 391
=======
state 383
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_identifier_array_declaration  ->  identifier inner_option_identifier_array_declaration .   (rule 96)

    $default	reduce using rule 96 (option_identifier_array_declaration)



<<<<<<< HEAD
state 392
=======
state 384
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement CHOP statement .   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)

<<<<<<< HEAD
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196
=======
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 32 (statement)



<<<<<<< HEAD
state 378
=======
<<<<<<< HEAD
state 393
=======
state 385
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement OR statement .   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)

<<<<<<< HEAD
    AND 	shift, and go to state 196
=======
    AND 	shift, and go to state 207
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 31 (statement)



<<<<<<< HEAD
state 379
=======
<<<<<<< HEAD
state 394
=======
state 386
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  statement PARALLEL statement .   (rule 55)

<<<<<<< HEAD
    AND 	shift, and go to state 196
=======
    AND 	shift, and go to state 207
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 55 (statement)



<<<<<<< HEAD
state 380
=======
<<<<<<< HEAD
state 395
=======
state 387
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement AND statement .   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)


    $default	reduce using rule 30 (statement)



<<<<<<< HEAD
state 381

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration . CLOSE_BPAR   (rule 73)

    CLOSE_BPAR	shift, and go to state 548



state 382
=======
<<<<<<< HEAD
state 396
=======
state 388
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration . CLOSE_BPAR   (rule 74)

<<<<<<< HEAD
    CLOSE_BPAR	shift, and go to state 566



state 397
=======
    CLOSE_BPAR	shift, and go to state 558



state 389
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_struct_declaration  ->  sign_declaration .   (rule 66)
    option_struct_declaration  ->  sign_declaration . AND option_struct_declaration   (rule 67)

<<<<<<< HEAD
    AND 	shift, and go to state 549
=======
<<<<<<< HEAD
    AND 	shift, and go to state 567
=======
    AND 	shift, and go to state 559
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 66 (option_struct_declaration)



<<<<<<< HEAD
state 383

    ass_statement  ->  ass_left assign_operator ass_right .   (rule 110)

    $default	reduce using rule 110 (ass_statement)
=======
<<<<<<< HEAD
state 398
=======
state 390
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    ass_statement  ->  ass_left assign_operator ass_right .   (rule 111)

    $default	reduce using rule 111 (ass_statement)



<<<<<<< HEAD
state 399

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)

    OPEN_PAR	shift, and go to state 568
    ID  	shift, and go to state 185

    array	go to state 569
    identifier	go to state 307



state 400

    struct_member_exp  ->  array DOT array . option_struct_member_exp   (rule 369)

    DOT 	shift, and go to state 570
    IMPLY	shift, and go to state 571

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 572



state 401
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    struct_member_exp  ->  array DOT identifier . option_struct_member_exp   (rule 366)

    DOT 	shift, and go to state 570
    IMPLY	shift, and go to state 571

<<<<<<< HEAD
state 384
=======
    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)
=======
state 391
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)

    OPEN_PAR	shift, and go to state 550
    ID  	shift, and go to state 174

    array	go to state 551
    identifier	go to state 282



state 385

    struct_member_exp  ->  array DOT array . option_struct_member_exp   (rule 368)

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

<<<<<<< HEAD
    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 554



state 386

    struct_member_exp  ->  array DOT identifier . option_struct_member_exp   (rule 365)

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553
=======
    DOT 	[reduce using rule 388 (option_struct_member_exp)]
    IMPLY	[reduce using rule 388 (option_struct_member_exp)]
    $default	reduce using rule 388 (option_struct_member_exp)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_struct_member_exp	go to state 573



state 402

<<<<<<< HEAD
    function  ->  array OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 73)

    CLOSE_PAR	shift, and go to state 574
=======
    struct_member_exp  ->  array DOT identifier . option_struct_member_exp   (rule 372)

    DOT 	shift, and go to state 562
    IMPLY	shift, and go to state 563
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 555

<<<<<<< HEAD
state 403

    struct_member_exp  ->  array IMPLY array . option_struct_member_exp   (rule 376)

    DOT 	shift, and go to state 570
    IMPLY	shift, and go to state 571

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 575
=======


state 387

    function  ->  array OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 72)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 556



state 388

    struct_member_exp  ->  array IMPLY array . option_struct_member_exp   (rule 375)
=======
    CLOSE_PAR	shift, and go to state 566
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 404

<<<<<<< HEAD
    struct_member_exp  ->  array IMPLY identifier . option_struct_member_exp   (rule 372)

    DOT 	shift, and go to state 570
    IMPLY	shift, and go to state 571

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)
=======
    struct_member_exp  ->  array IMPLY array . option_struct_member_exp   (rule 382)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

<<<<<<< HEAD
    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 557



state 389

    struct_member_exp  ->  array IMPLY identifier . option_struct_member_exp   (rule 371)
=======
    DOT 	[reduce using rule 388 (option_struct_member_exp)]
    IMPLY	[reduce using rule 388 (option_struct_member_exp)]
    $default	reduce using rule 388 (option_struct_member_exp)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_struct_member_exp	go to state 576



state 405

<<<<<<< HEAD
    struct_member_exp  ->  point_exp DOT array . option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 570
    IMPLY	shift, and go to state 571

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)
=======
    struct_member_exp  ->  array IMPLY identifier . option_struct_member_exp   (rule 378)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

<<<<<<< HEAD
    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 558



state 390

    struct_member_exp  ->  point_exp DOT array . option_struct_member_exp   (rule 369)
=======
    DOT 	[reduce using rule 388 (option_struct_member_exp)]
    IMPLY	[reduce using rule 388 (option_struct_member_exp)]
    $default	reduce using rule 388 (option_struct_member_exp)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_struct_member_exp	go to state 577



state 406

<<<<<<< HEAD
    struct_member_exp  ->  point_exp DOT identifier . option_struct_member_exp   (rule 367)

    DOT 	shift, and go to state 570
    IMPLY	shift, and go to state 571

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)
=======
    struct_member_exp  ->  point_exp DOT array . option_struct_member_exp   (rule 376)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

<<<<<<< HEAD
    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 559



state 391

    struct_member_exp  ->  point_exp DOT identifier . option_struct_member_exp   (rule 366)
=======
    DOT 	[reduce using rule 388 (option_struct_member_exp)]
    IMPLY	[reduce using rule 388 (option_struct_member_exp)]
    $default	reduce using rule 388 (option_struct_member_exp)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_struct_member_exp	go to state 578



state 407

<<<<<<< HEAD
    struct_member_exp  ->  point_exp IMPLY array . option_struct_member_exp   (rule 380)

    DOT 	shift, and go to state 570
    IMPLY	shift, and go to state 571

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)
=======
    struct_member_exp  ->  point_exp DOT identifier . option_struct_member_exp   (rule 373)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

<<<<<<< HEAD
    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 560



state 392

    struct_member_exp  ->  point_exp IMPLY array . option_struct_member_exp   (rule 379)
=======
    DOT 	[reduce using rule 388 (option_struct_member_exp)]
    IMPLY	[reduce using rule 388 (option_struct_member_exp)]
    $default	reduce using rule 388 (option_struct_member_exp)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_struct_member_exp	go to state 579



state 408

<<<<<<< HEAD
    struct_member_exp  ->  point_exp IMPLY identifier . option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 570
    IMPLY	shift, and go to state 571

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)
=======
    struct_member_exp  ->  point_exp IMPLY array . option_struct_member_exp   (rule 386)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

<<<<<<< HEAD
    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 561



state 393

    struct_member_exp  ->  point_exp IMPLY identifier . option_struct_member_exp   (rule 373)

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553
=======
    DOT 	[reduce using rule 388 (option_struct_member_exp)]
    IMPLY	[reduce using rule 388 (option_struct_member_exp)]
    $default	reduce using rule 388 (option_struct_member_exp)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_struct_member_exp	go to state 580



state 409

<<<<<<< HEAD
    struct_member_exp  ->  identifier DOT function .   (rule 378)

    $default	reduce using rule 378 (struct_member_exp)
=======
    struct_member_exp  ->  point_exp IMPLY identifier . option_struct_member_exp   (rule 380)

    DOT 	shift, and go to state 562
    IMPLY	shift, and go to state 563
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 562

<<<<<<< HEAD
state 410

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    struct_member_exp  ->  identifier DOT array . option_struct_member_exp   (rule 368)

    DOT 	shift, and go to state 570
    OPEN_PAR	shift, and go to state 214
    IMPLY	shift, and go to state 571

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 581
=======


state 394

    struct_member_exp  ->  identifier DOT function .   (rule 377)

<<<<<<< HEAD
    $default	reduce using rule 377 (struct_member_exp)



state 395

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    struct_member_exp  ->  identifier DOT array . option_struct_member_exp   (rule 367)
=======
    $default	reduce using rule 384 (struct_member_exp)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 411

<<<<<<< HEAD
    struct_member_exp  ->  identifier DOT identifier . option_struct_member_exp   (rule 365)

    DOT 	shift, and go to state 570
    IMPLY	shift, and go to state 571

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)
=======
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    struct_member_exp  ->  identifier DOT array . option_struct_member_exp   (rule 374)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    DOT 	shift, and go to state 552
    OPEN_PAR	shift, and go to state 203
    IMPLY	shift, and go to state 553

<<<<<<< HEAD
    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 563



state 396

    struct_member_exp  ->  identifier DOT identifier . option_struct_member_exp   (rule 364)
=======
    DOT 	[reduce using rule 388 (option_struct_member_exp)]
    IMPLY	[reduce using rule 388 (option_struct_member_exp)]
    $default	reduce using rule 388 (option_struct_member_exp)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_struct_member_exp	go to state 582



state 412

<<<<<<< HEAD
    struct_member_exp  ->  identifier IMPLY function .   (rule 379)

    $default	reduce using rule 379 (struct_member_exp)
=======
    struct_member_exp  ->  identifier DOT identifier . option_struct_member_exp   (rule 371)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

<<<<<<< HEAD
    option_struct_member_exp	go to state 564



state 397

    struct_member_exp  ->  identifier IMPLY function .   (rule 378)
=======
    option_struct_member_exp	go to state 574
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 413

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    struct_member_exp  ->  identifier IMPLY array . option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 570
    OPEN_PAR	shift, and go to state 214
    IMPLY	shift, and go to state 571

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 583



state 414

    struct_member_exp  ->  identifier IMPLY identifier . option_struct_member_exp   (rule 371)

    DOT 	shift, and go to state 570
    IMPLY	shift, and go to state 571

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 584



state 415
=======
    struct_member_exp  ->  identifier IMPLY function .   (rule 385)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 378 (struct_member_exp)



state 398

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    struct_member_exp  ->  identifier IMPLY array . option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 552
    OPEN_PAR	shift, and go to state 203
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 565



state 399

    struct_member_exp  ->  identifier IMPLY identifier . option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 566



<<<<<<< HEAD
state 400
=======
state 407
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    complexProposition  ->  DEFINE ID COLON prime_bool_exp .   (rule 25)

    $default	reduce using rule 25 (complexProposition)



<<<<<<< HEAD
state 401
=======
<<<<<<< HEAD
state 416
=======
state 408
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    poptional_projection  ->  COMMA complexProposition . poptional_projection   (rule 28)

<<<<<<< HEAD
    COMMA	shift, and go to state 211
    CHOP	shift, and go to state 116
    IFF 	shift, and go to state 117
    PROPIMPLY	shift, and go to state 118
    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 567
=======
    COMMA	shift, and go to state 222
    CHOP	shift, and go to state 117
    IFF 	shift, and go to state 118
    PROPIMPLY	shift, and go to state 119
    OR  	shift, and go to state 120
    AND 	shift, and go to state 121
    CHOPSTAR	shift, and go to state 122

    $default	reduce using rule 29 (poptional_projection)

<<<<<<< HEAD
    poptional_projection	go to state 585



state 417

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR . PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    PROJECTION	shift, and go to state 586



state 418
=======
    poptional_projection	go to state 577
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 402

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR . PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    PROJECTION	shift, and go to state 568



<<<<<<< HEAD
state 403

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 160)
=======
state 410
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 161)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 569
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 404

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 232)

    MUL 	shift, and go to state 570



state 405

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 211)
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 587
=======
    ari_exp	go to state 579
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 419
=======
state 411
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 233)

<<<<<<< HEAD
    MUL 	shift, and go to state 588



state 420
=======
    MUL 	shift, and go to state 580



state 412
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 212)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 571
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 406

    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 573
    MUL 	shift, and go to state 574



state 407

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 213)
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    type_cast_alg_exp	go to state 589
    simple_ari_exp	go to state 590
=======
    type_cast_alg_exp	go to state 581
    simple_ari_exp	go to state 582
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 421
=======
state 413
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 591
    MUL 	shift, and go to state 592



state 422
=======
    CLOSE_PAR	shift, and go to state 583
    MUL 	shift, and go to state 584



state 414
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 214)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 575
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 408

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 576
    MUL 	shift, and go to state 577



state 409

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 578
    MUL 	shift, and go to state 579



state 410

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 212)
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    type_cast_alg_exp	go to state 593
    simple_ari_exp	go to state 590
=======
    type_cast_alg_exp	go to state 585
    simple_ari_exp	go to state 582
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 423
=======
state 415
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 594
    MUL 	shift, and go to state 595



state 424
=======
    CLOSE_PAR	shift, and go to state 586
    MUL 	shift, and go to state 587



state 416
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 596
    MUL 	shift, and go to state 597



state 425
=======
    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 589



state 417
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 213)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 580
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 411

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 581
    MUL 	shift, and go to state 582



state 412

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 405
    MUL 	shift, and go to state 583



state 413

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 584



state 414

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 585



state 415

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)

    INTDECLARATION	shift, and go to state 586
    CHARDECLARATION	shift, and go to state 587



state 416

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 589



state 417

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 591



state 418

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)

    CLOSE_PAR	shift, and go to state 592



state 419

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)

    CLOSE_PAR	shift, and go to state 593



state 420

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 594
    MUL 	shift, and go to state 595



state 421

    member_in_exp  ->  OPEN_PAR ari_exp CLOSE_PAR .   (rule 176)

    $default	reduce using rule 176 (member_in_exp)
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    type_cast_alg_exp	go to state 598
    simple_ari_exp	go to state 590
=======
    type_cast_alg_exp	go to state 590
    simple_ari_exp	go to state 582
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 426
=======
state 418
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 599
    MUL 	shift, and go to state 600



state 427
=======
    CLOSE_PAR	shift, and go to state 591
    MUL 	shift, and go to state 592



state 419
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 420
    MUL 	shift, and go to state 601



state 428
=======
    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 593



state 420
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 422
    MUL 	shift, and go to state 602



state 429
=======
    CLOSE_PAR	shift, and go to state 414
    MUL 	shift, and go to state 594



state 421
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 425
    MUL 	shift, and go to state 603



state 430
=======
    CLOSE_PAR	shift, and go to state 417
    MUL 	shift, and go to state 595



state 422
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 604
    CHARDECLARATION	shift, and go to state 605



state 431
=======
    INTDECLARATION	shift, and go to state 596
    CHARDECLARATION	shift, and go to state 597



state 423
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 606
    MUL 	shift, and go to state 607



state 432
=======
    CLOSE_PAR	shift, and go to state 598
    MUL 	shift, and go to state 599



state 424
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 608
    MUL 	shift, and go to state 609



state 433
=======
    CLOSE_PAR	shift, and go to state 600
    MUL 	shift, and go to state 601



state 425
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 610



state 434
=======
    CLOSE_PAR	shift, and go to state 602



state 426
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 611



state 435
=======
    CLOSE_PAR	shift, and go to state 603



state 427
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 234)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 612
    MUL 	shift, and go to state 613



state 436
=======
    CLOSE_PAR	shift, and go to state 604
    MUL 	shift, and go to state 605



state 428
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    member_in_exp  ->  OPEN_PAR ari_exp CLOSE_PAR .   (rule 177)

    $default	reduce using rule 177 (member_in_exp)

>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


<<<<<<< HEAD
state 437

    address_exp  ->  OPEN_PAR address_exp CLOSE_PAR .   (rule 211)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 377)

<<<<<<< HEAD
state 422
=======
    IMPLY	shift, and go to state 521
=======
state 429
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    address_exp  ->  OPEN_PAR address_exp CLOSE_PAR .   (rule 210)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 376)

<<<<<<< HEAD
    IMPLY	shift, and go to state 504

    IMPLY	[reduce using rule 210 (address_exp)]
    $default	reduce using rule 210 (address_exp)



state 423
=======
    IMPLY	shift, and go to state 511
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    IMPLY	[reduce using rule 211 (address_exp)]
    $default	reduce using rule 211 (address_exp)



<<<<<<< HEAD
state 438

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    INTDECLARATION	shift, and go to state 614
    CHARDECLARATION	shift, and go to state 615
    FLOATDECLARATION	shift, and go to state 616
    OPEN_PAR	shift, and go to state 438
    UNSIGNED	shift, and go to state 617
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 185
=======
state 430
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    INTDECLARATION	shift, and go to state 596
    CHARDECLARATION	shift, and go to state 597
    FLOATDECLARATION	shift, and go to state 598
    OPEN_PAR	shift, and go to state 423
    UNSIGNED	shift, and go to state 599
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 174

<<<<<<< HEAD
    array	go to state 424
    point_exp	go to state 425
    address_exp	go to state 426
    identifier	go to state 427
    struct_member_exp	go to state 428
=======
    array	go to state 431
    point_exp	go to state 432
    address_exp	go to state 433
    identifier	go to state 434
    struct_member_exp	go to state 435
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    array	go to state 439
    point_exp	go to state 440
    address_exp	go to state 441
    identifier	go to state 442
    struct_member_exp	go to state 443


<<<<<<< HEAD
state 424

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 146)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 202
    CLOSE_PAR	shift, and go to state 329
    IMPLY	shift, and go to state 204
=======
<<<<<<< HEAD
=======
state 431

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 152)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 382)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 439
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 147)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 376)

    DOT 	shift, and go to state 213
    CLOSE_PAR	shift, and go to state 344
    IMPLY	shift, and go to state 215

<<<<<<< HEAD
state 425

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 156)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 379)

    DOT 	shift, and go to state 205
    CLOSE_PAR	shift, and go to state 330
    IMPLY	shift, and go to state 206
=======
<<<<<<< HEAD

=======
state 432

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 162)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 386)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 440

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 157)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 380)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    DOT 	shift, and go to state 216
    CLOSE_PAR	shift, and go to state 345
    IMPLY	shift, and go to state 217

<<<<<<< HEAD

<<<<<<< HEAD
state 426
=======

state 441
=======
state 433
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 210)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 422
=======
    CLOSE_PAR	shift, and go to state 429
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 211)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)

    CLOSE_PAR	shift, and go to state 437

<<<<<<< HEAD
state 427

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 318)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . DOT function   (rule 377)
    struct_member_exp  ->  identifier . IMPLY function   (rule 378)

    DOT 	shift, and go to state 207
    CLOSE_PAR	shift, and go to state 332
    IMPLY	shift, and go to state 208
=======
<<<<<<< HEAD

=======
state 434

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 325)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 377)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 381)
    struct_member_exp  ->  identifier . DOT function   (rule 384)
    struct_member_exp  ->  identifier . IMPLY function   (rule 385)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 442

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 319)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . DOT function   (rule 378)
    struct_member_exp  ->  identifier . IMPLY function   (rule 379)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    DOT 	shift, and go to state 218
    CLOSE_PAR	shift, and go to state 347
    IMPLY	shift, and go to state 219

<<<<<<< HEAD

<<<<<<< HEAD
state 428

    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 380)

    CLOSE_PAR	shift, and go to state 336
=======
=======
state 435

    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 387)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 443
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 381)

    CLOSE_PAR	shift, and go to state 351

<<<<<<< HEAD
state 429

    ari_exp  ->  ari_exp ari_operator simple_ari_exp .   (rule 159)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 166)

    INTER_OR	shift, and go to state 240
    CON 	shift, and go to state 241
    ADDRESS	shift, and go to state 242
    LST 	shift, and go to state 249
    RST 	shift, and go to state 250
    MUL 	shift, and go to state 251
    DIV 	shift, and go to state 252
    MOD 	shift, and go to state 253

    INTER_OR	[reduce using rule 159 (ari_exp)]
    CON 	[reduce using rule 159 (ari_exp)]
    ADDRESS	[reduce using rule 159 (ari_exp)]
    LST 	[reduce using rule 159 (ari_exp)]
    RST 	[reduce using rule 159 (ari_exp)]
    MUL 	[reduce using rule 159 (ari_exp)]
    DIV 	[reduce using rule 159 (ari_exp)]
    MOD 	[reduce using rule 159 (ari_exp)]
    $default	reduce using rule 159 (ari_exp)

    bi_operator	go to state 254
=======
<<<<<<< HEAD
=======
state 436
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 444

<<<<<<< HEAD
state 430

    simple_ari_exp  ->  simple_ari_exp bi_operator member_in_exp .   (rule 166)

    $default	reduce using rule 166 (simple_ari_exp)
=======
    ari_exp  ->  ari_exp ari_operator simple_ari_exp .   (rule 160)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 167)

    INTER_OR	shift, and go to state 251
    CON 	shift, and go to state 252
    ADDRESS	shift, and go to state 253
    LST 	shift, and go to state 260
    RST 	shift, and go to state 261
    MUL 	shift, and go to state 262
    DIV 	shift, and go to state 263
    MOD 	shift, and go to state 264

    INTER_OR	[reduce using rule 160 (ari_exp)]
    CON 	[reduce using rule 160 (ari_exp)]
    ADDRESS	[reduce using rule 160 (ari_exp)]
    LST 	[reduce using rule 160 (ari_exp)]
    RST 	[reduce using rule 160 (ari_exp)]
    MUL 	[reduce using rule 160 (ari_exp)]
    DIV 	[reduce using rule 160 (ari_exp)]
    MOD 	[reduce using rule 160 (ari_exp)]
    $default	reduce using rule 160 (ari_exp)

    bi_operator	go to state 265

<<<<<<< HEAD
=======
state 437
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


state 445
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    simple_ari_exp  ->  simple_ari_exp bi_operator member_in_exp .   (rule 167)

    $default	reduce using rule 167 (simple_ari_exp)

<<<<<<< HEAD
state 431

    ari_exp  ->  simple_ari_exp relation_operator ari_exp .   (rule 158)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ADD 	[reduce using rule 158 (ari_exp)]
    SUB 	[reduce using rule 158 (ari_exp)]
    $default	reduce using rule 158 (ari_exp)

    ari_operator	go to state 239
=======
<<<<<<< HEAD
=======
state 438
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


state 446

    ari_exp  ->  simple_ari_exp relation_operator ari_exp .   (rule 159)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    ADD 	[reduce using rule 159 (ari_exp)]
    SUB 	[reduce using rule 159 (ari_exp)]
    $default	reduce using rule 159 (ari_exp)

    ari_operator	go to state 250

<<<<<<< HEAD
state 432
=======
<<<<<<< HEAD


state 447
=======
state 439
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR . OPEN_BPAR case_par CLOSE_BPAR   (rule 343)

<<<<<<< HEAD
    OPEN_BPAR	shift, and go to state 600
=======
    OPEN_BPAR	shift, and go to state 610
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR . OPEN_BPAR case_par CLOSE_BPAR   (rule 344)

    OPEN_BPAR	shift, and go to state 618

<<<<<<< HEAD
state 433

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    prime_bool_exp  ->  POINTERNULL NE ari_exp .   (rule 251)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 251 (prime_bool_exp)

    ari_operator	go to state 239



state 434

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    prime_bool_exp  ->  POINTERNULL EQ ari_exp .   (rule 250)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 250 (prime_bool_exp)

    ari_operator	go to state 239
=======
<<<<<<< HEAD
=======
state 440
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


state 448

    ass_right  ->  OPEN_PAR ass_right CLOSE_PAR .   (rule 138)

    $default	reduce using rule 138 (ass_right)



<<<<<<< HEAD
state 449
=======
state 441
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array_exp  ->  OPEN_PAR array_exp CLOSE_PAR .   (rule 195)

    $default	reduce using rule 195 (array_exp)


>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 450

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR . OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)

<<<<<<< HEAD
state 435

    bool_exp  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 239)

    $default	reduce using rule 239 (bool_exp)
=======
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 619
=======
state 442
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 451

<<<<<<< HEAD
state 436

    prime_bool_exp  ->  ari_exp NE POINTERNULL .   (rule 249)

    $default	reduce using rule 249 (prime_bool_exp)
=======
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 195)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

<<<<<<< HEAD
    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 427
    CHARDECLARATION	shift, and go to state 428
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 429
    OPEN_PAR	shift, and go to state 451
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 430
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96
=======
state 443
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 452
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239

>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 452

<<<<<<< HEAD
state 437

    prime_bool_exp  ->  ari_exp NE strliteral .   (rule 245)

    $default	reduce using rule 245 (prime_bool_exp)
=======
<<<<<<< HEAD
    array_exp  ->  array_exp . CON array_exp   (rule 192)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 195)
=======
state 444
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    CLOSE_PAR	shift, and go to state 449
    CON 	shift, and go to state 286

>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 453

<<<<<<< HEAD
state 438

    prime_bool_exp  ->  ari_exp NE charliteral .   (rule 253)

    $default	reduce using rule 253 (prime_bool_exp)



state 439

    prime_bool_exp  ->  ari_exp EQ POINTERNULL .   (rule 248)

    $default	reduce using rule 248 (prime_bool_exp)



state 440

    prime_bool_exp  ->  ari_exp EQ strliteral .   (rule 244)

    $default	reduce using rule 244 (prime_bool_exp)



state 441

    prime_bool_exp  ->  ari_exp EQ charliteral .   (rule 252)

    $default	reduce using rule 252 (prime_bool_exp)



state 442

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    prime_bool_exp  ->  ari_exp relation_operator ari_exp .   (rule 240)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 240 (prime_bool_exp)

    ari_operator	go to state 239
=======
<<<<<<< HEAD
    inner_option_list_value  ->  COMMA . ari_exp inner_option_list_value   (rule 202)
    inner_option_list_value  ->  COMMA . strliteral inner_option_list_value   (rule 203)
    inner_option_list_value  ->  COMMA . array_exp inner_option_list_value   (rule 204)
    inner_option_list_value  ->  COMMA . error   (rule 206)
=======
state 445
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    error	shift, and go to state 620
    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 278
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 621
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 622
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    strliteral	go to state 623
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 454
=======
state 446
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value . CLOSE_BPAR   (rule 199)

    CLOSE_BPAR	shift, and go to state 624



<<<<<<< HEAD
state 455
=======
state 447
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value . CLOSE_BPAR   (rule 201)

    CLOSE_BPAR	shift, and go to state 625



<<<<<<< HEAD
state 456
=======
state 448
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value . CLOSE_BPAR   (rule 200)

    CLOSE_BPAR	shift, and go to state 626



<<<<<<< HEAD
state 457
=======
state 449
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value . CLOSE_MPAR   (rule 196)

    CLOSE_MPAR	shift, and go to state 627


>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 458

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value . CLOSE_MPAR   (rule 198)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 628



state 459

<<<<<<< HEAD
state 443
=======
    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value . CLOSE_MPAR   (rule 197)
=======
state 450
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    if_statement  ->  IF bool_exp THEN statement_bpar . option_else_statement   (rule 349)

    ELSE	shift, and go to state 601

    $default	reduce using rule 351 (option_else_statement)

<<<<<<< HEAD
    option_else_statement	go to state 602
=======
    option_else_statement	go to state 612
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_MPAR	shift, and go to state 629


<<<<<<< HEAD
state 444

    bool_exp  ->  bool_exp . AND bool_exp   (rule 237)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 238)
    bool_exp  ->  bool_exp OR bool_exp .   (rule 238)

    AND 	shift, and go to state 273

    $default	reduce using rule 238 (bool_exp)
=======
<<<<<<< HEAD
=======
state 451
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 460

    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 427
    CHARDECLARATION	shift, and go to state 428
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 429
    OPEN_PAR	shift, and go to state 630
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 430
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239


<<<<<<< HEAD
state 445

    bool_exp  ->  bool_exp . AND bool_exp   (rule 237)
    bool_exp  ->  bool_exp AND bool_exp .   (rule 237)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 238)
=======
<<<<<<< HEAD
=======
state 452
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 461
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift . CLOSE_PAR   (rule 140)

<<<<<<< HEAD
    $default	reduce using rule 237 (bool_exp)



state 446

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    prime_bool_exp  ->  strliteral NE ari_exp .   (rule 247)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 247 (prime_bool_exp)

    ari_operator	go to state 239
=======
    CLOSE_PAR	shift, and go to state 631



<<<<<<< HEAD
state 462
=======
state 453
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 195)

    OPEN_PAR	shift, and go to state 462
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126

    array_exp	go to state 452
    option_list_value	go to state 133
    option_struct_list_value	go to state 134



state 463

    array_exp  ->  array_exp . CON array_exp   (rule 192)
    array_exp  ->  array_exp CON array_exp .   (rule 192)

>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 192 (array_exp)


<<<<<<< HEAD
state 447

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    prime_bool_exp  ->  strliteral EQ ari_exp .   (rule 246)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238
=======
<<<<<<< HEAD
=======
state 454
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 464

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    prime_bool_exp  ->  POINTERNULL NE ari_exp .   (rule 252)

    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 246 (prime_bool_exp)

<<<<<<< HEAD
    ari_operator	go to state 239



state 448
=======
    ari_operator	go to state 250



<<<<<<< HEAD
state 465
=======
state 455
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    prime_bool_exp  ->  POINTERNULL EQ ari_exp .   (rule 251)

    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 251 (prime_bool_exp)

    ari_operator	go to state 250

<<<<<<< HEAD
state 449

    option_function_parameter_list  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 286)

    MUL 	shift, and go to state 603
=======
<<<<<<< HEAD
=======
state 456
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
state 466
=======
    MUL 	shift, and go to state 613
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    bool_exp  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 240)

    $default	reduce using rule 240 (bool_exp)

<<<<<<< HEAD
state 450

    option_function_parameter_list  ->  ID . identifier inner_option_define_identifier   (rule 270)
    option_function_parameter_list  ->  ID . MUL identifier inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  ID . MUL MUL identifier inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  ID . identifier ARRAY inner_option_define_identifier   (rule 273)
    option_function_parameter_list  ->  ID . inner_option_define_identifier   (rule 277)
    option_function_parameter_list  ->  ID . MUL inner_option_define_identifier   (rule 278)
    option_function_parameter_list  ->  ID . MUL MUL inner_option_define_identifier   (rule 279)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 604
    ID  	shift, and go to state 141

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 605
    identifier	go to state 606



state 451

    option_function_parameter_list  ->  STRUCT_TYPE . identifier inner_option_define_identifier   (rule 266)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 267)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL identifier inner_option_define_identifier   (rule 268)
    option_function_parameter_list  ->  STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 269)
    option_function_parameter_list  ->  STRUCT_TYPE . inner_option_define_identifier   (rule 274)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL inner_option_define_identifier   (rule 275)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL inner_option_define_identifier   (rule 276)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 607
    ID  	shift, and go to state 141

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 608
    identifier	go to state 609
=======
<<<<<<< HEAD
=======
state 457
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
state 467
=======
    COMMA	shift, and go to state 288
    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 614
    ID  	shift, and go to state 142
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    prime_bool_exp  ->  ari_exp NE POINTERNULL .   (rule 250)

<<<<<<< HEAD
    $default	reduce using rule 250 (prime_bool_exp)



state 468
=======
    inner_option_define_identifier	go to state 615
    identifier	go to state 616



state 458
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    prime_bool_exp  ->  ari_exp NE strliteral .   (rule 246)

<<<<<<< HEAD
    $default	reduce using rule 246 (prime_bool_exp)
=======
    COMMA	shift, and go to state 288
    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 617
    ID  	shift, and go to state 142
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
=======
    inner_option_define_identifier	go to state 618
    identifier	go to state 619
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 469

    prime_bool_exp  ->  ari_exp NE charliteral .   (rule 254)

<<<<<<< HEAD
state 452

    option_function_parameter_list  ->  all_type_define . identifier inner_option_define_identifier   (rule 264)
    option_function_parameter_list  ->  all_type_define . inner_option_define_identifier   (rule 265)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY inner_option_define_identifier   (rule 280)
    option_function_parameter_list  ->  all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 282)
    option_function_parameter_list  ->  all_type_define . MUL identifier inner_option_define_identifier   (rule 283)
    option_function_parameter_list  ->  all_type_define . MUL inner_option_define_identifier   (rule 284)
    option_function_parameter_list  ->  all_type_define . MUL MUL identifier inner_option_define_identifier   (rule 285)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 610
    ID  	shift, and go to state 141

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 611
    identifier	go to state 612
=======
<<<<<<< HEAD
    $default	reduce using rule 254 (prime_bool_exp)
=======
state 459
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
=======
    COMMA	shift, and go to state 288
    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 620
    ID  	shift, and go to state 142
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 470

<<<<<<< HEAD
    prime_bool_exp  ->  ari_exp EQ POINTERNULL .   (rule 249)
=======
    inner_option_define_identifier	go to state 621
    identifier	go to state 622
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 249 (prime_bool_exp)


<<<<<<< HEAD
state 453

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    CLOSE_PAR	shift, and go to state 613
=======
<<<<<<< HEAD
=======
state 460
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 471

<<<<<<< HEAD
    prime_bool_exp  ->  ari_exp EQ strliteral .   (rule 245)
=======
    CLOSE_PAR	shift, and go to state 623
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 245 (prime_bool_exp)


<<<<<<< HEAD
state 454

    inner_option_define_identifier  ->  COMMA error .   (rule 304)

    $default	reduce using rule 304 (inner_option_define_identifier)
=======
<<<<<<< HEAD
=======
state 461
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 472

    prime_bool_exp  ->  ari_exp EQ charliteral .   (rule 253)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 253 (prime_bool_exp)


<<<<<<< HEAD
state 455

    inner_option_define_identifier  ->  COMMA OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 297)

    MUL 	shift, and go to state 614
=======
<<<<<<< HEAD
=======
state 462
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 473

<<<<<<< HEAD
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    prime_bool_exp  ->  ari_exp relation_operator ari_exp .   (rule 241)
=======
    MUL 	shift, and go to state 624
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 241 (prime_bool_exp)

<<<<<<< HEAD
state 456

    inner_option_define_identifier  ->  COMMA ID . identifier inner_option_define_identifier   (rule 290)
    inner_option_define_identifier  ->  COMMA ID . identifier ARRAY inner_option_define_identifier   (rule 293)

    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 615
=======
<<<<<<< HEAD
    ari_operator	go to state 250
=======
state 463
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



<<<<<<< HEAD
state 474
=======
    identifier	go to state 625
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    if_statement  ->  IF bool_exp THEN statement_bpar . option_else_statement   (rule 350)

    ELSE	shift, and go to state 632

<<<<<<< HEAD
state 457

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 292)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 294)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 616
    ID  	shift, and go to state 141

    identifier	go to state 617
=======
<<<<<<< HEAD
    $default	reduce using rule 352 (option_else_statement)
=======
state 464
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_else_statement	go to state 633

<<<<<<< HEAD

=======
    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 626
    ID  	shift, and go to state 142

    identifier	go to state 627
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 475
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    bool_exp  ->  bool_exp OR bool_exp .   (rule 239)

<<<<<<< HEAD
    AND 	shift, and go to state 298

<<<<<<< HEAD
state 458

    inner_option_define_identifier  ->  COMMA all_type_define . identifier inner_option_define_identifier   (rule 288)
    inner_option_define_identifier  ->  COMMA all_type_define . inner_option_define_identifier   (rule 289)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL inner_option_define_identifier   (rule 303)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 618
    ID  	shift, and go to state 141

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 619
    identifier	go to state 620
=======
    $default	reduce using rule 239 (bool_exp)
=======
state 465

    inner_option_define_identifier  ->  COMMA all_type_define . identifier inner_option_define_identifier   (rule 294)
    inner_option_define_identifier  ->  COMMA all_type_define . inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 305)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 306)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 307)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier inner_option_define_identifier   (rule 308)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL inner_option_define_identifier   (rule 309)

    COMMA	shift, and go to state 288
    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 628
    ID  	shift, and go to state 142
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
=======
    inner_option_define_identifier	go to state 629
    identifier	go to state 630
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 476

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp AND bool_exp .   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)

<<<<<<< HEAD
state 459
=======
<<<<<<< HEAD
=======
state 466
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 238 (bool_exp)

<<<<<<< HEAD
    OPEN_BPAR	shift, and go to state 621
=======
<<<<<<< HEAD
=======
    OPEN_BPAR	shift, and go to state 631
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 477

<<<<<<< HEAD
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    prime_bool_exp  ->  strliteral NE ari_exp .   (rule 248)

    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 248 (prime_bool_exp)

    ari_operator	go to state 250


<<<<<<< HEAD
state 460
=======

state 478
=======
state 467
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_frame_identifier  ->  COMMA . identifier option_frame_identifier   (rule 323)
    option_frame_identifier  ->  COMMA . error   (rule 325)

    error	shift, and go to state 622
    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 623



<<<<<<< HEAD
state 461
=======
state 468
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    prime_bool_exp  ->  strliteral EQ ari_exp .   (rule 247)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 624
=======
<<<<<<< HEAD
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    CLOSE_PAR	shift, and go to state 634
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 247 (prime_bool_exp)

    ari_operator	go to state 250

<<<<<<< HEAD
state 462

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 83)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 232)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 625
    ID  	shift, and go to state 190

    option_identifier_array_declaration	go to state 278
    identifier	go to state 192
=======
<<<<<<< HEAD
=======
state 469
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
state 479
=======
    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 635
    ID  	shift, and go to state 195
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    statement  ->  AWAIT OPEN_PAR bool_exp CLOSE_PAR .   (rule 44)

    $default	reduce using rule 44 (statement)

>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

<<<<<<< HEAD

state 480

    option_function_parameter_list  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 287)

    MUL 	shift, and go to state 634


<<<<<<< HEAD
state 463
=======

state 481
=======
state 470
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 115)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 626
    CHARDECLARATION	shift, and go to state 627
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 628
    OPEN_PAR	shift, and go to state 463
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 629
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEXT	shift, and go to state 179
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_left	go to state 464
    leftaddrshift	go to state 70
    array	go to state 158
    point_exp	go to state 159
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 162
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 164



<<<<<<< HEAD
state 464

    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 115)

    CLOSE_PAR	shift, and go to state 328
=======
state 471
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_function_parameter_list  ->  ID . identifier inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  ID . MUL identifier inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  ID . MUL MUL identifier inner_option_define_identifier   (rule 273)
    option_function_parameter_list  ->  ID . identifier ARRAY inner_option_define_identifier   (rule 274)
    option_function_parameter_list  ->  ID . inner_option_define_identifier   (rule 278)
    option_function_parameter_list  ->  ID . MUL inner_option_define_identifier   (rule 279)
    option_function_parameter_list  ->  ID . MUL MUL inner_option_define_identifier   (rule 280)

    COMMA	shift, and go to state 308
    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 635
    ID  	shift, and go to state 152
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 636
    identifier	go to state 637

<<<<<<< HEAD
state 465

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 102)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 233)

    OPEN_PAR	shift, and go to state 140
    CLOSE_PAR	shift, and go to state 594
    MUL 	shift, and go to state 630
    ID  	shift, and go to state 190

    option_identifier_array_declaration	go to state 371
    identifier	go to state 192
=======
<<<<<<< HEAD
=======
state 472
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
state 482

    option_function_parameter_list  ->  STRUCT_TYPE . identifier inner_option_define_identifier   (rule 267)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 268)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL identifier inner_option_define_identifier   (rule 269)
    option_function_parameter_list  ->  STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 270)
    option_function_parameter_list  ->  STRUCT_TYPE . inner_option_define_identifier   (rule 275)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL inner_option_define_identifier   (rule 276)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL inner_option_define_identifier   (rule 277)
=======
    OPEN_PAR	shift, and go to state 141
    CLOSE_PAR	shift, and go to state 604
    MUL 	shift, and go to state 640
    ID  	shift, and go to state 195

    option_identifier_array_declaration	go to state 378
    identifier	go to state 197
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    COMMA	shift, and go to state 308
    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 638
    ID  	shift, and go to state 152
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 299 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 639
    identifier	go to state 640

<<<<<<< HEAD
state 466

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA . for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 335)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    $default	reduce using rule 340 (for_sta_condition)

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 631
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    for_sta_condition	go to state 632
    struct_member_exp	go to state 108
=======
=======
state 473

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA . for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 342)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
state 483

    option_function_parameter_list  ->  all_type_define . identifier inner_option_define_identifier   (rule 265)
    option_function_parameter_list  ->  all_type_define . inner_option_define_identifier   (rule 266)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 282)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)
    option_function_parameter_list  ->  all_type_define . MUL identifier inner_option_define_identifier   (rule 284)
    option_function_parameter_list  ->  all_type_define . MUL inner_option_define_identifier   (rule 285)
    option_function_parameter_list  ->  all_type_define . MUL MUL identifier inner_option_define_identifier   (rule 286)
=======
    $default	reduce using rule 347 (for_sta_condition)

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 641
    prime_bool_exp	go to state 133
    identifier	go to state 105
    strliteral	go to state 134
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    for_sta_condition	go to state 642
    struct_member_exp	go to state 109
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    COMMA	shift, and go to state 308
    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 641
    ID  	shift, and go to state 152
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 299 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 642
    identifier	go to state 643

<<<<<<< HEAD
state 467

    for_statement  ->  FOR ari_exp TIMES DO . statement_bpar   (rule 334)

    error	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300

    statement_bpar	go to state 633
=======
=======
state 474

    for_statement  ->  FOR ari_exp TIMES DO . statement_bpar   (rule 341)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
state 484
=======
    statement_bpar	go to state 643
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    CLOSE_PAR	shift, and go to state 644

<<<<<<< HEAD

<<<<<<< HEAD
state 468
=======

state 485
=======
state 475
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    bool_par  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 315)

<<<<<<< HEAD
    $default	reduce using rule 315 (bool_par)
=======
    $default	reduce using rule 322 (bool_par)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    inner_option_define_identifier  ->  COMMA error .   (rule 305)

    $default	reduce using rule 305 (inner_option_define_identifier)

<<<<<<< HEAD

<<<<<<< HEAD
state 469
=======

state 486
=======
state 476
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement_bpar  ->  error CLOSE_BPAR .   (rule 314)

<<<<<<< HEAD
    $default	reduce using rule 314 (statement_bpar)
=======
    $default	reduce using rule 321 (statement_bpar)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    inner_option_define_identifier  ->  COMMA OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)

    MUL 	shift, and go to state 645

<<<<<<< HEAD
state 470
=======
<<<<<<< HEAD


state 487
=======
state 477
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement_bpar  ->  OPEN_BPAR statement . CLOSE_BPAR   (rule 313)

<<<<<<< HEAD
    CLOSE_BPAR	shift, and go to state 634
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196
=======
    CLOSE_BPAR	shift, and go to state 644
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    inner_option_define_identifier  ->  COMMA ID . identifier inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA ID . identifier ARRAY inner_option_define_identifier   (rule 294)

    OPEN_PAR	shift, and go to state 151
    ID  	shift, and go to state 152

<<<<<<< HEAD
state 471
=======
<<<<<<< HEAD
    identifier	go to state 646
=======
state 478
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


<<<<<<< HEAD
    UNTIL	shift, and go to state 635
=======
<<<<<<< HEAD
=======
    UNTIL	shift, and go to state 645
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 488

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier inner_option_define_identifier   (rule 292)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 293)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 295)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 647
    ID  	shift, and go to state 152

    identifier	go to state 648


<<<<<<< HEAD
state 472
=======
=======
state 479
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 136)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 137)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 194)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 412
    CHARDECLARATION	shift, and go to state 413
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 472
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 415
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 473
    rightaddrshift	go to state 308
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 474
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 475
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    strliteral	go to state 476
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228
=======
    STRLITERAL	shift, and go to state 130
    STRUCT_TYPE	shift, and go to state 227
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    ass_right	go to state 480
    rightaddrshift	go to state 313
    array	go to state 228
    point_exp	go to state 229
    ari_exp	go to state 481
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 482
    option_list_value	go to state 316
    option_struct_list_value	go to state 317
    address_exp	go to state 231
    type_cast	go to state 104
    identifier	go to state 232
    strliteral	go to state 483
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 233
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 489

    inner_option_define_identifier  ->  COMMA all_type_define . identifier inner_option_define_identifier   (rule 289)
    inner_option_define_identifier  ->  COMMA all_type_define . inner_option_define_identifier   (rule 290)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL inner_option_define_identifier   (rule 304)

    COMMA	shift, and go to state 308
    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 649
    ID  	shift, and go to state 152

<<<<<<< HEAD
state 473

    ass_right  ->  OPEN_PAR ass_right . CLOSE_PAR   (rule 137)

    CLOSE_PAR	shift, and go to state 636
=======
<<<<<<< HEAD
    $default	reduce using rule 299 (inner_option_define_identifier)
=======
state 480
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    inner_option_define_identifier	go to state 650
    identifier	go to state 651

<<<<<<< HEAD
=======
    CLOSE_PAR	shift, and go to state 646
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 490

<<<<<<< HEAD
state 474

    ass_right  ->  ari_exp .   (rule 133)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 176)

    CLOSE_PAR	shift, and go to state 421
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    CLOSE_PAR	[reduce using rule 133 (ass_right)]
    $default	reduce using rule 133 (ass_right)

    ari_operator	go to state 239
=======
<<<<<<< HEAD
    statement  ->  EXIST identifier inner_option_define_identifier COLON . OPEN_BPAR statement CLOSE_BPAR   (rule 64)
=======
state 481
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    OPEN_BPAR	shift, and go to state 652

<<<<<<< HEAD
=======
    CLOSE_PAR	shift, and go to state 428
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


state 491
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_frame_identifier  ->  COMMA . identifier option_frame_identifier   (rule 324)
    option_frame_identifier  ->  COMMA . error   (rule 326)

    error	shift, and go to state 653
    OPEN_PAR	shift, and go to state 151
    ID  	shift, and go to state 152

<<<<<<< HEAD
state 475

    ass_right  ->  array_exp .   (rule 134)
    array_exp  ->  array_exp . CON array_exp   (rule 191)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 194)

    CLOSE_PAR	shift, and go to state 637
    CON 	shift, and go to state 488

    CLOSE_PAR	[reduce using rule 134 (ass_right)]
    $default	reduce using rule 134 (ass_right)
=======
<<<<<<< HEAD
    identifier	go to state 654
=======
state 482
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
=======
    CLOSE_PAR	shift, and go to state 647
    CON 	shift, and go to state 495
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 492
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier . CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    CLOSE_PAR	shift, and go to state 655

<<<<<<< HEAD
state 476

    ass_right  ->  strliteral .   (rule 135)
    ass_right  ->  OPEN_PAR strliteral . CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 136)

    CLOSE_PAR	shift, and go to state 638

    CLOSE_PAR	[reduce using rule 135 (ass_right)]
    $default	reduce using rule 135 (ass_right)
=======
<<<<<<< HEAD
=======
state 483
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
state 493
=======
    CLOSE_PAR	shift, and go to state 648
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 84)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 233)

    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 656
    ID  	shift, and go to state 201

    option_identifier_array_declaration	go to state 303
    identifier	go to state 203

<<<<<<< HEAD
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 494

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

<<<<<<< HEAD
state 477

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 194)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 215
    CHARDECLARATION	shift, and go to state 216
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 218
    OPEN_PAR	shift, and go to state 639
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 220
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 640
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 478

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    option_struct_list_value  ->  OPEN_BPAR ari_exp . inner_option_list_value CLOSE_BPAR   (rule 198)

    COMMA	shift, and go to state 641
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 204 (inner_option_list_value)

    ari_operator	go to state 239
    inner_option_list_value	go to state 642
=======
    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 657
    CHARDECLARATION	shift, and go to state 658
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 659
    OPEN_PAR	shift, and go to state 494
=======
state 484

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 200)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 219
    INTDECLARATION	shift, and go to state 220
    CHARDECLARATION	shift, and go to state 221
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 223
    OPEN_PAR	shift, and go to state 649
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 660
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEXT	shift, and go to state 190
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    ass_left	go to state 495
    leftaddrshift	go to state 71
    array	go to state 169
    point_exp	go to state 170
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
<<<<<<< HEAD
    address_exp	go to state 237
=======
    array_exp	go to state 650
    option_list_value	go to state 316
    option_struct_list_value	go to state 317
    address_exp	go to state 231
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    type_cast	go to state 104
    identifier	go to state 173
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
<<<<<<< HEAD
    struct_member_exp	go to state 175
=======
    struct_member_exp	go to state 233



state 485
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
=======
    COMMA	shift, and go to state 651
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 495

<<<<<<< HEAD
    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 116)
=======
    ari_operator	go to state 244
    inner_option_list_value	go to state 652
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_PAR	shift, and go to state 343


<<<<<<< HEAD
state 479

    array_exp  ->  array_exp . CON array_exp   (rule 191)
    option_struct_list_value  ->  OPEN_BPAR array_exp . inner_option_list_value CLOSE_BPAR   (rule 200)

    COMMA	shift, and go to state 641
    CON 	shift, and go to state 488

    $default	reduce using rule 204 (inner_option_list_value)

    inner_option_list_value	go to state 643
=======
<<<<<<< HEAD
=======
state 486
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 496

<<<<<<< HEAD
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 103)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 234)
=======
    COMMA	shift, and go to state 651
    CON 	shift, and go to state 495
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    OPEN_PAR	shift, and go to state 151
    CLOSE_PAR	shift, and go to state 612
    MUL 	shift, and go to state 661
    ID  	shift, and go to state 201

<<<<<<< HEAD
    option_identifier_array_declaration	go to state 386
    identifier	go to state 203



state 497

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA . for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 336)
=======
    inner_option_list_value	go to state 653
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 480

    option_struct_list_value  ->  OPEN_BPAR strliteral . inner_option_list_value CLOSE_BPAR   (rule 199)

<<<<<<< HEAD
    COMMA	shift, and go to state 641

    $default	reduce using rule 204 (inner_option_list_value)

    inner_option_list_value	go to state 644
=======
    COMMA	shift, and go to state 651
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 139
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 140
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

<<<<<<< HEAD
    $default	reduce using rule 341 (for_sta_condition)
=======
    inner_option_list_value	go to state 654
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 662
    prime_bool_exp	go to state 143
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    for_sta_condition	go to state 663
    struct_member_exp	go to state 109


<<<<<<< HEAD
state 481

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    option_list_value  ->  OPEN_MPAR ari_exp . inner_option_list_value CLOSE_MPAR   (rule 195)

    COMMA	shift, and go to state 641
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 204 (inner_option_list_value)

    ari_operator	go to state 239
    inner_option_list_value	go to state 645



state 482

    array_exp  ->  array_exp . CON array_exp   (rule 191)
    option_list_value  ->  OPEN_MPAR array_exp . inner_option_list_value CLOSE_MPAR   (rule 197)

    COMMA	shift, and go to state 641
    CON 	shift, and go to state 488

    $default	reduce using rule 204 (inner_option_list_value)

    inner_option_list_value	go to state 646
=======
<<<<<<< HEAD
=======
state 488
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 498

<<<<<<< HEAD
    for_statement  ->  FOR ari_exp TIMES DO . statement_bpar   (rule 335)
=======
    COMMA	shift, and go to state 651
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    error	shift, and go to state 324
    OPEN_BPAR	shift, and go to state 325

<<<<<<< HEAD
    statement_bpar	go to state 664



state 499
=======
    ari_operator	go to state 244
    inner_option_list_value	go to state 655



state 489
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    bool_par  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 316)

<<<<<<< HEAD
    $default	reduce using rule 316 (bool_par)
=======
    COMMA	shift, and go to state 651
    CON 	shift, and go to state 495
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
=======
    inner_option_list_value	go to state 656
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 500

    statement_bpar  ->  error CLOSE_BPAR .   (rule 315)

<<<<<<< HEAD
state 483

    option_list_value  ->  OPEN_MPAR strliteral . inner_option_list_value CLOSE_MPAR   (rule 196)

    COMMA	shift, and go to state 641

    $default	reduce using rule 204 (inner_option_list_value)

    inner_option_list_value	go to state 647



state 484
=======
<<<<<<< HEAD
    $default	reduce using rule 315 (statement_bpar)
=======
state 490
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
=======
    COMMA	shift, and go to state 651
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 501

<<<<<<< HEAD
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement_bpar  ->  OPEN_BPAR statement . CLOSE_BPAR   (rule 314)
=======
    inner_option_list_value	go to state 657
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    CLOSE_BPAR	shift, and go to state 665
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207


<<<<<<< HEAD

state 502

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR . UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    UNTIL	shift, and go to state 666



state 503

    option_output  ->  COMMA . ass_right option_output   (rule 356)
=======
state 491
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    rightaddrshift  ->  MUL OPEN_PAR . leftaddrshift CLOSE_PAR   (rule 139)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 154)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 155)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 648
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 345
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    type_define	go to state 346
    leftaddrshift	go to state 649
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 347
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    sign_type_define	go to state 348
    all_type_define	go to state 349
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 485

<<<<<<< HEAD
    option_output  ->  COMMA . ass_right option_output   (rule 355)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 650
    rightaddrshift	go to state 308
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 486
=======
    option_output  ->  COMMA . ass_right option_output   (rule 362)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 124
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 127
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
<<<<<<< HEAD
    ass_right	go to state 667
    rightaddrshift	go to state 130
=======
    ass_right	go to state 660
    rightaddrshift	go to state 313
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 132
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    strliteral	go to state 135
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 504

    output_statement  ->  DISPLAY OPEN_PAR ass_right CLOSE_PAR .   (rule 353)
=======
state 493
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    output_statement  ->  DISPLAY OPEN_PAR ass_right CLOSE_PAR .   (rule 352)

    $default	reduce using rule 352 (output_statement)



state 487

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output . CLOSE_PAR   (rule 353)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 651
=======
    CLOSE_PAR	shift, and go to state 661
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 353 (output_statement)


<<<<<<< HEAD
state 488

    array_exp  ->  array_exp CON . array_exp   (rule 191)

    OPEN_PAR	shift, and go to state 652
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
=======
<<<<<<< HEAD
=======
state 495
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 505

<<<<<<< HEAD
    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output . CLOSE_PAR   (rule 354)

    CLOSE_PAR	shift, and go to state 668



state 506

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 161)
    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 350)
=======
    OPEN_PAR	shift, and go to state 662
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    array_exp	go to state 653
    option_list_value	go to state 311
    option_struct_list_value	go to state 312



state 489

<<<<<<< HEAD
    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 160)
    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 349)

    error	shift, and go to state 299
    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    OPEN_BPAR	shift, and go to state 300
=======
    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 166)
    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 356)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    error	shift, and go to state 324
    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    OPEN_BPAR	shift, and go to state 325
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 569
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    statement_bpar	go to state 443
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 490

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 654
    MUL 	shift, and go to state 574



state 491

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 655
    MUL 	shift, and go to state 577



state 492

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 656
    MUL 	shift, and go to state 582



state 493

    type_define  ->  INTDECLARATION .   (rule 89)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 657

    MUL 	[reduce using rule 89 (type_define)]
    $default	reduce using rule 89 (type_define)



state 494

    type_define  ->  CHARDECLARATION .   (rule 91)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 658

    MUL 	[reduce using rule 91 (type_define)]
    $default	reduce using rule 91 (type_define)



state 495

    type_define  ->  INTDECLARATION .   (rule 89)
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)

    CLOSE_PAR	shift, and go to state 592

    $default	reduce using rule 89 (type_define)



state 496

    type_define  ->  CHARDECLARATION .   (rule 91)
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)

    CLOSE_PAR	shift, and go to state 593

    $default	reduce using rule 91 (type_define)



state 497
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 587
=======
    ari_exp	go to state 579
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
<<<<<<< HEAD
    statement_bpar	go to state 474
=======
    statement_bpar	go to state 450
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 507
=======
state 497
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 669
    MUL 	shift, and go to state 592



state 508
=======
    CLOSE_PAR	shift, and go to state 664
    MUL 	shift, and go to state 584



state 498
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 670
    MUL 	shift, and go to state 595



state 509
=======
    CLOSE_PAR	shift, and go to state 665
    MUL 	shift, and go to state 587



state 499
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 671
    MUL 	shift, and go to state 600



state 510
=======
    CLOSE_PAR	shift, and go to state 666
    MUL 	shift, and go to state 592



state 500
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_define  ->  INTDECLARATION .   (rule 90)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 606
    MUL 	shift, and go to state 672
=======
    CLOSE_PAR	shift, and go to state 598
    MUL 	shift, and go to state 667
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



<<<<<<< HEAD
state 511
=======
state 501
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_define  ->  CHARDECLARATION .   (rule 92)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 608
    MUL 	shift, and go to state 673
=======
    CLOSE_PAR	shift, and go to state 600
    MUL 	shift, and go to state 668
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)



<<<<<<< HEAD
state 512
=======
state 502
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_define  ->  INTDECLARATION .   (rule 90)
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 610
=======
    CLOSE_PAR	shift, and go to state 602
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 90 (type_define)



<<<<<<< HEAD
state 513
=======
state 503
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_define  ->  CHARDECLARATION .   (rule 92)
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 611
=======
    CLOSE_PAR	shift, and go to state 603
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 92 (type_define)



<<<<<<< HEAD
state 514

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 333)

    IMPLY	shift, and go to state 522

    $default	reduce using rule 333 (imply_pre)



state 515
=======
state 504
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 332)

    IMPLY	shift, and go to state 505

    $default	reduce using rule 332 (imply_pre)



<<<<<<< HEAD
state 498

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    point_exp  ->  MUL identifier .   (rule 150)

    CLOSE_PAR	shift, and go to state 659

    CLOSE_PAR	[reduce using rule 150 (point_exp)]
    $default	reduce using rule 150 (point_exp)



state 499

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
=======
state 505
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    point_exp  ->  MUL identifier .   (rule 151)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 674
=======
    CLOSE_PAR	shift, and go to state 669
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    CLOSE_PAR	[reduce using rule 151 (point_exp)]
    $default	reduce using rule 151 (point_exp)



<<<<<<< HEAD
state 516
=======
state 506
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 660
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 500

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)

    OPEN_PAR	shift, and go to state 661
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 675
=======
    ari_exp	go to state 670
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 517
=======
state 507
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 676



state 518

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 333)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    STRUCT	shift, and go to state 225
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    INTDECLARATION	shift, and go to state 427
    CHARDECLARATION	shift, and go to state 428
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 429
    OPEN_PAR	shift, and go to state 518
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 430
    SIGNED	shift, and go to state 232
=======
    OPEN_PAR	shift, and go to state 671
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 501

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 332)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 214
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    INTDECLARATION	shift, and go to state 412
    CHARDECLARATION	shift, and go to state 413
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 501
    EXTERN	shift, and go to state 49
<<<<<<< HEAD
    UNSIGNED	shift, and go to state 415
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 154
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 265
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 227
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 502
    struct_member_exp	go to state 228
=======
    UNSIGNED	shift, and go to state 422
    SIGNED	shift, and go to state 226
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 165
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 290
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    prime_bool_exp	go to state 172
    identifier	go to state 238
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
<<<<<<< HEAD
    imply_pre	go to state 519
    struct_member_exp	go to state 239



state 519

    imply_pre  ->  imply_pre . AND imply_pre   (rule 331)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 332)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 333)

    CLOSE_PAR	shift, and go to state 677
    OR  	shift, and go to state 349
    AND 	shift, and go to state 350



state 520
=======
    imply_pre	go to state 509
    struct_member_exp	go to state 233
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 502

    imply_pre  ->  imply_pre . AND imply_pre   (rule 330)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 331)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 332)

    CLOSE_PAR	shift, and go to state 662
    OR  	shift, and go to state 334
    AND 	shift, and go to state 335



<<<<<<< HEAD
state 503

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
=======
state 510
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 663
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 504
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 678
=======
    ari_exp	go to state 673
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 521

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . array option_struct_member_exp   (rule 377)

    OPEN_PAR	shift, and go to state 399
    ID  	shift, and go to state 185

    array	go to state 679
    identifier	go to state 680



state 522

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY . OPEN_MPAR statement CLOSE_MPAR   (rule 56)

    OPEN_MPAR	shift, and go to state 681



state 523

    imply_pre  ->  imply_pre . AND imply_pre   (rule 331)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 332)
    imply_pre  ->  imply_pre OR imply_pre .   (rule 332)
=======
state 511
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . array option_struct_member_exp   (rule 376)

    OPEN_PAR	shift, and go to state 384
    ID  	shift, and go to state 174

    array	go to state 664
    identifier	go to state 665



state 505

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY . OPEN_MPAR statement CLOSE_MPAR   (rule 56)

    OPEN_MPAR	shift, and go to state 666



state 506

<<<<<<< HEAD
    imply_pre  ->  imply_pre . AND imply_pre   (rule 330)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 331)
    imply_pre  ->  imply_pre OR imply_pre .   (rule 331)

    AND 	shift, and go to state 335

    $default	reduce using rule 331 (imply_pre)
=======
    imply_pre  ->  imply_pre . AND imply_pre   (rule 337)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 338)
    imply_pre  ->  imply_pre OR imply_pre .   (rule 338)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    AND 	shift, and go to state 350

<<<<<<< HEAD
    $default	reduce using rule 332 (imply_pre)



state 524

    imply_pre  ->  imply_pre . AND imply_pre   (rule 331)
    imply_pre  ->  imply_pre AND imply_pre .   (rule 331)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 332)


    $default	reduce using rule 331 (imply_pre)



state 525
=======
    $default	reduce using rule 338 (imply_pre)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 507

    imply_pre  ->  imply_pre . AND imply_pre   (rule 330)
    imply_pre  ->  imply_pre AND imply_pre .   (rule 330)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 331)


    $default	reduce using rule 330 (imply_pre)



<<<<<<< HEAD
state 508
=======
state 515
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
<<<<<<< HEAD
    option_projection  ->  COMMA statement . option_projection   (rule 327)

    COMMA	shift, and go to state 337
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196

    $default	reduce using rule 326 (option_projection)
=======
<<<<<<< HEAD
    option_projection  ->  COMMA statement . option_projection   (rule 328)
=======
    option_projection  ->  COMMA statement . option_projection   (rule 334)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    COMMA	shift, and go to state 352
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207

<<<<<<< HEAD
    $default	reduce using rule 327 (option_projection)

    option_projection	go to state 682



state 526
=======
    $default	reduce using rule 333 (option_projection)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_projection	go to state 667



<<<<<<< HEAD
state 509

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION . statement_bpar   (rule 59)

    error	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300

    statement_bpar	go to state 668
=======
state 516
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION . statement_bpar   (rule 59)

    error	shift, and go to state 324
    OPEN_BPAR	shift, and go to state 325

<<<<<<< HEAD
    statement_bpar	go to state 683



state 527

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR . PROJECTION statement_bpar   (rule 58)

    PROJECTION	shift, and go to state 684



state 528
=======
    statement_bpar	go to state 678
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 510

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR . PROJECTION statement_bpar   (rule 58)

    PROJECTION	shift, and go to state 669



<<<<<<< HEAD
state 511

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 60)

    CLOSE_PAR	shift, and go to state 670



state 512

    function  ->  EXTERN ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 71)

    CLOSE_PAR	shift, and go to state 671



state 513

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)

    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 672



state 514

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    identifier  ->  ID .   (rule 317)

    OPEN_MPAR	shift, and go to state 673

    $default	reduce using rule 317 (identifier)



state 515

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)

    CLOSE_PAR	shift, and go to state 500


=======
state 519

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)

    OPEN_PAR	shift, and go to state 682



state 520

    function_define  ->  FUNCTION all_type_define MUL MUL . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    ID  	shift, and go to state 683
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    function_define  ->  FUNCTION ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    CLOSE_PAR	shift, and go to state 685

<<<<<<< HEAD
=======
state 521
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
state 529
=======
    OPEN_PAR	shift, and go to state 684
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    function  ->  EXTERN ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 72)

    CLOSE_PAR	shift, and go to state 686

<<<<<<< HEAD
=======
state 522
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
state 530
=======
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 168
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 151
    ID  	shift, and go to state 152
=======
    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 459
    option_function_parameter_list	go to state 685
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    identifier	go to state 687


<<<<<<< HEAD
=======
state 523
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 531

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    identifier  ->  ID .   (rule 318)
=======
    CLOSE_PAR	shift, and go to state 686
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    OPEN_MPAR	shift, and go to state 688

    $default	reduce using rule 318 (identifier)

<<<<<<< HEAD
=======
state 524
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


state 532

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
=======
    identifier	go to state 687
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    CLOSE_PAR	shift, and go to state 517


<<<<<<< HEAD

state 533

    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 261)

    $default	reduce using rule 261 (sign_type_define)



state 534
=======
state 525
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 516

    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 260)

    $default	reduce using rule 260 (sign_type_define)



<<<<<<< HEAD
state 517

    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 261)

    $default	reduce using rule 261 (sign_type_define)



state 518

    point_exp  ->  MUL OPEN_PAR ari_exp CLOSE_PAR .   (rule 155)

    $default	reduce using rule 155 (point_exp)



state 519

    point_exp  ->  MUL OPEN_PAR all_type_define MUL . CLOSE_PAR ari_exp   (rule 154)
=======
state 526
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 262)

<<<<<<< HEAD
    $default	reduce using rule 262 (sign_type_define)



state 535
=======
    CLOSE_PAR	shift, and go to state 507



state 527
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    point_exp  ->  MUL OPEN_PAR ari_exp CLOSE_PAR .   (rule 156)

    $default	reduce using rule 156 (point_exp)



<<<<<<< HEAD
state 536
=======
state 528
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    point_exp  ->  MUL OPEN_PAR all_type_define MUL . CLOSE_PAR ari_exp   (rule 155)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_PAR	shift, and go to state 674



<<<<<<< HEAD
state 520

    type_define  ->  INTDECLARATION .   (rule 89)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
=======
<<<<<<< HEAD
state 537
=======
state 529
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_define  ->  INTDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    MUL 	shift, and go to state 675

<<<<<<< HEAD
    MUL 	[reduce using rule 89 (type_define)]
    $default	reduce using rule 89 (type_define)



state 521

    type_define  ->  CHARDECLARATION .   (rule 91)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
=======
    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



<<<<<<< HEAD
state 538
=======
state 530
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_define  ->  CHARDECLARATION .   (rule 92)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    MUL 	shift, and go to state 676

<<<<<<< HEAD
    MUL 	[reduce using rule 91 (type_define)]
    $default	reduce using rule 91 (type_define)



state 522

    type_define  ->  FLOATDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
=======
    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)



<<<<<<< HEAD
state 539
=======
state 531
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_define  ->  FLOATDECLARATION .   (rule 91)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    MUL 	shift, and go to state 677

<<<<<<< HEAD
    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 523

    sign_declaration  ->  UNSIGNED . declaration   (rule 77)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
=======
    MUL 	[reduce using rule 91 (type_define)]
    $default	reduce using rule 91 (type_define)



<<<<<<< HEAD
state 540
=======
state 532
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    sign_declaration  ->  UNSIGNED . declaration   (rule 78)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    STRUCT	shift, and go to state 179
    UNION	shift, and go to state 180
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 678
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 679
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 170
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 171
    type_define	go to state 67



state 524
=======
    OPEN_PAR	shift, and go to state 181
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 182
    type_define	go to state 68



<<<<<<< HEAD
state 541
=======
state 533
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  NEXT OPEN_PAR statement CLOSE_PAR .   (rule 41)

    $default	reduce using rule 41 (statement)



<<<<<<< HEAD
state 525

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 115)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    INTDECLARATION	shift, and go to state 680
    CHARDECLARATION	shift, and go to state 681
    FLOATDECLARATION	shift, and go to state 682
    OPEN_PAR	shift, and go to state 525
    UNSIGNED	shift, and go to state 683
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 179
    ID  	shift, and go to state 174
=======
<<<<<<< HEAD
state 542

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 116)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)
=======
state 534

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    INTDECLARATION	shift, and go to state 695
    CHARDECLARATION	shift, and go to state 696
    FLOATDECLARATION	shift, and go to state 697
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 542
=======
    OPEN_PAR	shift, and go to state 534
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    UNSIGNED	shift, and go to state 698
    ADDRESS	shift, and go to state 91
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 190
    ID  	shift, and go to state 185

<<<<<<< HEAD
    ass_left	go to state 495
    leftaddrshift	go to state 71
    array	go to state 543
    point_exp	go to state 368
    address_exp	go to state 441
    identifier	go to state 370
    struct_member_exp	go to state 371



state 543

    ass_left  ->  array .   (rule 114)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 147)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 376)
=======
    ass_left	go to state 471
    leftaddrshift	go to state 71
    array	go to state 535
    point_exp	go to state 359
    address_exp	go to state 433
    identifier	go to state 361
    struct_member_exp	go to state 362
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    ass_left	go to state 464
    leftaddrshift	go to state 70
    array	go to state 526
    point_exp	go to state 353
    address_exp	go to state 426
    identifier	go to state 355
    struct_member_exp	go to state 356



<<<<<<< HEAD
state 526

    ass_left  ->  array .   (rule 113)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 146)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 202
    CLOSE_PAR	shift, and go to state 329
    IMPLY	shift, and go to state 204
=======
    ass_left  ->  array .   (rule 119)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 152)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 382)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    DOT 	shift, and go to state 213
    CLOSE_PAR	shift, and go to state 344
    IMPLY	shift, and go to state 215

    CLOSE_PAR	[reduce using rule 114 (ass_left)]
    $default	reduce using rule 114 (ass_left)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_PAR	[reduce using rule 113 (ass_left)]
    $default	reduce using rule 113 (ass_left)


<<<<<<< HEAD

state 527
=======
<<<<<<< HEAD
state 544
=======
state 536
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  LENGTH OPEN_PAR ari_exp CLOSE_PAR .   (rule 49)

    $default	reduce using rule 49 (statement)



<<<<<<< HEAD
state 528
=======
<<<<<<< HEAD
state 545

    option_input  ->  COMMA . identifier option_input   (rule 363)
    option_input  ->  COMMA . array option_input   (rule 364)

    OPEN_PAR	shift, and go to state 399
    ID  	shift, and go to state 185

    array	go to state 699
    identifier	go to state 700



state 546

    input_statement  ->  REQUEST OPEN_PAR array CLOSE_PAR .   (rule 359)

    $default	reduce using rule 359 (input_statement)
=======
state 537
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_input  ->  COMMA . identifier option_input   (rule 362)
    option_input  ->  COMMA . array option_input   (rule 363)

    OPEN_PAR	shift, and go to state 384
    ID  	shift, and go to state 174

<<<<<<< HEAD
    array	go to state 684
    identifier	go to state 685



state 529

    input_statement  ->  REQUEST OPEN_PAR array CLOSE_PAR .   (rule 358)

    $default	reduce using rule 358 (input_statement)



state 530

    input_statement  ->  REQUEST OPEN_PAR array option_input . CLOSE_PAR   (rule 359)

    CLOSE_PAR	shift, and go to state 686



state 531

    input_statement  ->  REQUEST OPEN_PAR identifier CLOSE_PAR .   (rule 356)

    $default	reduce using rule 356 (input_statement)



state 532

    input_statement  ->  REQUEST OPEN_PAR identifier option_input . CLOSE_PAR   (rule 357)

    CLOSE_PAR	shift, and go to state 687



state 533
=======
    array	go to state 699
    identifier	go to state 700
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 547

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR array option_input . CLOSE_PAR   (rule 360)

    CLOSE_PAR	shift, and go to state 701
=======
    input_statement  ->  REQUEST OPEN_PAR array CLOSE_PAR .   (rule 365)

    $default	reduce using rule 365 (input_statement)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 548

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR identifier CLOSE_PAR .   (rule 357)

    $default	reduce using rule 357 (input_statement)
=======
    input_statement  ->  REQUEST OPEN_PAR array option_input . CLOSE_PAR   (rule 366)

    CLOSE_PAR	shift, and go to state 701
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 549

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR identifier option_input . CLOSE_PAR   (rule 358)

    CLOSE_PAR	shift, and go to state 702
=======
    input_statement  ->  REQUEST OPEN_PAR identifier CLOSE_PAR .   (rule 363)

    $default	reduce using rule 363 (input_statement)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 550

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 361)

    $default	reduce using rule 361 (input_statement)
=======
    input_statement  ->  REQUEST OPEN_PAR identifier option_input . CLOSE_PAR   (rule 364)

    CLOSE_PAR	shift, and go to state 702
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 551
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 360)

    $default	reduce using rule 360 (input_statement)



<<<<<<< HEAD
state 534
=======
state 552
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  FINAL OPEN_PAR statement CLOSE_PAR .   (rule 54)

    $default	reduce using rule 54 (statement)



<<<<<<< HEAD
state 535
=======
state 553
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  KEEP OPEN_PAR statement CLOSE_PAR .   (rule 42)

    $default	reduce using rule 42 (statement)



<<<<<<< HEAD
state 536
=======
state 554
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

<<<<<<< HEAD
    option_function_identifier  ->  ADDRESS error .   (rule 309)

    $default	reduce using rule 309 (option_function_identifier)
=======
    statement  ->  ALWAYS OPEN_PAR statement CLOSE_PAR .   (rule 43)

    $default	reduce using rule 43 (statement)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



<<<<<<< HEAD
state 537

    option_function_identifier  ->  ADDRESS error .   (rule 308)
=======
state 555

<<<<<<< HEAD
    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 71)
    option_function_identifier  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 307)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 124
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 381
=======
    option_function_identifier  ->  ADDRESS error .   (rule 315)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 308 (option_function_identifier)



state 538

    inner_option_function_identifier  ->  COMMA . ass_right inner_option_function_identifier   (rule 309)
    inner_option_function_identifier  ->  COMMA . ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 310)
    inner_option_function_identifier  ->  COMMA . error   (rule 312)

<<<<<<< HEAD
    error	shift, and go to state 688
    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 689
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 690
    rightaddrshift	go to state 308
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 539

    option_function_identifier  ->  ass_right inner_option_function_identifier .   (rule 305)

    $default	reduce using rule 305 (option_function_identifier)



state 540

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 70)

    $default	reduce using rule 70 (function)



state 541

    option_ari_exp  ->  COMMA . ari_exp option_ari_exp   (rule 147)
    option_ari_exp  ->  COMMA . error   (rule 148)
=======
    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 308
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 168
    ADDRESS	shift, and go to state 372
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 127
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 382
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

<<<<<<< HEAD
    $default	reduce using rule 308 (option_function_identifier)

    function	go to state 97
    ass_right	go to state 383
    rightaddrshift	go to state 130
=======
    $default	reduce using rule 314 (option_function_identifier)

    function	go to state 97
    type_define	go to state 169
    ass_right	go to state 374
    rightaddrshift	go to state 313
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 132
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
<<<<<<< HEAD
=======
    sign_type_define	go to state 170
    all_type_define	go to state 375
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    option_function_identifier	go to state 703
    identifier	go to state 105
    strliteral	go to state 135
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 556

    inner_option_function_identifier  ->  COMMA . ass_right inner_option_function_identifier   (rule 310)
    inner_option_function_identifier  ->  COMMA . ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 311)
    inner_option_function_identifier  ->  COMMA . error   (rule 313)
=======
state 548

    inner_option_function_identifier  ->  COMMA . ass_right inner_option_function_identifier   (rule 316)
    inner_option_function_identifier  ->  COMMA . ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 317)
    inner_option_function_identifier  ->  COMMA . error   (rule 319)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    error	shift, and go to state 704
    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 124
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 127
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 705
<<<<<<< HEAD
    STRLITERAL	shift, and go to state 128
=======
    STRLITERAL	shift, and go to state 130
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    ass_right	go to state 706
<<<<<<< HEAD
    rightaddrshift	go to state 130
=======
    rightaddrshift	go to state 313
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 132
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    strliteral	go to state 135
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 557
=======
state 549
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_function_identifier  ->  ass_right inner_option_function_identifier .   (rule 306)

    $default	reduce using rule 306 (option_function_identifier)



<<<<<<< HEAD
state 558
=======
state 550
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 71)

    $default	reduce using rule 71 (function)



<<<<<<< HEAD
state 559
=======
state 551
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_ari_exp  ->  COMMA . ari_exp option_ari_exp   (rule 148)
    option_ari_exp  ->  COMMA . error   (rule 149)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    error	shift, and go to state 691
    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 692
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



<<<<<<< HEAD
state 542

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 140)
=======
<<<<<<< HEAD
state 560
=======
state 552
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 141)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_MPAR	shift, and go to state 693



<<<<<<< HEAD
state 543

    option_identifier_array_declaration  ->  ID ARRAY ASS_P . array_exp inner_option_identifier_array_declaration   (rule 98)
    option_identifier_array_declaration  ->  ID ARRAY ASS_P . strliteral inner_option_identifier_array_declaration   (rule 99)

    OPEN_PAR	shift, and go to state 652
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    STRLITERAL	shift, and go to state 129

    array_exp	go to state 694
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    strliteral	go to state 695



state 544

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 96)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 101)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 696
    ari_operator	go to state 239



state 545

    inner_option_identifier_array_declaration  ->  COMMA error .   (rule 104)

    $default	reduce using rule 104 (inner_option_identifier_array_declaration)



state 546

    inner_option_identifier_array_declaration  ->  COMMA option_identifier_array_declaration .   (rule 103)

    $default	reduce using rule 103 (inner_option_identifier_array_declaration)



state 547

    option_identifier_array_declaration  ->  identifier ASS_P ass_right . inner_option_identifier_array_declaration   (rule 97)

    COMMA	shift, and go to state 374

    COMMA	[reduce using rule 105 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 105 (inner_option_identifier_array_declaration)
=======
<<<<<<< HEAD
state 561
=======
state 553
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_identifier_array_declaration  ->  ID ARRAY ASS_P . array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID ARRAY ASS_P . strliteral inner_option_identifier_array_declaration   (rule 100)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 462
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    STRLITERAL	shift, and go to state 128

    array_exp	go to state 710
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
=======
    OPEN_PAR	shift, and go to state 662
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310
    STRLITERAL	shift, and go to state 130

    array_exp	go to state 710
    option_list_value	go to state 316
    option_struct_list_value	go to state 317
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    strliteral	go to state 711



<<<<<<< HEAD
state 562
=======
state 554
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 102)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    COMMA	shift, and go to state 559
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 712
<<<<<<< HEAD
    ari_operator	go to state 250



state 563
=======
    ari_operator	go to state 244



state 555
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    inner_option_identifier_array_declaration  ->  COMMA error .   (rule 105)

    $default	reduce using rule 105 (inner_option_identifier_array_declaration)



<<<<<<< HEAD
state 564
=======
state 556
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    inner_option_identifier_array_declaration  ->  COMMA option_identifier_array_declaration .   (rule 104)

    $default	reduce using rule 104 (inner_option_identifier_array_declaration)



<<<<<<< HEAD
state 565
=======
state 557
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_identifier_array_declaration  ->  identifier ASS_P ass_right . inner_option_identifier_array_declaration   (rule 98)

<<<<<<< HEAD
    COMMA	shift, and go to state 389
=======
    COMMA	shift, and go to state 381
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    inner_option_identifier_array_declaration	go to state 697



<<<<<<< HEAD
state 548

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR .   (rule 73)

    $default	reduce using rule 73 (struct_define_statement)



state 549

    option_struct_declaration  ->  sign_declaration AND . option_struct_declaration   (rule 67)

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
=======
<<<<<<< HEAD
state 566
=======
state 558
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR .   (rule 74)

    $default	reduce using rule 74 (struct_define_statement)



<<<<<<< HEAD
state 567
=======
state 559
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_struct_declaration  ->  sign_declaration AND . option_struct_declaration   (rule 67)

    STRUCT	shift, and go to state 179
    UNION	shift, and go to state 180
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 170
=======
    OPEN_PAR	shift, and go to state 181
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    STRUCT_TYPE	shift, and go to state 60

<<<<<<< HEAD
    option_struct_declaration	go to state 698
    sign_declaration	go to state 382
    declaration	go to state 66
    type_define	go to state 67



state 550
=======
    option_struct_declaration	go to state 714
<<<<<<< HEAD
    sign_declaration	go to state 397
=======
    sign_declaration	go to state 389
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    declaration	go to state 67
    type_define	go to state 68



<<<<<<< HEAD
state 568

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)

    INTDECLARATION	shift, and go to state 614
    CHARDECLARATION	shift, and go to state 615
    FLOATDECLARATION	shift, and go to state 616
    OPEN_PAR	shift, and go to state 568
    UNSIGNED	shift, and go to state 617
    ID  	shift, and go to state 185

    array	go to state 569
    identifier	go to state 307



state 569
=======
state 560
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)

    INTDECLARATION	shift, and go to state 596
    CHARDECLARATION	shift, and go to state 597
    FLOATDECLARATION	shift, and go to state 598
    OPEN_PAR	shift, and go to state 550
    UNSIGNED	shift, and go to state 599
    ID  	shift, and go to state 174

    array	go to state 551
    identifier	go to state 282



<<<<<<< HEAD
state 551

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 146)

    CLOSE_PAR	shift, and go to state 329
=======
state 561
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 147)

    CLOSE_PAR	shift, and go to state 344

>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


<<<<<<< HEAD
state 570

    option_struct_member_exp  ->  DOT . identifier option_struct_member_exp   (rule 383)
    option_struct_member_exp  ->  DOT . array option_struct_member_exp   (rule 384)
    option_struct_member_exp  ->  DOT . function   (rule 387)

<<<<<<< HEAD
state 552
=======
    OPEN_PAR	shift, and go to state 399
=======
state 562
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_struct_member_exp  ->  DOT . identifier option_struct_member_exp   (rule 382)
    option_struct_member_exp  ->  DOT . array option_struct_member_exp   (rule 383)
    option_struct_member_exp  ->  DOT . function   (rule 386)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 384
=======
    OPEN_PAR	shift, and go to state 391
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59

    function	go to state 699
    array	go to state 700
    identifier	go to state 701



<<<<<<< HEAD
state 553
=======
<<<<<<< HEAD
state 571

    option_struct_member_exp  ->  IMPLY . identifier option_struct_member_exp   (rule 385)
    option_struct_member_exp  ->  IMPLY . array option_struct_member_exp   (rule 386)
    option_struct_member_exp  ->  IMPLY . function   (rule 388)

    OPEN_PAR	shift, and go to state 399
=======
state 563
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_struct_member_exp  ->  IMPLY . identifier option_struct_member_exp   (rule 384)
    option_struct_member_exp  ->  IMPLY . array option_struct_member_exp   (rule 385)
    option_struct_member_exp  ->  IMPLY . function   (rule 387)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 384
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59

    function	go to state 702
    array	go to state 703
    identifier	go to state 704



state 554

    struct_member_exp  ->  array DOT array option_struct_member_exp .   (rule 368)

    $default	reduce using rule 368 (struct_member_exp)



state 555

    struct_member_exp  ->  array DOT identifier option_struct_member_exp .   (rule 365)

    $default	reduce using rule 365 (struct_member_exp)



state 556

    function  ->  array OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 72)

    $default	reduce using rule 72 (function)



state 557

    struct_member_exp  ->  array IMPLY array option_struct_member_exp .   (rule 375)

    $default	reduce using rule 375 (struct_member_exp)



state 558

    struct_member_exp  ->  array IMPLY identifier option_struct_member_exp .   (rule 371)

    $default	reduce using rule 371 (struct_member_exp)



state 559

    struct_member_exp  ->  point_exp DOT array option_struct_member_exp .   (rule 369)

    $default	reduce using rule 369 (struct_member_exp)



state 560

    struct_member_exp  ->  point_exp DOT identifier option_struct_member_exp .   (rule 366)

    $default	reduce using rule 366 (struct_member_exp)



state 561

    struct_member_exp  ->  point_exp IMPLY array option_struct_member_exp .   (rule 379)

    $default	reduce using rule 379 (struct_member_exp)



state 562

    struct_member_exp  ->  point_exp IMPLY identifier option_struct_member_exp .   (rule 373)

    $default	reduce using rule 373 (struct_member_exp)



state 563

    struct_member_exp  ->  identifier DOT array option_struct_member_exp .   (rule 367)

    $default	reduce using rule 367 (struct_member_exp)



state 564

    struct_member_exp  ->  identifier DOT identifier option_struct_member_exp .   (rule 364)

    $default	reduce using rule 364 (struct_member_exp)
=======
    OPEN_PAR	shift, and go to state 391
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59

    function	go to state 718
    array	go to state 719
    identifier	go to state 720
<<<<<<< HEAD



state 572

    struct_member_exp  ->  array DOT array option_struct_member_exp .   (rule 369)

    $default	reduce using rule 369 (struct_member_exp)
=======
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 573

<<<<<<< HEAD
    struct_member_exp  ->  array DOT identifier option_struct_member_exp .   (rule 366)

    $default	reduce using rule 366 (struct_member_exp)
=======
    struct_member_exp  ->  array DOT array option_struct_member_exp .   (rule 375)

    $default	reduce using rule 375 (struct_member_exp)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 574

<<<<<<< HEAD
    function  ->  array OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 73)

    $default	reduce using rule 73 (function)
=======
    struct_member_exp  ->  array DOT identifier option_struct_member_exp .   (rule 372)

    $default	reduce using rule 372 (struct_member_exp)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 575

<<<<<<< HEAD
    struct_member_exp  ->  array IMPLY array option_struct_member_exp .   (rule 376)

    $default	reduce using rule 376 (struct_member_exp)
=======
    function  ->  array OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 78)

    $default	reduce using rule 78 (function)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 576

<<<<<<< HEAD
    struct_member_exp  ->  array IMPLY identifier option_struct_member_exp .   (rule 372)

    $default	reduce using rule 372 (struct_member_exp)
=======
    struct_member_exp  ->  array IMPLY array option_struct_member_exp .   (rule 382)

    $default	reduce using rule 382 (struct_member_exp)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 577

<<<<<<< HEAD
    struct_member_exp  ->  point_exp DOT array option_struct_member_exp .   (rule 370)

    $default	reduce using rule 370 (struct_member_exp)
=======
    struct_member_exp  ->  array IMPLY identifier option_struct_member_exp .   (rule 378)

    $default	reduce using rule 378 (struct_member_exp)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 578

<<<<<<< HEAD
    struct_member_exp  ->  point_exp DOT identifier option_struct_member_exp .   (rule 367)

    $default	reduce using rule 367 (struct_member_exp)
=======
    struct_member_exp  ->  point_exp DOT array option_struct_member_exp .   (rule 376)

    $default	reduce using rule 376 (struct_member_exp)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 579

<<<<<<< HEAD
    struct_member_exp  ->  point_exp IMPLY array option_struct_member_exp .   (rule 380)

    $default	reduce using rule 380 (struct_member_exp)
=======
    struct_member_exp  ->  point_exp DOT identifier option_struct_member_exp .   (rule 373)

    $default	reduce using rule 373 (struct_member_exp)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 580

<<<<<<< HEAD
    struct_member_exp  ->  point_exp IMPLY identifier option_struct_member_exp .   (rule 374)

    $default	reduce using rule 374 (struct_member_exp)
=======
    struct_member_exp  ->  point_exp IMPLY array option_struct_member_exp .   (rule 386)

    $default	reduce using rule 386 (struct_member_exp)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 581

<<<<<<< HEAD
    struct_member_exp  ->  identifier DOT array option_struct_member_exp .   (rule 368)

    $default	reduce using rule 368 (struct_member_exp)
=======
    struct_member_exp  ->  point_exp IMPLY identifier option_struct_member_exp .   (rule 380)

    $default	reduce using rule 380 (struct_member_exp)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 582

<<<<<<< HEAD
    struct_member_exp  ->  identifier DOT identifier option_struct_member_exp .   (rule 365)

    $default	reduce using rule 365 (struct_member_exp)
=======
    struct_member_exp  ->  identifier DOT array option_struct_member_exp .   (rule 374)

    $default	reduce using rule 374 (struct_member_exp)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 583

<<<<<<< HEAD
    struct_member_exp  ->  identifier IMPLY array option_struct_member_exp .   (rule 375)

    $default	reduce using rule 375 (struct_member_exp)
=======
    struct_member_exp  ->  identifier DOT identifier option_struct_member_exp .   (rule 371)

    $default	reduce using rule 371 (struct_member_exp)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 584

<<<<<<< HEAD
state 565

    struct_member_exp  ->  identifier IMPLY array option_struct_member_exp .   (rule 374)

    $default	reduce using rule 374 (struct_member_exp)



state 566
=======
<<<<<<< HEAD
    struct_member_exp  ->  identifier IMPLY identifier option_struct_member_exp .   (rule 371)

    $default	reduce using rule 371 (struct_member_exp)
=======
    struct_member_exp  ->  identifier IMPLY array option_struct_member_exp .   (rule 381)

    $default	reduce using rule 381 (struct_member_exp)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 585
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    struct_member_exp  ->  identifier IMPLY identifier option_struct_member_exp .   (rule 370)

    $default	reduce using rule 370 (struct_member_exp)



state 567

    poptional_projection  ->  COMMA complexProposition poptional_projection .   (rule 28)

    $default	reduce using rule 28 (poptional_projection)



<<<<<<< HEAD
state 568
=======
<<<<<<< HEAD
state 586
=======
state 578
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION . OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    OPEN_BPAR	shift, and go to state 705



<<<<<<< HEAD
state 569

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    ari_exp  ->  IF bool_exp THEN ari_exp . option_exp_else_statement   (rule 160)

    ELSE	shift, and go to state 706
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ELSE	[reduce using rule 164 (option_exp_else_statement)]
    ADD 	[reduce using rule 164 (option_exp_else_statement)]
    SUB 	[reduce using rule 164 (option_exp_else_statement)]
    $default	reduce using rule 164 (option_exp_else_statement)

    option_exp_else_statement	go to state 707
    ari_operator	go to state 239



state 570

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 232)
=======
<<<<<<< HEAD
state 587
=======
state 579
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    ari_exp  ->  IF bool_exp THEN ari_exp . option_exp_else_statement   (rule 161)

    ELSE	shift, and go to state 722
<<<<<<< HEAD
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    ELSE	[reduce using rule 165 (option_exp_else_statement)]
    ADD 	[reduce using rule 165 (option_exp_else_statement)]
    SUB 	[reduce using rule 165 (option_exp_else_statement)]
    $default	reduce using rule 165 (option_exp_else_statement)

    option_exp_else_statement	go to state 723
<<<<<<< HEAD
    ari_operator	go to state 250



state 588
=======
    ari_operator	go to state 244



state 580
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 233)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_PAR	shift, and go to state 708
    MUL 	shift, and go to state 709



<<<<<<< HEAD
state 571

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 211)

    $default	reduce using rule 211 (type_cast)



state 572

    type_cast_alg_exp  ->  simple_ari_exp .   (rule 161)
    type_cast_alg_exp  ->  simple_ari_exp . ari_operator simple_ari_exp   (rule 162)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 166)

    INTER_OR	shift, and go to state 240
    CON 	shift, and go to state 241
    ADDRESS	shift, and go to state 242
    LST 	shift, and go to state 249
    RST 	shift, and go to state 250
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238
    MUL 	shift, and go to state 251
    DIV 	shift, and go to state 252
    MOD 	shift, and go to state 253

    INTER_OR	[reduce using rule 161 (type_cast_alg_exp)]
    CON 	[reduce using rule 161 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 161 (type_cast_alg_exp)]
    LST 	[reduce using rule 161 (type_cast_alg_exp)]
    RST 	[reduce using rule 161 (type_cast_alg_exp)]
    ADD 	[reduce using rule 161 (type_cast_alg_exp)]
    SUB 	[reduce using rule 161 (type_cast_alg_exp)]
    MUL 	[reduce using rule 161 (type_cast_alg_exp)]
    DIV 	[reduce using rule 161 (type_cast_alg_exp)]
    MOD 	[reduce using rule 161 (type_cast_alg_exp)]
    $default	reduce using rule 161 (type_cast_alg_exp)

    bi_operator	go to state 254
    ari_operator	go to state 710



state 573

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 218)
=======
<<<<<<< HEAD
state 589
=======
state 581
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 212)

    $default	reduce using rule 212 (type_cast)



<<<<<<< HEAD
state 590

    type_cast_alg_exp  ->  simple_ari_exp .   (rule 162)
    type_cast_alg_exp  ->  simple_ari_exp . ari_operator simple_ari_exp   (rule 163)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 167)

    INTER_OR	shift, and go to state 251
    CON 	shift, and go to state 252
    ADDRESS	shift, and go to state 253
    LST 	shift, and go to state 260
    RST 	shift, and go to state 261
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
    MUL 	shift, and go to state 262
    DIV 	shift, and go to state 263
    MOD 	shift, and go to state 264

    INTER_OR	[reduce using rule 162 (type_cast_alg_exp)]
    CON 	[reduce using rule 162 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 162 (type_cast_alg_exp)]
    LST 	[reduce using rule 162 (type_cast_alg_exp)]
    RST 	[reduce using rule 162 (type_cast_alg_exp)]
    ADD 	[reduce using rule 162 (type_cast_alg_exp)]
    SUB 	[reduce using rule 162 (type_cast_alg_exp)]
    MUL 	[reduce using rule 162 (type_cast_alg_exp)]
    DIV 	[reduce using rule 162 (type_cast_alg_exp)]
    MOD 	[reduce using rule 162 (type_cast_alg_exp)]
    $default	reduce using rule 162 (type_cast_alg_exp)

    bi_operator	go to state 265
=======
state 582

    type_cast_alg_exp  ->  simple_ari_exp .   (rule 167)
    type_cast_alg_exp  ->  simple_ari_exp . ari_operator simple_ari_exp   (rule 168)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 172)

    INTER_OR	shift, and go to state 245
    CON 	shift, and go to state 246
    ADDRESS	shift, and go to state 247
    LST 	shift, and go to state 254
    RST 	shift, and go to state 255
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
    MUL 	shift, and go to state 256
    DIV 	shift, and go to state 257
    MOD 	shift, and go to state 258

    INTER_OR	[reduce using rule 167 (type_cast_alg_exp)]
    CON 	[reduce using rule 167 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 167 (type_cast_alg_exp)]
    LST 	[reduce using rule 167 (type_cast_alg_exp)]
    RST 	[reduce using rule 167 (type_cast_alg_exp)]
    ADD 	[reduce using rule 167 (type_cast_alg_exp)]
    SUB 	[reduce using rule 167 (type_cast_alg_exp)]
    MUL 	[reduce using rule 167 (type_cast_alg_exp)]
    DIV 	[reduce using rule 167 (type_cast_alg_exp)]
    MOD 	[reduce using rule 167 (type_cast_alg_exp)]
    $default	reduce using rule 167 (type_cast_alg_exp)

    bi_operator	go to state 259
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    ari_operator	go to state 726



<<<<<<< HEAD
state 591
=======
state 583
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 712
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 574

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 224)
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
=======
    simple_ari_exp	go to state 582
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 728
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 592
=======
state 584
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 225)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_PAR	shift, and go to state 713



<<<<<<< HEAD
state 575

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 213)

    $default	reduce using rule 213 (type_cast)



state 576

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)
=======
<<<<<<< HEAD
state 593
=======
state 585
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 214)

    $default	reduce using rule 214 (type_cast)



<<<<<<< HEAD
state 594
=======
state 586
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 714
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 577

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 227)
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
=======
    simple_ari_exp	go to state 582
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 730
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 595
=======
state 587
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 228)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_PAR	shift, and go to state 715



<<<<<<< HEAD
state 578

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)
=======
<<<<<<< HEAD
state 596
=======
state 588
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 716
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 579

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 229)
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
=======
    simple_ari_exp	go to state 582
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 732
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 597
=======
state 589
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 230)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_PAR	shift, and go to state 717



<<<<<<< HEAD
state 580

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 212)

    $default	reduce using rule 212 (type_cast)



state 581

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)
=======
<<<<<<< HEAD
state 598
=======
state 590
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 213)

    $default	reduce using rule 213 (type_cast)



<<<<<<< HEAD
state 599
=======
state 591
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 718
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 582

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 226)
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
=======
    simple_ari_exp	go to state 582
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 734
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 600
=======
state 592
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 227)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_PAR	shift, and go to state 719



<<<<<<< HEAD
state 583

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 720
    MUL 	shift, and go to state 574



state 584

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 721
    MUL 	shift, and go to state 577



state 585

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 722
    MUL 	shift, and go to state 582



state 586

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 657



state 587

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 723



state 588

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 216)
=======
<<<<<<< HEAD
state 601
=======
state 593
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 736
<<<<<<< HEAD
    MUL 	shift, and go to state 592



state 602
=======
    MUL 	shift, and go to state 584



state 594
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 737
<<<<<<< HEAD
    MUL 	shift, and go to state 595



state 603
=======
    MUL 	shift, and go to state 587



state 595
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 738
<<<<<<< HEAD
    MUL 	shift, and go to state 600



state 604
=======
    MUL 	shift, and go to state 592



state 596
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 606
    MUL 	shift, and go to state 672



state 605
=======
    CLOSE_PAR	shift, and go to state 598
    MUL 	shift, and go to state 667



state 597
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 608
=======
    CLOSE_PAR	shift, and go to state 600
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    MUL 	shift, and go to state 739



<<<<<<< HEAD
state 606
=======
state 598
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 217)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 724
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 589

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 740
<<<<<<< HEAD
    simple_ari_exp	go to state 590
=======
    simple_ari_exp	go to state 582
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 607
=======
state 599
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_PAR	shift, and go to state 725
    MUL 	shift, and go to state 726



<<<<<<< HEAD
state 590

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 217)
=======
<<<<<<< HEAD
state 608
=======
state 600
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 218)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 743
<<<<<<< HEAD
    simple_ari_exp	go to state 590
=======
    simple_ari_exp	go to state 582
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 727
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108


<<<<<<< HEAD

state 591
=======
<<<<<<< HEAD
state 609
=======
state 601
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 728
    MUL 	shift, and go to state 729


<<<<<<< HEAD

state 592

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 214)
=======
<<<<<<< HEAD
state 610
=======
state 602
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 215)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 730
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 593

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 215)
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 746
<<<<<<< HEAD
    simple_ari_exp	go to state 590
=======
    simple_ari_exp	go to state 582
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 611
=======
state 603
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 216)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 731
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 594

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 231)
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 747
<<<<<<< HEAD
    simple_ari_exp	go to state 590
=======
    simple_ari_exp	go to state 582
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 612
=======
state 604
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 232)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 732
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 595
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
=======
    simple_ari_exp	go to state 582
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 748
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 613
=======
state 605
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 733



<<<<<<< HEAD
state 596

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    MUL 	shift, and go to state 734



state 597

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
=======
state 606
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 234)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 749



state 614
=======
    MUL 	shift, and go to state 750



state 607
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    MUL 	shift, and go to state 735



<<<<<<< HEAD
state 598

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
=======
<<<<<<< HEAD
state 615
=======
state 608
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    MUL 	shift, and go to state 736



<<<<<<< HEAD
state 599
=======
<<<<<<< HEAD
state 616

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
=======
state 609
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    INTDECLARATION	shift, and go to state 737
    CHARDECLARATION	shift, and go to state 738



state 600

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR . case_par CLOSE_BPAR   (rule 343)

    CASE	shift, and go to state 739
    DEFAULT	shift, and go to state 740

<<<<<<< HEAD
    case_par	go to state 741
=======
    case_par	go to state 757
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    MUL 	shift, and go to state 752
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


<<<<<<< HEAD

<<<<<<< HEAD
state 601

    option_else_statement  ->  ELSE . statement_bpar   (rule 350)

    error	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300

    statement_bpar	go to state 742
=======
state 617
=======
state 611

    option_else_statement  ->  ELSE . statement_bpar   (rule 357)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 753
    CHARDECLARATION	shift, and go to state 754



state 618

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR . case_par CLOSE_BPAR   (rule 344)

    CASE	shift, and go to state 755
    DEFAULT	shift, and go to state 756
=======
    statement_bpar	go to state 758
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 602

    if_statement  ->  IF bool_exp THEN statement_bpar option_else_statement .   (rule 349)

<<<<<<< HEAD
    $default	reduce using rule 349 (if_statement)
=======
    $default	reduce using rule 356 (if_statement)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    case_par	go to state 757


<<<<<<< HEAD
state 603

    option_function_parameter_list  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 286)

    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 743
=======
<<<<<<< HEAD
=======
state 613
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 619

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR . type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)

<<<<<<< HEAD
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
=======
    identifier	go to state 759
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    type_define	go to state 758


<<<<<<< HEAD
state 604

    option_function_parameter_list  ->  ID MUL . identifier inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  ID MUL . MUL identifier inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  ID MUL . inner_option_define_identifier   (rule 278)
    option_function_parameter_list  ->  ID MUL . MUL inner_option_define_identifier   (rule 279)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 744
    ID  	shift, and go to state 141

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 745
    identifier	go to state 746
=======
<<<<<<< HEAD
=======
state 614
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 620

<<<<<<< HEAD
    inner_option_list_value  ->  COMMA error .   (rule 206)
=======
    COMMA	shift, and go to state 288
    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 760
    ID  	shift, and go to state 142
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 206 (inner_option_list_value)

<<<<<<< HEAD
=======
    inner_option_define_identifier	go to state 761
    identifier	go to state 762
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 621

<<<<<<< HEAD
state 605

    option_function_parameter_list  ->  ID inner_option_define_identifier .   (rule 277)

    $default	reduce using rule 277 (option_function_parameter_list)
=======
<<<<<<< HEAD
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    inner_option_list_value  ->  COMMA ari_exp . inner_option_list_value   (rule 202)
=======
state 615
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    COMMA	shift, and go to state 453
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 205 (inner_option_list_value)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    ari_operator	go to state 250
    inner_option_list_value	go to state 759


<<<<<<< HEAD
state 606

    option_function_parameter_list  ->  ID identifier . inner_option_define_identifier   (rule 270)
    option_function_parameter_list  ->  ID identifier . ARRAY inner_option_define_identifier   (rule 273)

    ARRAY	shift, and go to state 747
    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 748
=======
<<<<<<< HEAD
=======
state 616
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 622

<<<<<<< HEAD
    array_exp  ->  array_exp . CON array_exp   (rule 192)
    inner_option_list_value  ->  COMMA array_exp . inner_option_list_value   (rule 204)
=======
    ARRAY	shift, and go to state 763
    COMMA	shift, and go to state 288
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    COMMA	shift, and go to state 453
    CON 	shift, and go to state 286

<<<<<<< HEAD
    $default	reduce using rule 205 (inner_option_list_value)
=======
    inner_option_define_identifier	go to state 764
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    inner_option_list_value	go to state 760


<<<<<<< HEAD
state 607

    option_function_parameter_list  ->  STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 267)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL identifier inner_option_define_identifier   (rule 268)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . inner_option_define_identifier   (rule 275)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL inner_option_define_identifier   (rule 276)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 749
    ID  	shift, and go to state 141

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 750
    identifier	go to state 751
=======
<<<<<<< HEAD
=======
state 617
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 623

<<<<<<< HEAD
    inner_option_list_value  ->  COMMA strliteral . inner_option_list_value   (rule 203)
=======
    COMMA	shift, and go to state 288
    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 765
    ID  	shift, and go to state 142
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    COMMA	shift, and go to state 453

<<<<<<< HEAD
    $default	reduce using rule 205 (inner_option_list_value)
=======
    inner_option_define_identifier	go to state 766
    identifier	go to state 767
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    inner_option_list_value	go to state 761


<<<<<<< HEAD
state 608

    option_function_parameter_list  ->  STRUCT_TYPE inner_option_define_identifier .   (rule 274)

    $default	reduce using rule 274 (option_function_parameter_list)
=======
<<<<<<< HEAD
=======
state 618
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 624

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR .   (rule 199)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 199 (option_struct_list_value)


<<<<<<< HEAD
state 609

    option_function_parameter_list  ->  STRUCT_TYPE identifier . inner_option_define_identifier   (rule 266)
    option_function_parameter_list  ->  STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 269)

    ARRAY	shift, and go to state 752
    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 753
=======
<<<<<<< HEAD
=======
state 619
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 625

<<<<<<< HEAD
    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR .   (rule 201)
=======
    ARRAY	shift, and go to state 768
    COMMA	shift, and go to state 288
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 201 (option_struct_list_value)

<<<<<<< HEAD
=======
    inner_option_define_identifier	go to state 769
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 626

<<<<<<< HEAD
state 610

    option_function_parameter_list  ->  all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define MUL . identifier inner_option_define_identifier   (rule 283)
    option_function_parameter_list  ->  all_type_define MUL . inner_option_define_identifier   (rule 284)
    option_function_parameter_list  ->  all_type_define MUL . MUL identifier inner_option_define_identifier   (rule 285)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 754
    ID  	shift, and go to state 141

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 755
    identifier	go to state 756
=======
<<<<<<< HEAD
    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR .   (rule 200)
=======
state 620
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 200 (option_struct_list_value)

<<<<<<< HEAD
=======
    COMMA	shift, and go to state 288
    OPEN_PAR	shift, and go to state 141
    MUL 	shift, and go to state 770
    ID  	shift, and go to state 142
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
state 627
=======
    inner_option_define_identifier	go to state 771
    identifier	go to state 772
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR .   (rule 196)

    $default	reduce using rule 196 (option_list_value)

<<<<<<< HEAD
state 611

    option_function_parameter_list  ->  all_type_define inner_option_define_identifier .   (rule 265)

    $default	reduce using rule 265 (option_function_parameter_list)
=======
<<<<<<< HEAD
=======
state 621
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


state 628
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR .   (rule 198)

    $default	reduce using rule 198 (option_list_value)

<<<<<<< HEAD
state 612

    option_function_parameter_list  ->  all_type_define identifier . inner_option_define_identifier   (rule 264)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY inner_option_define_identifier   (rule 280)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 282)

    ARRAY	shift, and go to state 757
    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 758



state 613

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    ASS_P	shift, and go to state 759
=======
<<<<<<< HEAD
=======
state 622
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
state 629
=======
    ARRAY	shift, and go to state 773
    COMMA	shift, and go to state 288
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR .   (rule 197)

<<<<<<< HEAD
    $default	reduce using rule 197 (option_list_value)



state 630
=======
    inner_option_define_identifier	go to state 774



state 623
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

<<<<<<< HEAD
    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 657
    CHARDECLARATION	shift, and go to state 658
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 659
    OPEN_PAR	shift, and go to state 230
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 660
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96
=======
    ASS_P	shift, and go to state 775
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239


<<<<<<< HEAD
state 614

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 297)

    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 760



state 615

    inner_option_define_identifier  ->  COMMA ID identifier . inner_option_define_identifier   (rule 290)
    inner_option_define_identifier  ->  COMMA ID identifier . ARRAY inner_option_define_identifier   (rule 293)

    ARRAY	shift, and go to state 761
    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 762
=======
<<<<<<< HEAD
=======
state 624
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 631

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift CLOSE_PAR .   (rule 140)

<<<<<<< HEAD
    $default	reduce using rule 140 (rightaddrshift)



state 632
=======
    identifier	go to state 776



state 625
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_else_statement  ->  ELSE . statement_bpar   (rule 351)

<<<<<<< HEAD
    error	shift, and go to state 324
    OPEN_BPAR	shift, and go to state 325
=======
    ARRAY	shift, and go to state 777
    COMMA	shift, and go to state 288
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    statement_bpar	go to state 762

<<<<<<< HEAD
=======
    inner_option_define_identifier	go to state 778
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 633

<<<<<<< HEAD
state 616

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 292)

    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 763
=======
<<<<<<< HEAD
    if_statement  ->  IF bool_exp THEN statement_bpar option_else_statement .   (rule 350)
=======
state 626
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 350 (if_statement)


<<<<<<< HEAD
=======
    identifier	go to state 779
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 634

    option_function_parameter_list  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 287)

<<<<<<< HEAD
state 617

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 294)

    ARRAY	shift, and go to state 764
    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 765
=======
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 151
    ID  	shift, and go to state 152
=======
state 627
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    identifier	go to state 763

<<<<<<< HEAD
=======
    ARRAY	shift, and go to state 780
    COMMA	shift, and go to state 288
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
state 635
=======
    inner_option_define_identifier	go to state 781
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_function_parameter_list  ->  ID MUL . identifier inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  ID MUL . MUL identifier inner_option_define_identifier   (rule 273)
    option_function_parameter_list  ->  ID MUL . inner_option_define_identifier   (rule 279)
    option_function_parameter_list  ->  ID MUL . MUL inner_option_define_identifier   (rule 280)

    COMMA	shift, and go to state 308
    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 764
    ID  	shift, and go to state 152

<<<<<<< HEAD
state 618

    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . inner_option_define_identifier   (rule 303)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 766
    identifier	go to state 767
=======
<<<<<<< HEAD
    $default	reduce using rule 299 (inner_option_define_identifier)
=======
state 628
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    inner_option_define_identifier	go to state 765
    identifier	go to state 766



<<<<<<< HEAD
state 636
=======
    inner_option_define_identifier	go to state 782
    identifier	go to state 783
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_function_parameter_list  ->  ID inner_option_define_identifier .   (rule 278)

    $default	reduce using rule 278 (option_function_parameter_list)

<<<<<<< HEAD
state 619

    inner_option_define_identifier  ->  COMMA all_type_define inner_option_define_identifier .   (rule 289)

    $default	reduce using rule 289 (inner_option_define_identifier)
=======
<<<<<<< HEAD
=======
state 629
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


state 637
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_function_parameter_list  ->  ID identifier . inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  ID identifier . ARRAY inner_option_define_identifier   (rule 274)

    ARRAY	shift, and go to state 767
    COMMA	shift, and go to state 308

<<<<<<< HEAD
state 620

    inner_option_define_identifier  ->  COMMA all_type_define identifier . inner_option_define_identifier   (rule 288)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)

    ARRAY	shift, and go to state 768
    COMMA	shift, and go to state 283
    OPEN_MPAR	shift, and go to state 769

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 770
=======
<<<<<<< HEAD
    $default	reduce using rule 299 (inner_option_define_identifier)
=======
state 630
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    inner_option_define_identifier	go to state 768

<<<<<<< HEAD
=======
    ARRAY	shift, and go to state 784
    COMMA	shift, and go to state 288
    OPEN_MPAR	shift, and go to state 785
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
state 638
=======
    inner_option_define_identifier	go to state 786
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_function_parameter_list  ->  STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 268)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL identifier inner_option_define_identifier   (rule 269)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . inner_option_define_identifier   (rule 276)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL inner_option_define_identifier   (rule 277)

    COMMA	shift, and go to state 308
    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 769
    ID  	shift, and go to state 152

<<<<<<< HEAD
state 621
=======
<<<<<<< HEAD
    $default	reduce using rule 299 (inner_option_define_identifier)
=======
state 631
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    inner_option_define_identifier	go to state 770
    identifier	go to state 771


<<<<<<< HEAD
    statement	go to state 771
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81
=======
<<<<<<< HEAD
=======
    statement	go to state 787
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 639

    option_function_parameter_list  ->  STRUCT_TYPE inner_option_define_identifier .   (rule 275)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

<<<<<<< HEAD
    $default	reduce using rule 275 (option_function_parameter_list)


<<<<<<< HEAD
state 622
=======
=======
state 632
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_frame_identifier  ->  COMMA error .   (rule 325)

<<<<<<< HEAD
    $default	reduce using rule 325 (option_frame_identifier)
=======
    $default	reduce using rule 332 (option_frame_identifier)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 640

    option_function_parameter_list  ->  STRUCT_TYPE identifier . inner_option_define_identifier   (rule 267)
    option_function_parameter_list  ->  STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 270)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

<<<<<<< HEAD
    ARRAY	shift, and go to state 772
    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 773

<<<<<<< HEAD
state 623
=======

=======
state 633
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_frame_identifier  ->  COMMA identifier . option_frame_identifier   (rule 323)

    COMMA	shift, and go to state 460

    $default	reduce using rule 324 (option_frame_identifier)

<<<<<<< HEAD
    option_frame_identifier	go to state 772
=======
    option_frame_identifier	go to state 788
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 641

    option_function_parameter_list  ->  all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 282)
    option_function_parameter_list  ->  all_type_define MUL . identifier inner_option_define_identifier   (rule 284)
    option_function_parameter_list  ->  all_type_define MUL . inner_option_define_identifier   (rule 285)
    option_function_parameter_list  ->  all_type_define MUL . MUL identifier inner_option_define_identifier   (rule 286)

<<<<<<< HEAD
state 624
=======
<<<<<<< HEAD
    COMMA	shift, and go to state 308
    OPEN_PAR	shift, and go to state 151
    MUL 	shift, and go to state 774
    ID  	shift, and go to state 152
=======
state 634
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 299 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 775
    identifier	go to state 776
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


<<<<<<< HEAD
    AND 	shift, and go to state 773



state 625

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 102)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 232)

    OPEN_PAR	shift, and go to state 140
    CLOSE_PAR	shift, and go to state 708
    MUL 	shift, and go to state 774
    ID  	shift, and go to state 190

    option_identifier_array_declaration	go to state 371
    identifier	go to state 192
=======

state 642
=======
    AND 	shift, and go to state 789



state 635
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_function_parameter_list  ->  all_type_define inner_option_define_identifier .   (rule 266)

<<<<<<< HEAD
    $default	reduce using rule 266 (option_function_parameter_list)

=======
    OPEN_PAR	shift, and go to state 141
    CLOSE_PAR	shift, and go to state 724
    MUL 	shift, and go to state 790
    ID  	shift, and go to state 195

    option_identifier_array_declaration	go to state 378
    identifier	go to state 197
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 643

<<<<<<< HEAD
state 626

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 405
    MUL 	shift, and go to state 490
=======
<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier . inner_option_define_identifier   (rule 265)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)
=======
state 636
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    ARRAY	shift, and go to state 777
    COMMA	shift, and go to state 308

<<<<<<< HEAD
    $default	reduce using rule 299 (inner_option_define_identifier)
=======
    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 497
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    inner_option_define_identifier	go to state 778


<<<<<<< HEAD
state 627

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 491
=======
<<<<<<< HEAD
=======
state 637
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 644

<<<<<<< HEAD
    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)
=======
    CLOSE_PAR	shift, and go to state 414
    MUL 	shift, and go to state 498
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    ASS_P	shift, and go to state 779


<<<<<<< HEAD
state 628

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 492
=======
<<<<<<< HEAD
=======
state 638
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 645

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)
=======
    CLOSE_PAR	shift, and go to state 417
    MUL 	shift, and go to state 499
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    OPEN_PAR	shift, and go to state 151
    ID  	shift, and go to state 152

    identifier	go to state 780

<<<<<<< HEAD
state 629

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)

    INTDECLARATION	shift, and go to state 586
    CHARDECLARATION	shift, and go to state 775
=======
<<<<<<< HEAD
=======
state 639
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
state 646
=======
    INTDECLARATION	shift, and go to state 596
    CHARDECLARATION	shift, and go to state 791
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    inner_option_define_identifier  ->  COMMA ID identifier . inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA ID identifier . ARRAY inner_option_define_identifier   (rule 294)

    ARRAY	shift, and go to state 781
    COMMA	shift, and go to state 308

<<<<<<< HEAD
state 630

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 102)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 233)

    OPEN_PAR	shift, and go to state 140
    CLOSE_PAR	shift, and go to state 733
    MUL 	shift, and go to state 189
    ID  	shift, and go to state 190

    option_identifier_array_declaration	go to state 371
    identifier	go to state 192
=======
<<<<<<< HEAD
    $default	reduce using rule 299 (inner_option_define_identifier)
=======
state 640
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    inner_option_define_identifier	go to state 782

<<<<<<< HEAD

=======
    OPEN_PAR	shift, and go to state 141
    CLOSE_PAR	shift, and go to state 749
    MUL 	shift, and go to state 194
    ID  	shift, and go to state 195

    option_identifier_array_declaration	go to state 378
    identifier	go to state 197
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 647

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 293)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 151
    ID  	shift, and go to state 152

<<<<<<< HEAD
state 631

    bool_exp  ->  bool_exp . AND bool_exp   (rule 237)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 238)
    for_sta_condition  ->  bool_exp .   (rule 339)

    OR  	shift, and go to state 272
    AND 	shift, and go to state 273

    $default	reduce using rule 339 (for_sta_condition)



state 632

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition . COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 335)

    COMMA	shift, and go to state 776
=======
    identifier	go to state 783
=======
state 641

    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)
    for_sta_condition  ->  bool_exp .   (rule 346)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD

state 648

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . inner_option_define_identifier   (rule 292)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 295)

    ARRAY	shift, and go to state 784
    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 785
=======
    $default	reduce using rule 346 (for_sta_condition)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 649

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . inner_option_define_identifier   (rule 304)

    COMMA	shift, and go to state 308
    OPEN_PAR	shift, and go to state 151
    ID  	shift, and go to state 152
=======
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition . COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 342)

    COMMA	shift, and go to state 792
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 299 (inner_option_define_identifier)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    inner_option_define_identifier	go to state 786
    identifier	go to state 787


<<<<<<< HEAD
state 633

    for_statement  ->  FOR ari_exp TIMES DO statement_bpar .   (rule 334)

    $default	reduce using rule 334 (for_statement)
=======
<<<<<<< HEAD

state 650
=======
    for_statement  ->  FOR ari_exp TIMES DO statement_bpar .   (rule 341)

    $default	reduce using rule 341 (for_statement)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    inner_option_define_identifier  ->  COMMA all_type_define inner_option_define_identifier .   (rule 290)

    $default	reduce using rule 290 (inner_option_define_identifier)

<<<<<<< HEAD
state 634

    statement_bpar  ->  OPEN_BPAR statement CLOSE_BPAR .   (rule 313)

    $default	reduce using rule 313 (statement_bpar)
=======

<<<<<<< HEAD

state 651
=======
    statement_bpar  ->  OPEN_BPAR statement CLOSE_BPAR .   (rule 320)

    $default	reduce using rule 320 (statement_bpar)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    inner_option_define_identifier  ->  COMMA all_type_define identifier . inner_option_define_identifier   (rule 289)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)

    ARRAY	shift, and go to state 788
    COMMA	shift, and go to state 308
    OPEN_MPAR	shift, and go to state 789

<<<<<<< HEAD
state 635
=======
    $default	reduce using rule 299 (inner_option_define_identifier)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

<<<<<<< HEAD
    inner_option_define_identifier	go to state 790
=======
    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL . OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    OPEN_PAR	shift, and go to state 777



state 636

<<<<<<< HEAD
    ass_right  ->  OPEN_PAR ass_right CLOSE_PAR .   (rule 137)

    $default	reduce using rule 137 (ass_right)
=======
    ass_right  ->  OPEN_PAR ass_right CLOSE_PAR .   (rule 143)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 652

<<<<<<< HEAD
state 637

    array_exp  ->  OPEN_PAR array_exp CLOSE_PAR .   (rule 194)

    $default	reduce using rule 194 (array_exp)



state 638

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR . OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 136)

    OPEN_PAR	shift, and go to state 778
=======
<<<<<<< HEAD
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR . statement CLOSE_BPAR   (rule 64)
=======
state 647
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 791
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



<<<<<<< HEAD
state 653
=======
state 648
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_frame_identifier  ->  COMMA error .   (rule 326)

<<<<<<< HEAD
    $default	reduce using rule 326 (option_frame_identifier)



state 654

    option_frame_identifier  ->  COMMA identifier . option_frame_identifier   (rule 324)

    COMMA	shift, and go to state 491

    $default	reduce using rule 325 (option_frame_identifier)
=======
    OPEN_PAR	shift, and go to state 794
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 639

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 194)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 412
    CHARDECLARATION	shift, and go to state 413
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 639
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 415
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 640
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228
=======
    STRUCT_TYPE	shift, and go to state 227
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 228
    point_exp	go to state 229
    ari_exp	go to state 230
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 650
    option_list_value	go to state 316
    option_struct_list_value	go to state 317
    address_exp	go to state 231
    type_cast	go to state 104
    identifier	go to state 232
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 233
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_frame_identifier	go to state 792


<<<<<<< HEAD
state 640

    array_exp  ->  array_exp . CON array_exp   (rule 191)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 194)

    CLOSE_PAR	shift, and go to state 637
    CON 	shift, and go to state 488



state 641

    inner_option_list_value  ->  COMMA . ari_exp inner_option_list_value   (rule 201)
    inner_option_list_value  ->  COMMA . strliteral inner_option_list_value   (rule 202)
    inner_option_list_value  ->  COMMA . array_exp inner_option_list_value   (rule 203)
    inner_option_list_value  ->  COMMA . error   (rule 205)

    error	shift, and go to state 779
    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 477
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
=======
<<<<<<< HEAD
=======
state 650
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 655

<<<<<<< HEAD
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR . AND OPEN_PAR statement CLOSE_PAR   (rule 57)
=======
    CLOSE_PAR	shift, and go to state 647
    CON 	shift, and go to state 495
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    AND 	shift, and go to state 793


<<<<<<< HEAD
=======
state 651
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 656

<<<<<<< HEAD
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 103)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 233)

    OPEN_PAR	shift, and go to state 151
    CLOSE_PAR	shift, and go to state 724
    MUL 	shift, and go to state 794
    ID  	shift, and go to state 201
=======
    error	shift, and go to state 795
    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 484
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 780
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 781
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 782
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
=======
    STRLITERAL	shift, and go to state 130
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 796
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 797
    option_list_value	go to state 316
    option_struct_list_value	go to state 317
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    strliteral	go to state 798
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_identifier_array_declaration	go to state 386
    identifier	go to state 203


<<<<<<< HEAD
state 642

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value . CLOSE_BPAR   (rule 198)

    CLOSE_BPAR	shift, and go to state 783
=======
<<<<<<< HEAD
=======
state 652
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 657

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)
=======
    CLOSE_BPAR	shift, and go to state 799
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_PAR	shift, and go to state 420
    MUL 	shift, and go to state 507


<<<<<<< HEAD
state 643

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value . CLOSE_BPAR   (rule 200)

    CLOSE_BPAR	shift, and go to state 784
=======
<<<<<<< HEAD
=======
state 653
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 658

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)
=======
    CLOSE_BPAR	shift, and go to state 800
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_PAR	shift, and go to state 422
    MUL 	shift, and go to state 508


<<<<<<< HEAD
state 644

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value . CLOSE_BPAR   (rule 199)

    CLOSE_BPAR	shift, and go to state 785
=======
<<<<<<< HEAD
=======
state 654
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 659

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)
=======
    CLOSE_BPAR	shift, and go to state 801
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_PAR	shift, and go to state 425
    MUL 	shift, and go to state 509


<<<<<<< HEAD
state 645

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value . CLOSE_MPAR   (rule 195)

    CLOSE_MPAR	shift, and go to state 786
=======
<<<<<<< HEAD
=======
state 655
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 660

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
=======
    CLOSE_MPAR	shift, and go to state 802
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    INTDECLARATION	shift, and go to state 604
    CHARDECLARATION	shift, and go to state 795


<<<<<<< HEAD
state 646

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value . CLOSE_MPAR   (rule 197)

    CLOSE_MPAR	shift, and go to state 787
=======
<<<<<<< HEAD
=======
state 656
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 661

<<<<<<< HEAD
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 103)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 234)
=======
    CLOSE_MPAR	shift, and go to state 803
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    OPEN_PAR	shift, and go to state 151
    CLOSE_PAR	shift, and go to state 749
    MUL 	shift, and go to state 200
    ID  	shift, and go to state 201

    option_identifier_array_declaration	go to state 386
    identifier	go to state 203

<<<<<<< HEAD
state 647

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value . CLOSE_MPAR   (rule 196)

    CLOSE_MPAR	shift, and go to state 788
=======
<<<<<<< HEAD
=======
state 657
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
state 662
=======
    CLOSE_MPAR	shift, and go to state 804
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    for_sta_condition  ->  bool_exp .   (rule 340)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    OR  	shift, and go to state 297
    AND 	shift, and go to state 298

<<<<<<< HEAD
    $default	reduce using rule 340 (for_sta_condition)

<<<<<<< HEAD
state 648
=======

=======
state 658
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 412
    CHARDECLARATION	shift, and go to state 413
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 789
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 415
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228
=======
    STRUCT_TYPE	shift, and go to state 227
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 663
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition . COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 336)

    COMMA	shift, and go to state 796

<<<<<<< HEAD
state 649

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift . CLOSE_PAR   (rule 139)

    CLOSE_PAR	shift, and go to state 790
=======
<<<<<<< HEAD
=======
state 659
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
state 664
=======
    CLOSE_PAR	shift, and go to state 806
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    for_statement  ->  FOR ari_exp TIMES DO statement_bpar .   (rule 335)

    $default	reduce using rule 335 (for_statement)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

<<<<<<< HEAD


<<<<<<< HEAD
state 650
=======
state 665

    statement_bpar  ->  OPEN_BPAR statement CLOSE_BPAR .   (rule 314)

    $default	reduce using rule 314 (statement_bpar)



state 666

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL . OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    OPEN_PAR	shift, and go to state 797



state 667
=======
state 660
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_output  ->  COMMA ass_right . option_output   (rule 355)

    COMMA	shift, and go to state 485

    $default	reduce using rule 354 (option_output)

    option_output	go to state 791



state 651

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR .   (rule 353)

    $default	reduce using rule 353 (output_statement)



<<<<<<< HEAD
state 652

    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 194)

    OPEN_PAR	shift, and go to state 652
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305

    array_exp	go to state 640
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
=======
state 662
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_output  ->  COMMA ass_right . option_output   (rule 356)

<<<<<<< HEAD
    COMMA	shift, and go to state 503

    $default	reduce using rule 355 (option_output)
=======
    OPEN_PAR	shift, and go to state 662
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310

    array_exp	go to state 650
    option_list_value	go to state 316
    option_struct_list_value	go to state 317
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_output	go to state 798


<<<<<<< HEAD
state 653

    array_exp  ->  array_exp . CON array_exp   (rule 191)
    array_exp  ->  array_exp CON array_exp .   (rule 191)
=======
<<<<<<< HEAD
=======
state 663
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 668
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR .   (rule 354)

<<<<<<< HEAD
    $default	reduce using rule 191 (array_exp)



state 654

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 218)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 792
=======
    $default	reduce using rule 354 (output_statement)



<<<<<<< HEAD
state 669
=======
state 664
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 89
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 799
=======
    OPEN_PAR	shift, and go to state 808
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
<<<<<<< HEAD
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 793
    INTLITERAL	shift, and go to state 794
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 712
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 655

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 795
=======
    BNE 	shift, and go to state 93
<<<<<<< HEAD
    ID  	shift, and go to state 800
    INTLITERAL	shift, and go to state 801
=======
    ID  	shift, and go to state 809
    INTLITERAL	shift, and go to state 810
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
=======
    simple_ari_exp	go to state 582
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 728
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 670
=======
state 665
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 89
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 802
=======
    OPEN_PAR	shift, and go to state 811
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
<<<<<<< HEAD
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 796
    INTLITERAL	shift, and go to state 797
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 714
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 656

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)
=======
    BNE 	shift, and go to state 93
<<<<<<< HEAD
    ID  	shift, and go to state 803
    INTLITERAL	shift, and go to state 804
=======
    ID  	shift, and go to state 812
    INTLITERAL	shift, and go to state 813
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
=======
    simple_ari_exp	go to state 582
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 730
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 671
=======
state 666
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
<<<<<<< HEAD
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 798
    INTLITERAL	shift, and go to state 799
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 718
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 657

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 800
    MUL 	shift, and go to state 726



state 658

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 801
    MUL 	shift, and go to state 729



state 659

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)

    OPEN_PAR	shift, and go to state 802



state 660

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 140)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 803
    ari_operator	go to state 239



state 661

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 85)
=======
    BNE 	shift, and go to state 93
<<<<<<< HEAD
    ID  	shift, and go to state 805
    INTLITERAL	shift, and go to state 806
=======
    ID  	shift, and go to state 814
    INTLITERAL	shift, and go to state 815
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
=======
    simple_ari_exp	go to state 582
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 734
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 672
=======
state 667
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 807
=======
    CLOSE_PAR	shift, and go to state 816
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    MUL 	shift, and go to state 742



<<<<<<< HEAD
state 673
=======
state 668
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 808
=======
    CLOSE_PAR	shift, and go to state 817
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    MUL 	shift, and go to state 745



<<<<<<< HEAD
state 674
=======
state 669
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 809



state 675
=======
    OPEN_PAR	shift, and go to state 818



state 670
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 141)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    COMMA	shift, and go to state 559
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 810
    ari_operator	go to state 250



state 676
=======
    option_ari_exp	go to state 819
    ari_operator	go to state 244



state 671
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 86)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 449
    UNSIGNED	shift, and go to state 345
    ID  	shift, and go to state 450
    STRUCT_TYPE	shift, and go to state 451

    $default	reduce using rule 287 (option_function_parameter_list)

    type_define	go to state 346
    sign_type_define	go to state 348
    all_type_define	go to state 452
    option_function_parameter_list	go to state 804
=======
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 480
    UNSIGNED	shift, and go to state 360
    ID  	shift, and go to state 481
    STRUCT_TYPE	shift, and go to state 482
=======
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 168
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 288 (option_function_parameter_list)

<<<<<<< HEAD
    type_define	go to state 361
    sign_type_define	go to state 363
    all_type_define	go to state 483
    option_function_parameter_list	go to state 811



state 677

    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 333)

    $default	reduce using rule 333 (imply_pre)



state 678
=======
    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 459
    option_function_parameter_list	go to state 820
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 662

    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 332)

    $default	reduce using rule 332 (imply_pre)



<<<<<<< HEAD
state 663

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 153)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 805
    ari_operator	go to state 239
=======
state 673
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 154)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    COMMA	shift, and go to state 559
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 812
    ari_operator	go to state 250



state 679

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array . option_struct_member_exp   (rule 377)

    DOT 	shift, and go to state 570
    IMPLY	shift, and go to state 571

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 813



state 680

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier . option_struct_member_exp   (rule 373)

    DOT 	shift, and go to state 570
    IMPLY	shift, and go to state 571

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 814



state 681
=======
    option_ari_exp	go to state 821
    ari_operator	go to state 244
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 664

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array . option_struct_member_exp   (rule 376)

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 806



state 665

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier . option_struct_member_exp   (rule 372)

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 807



<<<<<<< HEAD
state 666
=======
state 676
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR . statement CLOSE_MPAR   (rule 56)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

<<<<<<< HEAD
    statement	go to state 808
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81
=======
<<<<<<< HEAD
    statement	go to state 815
=======
    statement	go to state 824
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82
<<<<<<< HEAD
=======
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 667

    option_projection  ->  COMMA statement option_projection .   (rule 327)

    $default	reduce using rule 327 (option_projection)



state 668

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar .   (rule 59)

    $default	reduce using rule 59 (statement)



state 669

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION . statement_bpar   (rule 58)

<<<<<<< HEAD
    error	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300

    statement_bpar	go to state 809
=======
    error	shift, and go to state 304
    OPEN_BPAR	shift, and go to state 305

    statement_bpar	go to state 825



state 680

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE MUL MUL . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)

    ID  	shift, and go to state 826



state 681

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE MUL ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)

    OPEN_PAR	shift, and go to state 827



state 682

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 168
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 459
    option_function_parameter_list	go to state 828
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 683

    option_projection  ->  COMMA statement option_projection .   (rule 328)

<<<<<<< HEAD
    $default	reduce using rule 328 (option_projection)
=======
    OPEN_PAR	shift, and go to state 829
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 684

<<<<<<< HEAD
    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar .   (rule 59)

    $default	reduce using rule 59 (statement)
=======
    function_define  ->  FUNCTION all_type_define MUL ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 71)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 168
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 459
    option_function_parameter_list	go to state 830
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 670

<<<<<<< HEAD
    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 60)

    OPEN_BPAR	shift, and go to state 810
=======
    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION . statement_bpar   (rule 58)

    error	shift, and go to state 324
    OPEN_BPAR	shift, and go to state 325

<<<<<<< HEAD
    statement_bpar	go to state 816
=======
    CLOSE_PAR	shift, and go to state 831
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 671

<<<<<<< HEAD
    function  ->  EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 71)

    $default	reduce using rule 71 (function)
=======
    function_define  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    OPEN_BPAR	shift, and go to state 817
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 672

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)

    CLOSE_PAR	shift, and go to state 659
=======
    function  ->  EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 72)

<<<<<<< HEAD
    $default	reduce using rule 72 (function)
=======
    CLOSE_PAR	shift, and go to state 669
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 688

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)

    CLOSE_PAR	shift, and go to state 674
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 673

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
=======
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 811
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 818
=======
    ari_exp	go to state 832
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 674

<<<<<<< HEAD
    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR . ari_exp   (rule 154)
=======
    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR . ari_exp   (rule 155)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 812
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 819
=======
    ari_exp	go to state 833
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 690
<<<<<<< HEAD
=======

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    CLOSE_PAR	shift, and go to state 834
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 675

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    CLOSE_PAR	shift, and go to state 813
=======
state 691
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 820
=======
    CLOSE_PAR	shift, and go to state 835
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 676

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    CLOSE_PAR	shift, and go to state 814
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 821
=======
    CLOSE_PAR	shift, and go to state 836
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 677

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    CLOSE_PAR	shift, and go to state 815

=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 822
=======
    MUL 	shift, and go to state 837

    MUL 	[reduce using rule 95 (type_define)]
    $default	reduce using rule 95 (type_define)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 678

    type_define  ->  INTDECLARATION .   (rule 89)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

<<<<<<< HEAD
    MUL 	shift, and go to state 816

    MUL 	[reduce using rule 89 (type_define)]
    $default	reduce using rule 89 (type_define)

=======
    type_define  ->  INTDECLARATION .   (rule 90)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

<<<<<<< HEAD
    MUL 	shift, and go to state 823
=======
    MUL 	shift, and go to state 838
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 679

    type_define  ->  CHARDECLARATION .   (rule 91)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

<<<<<<< HEAD
    MUL 	shift, and go to state 817

    MUL 	[reduce using rule 91 (type_define)]
    $default	reduce using rule 91 (type_define)
=======
    type_define  ->  CHARDECLARATION .   (rule 92)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

<<<<<<< HEAD
    MUL 	shift, and go to state 824

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)
=======
    MUL 	shift, and go to state 690
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 680

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    MUL 	shift, and go to state 675



state 681

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    MUL 	shift, and go to state 676



state 682

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    MUL 	shift, and go to state 677
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

<<<<<<< HEAD
    MUL 	shift, and go to state 692
=======
    INTDECLARATION	shift, and go to state 753
    CHARDECLARATION	shift, and go to state 839
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 683

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
=======
<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    INTDECLARATION	shift, and go to state 753
    CHARDECLARATION	shift, and go to state 825
=======
    option_input  ->  COMMA array . option_input   (rule 370)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    INTDECLARATION	shift, and go to state 737
    CHARDECLARATION	shift, and go to state 818


<<<<<<< HEAD
=======
    option_input	go to state 840
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 684

    option_input  ->  COMMA array . option_input   (rule 363)

    COMMA	shift, and go to state 528

<<<<<<< HEAD
    $default	reduce using rule 361 (option_input)
=======
<<<<<<< HEAD
    option_input  ->  COMMA array . option_input   (rule 364)

    COMMA	shift, and go to state 545

    $default	reduce using rule 362 (option_input)

    option_input	go to state 826
=======
    option_input  ->  COMMA identifier . option_input   (rule 369)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_input	go to state 819


<<<<<<< HEAD
=======
    option_input	go to state 841
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 685

    option_input  ->  COMMA identifier . option_input   (rule 362)

    COMMA	shift, and go to state 528

<<<<<<< HEAD
    $default	reduce using rule 361 (option_input)

    option_input	go to state 820
=======
<<<<<<< HEAD
    option_input  ->  COMMA identifier . option_input   (rule 363)

    COMMA	shift, and go to state 545

    $default	reduce using rule 362 (option_input)

    option_input	go to state 827
=======
    input_statement  ->  REQUEST OPEN_PAR array option_input CLOSE_PAR .   (rule 366)

    $default	reduce using rule 366 (input_statement)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 686

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR array option_input CLOSE_PAR .   (rule 359)

    $default	reduce using rule 359 (input_statement)
=======
<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR array option_input CLOSE_PAR .   (rule 360)

    $default	reduce using rule 360 (input_statement)
=======
    input_statement  ->  REQUEST OPEN_PAR identifier option_input CLOSE_PAR .   (rule 364)

    $default	reduce using rule 364 (input_statement)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 687

<<<<<<< HEAD
    input_statement  ->  REQUEST OPEN_PAR identifier option_input CLOSE_PAR .   (rule 357)

    $default	reduce using rule 357 (input_statement)
=======
    input_statement  ->  REQUEST OPEN_PAR identifier option_input CLOSE_PAR .   (rule 358)

<<<<<<< HEAD
    $default	reduce using rule 358 (input_statement)
=======
    CLOSE_PAR	shift, and go to state 842
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 688

<<<<<<< HEAD
    inner_option_function_identifier  ->  COMMA error .   (rule 312)

    $default	reduce using rule 312 (inner_option_function_identifier)
=======
<<<<<<< HEAD
    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 71)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 307)

    CLOSE_PAR	shift, and go to state 828
=======
    inner_option_function_identifier  ->  COMMA error .   (rule 319)

    $default	reduce using rule 319 (inner_option_function_identifier)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 689

<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    inner_option_function_identifier  ->  COMMA ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 310)
    identifier  ->  ID .   (rule 317)
=======
<<<<<<< HEAD
    inner_option_function_identifier  ->  COMMA error .   (rule 313)

    $default	reduce using rule 313 (inner_option_function_identifier)
=======
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    inner_option_function_identifier  ->  COMMA ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 317)
    identifier  ->  ID .   (rule 324)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    OPEN_PAR	shift, and go to state 821
    OPEN_MPAR	shift, and go to state 188

<<<<<<< HEAD
    $default	reduce using rule 317 (identifier)
=======
    $default	reduce using rule 324 (identifier)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 690

<<<<<<< HEAD
    inner_option_function_identifier  ->  COMMA ass_right . inner_option_function_identifier   (rule 309)
=======
<<<<<<< HEAD
    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    inner_option_function_identifier  ->  COMMA ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 311)
    identifier  ->  ID .   (rule 318)

    OPEN_PAR	shift, and go to state 829
    OPEN_MPAR	shift, and go to state 199

    $default	reduce using rule 318 (identifier)
=======
    inner_option_function_identifier  ->  COMMA ass_right . inner_option_function_identifier   (rule 316)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    COMMA	shift, and go to state 538

    $default	reduce using rule 311 (inner_option_function_identifier)

<<<<<<< HEAD
    inner_option_function_identifier	go to state 822
=======
    inner_option_function_identifier	go to state 844
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 691

<<<<<<< HEAD
    option_ari_exp  ->  COMMA error .   (rule 148)

    $default	reduce using rule 148 (option_ari_exp)
=======
    inner_option_function_identifier  ->  COMMA ass_right . inner_option_function_identifier   (rule 310)

    COMMA	shift, and go to state 556
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 312 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 830

<<<<<<< HEAD
state 692

    option_ari_exp  ->  COMMA ari_exp . option_ari_exp   (rule 147)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 823
    ari_operator	go to state 239
=======
<<<<<<< HEAD
=======
state 708
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
state 707
=======
    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_ari_exp  ->  COMMA error .   (rule 149)

<<<<<<< HEAD
    $default	reduce using rule 149 (option_ari_exp)
=======
    option_ari_exp	go to state 845
    ari_operator	go to state 244
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 693

<<<<<<< HEAD
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 140)

    $default	reduce using rule 140 (array)
=======
    option_ari_exp  ->  COMMA ari_exp . option_ari_exp   (rule 148)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 559
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 150 (option_ari_exp)

    option_ari_exp	go to state 831
    ari_operator	go to state 250

<<<<<<< HEAD
state 694

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp . inner_option_identifier_array_declaration   (rule 98)
    array_exp  ->  array_exp . CON array_exp   (rule 191)

    COMMA	shift, and go to state 374
    CON 	shift, and go to state 488

    COMMA	[reduce using rule 105 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 105 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 824
=======
<<<<<<< HEAD
=======
state 710
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
state 709
=======
    COMMA	shift, and go to state 381
    CON 	shift, and go to state 495
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 141)

<<<<<<< HEAD
    $default	reduce using rule 141 (array)
=======
    inner_option_identifier_array_declaration	go to state 846
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 695

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral . inner_option_identifier_array_declaration   (rule 99)

    COMMA	shift, and go to state 374

    COMMA	[reduce using rule 105 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 105 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 825
=======
    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp . inner_option_identifier_array_declaration   (rule 99)
    array_exp  ->  array_exp . CON array_exp   (rule 192)

<<<<<<< HEAD
    COMMA	shift, and go to state 389
    CON 	shift, and go to state 286
=======
    COMMA	shift, and go to state 381
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)

<<<<<<< HEAD
    inner_option_identifier_array_declaration	go to state 832
=======
    inner_option_identifier_array_declaration	go to state 847
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 696

<<<<<<< HEAD
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR inner_option_identifier_array_declaration   (rule 96)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 101)

    CLOSE_MPAR	shift, and go to state 826
=======
    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral . inner_option_identifier_array_declaration   (rule 100)

<<<<<<< HEAD
    COMMA	shift, and go to state 389

    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 833
=======
    CLOSE_MPAR	shift, and go to state 848
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 697

<<<<<<< HEAD
    option_identifier_array_declaration  ->  identifier ASS_P ass_right inner_option_identifier_array_declaration .   (rule 97)

    $default	reduce using rule 97 (option_identifier_array_declaration)
=======
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 102)

    CLOSE_MPAR	shift, and go to state 834
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 698

    option_identifier_array_declaration  ->  identifier ASS_P ass_right inner_option_identifier_array_declaration .   (rule 98)

    $default	reduce using rule 98 (option_identifier_array_declaration)



state 699

<<<<<<< HEAD
    option_struct_member_exp  ->  DOT function .   (rule 386)

    $default	reduce using rule 386 (option_struct_member_exp)
=======
<<<<<<< HEAD
    option_struct_declaration  ->  sign_declaration AND option_struct_declaration .   (rule 67)

    $default	reduce using rule 67 (option_struct_declaration)
=======
    option_struct_member_exp  ->  DOT function .   (rule 393)

    $default	reduce using rule 393 (option_struct_member_exp)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 700

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    option_struct_member_exp  ->  DOT array . option_struct_member_exp   (rule 383)
=======
<<<<<<< HEAD
    option_struct_member_exp  ->  DOT function .   (rule 387)

    $default	reduce using rule 387 (option_struct_member_exp)

=======
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    option_struct_member_exp  ->  DOT array . option_struct_member_exp   (rule 390)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    DOT 	shift, and go to state 552
    OPEN_PAR	shift, and go to state 203
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 827

>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


state 717

<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    option_struct_member_exp  ->  DOT array . option_struct_member_exp   (rule 384)

    DOT 	shift, and go to state 570
    OPEN_PAR	shift, and go to state 214
    IMPLY	shift, and go to state 571

<<<<<<< HEAD
state 701

    option_struct_member_exp  ->  DOT identifier . option_struct_member_exp   (rule 382)
=======
    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 835
=======
    option_struct_member_exp  ->  DOT identifier . option_struct_member_exp   (rule 389)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

<<<<<<< HEAD
    option_struct_member_exp	go to state 828
=======
    option_struct_member_exp	go to state 850
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 702

<<<<<<< HEAD
    option_struct_member_exp  ->  IMPLY function .   (rule 387)

    $default	reduce using rule 387 (option_struct_member_exp)
=======
<<<<<<< HEAD
    option_struct_member_exp  ->  DOT identifier . option_struct_member_exp   (rule 383)

    DOT 	shift, and go to state 570
    IMPLY	shift, and go to state 571
=======
    option_struct_member_exp  ->  IMPLY function .   (rule 394)

    $default	reduce using rule 394 (option_struct_member_exp)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_struct_member_exp	go to state 836

<<<<<<< HEAD


state 718

    option_struct_member_exp  ->  IMPLY function .   (rule 388)

<<<<<<< HEAD
state 703
=======
    $default	reduce using rule 388 (option_struct_member_exp)
=======
state 719
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    option_struct_member_exp  ->  IMPLY array . option_struct_member_exp   (rule 385)

    DOT 	shift, and go to state 552
    OPEN_PAR	shift, and go to state 203
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

<<<<<<< HEAD
    option_struct_member_exp	go to state 829
=======
    option_struct_member_exp	go to state 851
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 704

<<<<<<< HEAD
    option_struct_member_exp  ->  IMPLY identifier . option_struct_member_exp   (rule 384)
=======
<<<<<<< HEAD
    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
    option_struct_member_exp  ->  IMPLY array . option_struct_member_exp   (rule 386)

    DOT 	shift, and go to state 570
    OPEN_PAR	shift, and go to state 214
    IMPLY	shift, and go to state 571

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 837
=======
    option_struct_member_exp  ->  IMPLY identifier . option_struct_member_exp   (rule 391)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

<<<<<<< HEAD
    option_struct_member_exp	go to state 830
=======
    option_struct_member_exp	go to state 852
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 721

    option_struct_member_exp  ->  IMPLY identifier . option_struct_member_exp   (rule 385)

    DOT 	shift, and go to state 570
    IMPLY	shift, and go to state 571

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 838
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 705

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR . complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

<<<<<<< HEAD
    complexProposition	go to state 831
=======
<<<<<<< HEAD
    complexProposition	go to state 839
=======
    complexProposition	go to state 853
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 706

<<<<<<< HEAD
    option_exp_else_statement  ->  ELSE . ari_exp   (rule 163)
=======
    option_exp_else_statement  ->  ELSE . ari_exp   (rule 164)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 832
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 840
=======
    ari_exp	go to state 854
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 707

<<<<<<< HEAD
    ari_exp  ->  IF bool_exp THEN ari_exp option_exp_else_statement .   (rule 160)

    $default	reduce using rule 160 (ari_exp)
=======
    ari_exp  ->  IF bool_exp THEN ari_exp option_exp_else_statement .   (rule 161)

    $default	reduce using rule 161 (ari_exp)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 708

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 230)
=======
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 231)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 833
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 841
=======
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 855
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 709

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 834
=======
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 233)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 842
=======
    CLOSE_PAR	shift, and go to state 856
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 710

<<<<<<< HEAD
    type_cast_alg_exp  ->  simple_ari_exp ari_operator . simple_ari_exp   (rule 162)
=======
    type_cast_alg_exp  ->  simple_ari_exp ari_operator . simple_ari_exp   (rule 163)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

<<<<<<< HEAD
    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    simple_ari_exp	go to state 835
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
=======
    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    simple_ari_exp	go to state 843
=======
    simple_ari_exp	go to state 857
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 711

<<<<<<< HEAD
    casted_element  ->  type_cast_alg_exp .   (rule 234)

    $default	reduce using rule 234 (casted_element)
=======
    casted_element  ->  type_cast_alg_exp .   (rule 235)

    $default	reduce using rule 235 (casted_element)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 712

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 218)

    $default	reduce using rule 218 (type_cast)
=======
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 219)

    $default	reduce using rule 219 (type_cast)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 713

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 224)
=======
    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 225)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 836
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 844
=======
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 858
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 714

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 221)

    $default	reduce using rule 221 (type_cast)
=======
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 222)

    $default	reduce using rule 222 (type_cast)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 715

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 227)
=======
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 228)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 837
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
=======
    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 845
=======
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 859
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 716

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element .   (rule 223)

<<<<<<< HEAD
    $default	reduce using rule 223 (type_cast)
=======
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element .   (rule 224)

    $default	reduce using rule 224 (type_cast)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 717

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 229)
=======
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 230)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 838
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 846
=======
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 860
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 718

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element .   (rule 220)

    $default	reduce using rule 220 (type_cast)
=======
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element .   (rule 221)

    $default	reduce using rule 221 (type_cast)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 719

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 226)
=======
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 227)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 839
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 847
=======
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 861
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 720

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 218)
=======
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
<<<<<<< HEAD
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 793
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 712
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
=======
    BNE 	shift, and go to state 93
<<<<<<< HEAD
    ID  	shift, and go to state 800
=======
    ID  	shift, and go to state 809
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
=======
    simple_ari_exp	go to state 582
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 728
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 721

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)
=======
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
<<<<<<< HEAD
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 796
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 714
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
=======
    BNE 	shift, and go to state 93
<<<<<<< HEAD
    ID  	shift, and go to state 803
=======
    ID  	shift, and go to state 812
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
=======
    simple_ari_exp	go to state 582
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 730
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 722

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)
=======
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
<<<<<<< HEAD
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 798
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 718
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
=======
    BNE 	shift, and go to state 93
<<<<<<< HEAD
    ID  	shift, and go to state 805
=======
    ID  	shift, and go to state 814
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
=======
    simple_ari_exp	go to state 582
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 734
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 723

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 840
    MUL 	shift, and go to state 729
=======
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 848
=======
    CLOSE_PAR	shift, and go to state 862
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    MUL 	shift, and go to state 745
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 724

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 216)

    $default	reduce using rule 216 (type_cast)
=======
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 217)

    $default	reduce using rule 217 (type_cast)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 725

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)
=======
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 841
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 849
=======
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 863
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 726

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 842
=======
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 226)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 850
=======
    CLOSE_PAR	shift, and go to state 864
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 727

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 217)

    $default	reduce using rule 217 (type_cast)
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 218)

    $default	reduce using rule 218 (type_cast)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 728

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 843
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 851
=======
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 865
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 729

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 844
=======
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 229)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 852
=======
    CLOSE_PAR	shift, and go to state 866
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 730

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 214)

    $default	reduce using rule 214 (type_cast)
=======
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 215)

    $default	reduce using rule 215 (type_cast)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 731

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 215)

    $default	reduce using rule 215 (type_cast)
=======
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 216)

    $default	reduce using rule 216 (type_cast)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 732

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 231)

    $default	reduce using rule 231 (type_cast)
=======
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 232)

    $default	reduce using rule 232 (type_cast)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 733

<<<<<<< HEAD
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 233)
=======
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 234)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 845
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 734
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 853
=======
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 867
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 750
<<<<<<< HEAD
=======
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    CLOSE_PAR	shift, and go to state 846



<<<<<<< HEAD
state 735

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    CLOSE_PAR	shift, and go to state 847
=======
state 751
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 854
=======
    CLOSE_PAR	shift, and go to state 869
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 736

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    CLOSE_PAR	shift, and go to state 848
=======
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 855
=======
    CLOSE_PAR	shift, and go to state 870
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 737

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    MUL 	shift, and go to state 816
=======
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 856
=======
    MUL 	shift, and go to state 837
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 738

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    MUL 	shift, and go to state 849
=======
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

<<<<<<< HEAD
    MUL 	shift, and go to state 823
=======
    MUL 	shift, and go to state 871
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 739

<<<<<<< HEAD
    case_par  ->  CASE . member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 344)
=======
<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    MUL 	shift, and go to state 857



state 755

    case_par  ->  CASE . member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 345)
=======
    case_par  ->  CASE . member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 351)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

<<<<<<< HEAD
    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    member_in_exp	go to state 850
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 740
=======
    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    member_in_exp	go to state 858
=======
    member_in_exp	go to state 872
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



state 756
<<<<<<< HEAD

    case_par  ->  DEFAULT . COLON OPEN_PAR statement CLOSE_PAR   (rule 346)

    COLON	shift, and go to state 859
=======
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    case_par  ->  DEFAULT . COLON OPEN_PAR statement CLOSE_PAR   (rule 345)

    COLON	shift, and go to state 851



state 741

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par . CLOSE_BPAR   (rule 343)

<<<<<<< HEAD
    CLOSE_BPAR	shift, and go to state 852
=======
    CLOSE_BPAR	shift, and go to state 874
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 742

<<<<<<< HEAD
    option_else_statement  ->  ELSE statement_bpar .   (rule 350)

    $default	reduce using rule 350 (option_else_statement)
=======
<<<<<<< HEAD
    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par . CLOSE_BPAR   (rule 344)

    CLOSE_BPAR	shift, and go to state 860
=======
    option_else_statement  ->  ELSE statement_bpar .   (rule 357)

    $default	reduce using rule 357 (option_else_statement)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 743

<<<<<<< HEAD
    option_function_parameter_list  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 286)

    CLOSE_PAR	shift, and go to state 853
=======
    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 861
=======
    CLOSE_PAR	shift, and go to state 875
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 744

<<<<<<< HEAD
    option_function_parameter_list  ->  ID MUL MUL . identifier inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  ID MUL MUL . inner_option_define_identifier   (rule 279)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141
=======
    inner_option_list_value  ->  COMMA ari_exp inner_option_list_value .   (rule 202)

<<<<<<< HEAD
    $default	reduce using rule 202 (inner_option_list_value)
=======
    COMMA	shift, and go to state 288
    OPEN_PAR	shift, and go to state 141
    ID  	shift, and go to state 142
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 298 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 854
    identifier	go to state 855
=======
    inner_option_define_identifier	go to state 876
    identifier	go to state 877
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 745

<<<<<<< HEAD
    option_function_parameter_list  ->  ID MUL inner_option_define_identifier .   (rule 278)

    $default	reduce using rule 278 (option_function_parameter_list)
=======
    inner_option_list_value  ->  COMMA array_exp inner_option_list_value .   (rule 204)

    $default	reduce using rule 204 (inner_option_list_value)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 746

<<<<<<< HEAD
    option_function_parameter_list  ->  ID MUL identifier . inner_option_define_identifier   (rule 271)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 856
=======
    inner_option_list_value  ->  COMMA strliteral inner_option_list_value .   (rule 203)

<<<<<<< HEAD
    $default	reduce using rule 203 (inner_option_list_value)
=======
    inner_option_define_identifier	go to state 878
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 747

<<<<<<< HEAD
    option_function_parameter_list  ->  ID identifier ARRAY . inner_option_define_identifier   (rule 273)

    COMMA	shift, and go to state 283
=======
    option_else_statement  ->  ELSE statement_bpar .   (rule 351)

<<<<<<< HEAD
    $default	reduce using rule 351 (option_else_statement)
=======
    COMMA	shift, and go to state 288
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 298 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 857
=======
    inner_option_define_identifier	go to state 879
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 748

<<<<<<< HEAD
    option_function_parameter_list  ->  ID identifier inner_option_define_identifier .   (rule 270)

    $default	reduce using rule 270 (option_function_parameter_list)
=======
    option_function_parameter_list  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 287)

    CLOSE_PAR	shift, and go to state 862
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 749

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . identifier inner_option_define_identifier   (rule 268)
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . inner_option_define_identifier   (rule 276)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 858
    identifier	go to state 859
=======
    option_function_parameter_list  ->  ID MUL MUL . identifier inner_option_define_identifier   (rule 273)
    option_function_parameter_list  ->  ID MUL MUL . inner_option_define_identifier   (rule 280)

    COMMA	shift, and go to state 308
    OPEN_PAR	shift, and go to state 151
    ID  	shift, and go to state 152

    $default	reduce using rule 299 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 863
    identifier	go to state 864
=======
    inner_option_define_identifier	go to state 880
    identifier	go to state 881
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 750

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE MUL inner_option_define_identifier .   (rule 275)

    $default	reduce using rule 275 (option_function_parameter_list)
=======
    option_function_parameter_list  ->  ID MUL inner_option_define_identifier .   (rule 279)

    $default	reduce using rule 279 (option_function_parameter_list)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 751

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 267)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 860
=======
    option_function_parameter_list  ->  ID MUL identifier . inner_option_define_identifier   (rule 272)

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 865
=======
    inner_option_define_identifier	go to state 882
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 752

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 269)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 861
=======
    option_function_parameter_list  ->  ID identifier ARRAY . inner_option_define_identifier   (rule 274)

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 866
=======
    inner_option_define_identifier	go to state 883
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 753

<<<<<<< HEAD
    option_function_parameter_list  ->  STRUCT_TYPE identifier inner_option_define_identifier .   (rule 266)

    $default	reduce using rule 266 (option_function_parameter_list)
=======
    option_function_parameter_list  ->  ID identifier inner_option_define_identifier .   (rule 271)

    $default	reduce using rule 271 (option_function_parameter_list)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 754

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define MUL MUL . identifier inner_option_define_identifier   (rule 285)

    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 862
=======
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . identifier inner_option_define_identifier   (rule 269)
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . inner_option_define_identifier   (rule 277)

    COMMA	shift, and go to state 308
    OPEN_PAR	shift, and go to state 151
    ID  	shift, and go to state 152

    $default	reduce using rule 299 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 867
    identifier	go to state 868
=======
    identifier	go to state 884
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 755

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define MUL inner_option_define_identifier .   (rule 284)

    $default	reduce using rule 284 (option_function_parameter_list)
=======
    option_function_parameter_list  ->  STRUCT_TYPE MUL inner_option_define_identifier .   (rule 276)

    $default	reduce using rule 276 (option_function_parameter_list)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 756

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define MUL identifier . inner_option_define_identifier   (rule 283)

    ARRAY	shift, and go to state 863
    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 864
=======
    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 268)

<<<<<<< HEAD
    COMMA	shift, and go to state 308
=======
    ARRAY	shift, and go to state 885
    COMMA	shift, and go to state 288
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 299 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 869
=======
    inner_option_define_identifier	go to state 886
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 757

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier ARRAY . inner_option_define_identifier   (rule 280)
    option_function_parameter_list  ->  all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 282)

    COMMA	shift, and go to state 283
    OPEN_MPAR	shift, and go to state 865

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 866
=======
    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 270)

<<<<<<< HEAD
    COMMA	shift, and go to state 308
=======
    COMMA	shift, and go to state 288
    OPEN_MPAR	shift, and go to state 887
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 299 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 870
=======
    inner_option_define_identifier	go to state 888
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 758

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define identifier inner_option_define_identifier .   (rule 264)

    $default	reduce using rule 264 (option_function_parameter_list)
=======
    option_function_parameter_list  ->  STRUCT_TYPE identifier inner_option_define_identifier .   (rule 267)

    $default	reduce using rule 267 (option_function_parameter_list)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 759

<<<<<<< HEAD
    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    OPEN_BPAR	shift, and go to state 867
=======
    option_function_parameter_list  ->  all_type_define MUL MUL . identifier inner_option_define_identifier   (rule 286)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 151
    ID  	shift, and go to state 152

    identifier	go to state 871
=======
    OPEN_BPAR	shift, and go to state 889
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 760

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 297)

    CLOSE_PAR	shift, and go to state 868
=======
    option_function_parameter_list  ->  all_type_define MUL inner_option_define_identifier .   (rule 285)

<<<<<<< HEAD
    $default	reduce using rule 285 (option_function_parameter_list)
=======
    CLOSE_PAR	shift, and go to state 890
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 761

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA ID identifier ARRAY . inner_option_define_identifier   (rule 293)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 869
=======
    option_function_parameter_list  ->  all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 282)
    option_function_parameter_list  ->  all_type_define MUL identifier . inner_option_define_identifier   (rule 284)

    ARRAY	shift, and go to state 872
    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 873
=======
    inner_option_define_identifier	go to state 891
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 762

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA ID identifier inner_option_define_identifier .   (rule 290)

    $default	reduce using rule 290 (inner_option_define_identifier)
=======
    option_function_parameter_list  ->  all_type_define identifier ARRAY . inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)

    COMMA	shift, and go to state 308
    OPEN_MPAR	shift, and go to state 874
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 875

<<<<<<< HEAD
state 763

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 292)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 870
=======
<<<<<<< HEAD
=======
state 779
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


state 778

    option_function_parameter_list  ->  all_type_define identifier inner_option_define_identifier .   (rule 265)

<<<<<<< HEAD
    $default	reduce using rule 265 (option_function_parameter_list)
=======
    inner_option_define_identifier	go to state 892
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 764

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 294)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 871
=======
    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

<<<<<<< HEAD
    OPEN_BPAR	shift, and go to state 876
=======
    inner_option_define_identifier	go to state 893
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 765

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier inner_option_define_identifier .   (rule 291)

    $default	reduce using rule 291 (inner_option_define_identifier)
=======
    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)

    CLOSE_PAR	shift, and go to state 877
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 766

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define MUL inner_option_define_identifier .   (rule 303)
=======
<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA ID identifier ARRAY . inner_option_define_identifier   (rule 294)
=======
    inner_option_define_identifier  ->  COMMA all_type_define MUL inner_option_define_identifier .   (rule 309)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 303 (inner_option_define_identifier)



state 767

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . inner_option_define_identifier   (rule 302)

    ARRAY	shift, and go to state 872
    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 873



state 768

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)

    COMMA	shift, and go to state 283
    OPEN_MPAR	shift, and go to state 874

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 875

>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    COMMA	shift, and go to state 308

<<<<<<< HEAD
state 769
=======
<<<<<<< HEAD
    $default	reduce using rule 299 (inner_option_define_identifier)
=======
state 785
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 876
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 898
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    inner_option_define_identifier	go to state 878


<<<<<<< HEAD
state 770

    inner_option_define_identifier  ->  COMMA all_type_define identifier inner_option_define_identifier .   (rule 288)

    $default	reduce using rule 288 (inner_option_define_identifier)
=======
<<<<<<< HEAD
=======
state 786
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 782

    inner_option_define_identifier  ->  COMMA ID identifier inner_option_define_identifier .   (rule 291)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 291 (inner_option_define_identifier)


<<<<<<< HEAD
state 771
=======
<<<<<<< HEAD
=======
state 787
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 783

<<<<<<< HEAD
    CLOSE_BPAR	shift, and go to state 877
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196
=======
<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 293)
=======
    CLOSE_BPAR	shift, and go to state 899
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    COMMA	shift, and go to state 308
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 299 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 879


<<<<<<< HEAD
state 772
=======
=======
state 788
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_frame_identifier  ->  COMMA identifier option_frame_identifier .   (rule 323)

<<<<<<< HEAD
    $default	reduce using rule 323 (option_frame_identifier)
=======
    $default	reduce using rule 330 (option_frame_identifier)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 784

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 295)

<<<<<<< HEAD
state 773
=======
<<<<<<< HEAD
    COMMA	shift, and go to state 308
=======
state 789
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 299 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 880

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 878



state 774

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 102)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 232)

    OPEN_PAR	shift, and go to state 140
    CLOSE_PAR	shift, and go to state 834
    MUL 	shift, and go to state 189
    ID  	shift, and go to state 190

    option_identifier_array_declaration	go to state 371
    identifier	go to state 192
=======


state 785
=======
    OPEN_PAR	shift, and go to state 900



state 790
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier inner_option_define_identifier .   (rule 292)

<<<<<<< HEAD
    $default	reduce using rule 292 (inner_option_define_identifier)

=======
    OPEN_PAR	shift, and go to state 141
    CLOSE_PAR	shift, and go to state 856
    MUL 	shift, and go to state 194
    ID  	shift, and go to state 195

    option_identifier_array_declaration	go to state 378
    identifier	go to state 197
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 786

<<<<<<< HEAD
state 775

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 658
=======
<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define MUL inner_option_define_identifier .   (rule 304)
=======
state 791
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 304 (inner_option_define_identifier)

<<<<<<< HEAD
=======
    CLOSE_PAR	shift, and go to state 600
    MUL 	shift, and go to state 668
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 787

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . inner_option_define_identifier   (rule 303)

<<<<<<< HEAD
state 776

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA . for_sta_control CLOSE_PAR statement_bpar   (rule 335)

    OPEN_PAR	shift, and go to state 357
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 179
    ID  	shift, and go to state 174

    $default	reduce using rule 342 (for_sta_control)

    ass_statement	go to state 879
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 181
    point_exp	go to state 72
    identifier	go to state 73
    for_sta_control	go to state 880
    struct_member_exp	go to state 81
=======
    ARRAY	shift, and go to state 881
    COMMA	shift, and go to state 308
=======
state 792

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA . for_sta_control CLOSE_PAR statement_bpar   (rule 342)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 299 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 882

=======
    $default	reduce using rule 349 (for_sta_control)

    ass_statement	go to state 901
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 186
    point_exp	go to state 73
    identifier	go to state 74
    for_sta_control	go to state 902
    struct_member_exp	go to state 82
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


state 788

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    COMMA	shift, and go to state 308
    OPEN_MPAR	shift, and go to state 883

    $default	reduce using rule 299 (inner_option_define_identifier)

<<<<<<< HEAD
state 777
=======
    inner_option_define_identifier	go to state 884
=======
state 793
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 789

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)

<<<<<<< HEAD
    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
=======
    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
<<<<<<< HEAD
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 881
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 778
=======
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 885
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
<<<<<<< HEAD
=======
    bool_exp	go to state 903
    prime_bool_exp	go to state 133
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 790

    inner_option_define_identifier  ->  COMMA all_type_define identifier inner_option_define_identifier .   (rule 289)
=======
state 794
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR . type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 136)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45

    type_define	go to state 882



state 779

    inner_option_list_value  ->  COMMA error .   (rule 205)

    $default	reduce using rule 205 (inner_option_list_value)



state 780

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    inner_option_list_value  ->  COMMA ari_exp . inner_option_list_value   (rule 201)

    COMMA	shift, and go to state 641
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 204 (inner_option_list_value)

    ari_operator	go to state 239
    inner_option_list_value	go to state 883



state 781

    array_exp  ->  array_exp . CON array_exp   (rule 191)
    inner_option_list_value  ->  COMMA array_exp . inner_option_list_value   (rule 203)

    COMMA	shift, and go to state 641
    CON 	shift, and go to state 488

    $default	reduce using rule 204 (inner_option_list_value)

    inner_option_list_value	go to state 884



<<<<<<< HEAD
state 782

    inner_option_list_value  ->  COMMA strliteral . inner_option_list_value   (rule 202)

    COMMA	shift, and go to state 641

    $default	reduce using rule 204 (inner_option_list_value)

    inner_option_list_value	go to state 885
=======
state 798
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 289 (inner_option_define_identifier)

<<<<<<< HEAD
=======
    COMMA	shift, and go to state 651
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
state 791
=======
    inner_option_list_value	go to state 907
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement . CLOSE_BPAR   (rule 64)

    CLOSE_BPAR	shift, and go to state 886
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207

<<<<<<< HEAD
state 783

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR .   (rule 198)

    $default	reduce using rule 198 (option_struct_list_value)
=======
<<<<<<< HEAD
=======
state 799
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


state 792
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_frame_identifier  ->  COMMA identifier option_frame_identifier .   (rule 324)

    $default	reduce using rule 324 (option_frame_identifier)

<<<<<<< HEAD
state 784

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR .   (rule 200)

    $default	reduce using rule 200 (option_struct_list_value)
=======
<<<<<<< HEAD
=======
state 800
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


state 793
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND . OPEN_PAR statement CLOSE_PAR   (rule 57)

    OPEN_PAR	shift, and go to state 887

<<<<<<< HEAD
state 785

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR .   (rule 199)

    $default	reduce using rule 199 (option_struct_list_value)
=======
<<<<<<< HEAD
=======
state 801
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


state 794
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 103)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 233)

    OPEN_PAR	shift, and go to state 151
    CLOSE_PAR	shift, and go to state 842
    MUL 	shift, and go to state 200
    ID  	shift, and go to state 201

<<<<<<< HEAD
state 786

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR .   (rule 195)

    $default	reduce using rule 195 (option_list_value)
=======
<<<<<<< HEAD
    option_identifier_array_declaration	go to state 386
    identifier	go to state 203
=======
state 802
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 795

<<<<<<< HEAD
state 787

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR .   (rule 197)

    $default	reduce using rule 197 (option_list_value)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 608
    MUL 	shift, and go to state 673
=======
state 803
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 796

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA . for_sta_control CLOSE_PAR statement_bpar   (rule 336)

<<<<<<< HEAD
state 788

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR .   (rule 196)

    $default	reduce using rule 196 (option_list_value)
=======
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 372
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 190
    ID  	shift, and go to state 185
=======
state 804
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 343 (for_sta_control)

    ass_statement	go to state 888
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 192
    point_exp	go to state 73
    identifier	go to state 74
    for_sta_control	go to state 889
    struct_member_exp	go to state 82


>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

<<<<<<< HEAD
state 797

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR . bool_exp CLOSE_PAR   (rule 45)

<<<<<<< HEAD
state 789
=======
    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 136
    MY_TRUE	shift, and go to state 137
    MY_FALSE	shift, and go to state 138
    OPEN_PAR	shift, and go to state 139
    EXTERN	shift, and go to state 49
=======
state 805
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 626
    CHARDECLARATION	shift, and go to state 627
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 628
    OPEN_PAR	shift, and go to state 219
    EXTERN	shift, and go to state 49
<<<<<<< HEAD
    UNSIGNED	shift, and go to state 629
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228
=======
    UNSIGNED	shift, and go to state 639
    SIGNED	shift, and go to state 226
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
    NEGATION	shift, and go to state 140
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 141
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    bool_exp	go to state 890
    prime_bool_exp	go to state 143
    identifier	go to state 105
    strliteral	go to state 144
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
<<<<<<< HEAD
    struct_member_exp	go to state 109



state 798

    option_output  ->  COMMA ass_right option_output .   (rule 356)

    $default	reduce using rule 356 (option_output)



state 799

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 226
    CHARDECLARATION	shift, and go to state 227
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 229
    OPEN_PAR	shift, and go to state 891
=======
    struct_member_exp	go to state 233
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 790

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift CLOSE_PAR .   (rule 139)

    $default	reduce using rule 139 (rightaddrshift)



state 791

    option_output  ->  COMMA ass_right option_output .   (rule 355)

    $default	reduce using rule 355 (option_output)



state 792

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 215
    CHARDECLARATION	shift, and go to state 216
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 218
    OPEN_PAR	shift, and go to state 886
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 220
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 219
    INTDECLARATION	shift, and go to state 220
    CHARDECLARATION	shift, and go to state 221
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 223
    OPEN_PAR	shift, and go to state 908
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 231
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228
=======
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239



<<<<<<< HEAD
state 800

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    identifier  ->  ID .   (rule 318)

    OPEN_PAR	shift, and go to state 198
    CLOSE_PAR	shift, and go to state 892
    OPEN_MPAR	shift, and go to state 199

    CLOSE_PAR	[reduce using rule 318 (identifier)]
    $default	reduce using rule 318 (identifier)



state 801

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 893
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)


<<<<<<< HEAD
state 793
=======

state 802

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 226
    CHARDECLARATION	shift, and go to state 227
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 229
    OPEN_PAR	shift, and go to state 894
=======
state 809
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    identifier  ->  ID .   (rule 317)

    OPEN_PAR	shift, and go to state 187
    CLOSE_PAR	shift, and go to state 887
    OPEN_MPAR	shift, and go to state 188

    CLOSE_PAR	[reduce using rule 317 (identifier)]
    $default	reduce using rule 317 (identifier)



state 794

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    intliteral  ->  INTLITERAL .   (rule 320)

    CLOSE_PAR	shift, and go to state 888

    CLOSE_PAR	[reduce using rule 320 (intliteral)]
    $default	reduce using rule 320 (intliteral)



state 795

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 215
    CHARDECLARATION	shift, and go to state 216
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 218
    OPEN_PAR	shift, and go to state 889
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 220
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 219
    INTDECLARATION	shift, and go to state 220
    CHARDECLARATION	shift, and go to state 221
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 223
    OPEN_PAR	shift, and go to state 911
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 231
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 796
=======
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239



<<<<<<< HEAD
state 803

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    identifier  ->  ID .   (rule 318)

    OPEN_PAR	shift, and go to state 198
    CLOSE_PAR	shift, and go to state 895
    OPEN_MPAR	shift, and go to state 199

    CLOSE_PAR	[reduce using rule 318 (identifier)]
    $default	reduce using rule 318 (identifier)



state 804

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 896

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 805

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    identifier  ->  ID .   (rule 318)

    OPEN_PAR	shift, and go to state 198
    CLOSE_PAR	shift, and go to state 897
    OPEN_MPAR	shift, and go to state 199

    CLOSE_PAR	[reduce using rule 318 (identifier)]
    $default	reduce using rule 318 (identifier)



state 806

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 898

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 807
=======
state 812
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    identifier  ->  ID .   (rule 317)

    OPEN_PAR	shift, and go to state 187
    CLOSE_PAR	shift, and go to state 890
    OPEN_MPAR	shift, and go to state 188

    CLOSE_PAR	[reduce using rule 317 (identifier)]
    $default	reduce using rule 317 (identifier)



state 797

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    intliteral  ->  INTLITERAL .   (rule 320)

    CLOSE_PAR	shift, and go to state 891

    CLOSE_PAR	[reduce using rule 320 (intliteral)]
    $default	reduce using rule 320 (intliteral)



state 798

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    identifier  ->  ID .   (rule 317)

    OPEN_PAR	shift, and go to state 187
    CLOSE_PAR	shift, and go to state 892
    OPEN_MPAR	shift, and go to state 188

    CLOSE_PAR	[reduce using rule 317 (identifier)]
    $default	reduce using rule 317 (identifier)



state 799

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    intliteral  ->  INTLITERAL .   (rule 320)

    CLOSE_PAR	shift, and go to state 893

    CLOSE_PAR	[reduce using rule 320 (intliteral)]
    $default	reduce using rule 320 (intliteral)



<<<<<<< HEAD
state 800

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)
=======
state 816
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
<<<<<<< HEAD
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 894
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 841
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 801

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 895
=======
    BNE 	shift, and go to state 93
<<<<<<< HEAD
    ID  	shift, and go to state 899
=======
    ID  	shift, and go to state 916
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 849
=======
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 863
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 808
=======
state 817
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 89
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 900
=======
    OPEN_PAR	shift, and go to state 917
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
<<<<<<< HEAD
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 896
    INTLITERAL	shift, and go to state 897
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 843
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 802

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 86)
=======
    BNE 	shift, and go to state 93
<<<<<<< HEAD
    ID  	shift, and go to state 901
    INTLITERAL	shift, and go to state 902
=======
    ID  	shift, and go to state 918
    INTLITERAL	shift, and go to state 919
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 851
=======
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 865
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 809
=======
state 818
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 87)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 449
    UNSIGNED	shift, and go to state 345
    ID  	shift, and go to state 450
    STRUCT_TYPE	shift, and go to state 451

    $default	reduce using rule 287 (option_function_parameter_list)

    type_define	go to state 346
    sign_type_define	go to state 348
    all_type_define	go to state 452
    option_function_parameter_list	go to state 898



state 803

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 140)

    CLOSE_MPAR	shift, and go to state 899



state 804

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 85)

    CLOSE_PAR	shift, and go to state 900



state 805

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 153)

    CLOSE_MPAR	shift, and go to state 901
=======
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 480
    UNSIGNED	shift, and go to state 360
    ID  	shift, and go to state 481
    STRUCT_TYPE	shift, and go to state 482
=======
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 168
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 288 (option_function_parameter_list)

<<<<<<< HEAD
    type_define	go to state 361
    sign_type_define	go to state 363
    all_type_define	go to state 483
    option_function_parameter_list	go to state 903



state 810
=======
    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 459
    option_function_parameter_list	go to state 920



state 819
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 141)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 904



state 811
=======
    CLOSE_MPAR	shift, and go to state 921



state 820
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 86)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 905



state 812
=======
    CLOSE_PAR	shift, and go to state 922



state 821
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 154)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 906



state 813

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp .   (rule 377)

    $default	reduce using rule 377 (struct_member_exp)



state 814

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp .   (rule 373)

    $default	reduce using rule 373 (struct_member_exp)



state 815
=======
    CLOSE_MPAR	shift, and go to state 923
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 806

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp .   (rule 376)

    $default	reduce using rule 376 (struct_member_exp)



state 807

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp .   (rule 372)

    $default	reduce using rule 372 (struct_member_exp)



<<<<<<< HEAD
state 808
=======
state 824
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement . CLOSE_MPAR   (rule 56)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 902
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196



state 809
=======
<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 907
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207



state 816
=======
    CLOSE_MPAR	shift, and go to state 924
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201



state 825
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar .   (rule 58)

    $default	reduce using rule 58 (statement)



<<<<<<< HEAD
state 810

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 60)
=======
<<<<<<< HEAD
state 817
=======
state 826

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE MUL MUL ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)

    OPEN_PAR	shift, and go to state 925



state 827

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE MUL ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 168
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 459
    option_function_parameter_list	go to state 926



state 828

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)

    CLOSE_PAR	shift, and go to state 927



state 829
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    function_define  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 70)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60
<<<<<<< HEAD

    statement	go to state 903
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 811

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 904
    ari_operator	go to state 239



state 812

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp .   (rule 154)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238
=======

    statement	go to state 908
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 818
=======
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 168
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 459
    option_function_parameter_list	go to state 928



state 830

    function_define  ->  FUNCTION all_type_define MUL ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 71)

    CLOSE_PAR	shift, and go to state 929



state 831

    function_define  ->  FUNCTION all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    OPEN_BPAR	shift, and go to state 930



state 832
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    COMMA	shift, and go to state 559
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 909
    ari_operator	go to state 250



state 819
=======
    option_ari_exp	go to state 931
    ari_operator	go to state 244



state 833
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp .   (rule 155)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    ADD 	[reduce using rule 155 (point_exp)]
    SUB 	[reduce using rule 155 (point_exp)]
    $default	reduce using rule 155 (point_exp)

    ari_operator	go to state 250



<<<<<<< HEAD
state 820
=======
state 834
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 910
    ID  	shift, and go to state 911
    INTLITERAL	shift, and go to state 912



state 821
=======
    OPEN_PAR	shift, and go to state 932
    ID  	shift, and go to state 933
    INTLITERAL	shift, and go to state 934
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    ADD 	[reduce using rule 154 (point_exp)]
    SUB 	[reduce using rule 154 (point_exp)]
    $default	reduce using rule 154 (point_exp)

    ari_operator	go to state 239

<<<<<<< HEAD


state 813
=======
state 835
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 913
    ID  	shift, and go to state 914
    INTLITERAL	shift, and go to state 915



state 822
=======
    OPEN_PAR	shift, and go to state 935
    ID  	shift, and go to state 936
    INTLITERAL	shift, and go to state 937
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    OPEN_PAR	shift, and go to state 905
    ID  	shift, and go to state 906
    INTLITERAL	shift, and go to state 907

<<<<<<< HEAD


state 814
=======
state 836
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

<<<<<<< HEAD
    ID  	shift, and go to state 916
    INTLITERAL	shift, and go to state 917



state 823
=======
    ID  	shift, and go to state 938
    INTLITERAL	shift, and go to state 939
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    OPEN_PAR	shift, and go to state 908
    ID  	shift, and go to state 909
    INTLITERAL	shift, and go to state 910

<<<<<<< HEAD


state 815
=======
state 837
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 918



state 824
=======
    CLOSE_PAR	shift, and go to state 940
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    ID  	shift, and go to state 911
    INTLITERAL	shift, and go to state 912

<<<<<<< HEAD


state 816
=======
state 838
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 919



state 825
=======
    CLOSE_PAR	shift, and go to state 941
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    CLOSE_PAR	shift, and go to state 913

<<<<<<< HEAD


state 817
=======
state 839
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

<<<<<<< HEAD
    MUL 	shift, and go to state 824



state 826

    option_input  ->  COMMA array option_input .   (rule 364)

    $default	reduce using rule 364 (option_input)



state 827

    option_input  ->  COMMA identifier option_input .   (rule 363)

    $default	reduce using rule 363 (option_input)



state 828
=======
    MUL 	shift, and go to state 838
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    CLOSE_PAR	shift, and go to state 914



state 818

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    MUL 	shift, and go to state 817



state 819

    option_input  ->  COMMA array option_input .   (rule 363)

    $default	reduce using rule 363 (option_input)

<<<<<<< HEAD


state 820
=======
state 842
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 71)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 307)

<<<<<<< HEAD
    COMMA	shift, and go to state 556

    COMMA	[reduce using rule 71 (function)]
    CLOSE_PAR	reduce using rule 71 (function)
    CLOSE_PAR	[reduce using rule 312 (inner_option_function_identifier)]
    $default	reduce using rule 71 (function)

    inner_option_function_identifier	go to state 920



state 829

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 71)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 311)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 124
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 381
=======
    COMMA	shift, and go to state 548
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_input  ->  COMMA identifier option_input .   (rule 362)

    $default	reduce using rule 362 (option_input)



state 821

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 70)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 310)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
<<<<<<< HEAD
    UNSIGNED	shift, and go to state 345
    ADDRESS	shift, and go to state 366
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    $default	reduce using rule 307 (option_function_identifier)

    function	go to state 96
    type_define	go to state 346
    ass_right	go to state 367
    rightaddrshift	go to state 308
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    sign_type_define	go to state 348
    all_type_define	go to state 368
    option_function_identifier	go to state 915
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 822
=======
    UNSIGNED	shift, and go to state 168
    ADDRESS	shift, and go to state 372
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 127
    BNE 	shift, and go to state 93
    ID  	shift, and go to state 382
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

<<<<<<< HEAD
    $default	reduce using rule 308 (option_function_identifier)

    function	go to state 97
    ass_right	go to state 383
    rightaddrshift	go to state 130
=======
    $default	reduce using rule 314 (option_function_identifier)

    function	go to state 97
    type_define	go to state 169
    ass_right	go to state 374
    rightaddrshift	go to state 313
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    array	go to state 98
    point_exp	go to state 99
    ari_exp	go to state 131
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    array_exp	go to state 132
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    address_exp	go to state 103
    type_cast	go to state 104
<<<<<<< HEAD
    option_function_identifier	go to state 921
=======
    sign_type_define	go to state 170
    all_type_define	go to state 375
    option_function_identifier	go to state 943
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    identifier	go to state 105
    strliteral	go to state 135
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 830

    inner_option_function_identifier  ->  COMMA ass_right inner_option_function_identifier .   (rule 310)

    $default	reduce using rule 310 (inner_option_function_identifier)



state 831
=======
state 844
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    inner_option_function_identifier  ->  COMMA ass_right inner_option_function_identifier .   (rule 309)

    $default	reduce using rule 309 (inner_option_function_identifier)



<<<<<<< HEAD
state 823

    option_ari_exp  ->  COMMA ari_exp option_ari_exp .   (rule 147)

    $default	reduce using rule 147 (option_ari_exp)



state 824

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration .   (rule 98)

    $default	reduce using rule 98 (option_identifier_array_declaration)



state 825

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration .   (rule 99)

    $default	reduce using rule 99 (option_identifier_array_declaration)



state 826

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . inner_option_identifier_array_declaration   (rule 96)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P array_exp inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P strliteral inner_option_identifier_array_declaration   (rule 101)

    COMMA	shift, and go to state 374
    ASS_P	shift, and go to state 916

    COMMA	[reduce using rule 105 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 105 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 917
=======
state 845
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_ari_exp  ->  COMMA ari_exp option_ari_exp .   (rule 148)

    $default	reduce using rule 148 (option_ari_exp)



<<<<<<< HEAD
state 832
=======
state 846
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration .   (rule 99)

    $default	reduce using rule 99 (option_identifier_array_declaration)



<<<<<<< HEAD
state 833
=======
state 847
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration .   (rule 100)

    $default	reduce using rule 100 (option_identifier_array_declaration)



<<<<<<< HEAD
state 834
=======
state 848
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P strliteral inner_option_identifier_array_declaration   (rule 102)

<<<<<<< HEAD
    COMMA	shift, and go to state 389
    ASS_P	shift, and go to state 922
=======
    COMMA	shift, and go to state 381
    ASS_P	shift, and go to state 944
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)

<<<<<<< HEAD
    inner_option_identifier_array_declaration	go to state 923



state 835

    option_struct_member_exp  ->  DOT array option_struct_member_exp .   (rule 384)

    $default	reduce using rule 384 (option_struct_member_exp)



state 836

    option_struct_member_exp  ->  DOT identifier option_struct_member_exp .   (rule 383)

    $default	reduce using rule 383 (option_struct_member_exp)



state 837

    option_struct_member_exp  ->  IMPLY array option_struct_member_exp .   (rule 386)

    $default	reduce using rule 386 (option_struct_member_exp)



state 838

    option_struct_member_exp  ->  IMPLY identifier option_struct_member_exp .   (rule 385)

    $default	reduce using rule 385 (option_struct_member_exp)



state 839
=======
    inner_option_identifier_array_declaration	go to state 945
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 827

    option_struct_member_exp  ->  DOT array option_struct_member_exp .   (rule 383)

    $default	reduce using rule 383 (option_struct_member_exp)



state 828

    option_struct_member_exp  ->  DOT identifier option_struct_member_exp .   (rule 382)

    $default	reduce using rule 382 (option_struct_member_exp)



state 829

    option_struct_member_exp  ->  IMPLY array option_struct_member_exp .   (rule 385)

    $default	reduce using rule 385 (option_struct_member_exp)



state 830

    option_struct_member_exp  ->  IMPLY identifier option_struct_member_exp .   (rule 384)

    $default	reduce using rule 384 (option_struct_member_exp)



<<<<<<< HEAD
state 831
=======
state 853
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition . CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

<<<<<<< HEAD
    CLOSE_BPAR	shift, and go to state 918
    CHOP	shift, and go to state 116
    IFF 	shift, and go to state 117
    PROPIMPLY	shift, and go to state 118
    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121



state 832

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    option_exp_else_statement  ->  ELSE ari_exp .   (rule 163)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ADD 	[reduce using rule 163 (option_exp_else_statement)]
    SUB 	[reduce using rule 163 (option_exp_else_statement)]
    $default	reduce using rule 163 (option_exp_else_statement)

    ari_operator	go to state 239



state 833

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 230)

    $default	reduce using rule 230 (type_cast)



state 834

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 232)
=======
<<<<<<< HEAD
    CLOSE_BPAR	shift, and go to state 924
=======
    CLOSE_BPAR	shift, and go to state 946
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    CHOP	shift, and go to state 117
    IFF 	shift, and go to state 118
    PROPIMPLY	shift, and go to state 119
    OR  	shift, and go to state 120
    AND 	shift, and go to state 121
    CHOPSTAR	shift, and go to state 122



<<<<<<< HEAD
state 840
=======
state 854
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    option_exp_else_statement  ->  ELSE ari_exp .   (rule 164)

    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    ADD 	[reduce using rule 164 (option_exp_else_statement)]
    SUB 	[reduce using rule 164 (option_exp_else_statement)]
    $default	reduce using rule 164 (option_exp_else_statement)

    ari_operator	go to state 250



<<<<<<< HEAD
state 841
=======
state 855
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 231)

    $default	reduce using rule 231 (type_cast)



<<<<<<< HEAD
state 842
=======
state 856
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 233)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 919
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 835

    type_cast_alg_exp  ->  simple_ari_exp ari_operator simple_ari_exp .   (rule 162)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 166)

    INTER_OR	shift, and go to state 240
    CON 	shift, and go to state 241
    ADDRESS	shift, and go to state 242
    LST 	shift, and go to state 249
    RST 	shift, and go to state 250
    MUL 	shift, and go to state 251
    DIV 	shift, and go to state 252
    MOD 	shift, and go to state 253

    INTER_OR	[reduce using rule 162 (type_cast_alg_exp)]
    CON 	[reduce using rule 162 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 162 (type_cast_alg_exp)]
    LST 	[reduce using rule 162 (type_cast_alg_exp)]
    RST 	[reduce using rule 162 (type_cast_alg_exp)]
    MUL 	[reduce using rule 162 (type_cast_alg_exp)]
    DIV 	[reduce using rule 162 (type_cast_alg_exp)]
    MOD 	[reduce using rule 162 (type_cast_alg_exp)]
    $default	reduce using rule 162 (type_cast_alg_exp)

    bi_operator	go to state 254



state 836

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 224)

    $default	reduce using rule 224 (type_cast)



state 837

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 227)

    $default	reduce using rule 227 (type_cast)



state 838

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 229)

    $default	reduce using rule 229 (type_cast)



state 839

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 226)

    $default	reduce using rule 226 (type_cast)



state 840

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 925
=======
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 947
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 843
=======
state 857
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast_alg_exp  ->  simple_ari_exp ari_operator simple_ari_exp .   (rule 163)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 167)

    INTER_OR	shift, and go to state 251
    CON 	shift, and go to state 252
    ADDRESS	shift, and go to state 253
    LST 	shift, and go to state 260
    RST 	shift, and go to state 261
    MUL 	shift, and go to state 262
    DIV 	shift, and go to state 263
    MOD 	shift, and go to state 264

    INTER_OR	[reduce using rule 163 (type_cast_alg_exp)]
    CON 	[reduce using rule 163 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 163 (type_cast_alg_exp)]
    LST 	[reduce using rule 163 (type_cast_alg_exp)]
    RST 	[reduce using rule 163 (type_cast_alg_exp)]
    MUL 	[reduce using rule 163 (type_cast_alg_exp)]
    DIV 	[reduce using rule 163 (type_cast_alg_exp)]
    MOD 	[reduce using rule 163 (type_cast_alg_exp)]
    $default	reduce using rule 163 (type_cast_alg_exp)

    bi_operator	go to state 265



<<<<<<< HEAD
state 844
=======
state 858
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 225)

    $default	reduce using rule 225 (type_cast)



<<<<<<< HEAD
state 845
=======
state 859
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 228)

    $default	reduce using rule 228 (type_cast)



<<<<<<< HEAD
state 846
=======
state 860
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 230)

    $default	reduce using rule 230 (type_cast)



<<<<<<< HEAD
state 847
=======
state 861
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 227)

    $default	reduce using rule 227 (type_cast)



<<<<<<< HEAD
state 848
=======
state 862
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
<<<<<<< HEAD
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 896
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 843
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 841

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 219)

    $default	reduce using rule 219 (type_cast)



state 842

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 225)
=======
    BNE 	shift, and go to state 93
<<<<<<< HEAD
    ID  	shift, and go to state 901
=======
    ID  	shift, and go to state 918
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 851
=======
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 865
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 849
=======
state 863
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 220)

    $default	reduce using rule 220 (type_cast)



<<<<<<< HEAD
state 850
=======
state 864
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 226)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 920
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 843

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 222)

    $default	reduce using rule 222 (type_cast)



state 844

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 228)
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 926
=======
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 948
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 851
=======
state 865
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 223)

    $default	reduce using rule 223 (type_cast)



<<<<<<< HEAD
state 852
=======
state 866
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 229)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 921
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 845

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 233)

    $default	reduce using rule 233 (type_cast)



state 846

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    ID  	shift, and go to state 906



state 847

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    ID  	shift, and go to state 909



state 848

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    ID  	shift, and go to state 911



state 849

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    CLOSE_PAR	shift, and go to state 922
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 927
=======
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 949
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 853
=======
state 867
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 234)

    $default	reduce using rule 234 (type_cast)



<<<<<<< HEAD
state 854
=======
state 868
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

<<<<<<< HEAD
    ID  	shift, and go to state 911



state 855
=======
    ID  	shift, and go to state 933



state 869
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

<<<<<<< HEAD
    ID  	shift, and go to state 914



state 856
=======
    ID  	shift, and go to state 936



state 870
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

<<<<<<< HEAD
    ID  	shift, and go to state 916



state 857
=======
    ID  	shift, and go to state 938



state 871
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 928



state 858

    case_par  ->  CASE member_in_exp . COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 345)

    COLON	shift, and go to state 929



state 859

    case_par  ->  DEFAULT COLON . OPEN_PAR statement CLOSE_PAR   (rule 346)

    OPEN_PAR	shift, and go to state 930



state 860

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR .   (rule 344)

    $default	reduce using rule 344 (switch_statement)



state 861
=======
    CLOSE_PAR	shift, and go to state 950
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 850

    case_par  ->  CASE member_in_exp . COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 344)

    COLON	shift, and go to state 923



state 851

    case_par  ->  DEFAULT COLON . OPEN_PAR statement CLOSE_PAR   (rule 345)

    OPEN_PAR	shift, and go to state 924



state 852

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR .   (rule 343)

    $default	reduce using rule 343 (switch_statement)



<<<<<<< HEAD
state 853

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 286)

    OPEN_PAR	shift, and go to state 925



state 854

    option_function_parameter_list  ->  ID MUL MUL inner_option_define_identifier .   (rule 279)

    $default	reduce using rule 279 (option_function_parameter_list)



state 855

    option_function_parameter_list  ->  ID MUL MUL identifier . inner_option_define_identifier   (rule 272)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 926
=======
state 875
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 137)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 931



state 862
=======
    OPEN_PAR	shift, and go to state 953



state 876
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 287)

    OPEN_PAR	shift, and go to state 932



<<<<<<< HEAD
state 863
=======
state 877
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_function_parameter_list  ->  ID MUL MUL inner_option_define_identifier .   (rule 280)

    $default	reduce using rule 280 (option_function_parameter_list)


<<<<<<< HEAD
=======
    inner_option_define_identifier	go to state 954
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 864

    option_function_parameter_list  ->  ID MUL MUL identifier . inner_option_define_identifier   (rule 273)

<<<<<<< HEAD
state 856

    option_function_parameter_list  ->  ID MUL identifier inner_option_define_identifier .   (rule 271)

    $default	reduce using rule 271 (option_function_parameter_list)



state 857

    option_function_parameter_list  ->  ID identifier ARRAY inner_option_define_identifier .   (rule 273)

    $default	reduce using rule 273 (option_function_parameter_list)



state 858

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL inner_option_define_identifier .   (rule 276)

    $default	reduce using rule 276 (option_function_parameter_list)



state 859

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier . inner_option_define_identifier   (rule 268)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 927
=======
<<<<<<< HEAD
    COMMA	shift, and go to state 308
=======
state 878
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 933



<<<<<<< HEAD
state 865
=======
state 879
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_function_parameter_list  ->  ID MUL identifier inner_option_define_identifier .   (rule 272)

    $default	reduce using rule 272 (option_function_parameter_list)



<<<<<<< HEAD
state 866
=======
state 880
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_function_parameter_list  ->  ID identifier ARRAY inner_option_define_identifier .   (rule 274)

    $default	reduce using rule 274 (option_function_parameter_list)



<<<<<<< HEAD
state 867
=======
state 881
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL inner_option_define_identifier .   (rule 277)

    $default	reduce using rule 277 (option_function_parameter_list)


<<<<<<< HEAD
=======
    inner_option_define_identifier	go to state 955
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 868

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier . inner_option_define_identifier   (rule 269)

<<<<<<< HEAD
state 860

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 267)

    $default	reduce using rule 267 (option_function_parameter_list)



state 861

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 269)

    $default	reduce using rule 269 (option_function_parameter_list)
=======
<<<<<<< HEAD
    COMMA	shift, and go to state 308
=======
state 882
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 934



<<<<<<< HEAD
state 869
=======
state 883
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 268)

    $default	reduce using rule 268 (option_function_parameter_list)

>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


<<<<<<< HEAD
state 870

<<<<<<< HEAD
state 862

    option_function_parameter_list  ->  all_type_define MUL MUL identifier . inner_option_define_identifier   (rule 285)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 928
=======
    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 270)
=======
state 884
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 270 (option_function_parameter_list)



<<<<<<< HEAD
state 871
=======
    inner_option_define_identifier	go to state 956
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_function_parameter_list  ->  all_type_define MUL MUL identifier . inner_option_define_identifier   (rule 286)

    COMMA	shift, and go to state 308

<<<<<<< HEAD
state 863

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 281)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 929
=======
<<<<<<< HEAD
    $default	reduce using rule 299 (inner_option_define_identifier)
=======
state 885
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    inner_option_define_identifier	go to state 935



<<<<<<< HEAD
state 872
=======
    inner_option_define_identifier	go to state 957
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 282)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    COMMA	shift, and go to state 308

<<<<<<< HEAD
    $default	reduce using rule 299 (inner_option_define_identifier)

<<<<<<< HEAD
state 864

    option_function_parameter_list  ->  all_type_define MUL identifier inner_option_define_identifier .   (rule 283)

    $default	reduce using rule 283 (option_function_parameter_list)



state 865

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 282)
=======
    inner_option_define_identifier	go to state 936
=======
state 886
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 873

    option_function_parameter_list  ->  all_type_define MUL identifier inner_option_define_identifier .   (rule 284)

<<<<<<< HEAD
    $default	reduce using rule 284 (option_function_parameter_list)



state 874
=======
state 887
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 930
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 866

    option_function_parameter_list  ->  all_type_define identifier ARRAY inner_option_define_identifier .   (rule 280)

    $default	reduce using rule 280 (option_function_parameter_list)



state 867
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 937
=======
    ari_exp	go to state 958
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 875
=======
state 888
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_function_parameter_list  ->  all_type_define identifier ARRAY inner_option_define_identifier .   (rule 281)

    $default	reduce using rule 281 (option_function_parameter_list)



<<<<<<< HEAD
state 876
=======
state 889
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 61)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    $default	reduce using rule 69 (empty_statement)

<<<<<<< HEAD
    statement	go to state 931
    empty_statement	go to state 932
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 868

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 297)

    OPEN_PAR	shift, and go to state 933



state 869

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY inner_option_define_identifier .   (rule 293)

    $default	reduce using rule 293 (inner_option_define_identifier)



state 870

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 292)

    $default	reduce using rule 292 (inner_option_define_identifier)



state 871

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 294)

    $default	reduce using rule 294 (inner_option_define_identifier)



state 872

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 296)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 934



state 873

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier inner_option_define_identifier .   (rule 302)

    $default	reduce using rule 302 (inner_option_define_identifier)



state 874

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)
=======
<<<<<<< HEAD
    statement	go to state 938
    empty_statement	go to state 939
=======
    statement	go to state 959
    empty_statement	go to state 960
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



<<<<<<< HEAD
state 877
=======
state 890
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 940



state 878
=======
    OPEN_PAR	shift, and go to state 961



state 891
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY inner_option_define_identifier .   (rule 294)

    $default	reduce using rule 294 (inner_option_define_identifier)



<<<<<<< HEAD
state 879
=======
state 892
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 293)

    $default	reduce using rule 293 (inner_option_define_identifier)



<<<<<<< HEAD
state 880
=======
state 893
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 295)

    $default	reduce using rule 295 (inner_option_define_identifier)



<<<<<<< HEAD
state 881
=======
state 894
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 297)

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 941



state 882
=======
    inner_option_define_identifier	go to state 962



state 895
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier inner_option_define_identifier .   (rule 303)

    $default	reduce using rule 303 (inner_option_define_identifier)



<<<<<<< HEAD
state 883
=======
state 896
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 935
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 875

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY inner_option_define_identifier .   (rule 295)

    $default	reduce using rule 295 (inner_option_define_identifier)



state 876

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)

    COMMA	shift, and go to state 936
    CLOSE_MPAR	shift, and go to state 937
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ari_operator	go to state 239



state 877
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 942
=======
    ari_exp	go to state 963
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 884
=======
state 897
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY inner_option_define_identifier .   (rule 296)

    $default	reduce using rule 296 (inner_option_define_identifier)



<<<<<<< HEAD
state 885
=======
state 898
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)

<<<<<<< HEAD
    COMMA	shift, and go to state 943
    CLOSE_MPAR	shift, and go to state 944
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    COMMA	shift, and go to state 964
    CLOSE_MPAR	shift, and go to state 965
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    ari_operator	go to state 250



<<<<<<< HEAD
state 886
=======
state 899
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR .   (rule 64)

    $default	reduce using rule 64 (statement)



<<<<<<< HEAD
state 878
=======
<<<<<<< HEAD
state 887
=======
state 900
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR . statement CLOSE_PAR   (rule 57)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

<<<<<<< HEAD
    statement	go to state 938
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81
=======
<<<<<<< HEAD
    statement	go to state 945
=======
    statement	go to state 966
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82
<<<<<<< HEAD



state 888
=======
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 879

    for_sta_control  ->  ass_statement .   (rule 341)

    $default	reduce using rule 341 (for_sta_control)



state 880

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control . CLOSE_PAR statement_bpar   (rule 335)

    CLOSE_PAR	shift, and go to state 939



state 881

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp . CLOSE_PAR   (rule 45)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 237)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 238)

    CLOSE_PAR	shift, and go to state 940
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273



state 882

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 136)

    CLOSE_PAR	shift, and go to state 941



<<<<<<< HEAD
state 883

    inner_option_list_value  ->  COMMA ari_exp inner_option_list_value .   (rule 201)

    $default	reduce using rule 201 (inner_option_list_value)



state 884

    inner_option_list_value  ->  COMMA array_exp inner_option_list_value .   (rule 203)

    $default	reduce using rule 203 (inner_option_list_value)



state 885

    inner_option_list_value  ->  COMMA strliteral inner_option_list_value .   (rule 202)

    $default	reduce using rule 202 (inner_option_list_value)
=======
state 905
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    for_sta_control  ->  ass_statement .   (rule 342)

    $default	reduce using rule 342 (for_sta_control)



<<<<<<< HEAD
state 889
=======
state 906
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control . CLOSE_PAR statement_bpar   (rule 336)

    CLOSE_PAR	shift, and go to state 946



<<<<<<< HEAD
state 890
=======
state 907
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp . CLOSE_PAR   (rule 45)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)

    CLOSE_PAR	shift, and go to state 947
    OR  	shift, and go to state 297
    AND 	shift, and go to state 298


>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

<<<<<<< HEAD
state 891

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

<<<<<<< HEAD
state 886
=======
    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 948
    CHARDECLARATION	shift, and go to state 949
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 429
    OPEN_PAR	shift, and go to state 230
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 950
    SIGNED	shift, and go to state 232
=======
state 908
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 942
    CHARDECLARATION	shift, and go to state 943
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 219
    EXTERN	shift, and go to state 49
<<<<<<< HEAD
    UNSIGNED	shift, and go to state 944
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
=======
    UNSIGNED	shift, and go to state 972
    SIGNED	shift, and go to state 226
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 887

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    OPEN_MPAR	shift, and go to state 945



state 888

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    OPEN_MPAR	shift, and go to state 946
=======
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239



<<<<<<< HEAD
state 892
=======
state 909
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 951



state 893
=======
    OPEN_MPAR	shift, and go to state 973



state 910
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 952



state 894

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 953
    CHARDECLARATION	shift, and go to state 954
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 429
    OPEN_PAR	shift, and go to state 230
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 955
    SIGNED	shift, and go to state 232
=======
    OPEN_MPAR	shift, and go to state 974
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 889

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 947
    CHARDECLARATION	shift, and go to state 948
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 219
    EXTERN	shift, and go to state 49
<<<<<<< HEAD
    UNSIGNED	shift, and go to state 949
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
=======
    UNSIGNED	shift, and go to state 977
    SIGNED	shift, and go to state 226
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 890

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    OPEN_MPAR	shift, and go to state 950



state 891

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)

    OPEN_MPAR	shift, and go to state 951



state 892

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    OPEN_MPAR	shift, and go to state 952



state 893

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    OPEN_MPAR	shift, and go to state 953
=======
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239



<<<<<<< HEAD
state 895
=======
state 912
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 956



state 896
=======
    OPEN_MPAR	shift, and go to state 978



state 913
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 957



state 897
=======
    OPEN_MPAR	shift, and go to state 979



state 914
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 958



state 898
=======
    OPEN_MPAR	shift, and go to state 980



state 915
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 959



state 899

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    identifier  ->  ID .   (rule 318)

    OPEN_PAR	shift, and go to state 198
    CLOSE_PAR	shift, and go to state 960
    OPEN_MPAR	shift, and go to state 199

    CLOSE_PAR	[reduce using rule 318 (identifier)]
    $default	reduce using rule 318 (identifier)



state 900

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 226
    CHARDECLARATION	shift, and go to state 227
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 229
    OPEN_PAR	shift, and go to state 961
=======
    OPEN_MPAR	shift, and go to state 981
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 894

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    identifier  ->  ID .   (rule 317)

    OPEN_PAR	shift, and go to state 187
    CLOSE_PAR	shift, and go to state 954
    OPEN_MPAR	shift, and go to state 188

    CLOSE_PAR	[reduce using rule 317 (identifier)]
    $default	reduce using rule 317 (identifier)



state 895

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 215
    CHARDECLARATION	shift, and go to state 216
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 218
    OPEN_PAR	shift, and go to state 955
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 220
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 325)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 383)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 387)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 219
    INTDECLARATION	shift, and go to state 220
    CHARDECLARATION	shift, and go to state 221
    VOIDDECLARATION	shift, and go to state 222
    FLOATDECLARATION	shift, and go to state 223
    OPEN_PAR	shift, and go to state 983
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 231
    SIGNED	shift, and go to state 232
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228
=======
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 239



<<<<<<< HEAD
state 901

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    identifier  ->  ID .   (rule 318)

    OPEN_PAR	shift, and go to state 198
    CLOSE_PAR	shift, and go to state 962
    OPEN_MPAR	shift, and go to state 199

    CLOSE_PAR	[reduce using rule 318 (identifier)]
    $default	reduce using rule 318 (identifier)


>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 902

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 963

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)


<<<<<<< HEAD
state 896
=======

state 903
=======
state 918
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    identifier  ->  ID .   (rule 317)

    OPEN_PAR	shift, and go to state 187
    CLOSE_PAR	shift, and go to state 956
    OPEN_MPAR	shift, and go to state 188

    CLOSE_PAR	[reduce using rule 317 (identifier)]
    $default	reduce using rule 317 (identifier)



state 897

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    intliteral  ->  INTLITERAL .   (rule 320)

    CLOSE_PAR	shift, and go to state 957

    CLOSE_PAR	[reduce using rule 320 (intliteral)]
    $default	reduce using rule 320 (intliteral)



<<<<<<< HEAD
state 898

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 86)

    CLOSE_PAR	shift, and go to state 958



state 899

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 140)

    CLOSE_PAR	shift, and go to state 959

    CLOSE_PAR	[reduce using rule 140 (array)]
    $default	reduce using rule 140 (array)



state 900

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 85)

    $default	reduce using rule 85 (declaration)



state 901

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 153)

    $default	reduce using rule 153 (point_exp)



state 902
=======
state 920
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 87)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 964



state 904
=======
    CLOSE_PAR	shift, and go to state 986



state 921
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 141)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 965
=======
    CLOSE_PAR	shift, and go to state 987
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    CLOSE_PAR	[reduce using rule 141 (array)]
    $default	reduce using rule 141 (array)



<<<<<<< HEAD
state 905
=======
state 922
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 86)

    $default	reduce using rule 86 (declaration)



<<<<<<< HEAD
state 906
=======
state 923
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 154)

    $default	reduce using rule 154 (point_exp)



<<<<<<< HEAD
state 907
=======
state 924
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR .   (rule 56)

    $default	reduce using rule 56 (statement)



<<<<<<< HEAD
state 903

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 60)

    CLOSE_BPAR	shift, and go to state 960
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196



state 904

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)

    CLOSE_MPAR	shift, and go to state 961



state 905

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    OPEN_PAR	shift, and go to state 962



state 906

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    CLOSE_PAR	shift, and go to state 887



state 907

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    CLOSE_PAR	shift, and go to state 888



state 908

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    OPEN_PAR	shift, and go to state 963



state 909

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    CLOSE_PAR	shift, and go to state 890



state 910

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)

    CLOSE_PAR	shift, and go to state 891



state 911

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    CLOSE_PAR	shift, and go to state 892



state 912

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    CLOSE_PAR	shift, and go to state 893



state 913

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    ID  	shift, and go to state 964



state 914

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    OPEN_PAR	shift, and go to state 965
    ID  	shift, and go to state 966
    INTLITERAL	shift, and go to state 967
=======
<<<<<<< HEAD
state 908
=======
state 925

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 168
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 459
    option_function_parameter_list	go to state 988



state 926

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)

    CLOSE_PAR	shift, and go to state 989



state 927

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 73)

    OPEN_BPAR	shift, and go to state 990



state 928

    function_define  ->  FUNCTION all_type_define MUL MUL ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    CLOSE_PAR	shift, and go to state 991



state 929

    function_define  ->  FUNCTION all_type_define MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 71)

    OPEN_BPAR	shift, and go to state 992



state 930

    function_define  ->  FUNCTION all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 70)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    function_define  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 70)

<<<<<<< HEAD
    CLOSE_BPAR	shift, and go to state 966
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207



state 909
=======
    statement	go to state 993
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 931
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 967



state 910
=======
    CLOSE_MPAR	shift, and go to state 994



state 932
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 968



state 911
=======
    OPEN_PAR	shift, and go to state 995



state 933
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 892



state 912
=======
    CLOSE_PAR	shift, and go to state 909



state 934
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 893



state 913
=======
    CLOSE_PAR	shift, and go to state 910



state 935
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 969



state 914
=======
    OPEN_PAR	shift, and go to state 996



state 936
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 895



state 915
=======
    CLOSE_PAR	shift, and go to state 912



state 937
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 896



state 916
=======
    CLOSE_PAR	shift, and go to state 913



state 938
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 897



state 917
=======
    CLOSE_PAR	shift, and go to state 914



state 939
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 898



state 918
=======
    CLOSE_PAR	shift, and go to state 915



state 940
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

<<<<<<< HEAD
    ID  	shift, and go to state 970



state 919
=======
    ID  	shift, and go to state 997



state 941
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 971
    ID  	shift, and go to state 972
    INTLITERAL	shift, and go to state 973



state 920
=======
    OPEN_PAR	shift, and go to state 998
    ID  	shift, and go to state 999
    INTLITERAL	shift, and go to state 1000



state 942
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 307)

    $default	reduce using rule 307 (option_function_identifier)

>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


<<<<<<< HEAD
state 921

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 71)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 311)

    CLOSE_PAR	shift, and go to state 974


<<<<<<< HEAD
state 915
=======

state 922
=======
state 943
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 70)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 310)

    CLOSE_PAR	shift, and go to state 968



<<<<<<< HEAD
state 916

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . array_exp inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . strliteral inner_option_identifier_array_declaration   (rule 101)

    OPEN_PAR	shift, and go to state 652
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    STRLITERAL	shift, and go to state 129
=======
state 944
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . array_exp inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . strliteral inner_option_identifier_array_declaration   (rule 102)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 462
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
    STRLITERAL	shift, and go to state 128

    array_exp	go to state 975
    option_list_value	go to state 133
    option_struct_list_value	go to state 134
    strliteral	go to state 976



state 923
=======
    OPEN_PAR	shift, and go to state 662
    OPEN_BPAR	shift, and go to state 309
    OPEN_MPAR	shift, and go to state 310
    STRLITERAL	shift, and go to state 130
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    array_exp	go to state 969
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    strliteral	go to state 970



<<<<<<< HEAD
state 917

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration .   (rule 96)

    $default	reduce using rule 96 (option_identifier_array_declaration)



state 918
=======
state 945
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration .   (rule 97)

    $default	reduce using rule 97 (option_identifier_array_declaration)



<<<<<<< HEAD
state 924
=======
state 946
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR .   (rule 23)

    $default	reduce using rule 23 (complexProposition)



<<<<<<< HEAD
state 919

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 232)

    $default	reduce using rule 232 (type_cast)



state 920

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 225)

    $default	reduce using rule 225 (type_cast)



state 921

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 228)

    $default	reduce using rule 228 (type_cast)



state 922

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    ID  	shift, and go to state 966
=======
<<<<<<< HEAD
state 925
=======
state 947
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 233)

    $default	reduce using rule 233 (type_cast)



<<<<<<< HEAD
state 926
=======
state 948
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 226)

    $default	reduce using rule 226 (type_cast)



<<<<<<< HEAD
state 927
=======
state 949
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 229)

    $default	reduce using rule 229 (type_cast)



<<<<<<< HEAD
state 928
=======
state 950
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

<<<<<<< HEAD
    ID  	shift, and go to state 972



state 929

    case_par  ->  CASE member_in_exp COLON . OPEN_PAR statement CLOSE_PAR init_case_par   (rule 345)

    OPEN_PAR	shift, and go to state 977



state 930

    case_par  ->  DEFAULT COLON OPEN_PAR . statement CLOSE_PAR   (rule 346)
=======
    ID  	shift, and go to state 999
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 923

    case_par  ->  CASE member_in_exp COLON . OPEN_PAR statement CLOSE_PAR init_case_par   (rule 344)

    OPEN_PAR	shift, and go to state 971



state 924

<<<<<<< HEAD
    case_par  ->  DEFAULT COLON OPEN_PAR . statement CLOSE_PAR   (rule 345)
=======
    case_par  ->  DEFAULT COLON OPEN_PAR . statement CLOSE_PAR   (rule 352)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

<<<<<<< HEAD
    statement	go to state 972
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 925

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 286)
=======
<<<<<<< HEAD
    statement	go to state 978
=======
    statement	go to state 1005
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



<<<<<<< HEAD
state 931
=======
state 953
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR function   (rule 137)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 449
    UNSIGNED	shift, and go to state 345
    ID  	shift, and go to state 450
    STRUCT_TYPE	shift, and go to state 451

    $default	reduce using rule 287 (option_function_parameter_list)

    type_define	go to state 346
    sign_type_define	go to state 348
    all_type_define	go to state 452
    option_function_parameter_list	go to state 973



state 926

    option_function_parameter_list  ->  ID MUL MUL identifier inner_option_define_identifier .   (rule 272)

    $default	reduce using rule 272 (option_function_parameter_list)
=======
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 480
    UNSIGNED	shift, and go to state 360
    ID  	shift, and go to state 481
    STRUCT_TYPE	shift, and go to state 482
=======
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 168
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 288 (option_function_parameter_list)

<<<<<<< HEAD
    type_define	go to state 361
    sign_type_define	go to state 363
    all_type_define	go to state 483
    option_function_parameter_list	go to state 979



state 932
=======
    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 459
    option_function_parameter_list	go to state 1006



state 954
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 287)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 480
    UNSIGNED	shift, and go to state 360
    ID  	shift, and go to state 481
    STRUCT_TYPE	shift, and go to state 482
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 361
    sign_type_define	go to state 363
    all_type_define	go to state 483
    option_function_parameter_list	go to state 980


<<<<<<< HEAD
state 927

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier inner_option_define_identifier .   (rule 268)

    $default	reduce using rule 268 (option_function_parameter_list)
=======
<<<<<<< HEAD
=======
state 955
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 933

    option_function_parameter_list  ->  ID MUL MUL identifier inner_option_define_identifier .   (rule 273)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 273 (option_function_parameter_list)


<<<<<<< HEAD
state 928

    option_function_parameter_list  ->  all_type_define MUL MUL identifier inner_option_define_identifier .   (rule 285)

    $default	reduce using rule 285 (option_function_parameter_list)
=======
<<<<<<< HEAD
=======
state 956
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 934

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier inner_option_define_identifier .   (rule 269)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 269 (option_function_parameter_list)


<<<<<<< HEAD
state 929

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 281)

    $default	reduce using rule 281 (option_function_parameter_list)
=======
<<<<<<< HEAD
=======
state 957
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 935

    option_function_parameter_list  ->  all_type_define MUL MUL identifier inner_option_define_identifier .   (rule 286)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 286 (option_function_parameter_list)


<<<<<<< HEAD
state 930

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 282)

    CLOSE_MPAR	shift, and go to state 974
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ari_operator	go to state 239



state 931
=======
<<<<<<< HEAD
=======
state 958
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 936

<<<<<<< HEAD
    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 282)
=======
    CLOSE_MPAR	shift, and go to state 1007
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 282 (option_function_parameter_list)



<<<<<<< HEAD
state 937

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 283)

    CLOSE_MPAR	shift, and go to state 981
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    ari_operator	go to state 250



state 938
=======
state 959
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    empty_statement  ->  statement .   (rule 68)

<<<<<<< HEAD
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196
=======
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 68 (empty_statement)



<<<<<<< HEAD
state 932
=======
<<<<<<< HEAD
state 939

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 60)

    CLOSE_BPAR	shift, and go to state 982



state 940
=======
state 960
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 61)

    CLOSE_BPAR	shift, and go to state 975



<<<<<<< HEAD
state 933

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 297)
=======
state 961
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 449
    UNSIGNED	shift, and go to state 345
    ID  	shift, and go to state 450
    STRUCT_TYPE	shift, and go to state 451

    $default	reduce using rule 287 (option_function_parameter_list)

    type_define	go to state 346
    sign_type_define	go to state 348
    all_type_define	go to state 452
    option_function_parameter_list	go to state 976



state 934

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 296)

    $default	reduce using rule 296 (inner_option_define_identifier)



state 935

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 301)

    CLOSE_MPAR	shift, and go to state 977
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ari_operator	go to state 239



state 936

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
=======
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 480
    UNSIGNED	shift, and go to state 360
    ID  	shift, and go to state 481
    STRUCT_TYPE	shift, and go to state 482
=======
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 168
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 288 (option_function_parameter_list)

<<<<<<< HEAD
    type_define	go to state 361
    sign_type_define	go to state 363
    all_type_define	go to state 483
    option_function_parameter_list	go to state 983



state 941
=======
    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 459
    option_function_parameter_list	go to state 1009



state 962
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 297)

    $default	reduce using rule 297 (inner_option_define_identifier)



<<<<<<< HEAD
state 942
=======
state 963
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 302)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 984
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    CLOSE_MPAR	shift, and go to state 1010
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    ari_operator	go to state 250



<<<<<<< HEAD
state 943
=======
state 964
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 978
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 937

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 299)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 979



state 938
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 985
=======
    ari_exp	go to state 1011
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 944
=======
state 965
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 300)

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 986



state 945
=======
    inner_option_define_identifier	go to state 1012



state 966
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement . CLOSE_PAR   (rule 57)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 980
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196
=======
<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 987
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207



state 946

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR . statement_bpar   (rule 336)
=======
    CLOSE_PAR	shift, and go to state 1013
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 939

<<<<<<< HEAD
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR . statement_bpar   (rule 335)

    error	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300

    statement_bpar	go to state 981



state 940
=======
    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR . statement_bpar   (rule 342)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    error	shift, and go to state 324
    OPEN_BPAR	shift, and go to state 325

<<<<<<< HEAD
    statement_bpar	go to state 988



state 947
=======
    statement_bpar	go to state 1014



state 968
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR .   (rule 45)

    $default	reduce using rule 45 (statement)



<<<<<<< HEAD
state 941
=======
<<<<<<< HEAD
state 948
=======
state 969
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 136)

    OPEN_PAR	shift, and go to state 982



<<<<<<< HEAD
state 942

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 405
    MUL 	shift, and go to state 983



state 943

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 984



state 944

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)

    INTDECLARATION	shift, and go to state 586
    CHARDECLARATION	shift, and go to state 985



state 945

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
=======
state 970
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 420
    MUL 	shift, and go to state 989



state 949
=======
    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 1016



state 971
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 422
    MUL 	shift, and go to state 990



state 950
=======
    CLOSE_PAR	shift, and go to state 414
    MUL 	shift, and go to state 1017



state 972
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 604
    CHARDECLARATION	shift, and go to state 991



state 951
=======
    INTDECLARATION	shift, and go to state 596
    CHARDECLARATION	shift, and go to state 1018



state 973
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 986
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 946

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 992
=======
    ari_exp	go to state 1019
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 952
=======
state 974
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 987
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 947

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 405
    MUL 	shift, and go to state 988



state 948

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 989



state 949

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)

    INTDECLARATION	shift, and go to state 586
    CHARDECLARATION	shift, and go to state 990



state 950

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 993
=======
    ari_exp	go to state 1020
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 953
=======
state 975
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 420
    MUL 	shift, and go to state 994



state 954
=======
    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 1021



state 976
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 422
    MUL 	shift, and go to state 995



state 955
=======
    CLOSE_PAR	shift, and go to state 414
    MUL 	shift, and go to state 1022



state 977
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 604
    CHARDECLARATION	shift, and go to state 996



state 956
=======
    INTDECLARATION	shift, and go to state 596
    CHARDECLARATION	shift, and go to state 1023



state 978
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 991
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 951

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 997
=======
    ari_exp	go to state 1024
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 957
=======
state 979
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 992
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 952

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 998
=======
    ari_exp	go to state 1025
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 958
=======
state 980
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 993
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 953

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 999
=======
    ari_exp	go to state 1026
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 959
=======
state 981
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 994
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 954

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    OPEN_MPAR	shift, and go to state 995
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 1000
=======
    ari_exp	go to state 1027
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 960
=======
state 982
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 1001



state 961

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 157)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 177)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 88
    POINTERNULL	shift, and go to state 89
    STRUCT	shift, and go to state 225
    INTDECLARATION	shift, and go to state 1002
    CHARDECLARATION	shift, and go to state 1003
    VOIDDECLARATION	shift, and go to state 228
    FLOATDECLARATION	shift, and go to state 429
    OPEN_PAR	shift, and go to state 230
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 1004
    SIGNED	shift, and go to state 232
=======
    OPEN_MPAR	shift, and go to state 1028
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 955

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 318)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 996
    CHARDECLARATION	shift, and go to state 997
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 219
    EXTERN	shift, and go to state 49
<<<<<<< HEAD
    UNSIGNED	shift, and go to state 998
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
=======
    UNSIGNED	shift, and go to state 1031
    SIGNED	shift, and go to state 226
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 956

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    OPEN_MPAR	shift, and go to state 999



state 957

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    OPEN_MPAR	shift, and go to state 1000



state 958

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 86)

    $default	reduce using rule 86 (declaration)



state 959

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)

    OPEN_PAR	shift, and go to state 1001



state 960

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 60)

    $default	reduce using rule 60 (statement)



state 961

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)

    CLOSE_PAR	shift, and go to state 959



state 962

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    INTDECLARATION	shift, and go to state 1002
    CHARDECLARATION	shift, and go to state 1003
    UNSIGNED	shift, and go to state 1004



state 963

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    INTDECLARATION	shift, and go to state 1005
    CHARDECLARATION	shift, and go to state 1006
    UNSIGNED	shift, and go to state 1007



state 964

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    CLOSE_PAR	shift, and go to state 954



state 965

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    OPEN_PAR	shift, and go to state 1008



state 966

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    CLOSE_PAR	shift, and go to state 956



state 967

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    CLOSE_PAR	shift, and go to state 957
=======
    STRUCT_TYPE	shift, and go to state 233
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 234
    point_exp	go to state 235
    ari_exp	go to state 236
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 237
    type_cast	go to state 104
    identifier	go to state 238
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
<<<<<<< HEAD
    struct_member_exp	go to state 239

=======
    struct_member_exp	go to state 233



state 984

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    OPEN_MPAR	shift, and go to state 1032



state 985

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    OPEN_MPAR	shift, and go to state 1033



state 986

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 92)

    $default	reduce using rule 92 (declaration)



state 987

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)

    OPEN_PAR	shift, and go to state 1034



state 988

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)

    CLOSE_PAR	shift, and go to state 1035



state 989
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
state 962
=======
    OPEN_BPAR	shift, and go to state 1036
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    OPEN_MPAR	shift, and go to state 1005

<<<<<<< HEAD
=======
state 990
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


state 963

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
=======
    statement	go to state 1037
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    OPEN_MPAR	shift, and go to state 1006


<<<<<<< HEAD
=======
state 991
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 964

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 87)
=======
    OPEN_BPAR	shift, and go to state 1038
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 87 (declaration)


<<<<<<< HEAD
=======
state 992
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 965

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 1007



state 966
=======
    statement	go to state 1039
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 993
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    function_define  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 70)

<<<<<<< HEAD
    $default	reduce using rule 70 (function_define)



state 967
=======
    CLOSE_BPAR	shift, and go to state 1040
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201



state 994
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 965



state 968
=======
    CLOSE_PAR	shift, and go to state 987



state 995
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 1008
    CHARDECLARATION	shift, and go to state 1009
    UNSIGNED	shift, and go to state 1010



state 969
=======
    INTDECLARATION	shift, and go to state 1041
    CHARDECLARATION	shift, and go to state 1042
    UNSIGNED	shift, and go to state 1043



state 996
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 1011
    CHARDECLARATION	shift, and go to state 1012
    UNSIGNED	shift, and go to state 1013



state 970
=======
    INTDECLARATION	shift, and go to state 1044
    CHARDECLARATION	shift, and go to state 1045
    UNSIGNED	shift, and go to state 1046



state 997
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 960



state 971
=======
    CLOSE_PAR	shift, and go to state 982



state 998
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 1014



state 972
=======
    OPEN_PAR	shift, and go to state 1047



state 999
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 962



state 973
=======
    CLOSE_PAR	shift, and go to state 984



state 1000
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 963



state 974

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 71)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 311)

    COMMA	shift, and go to state 556

    COMMA	[reduce using rule 71 (function)]
    CLOSE_PAR	reduce using rule 71 (function)
    CLOSE_PAR	[reduce using rule 312 (inner_option_function_identifier)]
    $default	reduce using rule 71 (function)

    inner_option_function_identifier	go to state 1015



state 975
=======
    CLOSE_PAR	shift, and go to state 985
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 968

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 70)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 310)

    COMMA	shift, and go to state 538

    COMMA	[reduce using rule 70 (function)]
    CLOSE_PAR	reduce using rule 70 (function)
    CLOSE_PAR	[reduce using rule 311 (inner_option_function_identifier)]
    $default	reduce using rule 70 (function)

    inner_option_function_identifier	go to state 1009



<<<<<<< HEAD
state 969

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp . inner_option_identifier_array_declaration   (rule 100)
    array_exp  ->  array_exp . CON array_exp   (rule 191)

    COMMA	shift, and go to state 374
    CON 	shift, and go to state 488

    COMMA	[reduce using rule 105 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 105 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1010



state 970

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral . inner_option_identifier_array_declaration   (rule 101)

    COMMA	shift, and go to state 374

    COMMA	[reduce using rule 105 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 105 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1011
=======
state 1002
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp . inner_option_identifier_array_declaration   (rule 101)
    array_exp  ->  array_exp . CON array_exp   (rule 192)

<<<<<<< HEAD
    COMMA	shift, and go to state 389
    CON 	shift, and go to state 286
=======
    COMMA	shift, and go to state 381
    CON 	shift, and go to state 495
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)

<<<<<<< HEAD
    inner_option_identifier_array_declaration	go to state 1016



state 976
=======
    inner_option_identifier_array_declaration	go to state 1049



state 1003
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral . inner_option_identifier_array_declaration   (rule 102)

<<<<<<< HEAD
    COMMA	shift, and go to state 389
=======
    COMMA	shift, and go to state 381
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    COMMA	[reduce using rule 106 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 106 (inner_option_identifier_array_declaration)

<<<<<<< HEAD
    inner_option_identifier_array_declaration	go to state 1017



state 977

    case_par  ->  CASE member_in_exp COLON OPEN_PAR . statement CLOSE_PAR init_case_par   (rule 345)
=======
    inner_option_identifier_array_declaration	go to state 1050
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 971

<<<<<<< HEAD
    case_par  ->  CASE member_in_exp COLON OPEN_PAR . statement CLOSE_PAR init_case_par   (rule 344)
=======
    case_par  ->  CASE member_in_exp COLON OPEN_PAR . statement CLOSE_PAR init_case_par   (rule 351)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

<<<<<<< HEAD
    statement	go to state 1012
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 972
=======
<<<<<<< HEAD
    statement	go to state 1018
=======
    statement	go to state 1051
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



<<<<<<< HEAD
state 978
=======
state 1005
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
<<<<<<< HEAD
    case_par  ->  DEFAULT COLON OPEN_PAR statement . CLOSE_PAR   (rule 345)
=======
<<<<<<< HEAD
    case_par  ->  DEFAULT COLON OPEN_PAR statement . CLOSE_PAR   (rule 346)

    CLOSE_PAR	shift, and go to state 1019
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207



state 979

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR function   (rule 137)

    CLOSE_PAR	shift, and go to state 1020



state 980
=======
    case_par  ->  DEFAULT COLON OPEN_PAR statement . CLOSE_PAR   (rule 352)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_PAR	shift, and go to state 1013
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196



<<<<<<< HEAD
state 973

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 286)

    CLOSE_PAR	shift, and go to state 1014



state 974

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 282)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1015



state 975
=======
state 1006
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 287)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1021



state 981
=======
    CLOSE_PAR	shift, and go to state 1053



state 1007
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 283)

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 1022



state 982
=======
    inner_option_define_identifier	go to state 1054



state 1008
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 61)

    $default	reduce using rule 61 (statement)



<<<<<<< HEAD
state 976

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 297)

    CLOSE_PAR	shift, and go to state 1016



state 977

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 301)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1017



state 978

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 300)

    CLOSE_MPAR	shift, and go to state 1018
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ari_operator	go to state 239



state 979

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 299)

    $default	reduce using rule 299 (inner_option_define_identifier)



state 980
=======
<<<<<<< HEAD
state 983
=======
state 1009
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 298)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1023



state 984
=======
    CLOSE_PAR	shift, and go to state 1055



state 1010
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 302)

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)

<<<<<<< HEAD
    inner_option_define_identifier	go to state 1024



state 985
=======
    inner_option_define_identifier	go to state 1056



state 1011
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 301)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1025
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    CLOSE_MPAR	shift, and go to state 1057
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    ari_operator	go to state 250



<<<<<<< HEAD
state 986
=======
state 1012
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 300)

    $default	reduce using rule 300 (inner_option_define_identifier)



<<<<<<< HEAD
state 987
=======
state 1013
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR .   (rule 57)

    $default	reduce using rule 57 (statement)



<<<<<<< HEAD
state 981
=======
<<<<<<< HEAD
state 988
=======
state 1014
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar .   (rule 335)

    $default	reduce using rule 335 (extend_for_statement)



state 982

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR function   (rule 136)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 449
    UNSIGNED	shift, and go to state 345
    ID  	shift, and go to state 450
    STRUCT_TYPE	shift, and go to state 451

    $default	reduce using rule 287 (option_function_parameter_list)

    type_define	go to state 346
    sign_type_define	go to state 348
    all_type_define	go to state 452
    option_function_parameter_list	go to state 1019



state 983

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 1020
    MUL 	shift, and go to state 574



state 984

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 1021
    MUL 	shift, and go to state 577



state 985

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 1022



state 986

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 141)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1023
    ari_operator	go to state 239



state 987

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 120)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1024
    ari_operator	go to state 239



state 988

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 1025
    MUL 	shift, and go to state 574



state 989

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 1026
    MUL 	shift, and go to state 577



state 990

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 1027



state 991

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 144)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1028
    ari_operator	go to state 239



state 992

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 118)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1029
    ari_operator	go to state 239



state 993

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 143)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1030
    ari_operator	go to state 239



state 994

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 121)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1031
    ari_operator	go to state 239



state 995

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
=======
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 168
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar .   (rule 336)

<<<<<<< HEAD
    $default	reduce using rule 336 (extend_for_statement)



state 989
=======
    type_define	go to state 169
    sign_type_define	go to state 170
    all_type_define	go to state 459
    option_function_parameter_list	go to state 1058



state 1016
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1026
    MUL 	shift, and go to state 592



state 990
=======
    CLOSE_PAR	shift, and go to state 1059
    MUL 	shift, and go to state 584



state 1017
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1027
    MUL 	shift, and go to state 595



state 991
=======
    CLOSE_PAR	shift, and go to state 1060
    MUL 	shift, and go to state 587



state 1018
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 608
    MUL 	shift, and go to state 1028



state 992
=======
    CLOSE_PAR	shift, and go to state 600
    MUL 	shift, and go to state 1061



state 1019
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 142)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    COMMA	shift, and go to state 559
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 1029
    ari_operator	go to state 250



state 993
=======
    option_ari_exp	go to state 1062
    ari_operator	go to state 244



state 1020
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 121)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    COMMA	shift, and go to state 559
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 1030
    ari_operator	go to state 250



state 994
=======
    option_ari_exp	go to state 1063
    ari_operator	go to state 244



state 1021
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1031
    MUL 	shift, and go to state 592



state 995
=======
    CLOSE_PAR	shift, and go to state 1064
    MUL 	shift, and go to state 584



state 1022
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1032
    MUL 	shift, and go to state 595



state 996
=======
    CLOSE_PAR	shift, and go to state 1065
    MUL 	shift, and go to state 587



state 1023
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 608
    MUL 	shift, and go to state 1033



state 997
=======
    CLOSE_PAR	shift, and go to state 600
    MUL 	shift, and go to state 1066



state 1024
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 145)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    COMMA	shift, and go to state 559
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 1034
    ari_operator	go to state 250



state 998
=======
    option_ari_exp	go to state 1067
    ari_operator	go to state 244



state 1025
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 119)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    COMMA	shift, and go to state 559
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 1035
    ari_operator	go to state 250



state 999
=======
    option_ari_exp	go to state 1068
    ari_operator	go to state 244



state 1026
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 144)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    COMMA	shift, and go to state 559
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 1036
    ari_operator	go to state 250



state 1000
=======
    option_ari_exp	go to state 1069
    ari_operator	go to state 244



state 1027
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 122)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    COMMA	shift, and go to state 559
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 1037
    ari_operator	go to state 250



state 1001
=======
    option_ari_exp	go to state 1070
    ari_operator	go to state 244



state 1028
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1032
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 996
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 1038
=======
    ari_exp	go to state 1071
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 1002

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)
=======
state 1029
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 224)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 405
    MUL 	shift, and go to state 1033
=======
    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 1072
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_PAR	shift, and go to state 420
    MUL 	shift, and go to state 1039


<<<<<<< HEAD
state 997

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 1034
=======
<<<<<<< HEAD
=======
state 1030
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 1003

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)
=======
    CLOSE_PAR	shift, and go to state 414
    MUL 	shift, and go to state 1073
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_PAR	shift, and go to state 422
    MUL 	shift, and go to state 1040


<<<<<<< HEAD
state 998

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)

    INTDECLARATION	shift, and go to state 586
    CHARDECLARATION	shift, and go to state 1035



state 999

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
=======
<<<<<<< HEAD
=======
state 1031
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 1004

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

    INTDECLARATION	shift, and go to state 604
    CHARDECLARATION	shift, and go to state 1041



state 1005
=======
    INTDECLARATION	shift, and go to state 596
    CHARDECLARATION	shift, and go to state 1074



state 1032
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1036
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1000

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 1042
=======
    ari_exp	go to state 1075
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 1006
=======
state 1033
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1037
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1001
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 1043
=======
    ari_exp	go to state 1076
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 1007
=======
state 1034
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 449
    UNSIGNED	shift, and go to state 345
    ID  	shift, and go to state 450
    STRUCT_TYPE	shift, and go to state 451

<<<<<<< HEAD
    $default	reduce using rule 287 (option_function_parameter_list)

    type_define	go to state 346
    sign_type_define	go to state 348
    all_type_define	go to state 452
    option_function_parameter_list	go to state 1038



state 1002

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    MUL 	shift, and go to state 1039



state 1003

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    MUL 	shift, and go to state 1040



state 1004

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CHARDECLARATION	shift, and go to state 1041



state 1005

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    MUL 	shift, and go to state 1042



state 1006

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    MUL 	shift, and go to state 1043



state 1007

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CHARDECLARATION	shift, and go to state 1044



state 1008

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    INTDECLARATION	shift, and go to state 1045
    CHARDECLARATION	shift, and go to state 1046
    UNSIGNED	shift, and go to state 1047
=======
state 1035

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 75)

    OPEN_BPAR	shift, and go to state 1078



state 1036

    function_define  ->  FUNCTION STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 74)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 1079
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 1037

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    function_define  ->  FUNCTION STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 73)

    CLOSE_BPAR	shift, and go to state 1080
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201



state 1038
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 89)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 480
    UNSIGNED	shift, and go to state 360
    ID  	shift, and go to state 481
    STRUCT_TYPE	shift, and go to state 482

    $default	reduce using rule 288 (option_function_parameter_list)
=======
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 1081
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82



state 1039

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    function_define  ->  FUNCTION all_type_define MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 71)

    CLOSE_BPAR	shift, and go to state 1082
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201



state 1040

    function_define  ->  FUNCTION all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 70)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    type_define	go to state 361
    sign_type_define	go to state 363
    all_type_define	go to state 483
    option_function_parameter_list	go to state 1044



<<<<<<< HEAD
state 1008
=======
state 1041
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

<<<<<<< HEAD
    MUL 	shift, and go to state 1045



state 1009
=======
    MUL 	shift, and go to state 1083



state 1042
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

<<<<<<< HEAD
    MUL 	shift, and go to state 1046



state 1010
=======
    MUL 	shift, and go to state 1084



state 1043
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

<<<<<<< HEAD
    CHARDECLARATION	shift, and go to state 1047



state 1011
=======
    CHARDECLARATION	shift, and go to state 1085



state 1044
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

<<<<<<< HEAD
    MUL 	shift, and go to state 1048



state 1012
=======
    MUL 	shift, and go to state 1086



state 1045
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

<<<<<<< HEAD
    MUL 	shift, and go to state 1049



state 1013
=======
    MUL 	shift, and go to state 1087



state 1046
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

<<<<<<< HEAD
    CHARDECLARATION	shift, and go to state 1050



state 1014
=======
    CHARDECLARATION	shift, and go to state 1088



state 1047
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

<<<<<<< HEAD
    INTDECLARATION	shift, and go to state 1051
    CHARDECLARATION	shift, and go to state 1052
    UNSIGNED	shift, and go to state 1053



state 1015

    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 311)

    $default	reduce using rule 311 (inner_option_function_identifier)



state 1016
=======
    INTDECLARATION	shift, and go to state 1089
    CHARDECLARATION	shift, and go to state 1090
    UNSIGNED	shift, and go to state 1091
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 1009

    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 310)

    $default	reduce using rule 310 (inner_option_function_identifier)



<<<<<<< HEAD
state 1010

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration .   (rule 100)

    $default	reduce using rule 100 (option_identifier_array_declaration)



state 1011

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration .   (rule 101)

    $default	reduce using rule 101 (option_identifier_array_declaration)



state 1012
=======
state 1049
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration .   (rule 101)

    $default	reduce using rule 101 (option_identifier_array_declaration)



<<<<<<< HEAD
state 1017
=======
state 1050
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration .   (rule 102)

    $default	reduce using rule 102 (option_identifier_array_declaration)



<<<<<<< HEAD
state 1018
=======
state 1051
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
<<<<<<< HEAD
    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement . CLOSE_PAR init_case_par   (rule 344)
=======
<<<<<<< HEAD
    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement . CLOSE_PAR init_case_par   (rule 345)

    CLOSE_PAR	shift, and go to state 1054
    CHOP	shift, and go to state 204
    OR  	shift, and go to state 205
    PARALLEL	shift, and go to state 206
    AND 	shift, and go to state 207



state 1019

    case_par  ->  DEFAULT COLON OPEN_PAR statement CLOSE_PAR .   (rule 346)

    $default	reduce using rule 346 (case_par)



state 1020
=======
    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement . CLOSE_PAR init_case_par   (rule 351)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_PAR	shift, and go to state 1048
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196



state 1013

    case_par  ->  DEFAULT COLON OPEN_PAR statement CLOSE_PAR .   (rule 345)

    $default	reduce using rule 345 (case_par)



<<<<<<< HEAD
state 1014

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 286)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1049
=======
state 1053
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . function   (rule 137)

    OPEN_PAR	shift, and go to state 1055
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 1056

    function	go to state 1057
    array	go to state 1058

<<<<<<< HEAD
=======
    inner_option_define_identifier	go to state 1093
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 1021

<<<<<<< HEAD
state 1015

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 282)

    $default	reduce using rule 282 (option_function_parameter_list)
=======
<<<<<<< HEAD
    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 287)
=======
state 1054
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    inner_option_define_identifier	go to state 1059


<<<<<<< HEAD
state 1016

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 297)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1050
=======
<<<<<<< HEAD
=======
state 1055
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 1022

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 283)

    $default	reduce using rule 283 (option_function_parameter_list)

<<<<<<< HEAD
=======
    inner_option_define_identifier	go to state 1094
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 1023

<<<<<<< HEAD
state 1017

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 301)

    $default	reduce using rule 301 (inner_option_define_identifier)
=======
<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 298)
=======
state 1056
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    COMMA	shift, and go to state 308

    $default	reduce using rule 299 (inner_option_define_identifier)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    inner_option_define_identifier	go to state 1060


<<<<<<< HEAD
state 1018

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 300)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1051
=======
<<<<<<< HEAD
=======
state 1057
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 1024

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 302)

    $default	reduce using rule 302 (inner_option_define_identifier)

<<<<<<< HEAD
=======
    inner_option_define_identifier	go to state 1095
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 1025

<<<<<<< HEAD
state 1019

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR function   (rule 136)

    CLOSE_PAR	shift, and go to state 1052
=======
<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 301)
=======
state 1058
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    COMMA	shift, and go to state 308

<<<<<<< HEAD
    $default	reduce using rule 299 (inner_option_define_identifier)
=======
    CLOSE_PAR	shift, and go to state 1096
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    inner_option_define_identifier	go to state 1061


<<<<<<< HEAD
state 1020

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 218)
=======
<<<<<<< HEAD
=======
state 1059
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 1026

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
<<<<<<< HEAD
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 793
    INTLITERAL	shift, and go to state 1053
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 712
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1021

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)
=======
    BNE 	shift, and go to state 93
<<<<<<< HEAD
    ID  	shift, and go to state 800
    INTLITERAL	shift, and go to state 1062
=======
    ID  	shift, and go to state 809
    INTLITERAL	shift, and go to state 1097
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
=======
    simple_ari_exp	go to state 582
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 728
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 1027
=======
state 1060
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
<<<<<<< HEAD
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 796
    INTLITERAL	shift, and go to state 1054
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 714
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1022

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 1055
    MUL 	shift, and go to state 729



state 1023

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 141)

    CLOSE_MPAR	shift, and go to state 1056



state 1024

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 120)

    CLOSE_MPAR	shift, and go to state 1057



state 1025

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 218)
=======
    BNE 	shift, and go to state 93
<<<<<<< HEAD
    ID  	shift, and go to state 803
    INTLITERAL	shift, and go to state 1063
=======
    ID  	shift, and go to state 812
    INTLITERAL	shift, and go to state 1098
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
=======
    simple_ari_exp	go to state 582
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 730
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 1028
=======
state 1061
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1064
=======
    CLOSE_PAR	shift, and go to state 1099
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    MUL 	shift, and go to state 745



<<<<<<< HEAD
state 1029
=======
state 1062
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 142)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1065



state 1030
=======
    CLOSE_MPAR	shift, and go to state 1100



state 1063
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 121)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1066



state 1031
=======
    CLOSE_MPAR	shift, and go to state 1101



state 1064
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
<<<<<<< HEAD
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 793
    INTLITERAL	shift, and go to state 1058
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 712
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1026

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)
=======
    BNE 	shift, and go to state 93
<<<<<<< HEAD
    ID  	shift, and go to state 800
    INTLITERAL	shift, and go to state 1067
=======
    ID  	shift, and go to state 809
    INTLITERAL	shift, and go to state 1102
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
=======
    simple_ari_exp	go to state 582
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 728
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 1032
=======
state 1065
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
<<<<<<< HEAD
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 796
    INTLITERAL	shift, and go to state 1059
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 714
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1027

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 1060
    MUL 	shift, and go to state 729



state 1028

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 144)

    CLOSE_MPAR	shift, and go to state 1061



state 1029

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 118)

    CLOSE_MPAR	shift, and go to state 1062

=======
    BNE 	shift, and go to state 93
<<<<<<< HEAD
    ID  	shift, and go to state 803
    INTLITERAL	shift, and go to state 1068
=======
    ID  	shift, and go to state 812
    INTLITERAL	shift, and go to state 1103
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
=======
    simple_ari_exp	go to state 582
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 730
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 1033

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)
=======
state 1066

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 1104
    MUL 	shift, and go to state 745



state 1067

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 150)

    CLOSE_MPAR	shift, and go to state 1105



state 1068

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 124)

    CLOSE_MPAR	shift, and go to state 1106
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    CLOSE_PAR	shift, and go to state 1069
    MUL 	shift, and go to state 745


<<<<<<< HEAD
=======
state 1069
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 1034

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 145)
=======
    CLOSE_MPAR	shift, and go to state 1107
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    CLOSE_MPAR	shift, and go to state 1070


<<<<<<< HEAD
=======
state 1070
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 1035

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 119)
=======
    CLOSE_MPAR	shift, and go to state 1108
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    CLOSE_MPAR	shift, and go to state 1071


<<<<<<< HEAD
=======
state 1071
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 1036

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 144)
=======
    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    CLOSE_MPAR	shift, and go to state 1072

<<<<<<< HEAD
=======
    option_ari_exp	go to state 1109
    ari_operator	go to state 244
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


state 1037

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 122)
=======
state 1072
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    CLOSE_MPAR	shift, and go to state 1073

<<<<<<< HEAD
=======
    CLOSE_PAR	shift, and go to state 1110
    MUL 	shift, and go to state 584
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


state 1038

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 143)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
=======
state 1073
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    COMMA	shift, and go to state 559
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

<<<<<<< HEAD
    $default	reduce using rule 150 (option_ari_exp)
=======
    CLOSE_PAR	shift, and go to state 1111
    MUL 	shift, and go to state 587
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    option_ari_exp	go to state 1074
    ari_operator	go to state 250

state 1030

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 143)

    CLOSE_MPAR	shift, and go to state 1063

=======
<<<<<<< HEAD
=======
state 1074
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 1039

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)
=======
    CLOSE_PAR	shift, and go to state 600
    MUL 	shift, and go to state 1112
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_PAR	shift, and go to state 1075
    MUL 	shift, and go to state 592

state 1031

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 121)

    CLOSE_MPAR	shift, and go to state 1064



state 1032
=======
<<<<<<< HEAD
=======
state 1075
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 1040

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)
=======
    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    CLOSE_PAR	shift, and go to state 1076
    MUL 	shift, and go to state 595

<<<<<<< HEAD
=======
    option_ari_exp	go to state 1113
    ari_operator	go to state 244
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 142)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

<<<<<<< HEAD
    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1065
    ari_operator	go to state 239



state 1033

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 1066
    MUL 	shift, and go to state 574



state 1034
=======
state 1041

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)
=======
state 1076
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    CLOSE_PAR	shift, and go to state 608
    MUL 	shift, and go to state 1077

<<<<<<< HEAD
=======
    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
state 1042
=======
    option_ari_exp	go to state 1114
    ari_operator	go to state 244
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 146)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

    COMMA	shift, and go to state 559
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

<<<<<<< HEAD
    $default	reduce using rule 150 (option_ari_exp)
=======
state 1077
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    option_ari_exp	go to state 1078
    ari_operator	go to state 250

<<<<<<< HEAD
=======
    CLOSE_PAR	shift, and go to state 1115
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1067
    MUL 	shift, and go to state 577



state 1035

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)
=======
state 1043

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 120)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)
=======
state 1078
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    COMMA	shift, and go to state 559
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 1079
    ari_operator	go to state 250



state 1044
=======
    statement	go to state 1116
    function_define	go to state 62
    function	go to state 63
    struct_define_statement	go to state 64
    struct_identifier	go to state 65
    sign_declaration	go to state 66
    declaration	go to state 67
    type_define	go to state 68
    ass_statement	go to state 69
    ass_left	go to state 70
    leftaddrshift	go to state 71
    array	go to state 72
    point_exp	go to state 73
    identifier	go to state 74
    while_statement	go to state 75
    for_statement	go to state 76
    extend_for_statement	go to state 77
    switch_statement	go to state 78
    if_statement	go to state 79
    output_statement	go to state 80
    input_statement	go to state 81
    struct_member_exp	go to state 82
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 1068


<<<<<<< HEAD

state 1036

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 145)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
=======
state 1079
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P array_exp   (rule 89)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1080



state 1045
=======
    CLOSE_BPAR	shift, and go to state 1117
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 1069
    ari_operator	go to state 239


=======
state 1080
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    CLOSE_PAR	shift, and go to state 1081
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 1037

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 119)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

<<<<<<< HEAD
    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1070
    ari_operator	go to state 239



state 1038

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P array_exp   (rule 88)

    CLOSE_PAR	shift, and go to state 1071



state 1039

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1072



state 1040

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1073



state 1041

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    MUL 	shift, and go to state 1074



state 1042

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1075



state 1043

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CLOSE_PAR	shift, and go to state 1076



state 1044

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    MUL 	shift, and go to state 1077



state 1045

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    MUL 	shift, and go to state 1078
=======
<<<<<<< HEAD
state 1046
=======
state 1081
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1082



state 1047
=======
    CLOSE_BPAR	shift, and go to state 1118
    CHOP	shift, and go to state 198
    OR  	shift, and go to state 199
    PARALLEL	shift, and go to state 200
    AND 	shift, and go to state 201



state 1082
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    MUL 	shift, and go to state 1083



<<<<<<< HEAD
state 1048
=======
state 1083
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1084



state 1049
=======
    CLOSE_PAR	shift, and go to state 1119



state 1084
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1085



state 1050
=======
    CLOSE_PAR	shift, and go to state 1120



state 1085
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

<<<<<<< HEAD
    MUL 	shift, and go to state 1086



state 1051
=======
    MUL 	shift, and go to state 1121



state 1086
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

<<<<<<< HEAD
    MUL 	shift, and go to state 1087



state 1052
=======
    CLOSE_PAR	shift, and go to state 1122



state 1087
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

<<<<<<< HEAD
    MUL 	shift, and go to state 1088



state 1053
=======
    CLOSE_PAR	shift, and go to state 1123



state 1088
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

<<<<<<< HEAD
    CHARDECLARATION	shift, and go to state 1089



state 1054
=======
    MUL 	shift, and go to state 1124



state 1089
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR . init_case_par   (rule 345)

<<<<<<< HEAD
    CASE	shift, and go to state 755
    BREAK	shift, and go to state 1090
    DEFAULT	shift, and go to state 756
=======
    MUL 	shift, and go to state 1125
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 349 (init_case_par)

    case_par	go to state 1091
    init_case_par	go to state 1092

<<<<<<< HEAD
state 1046

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    MUL 	shift, and go to state 1079
=======
<<<<<<< HEAD
=======
state 1090
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
state 1055
=======
    MUL 	shift, and go to state 1126
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)

    OPEN_PAR	shift, and go to state 1093
    ID  	shift, and go to state 1094

<<<<<<< HEAD
state 1047

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CHARDECLARATION	shift, and go to state 1080



state 1048
=======
<<<<<<< HEAD
    array	go to state 569
=======
state 1091
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01


<<<<<<< HEAD
=======
    CHARDECLARATION	shift, and go to state 1127
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 1056

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

<<<<<<< HEAD
    OPEN_PAR	shift, and go to state 198
    OPEN_MPAR	shift, and go to state 199



state 1057

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function .   (rule 137)
=======
state 1092
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR . init_case_par   (rule 344)

    CASE	shift, and go to state 739
    BREAK	shift, and go to state 1081
    DEFAULT	shift, and go to state 740

    $default	reduce using rule 348 (init_case_par)

<<<<<<< HEAD
    case_par	go to state 1082
    init_case_par	go to state 1083
=======
    case_par	go to state 1129
    init_case_par	go to state 1130
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 137 (ass_right)


<<<<<<< HEAD
state 1049

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 286)

    $default	reduce using rule 286 (option_function_parameter_list)
=======
<<<<<<< HEAD
=======
state 1093
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 1058

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    OPEN_PAR	shift, and go to state 214


<<<<<<< HEAD
state 1050

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 297)

    $default	reduce using rule 297 (inner_option_define_identifier)
=======
<<<<<<< HEAD
=======
state 1094
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 1059

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 287)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 287 (option_function_parameter_list)


<<<<<<< HEAD
state 1051

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 300)

    $default	reduce using rule 300 (inner_option_define_identifier)
=======
<<<<<<< HEAD
=======
state 1095
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 1060

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 298)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 298 (inner_option_define_identifier)


<<<<<<< HEAD
state 1052

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . function   (rule 136)

    OPEN_PAR	shift, and go to state 1084
=======
<<<<<<< HEAD
=======
state 1096
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

state 1061

<<<<<<< HEAD
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 301)

    $default	reduce using rule 301 (inner_option_define_identifier)



state 1062

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1095

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 1063

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1096

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 1064
=======
    OPEN_PAR	shift, and go to state 1131
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 1085

    function	go to state 1086
    array	go to state 1087



state 1053

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    intliteral  ->  INTLITERAL .   (rule 320)

    CLOSE_PAR	shift, and go to state 1088

    CLOSE_PAR	[reduce using rule 320 (intliteral)]
    $default	reduce using rule 320 (intliteral)



state 1054

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    intliteral  ->  INTLITERAL .   (rule 320)

    CLOSE_PAR	shift, and go to state 1089

    CLOSE_PAR	[reduce using rule 320 (intliteral)]
    $default	reduce using rule 320 (intliteral)



<<<<<<< HEAD
state 1055

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)
=======
state 1099
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
<<<<<<< HEAD
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 896
    INTLITERAL	shift, and go to state 1090
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 843
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
=======
    BNE 	shift, and go to state 93
<<<<<<< HEAD
    ID  	shift, and go to state 901
    INTLITERAL	shift, and go to state 1097
=======
    ID  	shift, and go to state 918
    INTLITERAL	shift, and go to state 1137
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 851
=======
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 865
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 1065
=======
state 1100
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 142)

    $default	reduce using rule 142 (array)



<<<<<<< HEAD
state 1066
=======
state 1101
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 121)

    $default	reduce using rule 121 (leftaddrshift)



<<<<<<< HEAD
state 1067

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1098

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 1068

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1099

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 1069
=======
state 1102

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    intliteral  ->  INTLITERAL .   (rule 327)

    CLOSE_PAR	shift, and go to state 1138
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 1056

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 141)

    $default	reduce using rule 141 (array)



state 1057

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 120)

<<<<<<< HEAD
    $default	reduce using rule 120 (leftaddrshift)


=======
state 1104
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
<<<<<<< HEAD
    ID  	shift, and go to state 901
    INTLITERAL	shift, and go to state 1100
=======
    ID  	shift, and go to state 918
    INTLITERAL	shift, and go to state 1140
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 851
=======
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 865
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 1058

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    intliteral  ->  INTLITERAL .   (rule 320)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1091

    CLOSE_PAR	[reduce using rule 320 (intliteral)]
    $default	reduce using rule 320 (intliteral)

=======
<<<<<<< HEAD
state 1070
=======
state 1105
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 145)

    $default	reduce using rule 145 (array)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 1059

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    intliteral  ->  INTLITERAL .   (rule 320)

    CLOSE_PAR	shift, and go to state 1092

    CLOSE_PAR	[reduce using rule 320 (intliteral)]
    $default	reduce using rule 320 (intliteral)



state 1060

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 896
    INTLITERAL	shift, and go to state 1093
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 843
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1061

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 144)

    $default	reduce using rule 144 (array)



state 1062

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 118)

    $default	reduce using rule 118 (leftaddrshift)



state 1063

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 143)

    $default	reduce using rule 143 (array)



state 1064

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 121)

    $default	reduce using rule 121 (leftaddrshift)



state 1065
=======
<<<<<<< HEAD
state 1071
=======
state 1106
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 119)

    $default	reduce using rule 119 (leftaddrshift)



<<<<<<< HEAD
state 1072
=======
state 1107
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 144)

    $default	reduce using rule 144 (array)



<<<<<<< HEAD
state 1073
=======
state 1108
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 122)

    $default	reduce using rule 122 (leftaddrshift)



<<<<<<< HEAD
state 1074
=======
state 1109
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 143)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1101



state 1075
=======
    CLOSE_MPAR	shift, and go to state 1141



state 1110
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
<<<<<<< HEAD
    ID  	shift, and go to state 800
    INTLITERAL	shift, and go to state 1102
=======
    ID  	shift, and go to state 809
    INTLITERAL	shift, and go to state 1142
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
=======
    simple_ari_exp	go to state 582
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 728
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 1076
=======
state 1111
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 89
    OPEN_PAR	shift, and go to state 90
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 91
    SUB 	shift, and go to state 92
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 93
<<<<<<< HEAD
    ID  	shift, and go to state 803
    INTLITERAL	shift, and go to state 1103
=======
    ID  	shift, and go to state 812
    INTLITERAL	shift, and go to state 1143
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
=======
    simple_ari_exp	go to state 582
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 730
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 1077

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)
=======
state 1112
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 142)

    CLOSE_MPAR	shift, and go to state 1094



state 1066

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 218)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 793
    INTLITERAL	shift, and go to state 1095
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 712
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1067

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 796
    INTLITERAL	shift, and go to state 1096
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 714
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1068

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 1097
    MUL 	shift, and go to state 729



state 1069

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 145)

    CLOSE_MPAR	shift, and go to state 1098



state 1070

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 119)

    CLOSE_MPAR	shift, and go to state 1099



state 1071

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 87)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P array_exp   (rule 88)

    ASS_P	shift, and go to state 1100

    $default	reduce using rule 87 (declaration)



state 1072

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    INTLITERAL	shift, and go to state 1101
=======
state 1117
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    CLOSE_PAR	shift, and go to state 1104
    MUL 	shift, and go to state 745



state 1078

<<<<<<< HEAD
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 146)
=======
state 1118
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    CLOSE_MPAR	shift, and go to state 1105



state 1079

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 120)

    CLOSE_MPAR	shift, and go to state 1106



state 1080

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 88)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P array_exp   (rule 89)

    ASS_P	shift, and go to state 1107
=======
state 1119

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 88 (declaration)

>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 1081

<<<<<<< HEAD
state 1073

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    INTLITERAL	shift, and go to state 1102



state 1074

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1103



state 1075

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    INTLITERAL	shift, and go to state 1104



state 1076

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    INTLITERAL	shift, and go to state 1105



state 1077

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 1106



state 1078

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1107



state 1079

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1108



state 1080

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    MUL 	shift, and go to state 1109
=======
<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    INTLITERAL	shift, and go to state 1108
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    INTLITERAL	shift, and go to state 1150
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 1082

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    INTLITERAL	shift, and go to state 1109
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    CLOSE_PAR	shift, and go to state 1151
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 1083

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    CLOSE_PAR	shift, and go to state 1110



state 1084

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    INTLITERAL	shift, and go to state 1111
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    INTLITERAL	shift, and go to state 1153
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 1085

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    INTLITERAL	shift, and go to state 1112



state 1086

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    CLOSE_PAR	shift, and go to state 1113



state 1087

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1114
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    CLOSE_PAR	shift, and go to state 1156
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 1088

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1115

=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    MUL 	shift, and go to state 1157
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 1089

<<<<<<< HEAD
state 1081

    init_case_par  ->  BREAK . case_par   (rule 346)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

<<<<<<< HEAD
    MUL 	shift, and go to state 1116

=======
    init_case_par  ->  BREAK . case_par   (rule 353)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CASE	shift, and go to state 739
    DEFAULT	shift, and go to state 740

<<<<<<< HEAD
    case_par	go to state 1110
=======
    case_par	go to state 1158
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 1090

    init_case_par  ->  BREAK . case_par   (rule 347)

<<<<<<< HEAD
state 1082

    init_case_par  ->  case_par .   (rule 347)

    $default	reduce using rule 347 (init_case_par)



state 1083

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par .   (rule 344)
=======
<<<<<<< HEAD
    CASE	shift, and go to state 755
    DEFAULT	shift, and go to state 756

    case_par	go to state 1117
=======
    init_case_par  ->  case_par .   (rule 354)

    $default	reduce using rule 354 (init_case_par)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01



state 1091

<<<<<<< HEAD
    init_case_par  ->  case_par .   (rule 348)

    $default	reduce using rule 348 (init_case_par)

=======
    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par .   (rule 351)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 344 (case_par)



state 1084

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)

    OPEN_PAR	shift, and go to state 1111
    ID  	shift, and go to state 1112

<<<<<<< HEAD
    array	go to state 551
=======
    array	go to state 561
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 1092

<<<<<<< HEAD
state 1085

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    OPEN_PAR	shift, and go to state 187
    OPEN_MPAR	shift, and go to state 188
=======
<<<<<<< HEAD
    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par .   (rule 345)
=======
state 1132
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 345 (case_par)

>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 1093

<<<<<<< HEAD
state 1086

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function .   (rule 136)

    $default	reduce using rule 136 (ass_right)



state 1087

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)

    OPEN_PAR	shift, and go to state 203



state 1088

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1113



state 1089

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1114
=======
<<<<<<< HEAD
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 147)
=======
state 1133
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    INTDECLARATION	shift, and go to state 614
    CHARDECLARATION	shift, and go to state 615
    FLOATDECLARATION	shift, and go to state 616
    OPEN_PAR	shift, and go to state 1093
    UNSIGNED	shift, and go to state 617
    ID  	shift, and go to state 1094

    array	go to state 569



<<<<<<< HEAD
state 1094
=======
state 1134
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    OPEN_MPAR	shift, and go to state 199



<<<<<<< HEAD
state 1095
=======
state 1135
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1118



state 1096
=======
    CLOSE_PAR	shift, and go to state 1161



state 1136
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1119



state 1097

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1120

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 1098
=======
    CLOSE_PAR	shift, and go to state 1162
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 1090

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    intliteral  ->  INTLITERAL .   (rule 320)

    CLOSE_PAR	shift, and go to state 1115

    CLOSE_PAR	[reduce using rule 320 (intliteral)]
    $default	reduce using rule 320 (intliteral)



<<<<<<< HEAD
state 1091

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1116



state 1092

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CLOSE_PAR	shift, and go to state 1117
=======
state 1138
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1121



state 1099
=======
    CLOSE_PAR	shift, and go to state 1164



state 1139
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1122



state 1100

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1123

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 1101
=======
    CLOSE_PAR	shift, and go to state 1165
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 1093

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    intliteral  ->  INTLITERAL .   (rule 320)

    CLOSE_PAR	shift, and go to state 1118

    CLOSE_PAR	[reduce using rule 320 (intliteral)]
    $default	reduce using rule 320 (intliteral)



<<<<<<< HEAD
state 1094

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 142)

    $default	reduce using rule 142 (array)



state 1095
=======
state 1141
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 143)

    $default	reduce using rule 143 (array)



<<<<<<< HEAD
state 1102

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1124

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 1103

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1125

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 1104
=======
state 1142
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    intliteral  ->  INTLITERAL .   (rule 320)

    CLOSE_PAR	shift, and go to state 1119

    CLOSE_PAR	[reduce using rule 320 (intliteral)]
    $default	reduce using rule 320 (intliteral)



state 1096

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    intliteral  ->  INTLITERAL .   (rule 320)

    CLOSE_PAR	shift, and go to state 1120

    CLOSE_PAR	[reduce using rule 320 (intliteral)]
    $default	reduce using rule 320 (intliteral)



<<<<<<< HEAD
state 1097

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)
=======
state 1144
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
<<<<<<< HEAD
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 896
    INTLITERAL	shift, and go to state 1121
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 711
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 843
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108
=======
    BNE 	shift, and go to state 93
<<<<<<< HEAD
    ID  	shift, and go to state 901
    INTLITERAL	shift, and go to state 1126
=======
    ID  	shift, and go to state 918
    INTLITERAL	shift, and go to state 1169
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
    type_cast_alg_exp	go to state 727
<<<<<<< HEAD
    simple_ari_exp	go to state 590
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 851
=======
    simple_ari_exp	go to state 582
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    casted_element	go to state 865
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 1105
=======
state 1145

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 151)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 1098

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 145)

    $default	reduce using rule 145 (array)



state 1099

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 119)

    $default	reduce using rule 119 (leftaddrshift)



state 1100

<<<<<<< HEAD
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . array_exp   (rule 88)

    OPEN_PAR	shift, and go to state 652
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305

    array_exp	go to state 1122
    option_list_value	go to state 311
    option_struct_list_value	go to state 312



state 1101

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1088
=======
state 1148
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 146)

    $default	reduce using rule 146 (array)



<<<<<<< HEAD
state 1106

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 120)

    $default	reduce using rule 120 (leftaddrshift)



state 1107

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . array_exp   (rule 89)
=======
state 1149

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    OPEN_PAR	shift, and go to state 462
    OPEN_BPAR	shift, and go to state 125
    OPEN_MPAR	shift, and go to state 126
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    array_exp	go to state 1127
    option_list_value	go to state 133
    option_struct_list_value	go to state 134


<<<<<<< HEAD
state 1102

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1089
=======

<<<<<<< HEAD
state 1108

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    CLOSE_PAR	shift, and go to state 1136
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_PAR	shift, and go to state 1095


<<<<<<< HEAD
state 1103

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    INTLITERAL	shift, and go to state 1123
=======

<<<<<<< HEAD
state 1109

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    INTLITERAL	shift, and go to state 1171
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_PAR	shift, and go to state 1096


<<<<<<< HEAD
state 1104

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1091
=======

<<<<<<< HEAD
state 1110
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    INTLITERAL	shift, and go to state 1128


<<<<<<< HEAD
state 1105

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CLOSE_PAR	shift, and go to state 1092
=======

<<<<<<< HEAD
state 1111

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1139
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_PAR	shift, and go to state 1098


<<<<<<< HEAD
state 1106

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    INTLITERAL	shift, and go to state 1124
=======

<<<<<<< HEAD
state 1112
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    CLOSE_PAR	shift, and go to state 1099


<<<<<<< HEAD
state 1107

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    INTLITERAL	shift, and go to state 1125
=======

<<<<<<< HEAD
state 1113
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    INTLITERAL	shift, and go to state 1129


<<<<<<< HEAD
state 1108

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    INTLITERAL	shift, and go to state 1126
=======

<<<<<<< HEAD
state 1114

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    INTLITERAL	shift, and go to state 1174
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    INTLITERAL	shift, and go to state 1130


<<<<<<< HEAD
state 1109

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1127
=======

<<<<<<< HEAD
state 1115

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
=======
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    CLOSE_PAR	shift, and go to state 1175
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    INTLITERAL	shift, and go to state 1131


<<<<<<< HEAD
state 1110

    init_case_par  ->  BREAK case_par .   (rule 346)
=======

<<<<<<< HEAD
state 1116

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1132



state 1117
=======
    init_case_par  ->  BREAK case_par .   (rule 353)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	reduce using rule 346 (init_case_par)



state 1111

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)

    INTDECLARATION	shift, and go to state 596
    CHARDECLARATION	shift, and go to state 597
    FLOATDECLARATION	shift, and go to state 598
    OPEN_PAR	shift, and go to state 1111
    UNSIGNED	shift, and go to state 599
    ID  	shift, and go to state 1112

    array	go to state 551



<<<<<<< HEAD
state 1112

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    OPEN_MPAR	shift, and go to state 188



state 1113

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    OPEN_MPAR	shift, and go to state 1128



state 1114

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    OPEN_MPAR	shift, and go to state 1129



state 1115

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1130



state 1116

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    OPEN_MPAR	shift, and go to state 1131



state 1117

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    OPEN_MPAR	shift, and go to state 1132



state 1118

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 1133



state 1119

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1134



state 1120

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1135
=======
state 1160
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    init_case_par  ->  BREAK case_par .   (rule 347)

    $default	reduce using rule 347 (init_case_par)



<<<<<<< HEAD
state 1118
=======
state 1161
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 1133



state 1119
=======
    OPEN_MPAR	shift, and go to state 1176



state 1162
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 1134



state 1120
=======
    OPEN_MPAR	shift, and go to state 1177



state 1163
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1135



state 1121
=======
    CLOSE_PAR	shift, and go to state 1178



state 1164
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 1136



state 1122
=======
    OPEN_MPAR	shift, and go to state 1179



state 1165
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 1137



state 1123
=======
    OPEN_MPAR	shift, and go to state 1180



state 1166
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1138



state 1124
=======
    CLOSE_PAR	shift, and go to state 1181



state 1167
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1139



state 1125
=======
    CLOSE_PAR	shift, and go to state 1182



state 1168
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1140



state 1126

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1141

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 1127
=======
    CLOSE_PAR	shift, and go to state 1183
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd



state 1121

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    intliteral  ->  INTLITERAL .   (rule 320)

    CLOSE_PAR	shift, and go to state 1136

    CLOSE_PAR	[reduce using rule 320 (intliteral)]
    $default	reduce using rule 320 (intliteral)



<<<<<<< HEAD
state 1122

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp .   (rule 88)
    array_exp  ->  array_exp . CON array_exp   (rule 191)

    CON 	shift, and go to state 488

    $default	reduce using rule 88 (declaration)



state 1123

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1115



state 1124

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 1118



state 1125

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1119



state 1126

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1120



state 1127

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    INTLITERAL	shift, and go to state 1137



state 1128

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
=======
state 1170
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp .   (rule 89)
    array_exp  ->  array_exp . CON array_exp   (rule 192)

<<<<<<< HEAD
    CON 	shift, and go to state 286
=======
    CON 	shift, and go to state 495
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 89 (declaration)



<<<<<<< HEAD
state 1128
=======
state 1171
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1120



state 1129
=======
    CLOSE_PAR	shift, and go to state 1163



state 1172
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1123



state 1130
=======
    CLOSE_PAR	shift, and go to state 1166



state 1173
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1124



state 1131
=======
    CLOSE_PAR	shift, and go to state 1167



state 1174
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1125



state 1132
=======
    CLOSE_PAR	shift, and go to state 1168



state 1175
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

<<<<<<< HEAD
    INTLITERAL	shift, and go to state 1142



state 1133
=======
    INTLITERAL	shift, and go to state 1185



state 1176
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1138
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1129

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 1143
=======
    ari_exp	go to state 1186
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 1134
=======
state 1177
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1139
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1130

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    OPEN_MPAR	shift, and go to state 1140



state 1131

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 1144
=======
    ari_exp	go to state 1187
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 1135
=======
state 1178
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 1145



state 1136
=======
    OPEN_MPAR	shift, and go to state 1188



state 1179
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1141
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
=======
    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 1146
=======
    ari_exp	go to state 1189
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 1132

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
=======
<<<<<<< HEAD
state 1137
=======
state 1180
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1142
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
=======
    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 1147
=======
    ari_exp	go to state 1190
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 1133

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    OPEN_MPAR	shift, and go to state 1143



state 1134

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    OPEN_MPAR	shift, and go to state 1144



state 1135

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    OPEN_MPAR	shift, and go to state 1145



state 1136

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1146



state 1137

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1136



state 1138

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 130)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1147
    ari_operator	go to state 239



state 1139

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 128)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1148
    ari_operator	go to state 239



state 1140

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
=======
<<<<<<< HEAD
state 1138
=======
state 1181
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 1148



state 1139
=======
    OPEN_MPAR	shift, and go to state 1191



state 1182
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 1149



state 1140
=======
    OPEN_MPAR	shift, and go to state 1192



state 1183
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 1150



state 1141
=======
    OPEN_MPAR	shift, and go to state 1193



state 1184
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1151



state 1142
=======
    CLOSE_PAR	shift, and go to state 1194



state 1185
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

<<<<<<< HEAD
    CLOSE_PAR	shift, and go to state 1141



state 1143
=======
    CLOSE_PAR	shift, and go to state 1184



state 1186
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 131)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    COMMA	shift, and go to state 559
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 1152
    ari_operator	go to state 250



state 1144
=======
    option_ari_exp	go to state 1195
    ari_operator	go to state 244



state 1187
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 129)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    COMMA	shift, and go to state 559
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 1153
    ari_operator	go to state 250



state 1145
=======
    option_ari_exp	go to state 1196
    ari_operator	go to state 244



state 1188
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1149
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
=======
    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 1154
=======
    ari_exp	go to state 1197
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 1141

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 124)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1150
    ari_operator	go to state 239



state 1142

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 122)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1151
    ari_operator	go to state 239



state 1143

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
=======
<<<<<<< HEAD
state 1146
=======
state 1189
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 125)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    COMMA	shift, and go to state 559
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 1155
    ari_operator	go to state 250



state 1147
=======
    option_ari_exp	go to state 1198
    ari_operator	go to state 244



state 1190
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 123)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    COMMA	shift, and go to state 559
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 1156
    ari_operator	go to state 250



state 1148
=======
    option_ari_exp	go to state 1199
    ari_operator	go to state 244



state 1191
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1152
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
=======
    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 1157
=======
    ari_exp	go to state 1200
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 1144

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
=======
<<<<<<< HEAD
state 1149
=======
state 1192
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1153
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
=======
    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 1158
=======
    ari_exp	go to state 1201
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 1145

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
=======
<<<<<<< HEAD
state 1150
=======
state 1193
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1154
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108

<<<<<<< HEAD
=======
    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 1159
=======
    ari_exp	go to state 1202
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd


state 1146

<<<<<<< HEAD
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    OPEN_MPAR	shift, and go to state 1155



state 1147

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 130)

    CLOSE_MPAR	shift, and go to state 1156



state 1148

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 128)

    CLOSE_MPAR	shift, and go to state 1157



state 1149

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 129)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1158
    ari_operator	go to state 239



state 1150

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 124)

    CLOSE_MPAR	shift, and go to state 1159



state 1151

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 122)

    CLOSE_MPAR	shift, and go to state 1160



state 1152

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 123)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1161
    ari_operator	go to state 239



state 1153

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 127)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1162
    ari_operator	go to state 239



state 1154

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 125)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1163
    ari_operator	go to state 239



state 1155

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
=======
<<<<<<< HEAD
state 1151
=======
state 1194
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

<<<<<<< HEAD
    OPEN_MPAR	shift, and go to state 1160



state 1152
=======
    OPEN_MPAR	shift, and go to state 1203



state 1195
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 131)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1161



state 1153
=======
    CLOSE_MPAR	shift, and go to state 1204



state 1196
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 129)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1162



state 1154
=======
    CLOSE_MPAR	shift, and go to state 1205



state 1197
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 130)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    COMMA	shift, and go to state 559
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 1163
    ari_operator	go to state 250



state 1155
=======
    option_ari_exp	go to state 1206
    ari_operator	go to state 244



state 1198
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 125)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1164



state 1156
=======
    CLOSE_MPAR	shift, and go to state 1207



state 1199
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 123)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1165



state 1157
=======
    CLOSE_MPAR	shift, and go to state 1208



state 1200
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 124)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    COMMA	shift, and go to state 559
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 1166
    ari_operator	go to state 250



state 1158
=======
    option_ari_exp	go to state 1209
    ari_operator	go to state 244



state 1201
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 128)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    COMMA	shift, and go to state 559
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 1167
    ari_operator	go to state 250



state 1159
=======
    option_ari_exp	go to state 1210
    ari_operator	go to state 244



state 1202
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 126)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    COMMA	shift, and go to state 559
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 1168
    ari_operator	go to state 250



state 1160
=======
    option_ari_exp	go to state 1211
    ari_operator	go to state 244



state 1203
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
<<<<<<< HEAD
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1164
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1156

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 130)

    $default	reduce using rule 130 (leftaddrshift)



state 1157

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 128)

    $default	reduce using rule 128 (leftaddrshift)



state 1158

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 129)

    CLOSE_MPAR	shift, and go to state 1165



state 1159

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 124)

    $default	reduce using rule 124 (leftaddrshift)



state 1160

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 122)

    $default	reduce using rule 122 (leftaddrshift)



state 1161

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 123)

    CLOSE_MPAR	shift, and go to state 1166



state 1162

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 127)

    CLOSE_MPAR	shift, and go to state 1167



state 1163

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 125)

    CLOSE_MPAR	shift, and go to state 1168



state 1164

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 126)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1169
    ari_operator	go to state 239



state 1165

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 129)

    $default	reduce using rule 129 (leftaddrshift)



state 1166

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 123)

    $default	reduce using rule 123 (leftaddrshift)



state 1167

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 127)

    $default	reduce using rule 127 (leftaddrshift)



state 1168

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 125)

    $default	reduce using rule 125 (leftaddrshift)



state 1169

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 126)

    CLOSE_MPAR	shift, and go to state 1170



state 1170

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 126)

    $default	reduce using rule 126 (leftaddrshift)
=======
    INTLITERAL	shift, and go to state 94
    FLOATLITERAL	shift, and go to state 95
    CHARLITERAL	shift, and go to state 96

    function	go to state 97
    array	go to state 98
    point_exp	go to state 99
<<<<<<< HEAD
    ari_exp	go to state 1169
=======
    ari_exp	go to state 1212
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
    simple_ari_exp	go to state 101
    member_in_exp	go to state 102
    address_exp	go to state 103
    type_cast	go to state 104
    identifier	go to state 105
    intliteral	go to state 106
    charliteral	go to state 107
    floatliteral	go to state 108
    struct_member_exp	go to state 109



<<<<<<< HEAD
state 1161
=======
state 1204
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 131)

    $default	reduce using rule 131 (leftaddrshift)



<<<<<<< HEAD
state 1162
=======
state 1205
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 129)

    $default	reduce using rule 129 (leftaddrshift)



<<<<<<< HEAD
state 1163
=======
state 1206
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 130)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1170



state 1164
=======
    CLOSE_MPAR	shift, and go to state 1213



state 1207
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 125)

    $default	reduce using rule 125 (leftaddrshift)



<<<<<<< HEAD
state 1165
=======
state 1208
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 123)

    $default	reduce using rule 123 (leftaddrshift)



<<<<<<< HEAD
state 1166
=======
state 1209
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 124)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1171



state 1167
=======
    CLOSE_MPAR	shift, and go to state 1214



state 1210
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 128)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1172



state 1168
=======
    CLOSE_MPAR	shift, and go to state 1215



state 1211
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 126)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1173



state 1169
=======
    CLOSE_MPAR	shift, and go to state 1216



state 1212
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 127)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 160)

<<<<<<< HEAD
    COMMA	shift, and go to state 559
    ADD 	shift, and go to state 248
    SUB 	shift, and go to state 249
=======
    COMMA	shift, and go to state 551
    ADD 	shift, and go to state 242
    SUB 	shift, and go to state 243
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    $default	reduce using rule 150 (option_ari_exp)

<<<<<<< HEAD
    option_ari_exp	go to state 1174
    ari_operator	go to state 250



state 1170
=======
    option_ari_exp	go to state 1217
    ari_operator	go to state 244



state 1213
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 130)

    $default	reduce using rule 130 (leftaddrshift)



<<<<<<< HEAD
state 1171
=======
state 1214
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 124)

    $default	reduce using rule 124 (leftaddrshift)



<<<<<<< HEAD
state 1172
=======
state 1215
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 128)

    $default	reduce using rule 128 (leftaddrshift)



<<<<<<< HEAD
state 1173
=======
state 1216
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 126)

    $default	reduce using rule 126 (leftaddrshift)



<<<<<<< HEAD
state 1174
=======
state 1217
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 127)

<<<<<<< HEAD
    CLOSE_MPAR	shift, and go to state 1175



state 1175
=======
    CLOSE_MPAR	shift, and go to state 1218



state 1218
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 127)

    $default	reduce using rule 127 (leftaddrshift)



<<<<<<< HEAD
state 1176

    $   	go to state 1177


>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

state 1177

    $   	go to state 1178


<<<<<<< HEAD
state 1171
=======

state 1178
=======
state 1219
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $   	go to state 1172



state 1172

    $   	go to state 1173



<<<<<<< HEAD
state 1173
=======
state 1221
>>>>>>> c24333976bb04f268c2eb0d07c7b929753fa3d01
>>>>>>> 13d38610e489529e7c37773832b25d05ba23aecd

    $default	accept
