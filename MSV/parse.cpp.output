Useless nonterminals:

   option_array_declaration
   inner_option_array_declaration


Terminals which are not used:

   POINTERDECLARATION
   LISTDECLARATION
   FUNCTION
   OVER
   CYLINDER
   OVEREP
   NON_DETERMINED
   SEND
   RECEIVE
   PROCESS
   CHANNEL
   PUT
   GET
   ERROR_TOKEN
   STRFUNCHEAD
   STRFUNCTAIL
   STRFUNCCAT
   STRFUNCCMP
   STRFUNCCPY
   STRFUNCLEN
   PREFIX


Useless rules:

#110   option_array_declaration :	 ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#111   inner_option_array_declaration :	 COMMA ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#112   inner_option_array_declaration :	;
#113   inner_option_array_declaration :	 COMMA error;


Conflict in state 84 between rule 13 and token CHOP resolved as reduce.
Conflict in state 84 between rule 13 and token IFF resolved as reduce.
Conflict in state 84 between rule 13 and token PROPIMPLY resolved as reduce.
Conflict in state 84 between rule 13 and token OR resolved as reduce.
Conflict in state 84 between rule 13 and token AND resolved as reduce.
Conflict in state 84 between rule 13 and token CHOPSTAR resolved as an error.
Conflict in state 85 between rule 22 and token CHOP resolved as reduce.
Conflict in state 85 between rule 22 and token IFF resolved as reduce.
Conflict in state 85 between rule 22 and token PROPIMPLY resolved as reduce.
Conflict in state 85 between rule 22 and token OR resolved as reduce.
Conflict in state 85 between rule 22 and token AND resolved as reduce.
Conflict in state 85 between rule 22 and token CHOPSTAR resolved as an error.
Conflict in state 108 between rule 21 and token CHOP resolved as reduce.
Conflict in state 108 between rule 21 and token IFF resolved as reduce.
Conflict in state 108 between rule 21 and token PROPIMPLY resolved as reduce.
Conflict in state 108 between rule 21 and token OR resolved as reduce.
Conflict in state 108 between rule 21 and token AND resolved as reduce.
Conflict in state 108 between rule 21 and token CHOPSTAR resolved as an error.
Conflict in state 109 between rule 10 and token CHOP resolved as reduce.
Conflict in state 109 between rule 10 and token IFF resolved as reduce.
Conflict in state 109 between rule 10 and token PROPIMPLY resolved as reduce.
Conflict in state 109 between rule 10 and token OR resolved as reduce.
Conflict in state 109 between rule 10 and token AND resolved as reduce.
Conflict in state 109 between rule 10 and token CHOPSTAR resolved as an error.
Conflict in state 110 between rule 9 and token CHOP resolved as reduce.
Conflict in state 110 between rule 9 and token IFF resolved as reduce.
Conflict in state 110 between rule 9 and token PROPIMPLY resolved as reduce.
Conflict in state 110 between rule 9 and token OR resolved as reduce.
Conflict in state 110 between rule 9 and token AND resolved as reduce.
Conflict in state 110 between rule 9 and token CHOPSTAR resolved as an error.
Conflict in state 111 between rule 20 and token CHOP resolved as reduce.
Conflict in state 111 between rule 20 and token IFF resolved as reduce.
Conflict in state 111 between rule 20 and token PROPIMPLY resolved as reduce.
Conflict in state 111 between rule 20 and token OR resolved as reduce.
Conflict in state 111 between rule 20 and token AND resolved as reduce.
Conflict in state 111 between rule 20 and token CHOPSTAR resolved as an error.
Conflict in state 112 between rule 12 and token CHOP resolved as reduce.
Conflict in state 112 between rule 12 and token IFF resolved as reduce.
Conflict in state 112 between rule 12 and token PROPIMPLY resolved as reduce.
Conflict in state 112 between rule 12 and token OR resolved as reduce.
Conflict in state 112 between rule 12 and token AND resolved as reduce.
Conflict in state 112 between rule 12 and token CHOPSTAR resolved as an error.
Conflict in state 113 between rule 11 and token CHOP resolved as reduce.
Conflict in state 113 between rule 11 and token IFF resolved as reduce.
Conflict in state 113 between rule 11 and token PROPIMPLY resolved as reduce.
Conflict in state 113 between rule 11 and token OR resolved as reduce.
Conflict in state 113 between rule 11 and token AND resolved as reduce.
Conflict in state 113 between rule 11 and token CHOPSTAR resolved as an error.
Conflict in state 231 between rule 211 and token IMPLY resolved as reduce.
Conflict in state 234 between rule 210 and token IMPLY resolved as reduce.
Conflict in state 257 between rule 8 and token CHOP resolved as reduce.
Conflict in state 257 between rule 8 and token IFF resolved as shift.
Conflict in state 257 between rule 8 and token PROPIMPLY resolved as shift.
Conflict in state 257 between rule 8 and token OR resolved as shift.
Conflict in state 257 between rule 8 and token AND resolved as shift.
Conflict in state 257 between rule 8 and token CHOPSTAR resolved as shift.
Conflict in state 258 between rule 6 and token CHOP resolved as reduce.
Conflict in state 258 between rule 6 and token IFF resolved as reduce.
Conflict in state 258 between rule 6 and token PROPIMPLY resolved as reduce.
Conflict in state 258 between rule 6 and token OR resolved as shift.
Conflict in state 258 between rule 6 and token AND resolved as shift.
Conflict in state 258 between rule 6 and token CHOPSTAR resolved as shift.
Conflict in state 259 between rule 7 and token CHOP resolved as reduce.
Conflict in state 259 between rule 7 and token IFF resolved as reduce.
Conflict in state 259 between rule 7 and token PROPIMPLY resolved as reduce.
Conflict in state 259 between rule 7 and token OR resolved as shift.
Conflict in state 259 between rule 7 and token AND resolved as shift.
Conflict in state 259 between rule 7 and token CHOPSTAR resolved as shift.
Conflict in state 260 between rule 5 and token CHOP resolved as reduce.
Conflict in state 260 between rule 5 and token IFF resolved as reduce.
Conflict in state 260 between rule 5 and token PROPIMPLY resolved as reduce.
Conflict in state 260 between rule 5 and token OR resolved as reduce.
Conflict in state 260 between rule 5 and token AND resolved as shift.
Conflict in state 260 between rule 5 and token CHOPSTAR resolved as shift.
Conflict in state 261 between rule 4 and token CHOP resolved as reduce.
Conflict in state 261 between rule 4 and token IFF resolved as reduce.
Conflict in state 261 between rule 4 and token PROPIMPLY resolved as reduce.
Conflict in state 261 between rule 4 and token OR resolved as reduce.
Conflict in state 261 between rule 4 and token AND resolved as reduce.
Conflict in state 261 between rule 4 and token CHOPSTAR resolved as shift.
Conflict in state 267 between rule 240 and token OR resolved as reduce.
Conflict in state 267 between rule 240 and token AND resolved as reduce.
Conflict in state 328 between rule 335 and token OR resolved as reduce.
Conflict in state 328 between rule 335 and token AND resolved as reduce.
Conflict in state 378 between rule 32 and token CHOP resolved as reduce.
Conflict in state 378 between rule 32 and token OR resolved as shift.
Conflict in state 378 between rule 32 and token PARALLEL resolved as shift.
Conflict in state 378 between rule 32 and token AND resolved as shift.
Conflict in state 379 between rule 31 and token CHOP resolved as reduce.
Conflict in state 379 between rule 31 and token OR resolved as reduce.
Conflict in state 379 between rule 31 and token PARALLEL resolved as reduce.
Conflict in state 379 between rule 31 and token AND resolved as shift.
Conflict in state 380 between rule 53 and token CHOP resolved as reduce.
Conflict in state 380 between rule 53 and token OR resolved as reduce.
Conflict in state 380 between rule 53 and token PARALLEL resolved as reduce.
Conflict in state 380 between rule 53 and token AND resolved as shift.
Conflict in state 381 between rule 30 and token CHOP resolved as reduce.
Conflict in state 381 between rule 30 and token OR resolved as reduce.
Conflict in state 381 between rule 30 and token PARALLEL resolved as reduce.
Conflict in state 381 between rule 30 and token AND resolved as reduce.
Conflict in state 448 between rule 242 and token OR resolved as reduce.
Conflict in state 448 between rule 242 and token AND resolved as shift.
Conflict in state 449 between rule 241 and token OR resolved as reduce.
Conflict in state 449 between rule 241 and token AND resolved as reduce.
Conflict in state 514 between rule 337 and token OR resolved as reduce.
Conflict in state 514 between rule 337 and token AND resolved as shift.
Conflict in state 515 between rule 336 and token OR resolved as reduce.
Conflict in state 515 between rule 336 and token AND resolved as reduce.
Conflict in state 666 between rule 195 and token CON resolved as reduce.
State 65 contains 2 shift/reduce conflicts.
State 96 contains 2 shift/reduce conflicts.
State 97 contains 2 shift/reduce conflicts.
State 99 contains 14 shift/reduce conflicts.
State 103 contains 2 shift/reduce conflicts.
State 121 contains 2 shift/reduce conflicts.
State 153 contains 3 reduce/reduce conflicts.
State 155 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 156 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 157 contains 1 shift/reduce conflict.
State 159 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 161 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 162 contains 1 shift/reduce conflict.
State 166 contains 2 reduce/reduce conflicts.
State 167 contains 2 reduce/reduce conflicts.
State 191 contains 1 shift/reduce conflict.
State 224 contains 1 shift/reduce conflict.
State 225 contains 1 shift/reduce conflict.
State 227 contains 1 shift/reduce conflict.
State 228 contains 1 shift/reduce conflict.
State 229 contains 1 shift/reduce conflict.
State 231 contains 1 shift/reduce conflict.
State 234 contains 1 shift/reduce conflict.
State 265 contains 1 shift/reduce conflict.
State 268 contains 2 shift/reduce conflicts.
State 269 contains 2 shift/reduce conflicts.
State 289 contains 1 shift/reduce conflict.
State 290 contains 1 shift/reduce conflict.
State 291 contains 1 shift/reduce conflict.
State 292 contains 1 shift/reduce conflict.
State 309 contains 1 shift/reduce conflict.
State 318 contains 1 shift/reduce conflict.
State 319 contains 1 shift/reduce conflict.
State 320 contains 1 shift/reduce conflict.
State 326 contains 1 shift/reduce conflict.
State 353 contains 1 shift/reduce conflict.
State 354 contains 1 shift/reduce conflict.
State 356 contains 1 shift/reduce conflict.
State 357 contains 1 shift/reduce conflict.
State 361 contains 1 shift/reduce conflict.
State 362 contains 1 shift/reduce conflict.
State 387 contains 2 shift/reduce conflicts.
State 388 contains 2 shift/reduce conflicts.
State 390 contains 2 shift/reduce conflicts.
State 391 contains 2 shift/reduce conflicts.
State 392 contains 2 shift/reduce conflicts.
State 393 contains 2 shift/reduce conflicts.
State 394 contains 2 shift/reduce conflicts.
State 395 contains 2 shift/reduce conflicts.
State 400 contains 2 shift/reduce conflicts.
State 401 contains 2 shift/reduce conflicts.
State 403 contains 2 shift/reduce conflicts.
State 404 contains 2 shift/reduce conflicts.
State 427 contains 1 shift/reduce conflict.
State 434 contains 8 shift/reduce conflicts.
State 436 contains 2 shift/reduce conflicts.
State 481 contains 1 shift/reduce conflict.
State 482 contains 1 shift/reduce conflict.
State 483 contains 1 shift/reduce conflict.
State 501 contains 1 shift/reduce conflict and 2 reduce/reduce conflicts.
State 502 contains 1 shift/reduce conflict and 2 reduce/reduce conflicts.
State 506 contains 1 shift/reduce conflict.
State 527 contains 1 shift/reduce conflict.
State 528 contains 1 shift/reduce conflict.
State 529 contains 1 shift/reduce conflict.
State 533 contains 1 shift/reduce conflict.
State 555 contains 1 shift/reduce conflict.
State 580 contains 3 shift/reduce conflicts.
State 583 contains 10 shift/reduce conflicts.
State 678 contains 2 shift/reduce conflicts.
State 679 contains 2 shift/reduce conflicts.
State 691 contains 1 shift/reduce conflict and 2 reduce/reduce conflicts.
State 692 contains 1 shift/reduce conflict and 2 reduce/reduce conflicts.
State 708 contains 1 shift/reduce conflict.
State 709 contains 1 shift/reduce conflict.
State 714 contains 2 shift/reduce conflicts.
State 715 contains 2 shift/reduce conflicts.
State 717 contains 2 shift/reduce conflicts.
State 718 contains 2 shift/reduce conflicts.
State 812 contains 1 shift/reduce conflict.
State 813 contains 1 shift/reduce conflict.
State 815 contains 1 shift/reduce conflict.
State 816 contains 1 shift/reduce conflict.
State 817 contains 1 shift/reduce conflict.
State 818 contains 1 shift/reduce conflict.
State 830 contains 2 shift/reduce conflicts.
State 839 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 845 contains 1 shift/reduce conflict.
State 854 contains 2 shift/reduce conflicts.
State 857 contains 8 shift/reduce conflicts.
State 917 contains 1 shift/reduce conflict.
State 919 contains 1 shift/reduce conflict.
State 920 contains 1 shift/reduce conflict.
State 922 contains 1 shift/reduce conflict.
State 996 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 997 contains 1 shift/reduce conflict.
State 998 contains 1 shift/reduce conflict.
State 1092 contains 1 shift/reduce conflict.
State 1093 contains 1 shift/reduce conflict.
State 1097 contains 1 shift/reduce conflict.
State 1098 contains 1 shift/reduce conflict.
State 1126 contains 1 shift/reduce conflict.
State 1129 contains 1 shift/reduce conflict.
State 1131 contains 1 shift/reduce conflict.
State 1132 contains 1 shift/reduce conflict.
State 1156 contains 1 shift/reduce conflict.

Grammar
rule 1    program -> gComplexProposition statement
rule 2    gComplexProposition -> PBEGIN complexProposition PEND
rule 3    gComplexProposition ->		/* empty */
rule 4    complexProposition -> complexProposition AND complexProposition
rule 5    complexProposition -> complexProposition OR complexProposition
rule 6    complexProposition -> complexProposition IFF complexProposition
rule 7    complexProposition -> complexProposition PROPIMPLY complexProposition
rule 8    complexProposition -> complexProposition CHOP complexProposition
rule 9    complexProposition -> ALWAYS complexProposition
rule 10   complexProposition -> KEEP complexProposition
rule 11   complexProposition -> SOMETIMES complexProposition
rule 12   complexProposition -> W_NEXT complexProposition
rule 13   complexProposition -> NEXT complexProposition
rule 14   complexProposition -> SKIP
rule 15   complexProposition -> MY_TRUE
rule 16   complexProposition -> MY_FALSE
rule 17   complexProposition -> LENGTH ari_exp
rule 18   complexProposition -> EMPTY
rule 19   complexProposition -> MORE
rule 20   complexProposition -> HALT complexProposition
rule 21   complexProposition -> FINAL complexProposition
rule 22   complexProposition -> NEGATION complexProposition
rule 23   complexProposition -> OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR
rule 24   complexProposition -> ID
rule 25   complexProposition -> DEFINE ID COLON prime_bool_exp
rule 26   complexProposition -> complexProposition CHOPSTAR
rule 27   complexProposition -> OPEN_PAR complexProposition CLOSE_PAR
rule 28   poptional_projection -> COMMA complexProposition poptional_projection
rule 29   poptional_projection ->		/* empty */
rule 30   statement -> statement AND statement
rule 31   statement -> statement OR statement
rule 32   statement -> statement CHOP statement
rule 33   statement -> ass_statement
rule 34   statement -> sign_declaration
rule 35   statement -> if_statement
rule 36   statement -> while_statement
rule 37   statement -> for_statement
rule 38   statement -> extend_for_statement
rule 39   statement -> NEXT OPEN_PAR statement CLOSE_PAR
rule 40   statement -> KEEP OPEN_PAR statement CLOSE_PAR
rule 41   statement -> ALWAYS OPEN_PAR statement CLOSE_PAR
rule 42   statement -> AWAIT OPEN_PAR bool_exp CLOSE_PAR
rule 43   statement -> REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR
rule 44   statement -> SKIP
rule 45   statement -> EMPTY
rule 46   statement -> MORE
rule 47   statement -> LENGTH OPEN_PAR ari_exp CLOSE_PAR
rule 48   statement -> input_statement
rule 49   statement -> output_statement
rule 50   statement -> TRUE
rule 51   statement -> FALSE
rule 52   statement -> FINAL OPEN_PAR statement CLOSE_PAR
rule 53   statement -> statement PARALLEL statement
rule 54   statement -> OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR
rule 55   statement -> FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR
rule 56   statement -> OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar
rule 57   statement -> OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar
rule 58   statement -> DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR
rule 59   statement -> struct_define_statement
rule 60   statement -> function_define
rule 61   statement -> function
rule 62   statement -> EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR
rule 63   statement -> OPEN_PAR statement CLOSE_PAR
rule 64   option_struct_declaration -> sign_declaration
rule 65   option_struct_declaration -> sign_declaration AND option_struct_declaration
rule 66   empty_statement -> statement
rule 67   empty_statement ->		/* empty */
rule 68   function_define -> all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 69   function_define -> all_type_define MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 70   function_define -> all_type_define MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 71   function_define -> STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 72   function_define -> STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 73   function_define -> STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 74   function -> ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 75   function -> EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 76   function -> array OPEN_PAR option_function_identifier CLOSE_PAR
rule 77   struct_define_statement -> struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR
rule 78   struct_identifier -> STRUCT ID
rule 79   struct_identifier -> UNION ID
rule 80   sign_declaration -> SIGNED declaration
rule 81   sign_declaration -> UNSIGNED declaration
rule 82   sign_declaration -> declaration
rule 83   declaration -> type_define option_identifier_array_declaration
rule 84   declaration -> STRUCT_TYPE option_identifier_array_declaration
rule 85   declaration -> STRUCT ID option_identifier_array_declaration
rule 86   declaration -> UNION ID option_identifier_array_declaration
rule 87   declaration -> STRUCT STRUCT_TYPE option_identifier_array_declaration
rule 88   declaration -> UNION STRUCT_TYPE option_identifier_array_declaration
rule 89   declaration -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 90   declaration -> OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 91   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 92   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp
rule 93   type_define -> INTDECLARATION
rule 94   type_define -> FLOATDECLARATION
rule 95   type_define -> CHARDECLARATION
rule 96   type_define -> STRDECLARATION
rule 97   type_define -> VOIDDECLARATION
rule 98   type_define -> FILEDECLARATION
rule 99   option_identifier_array_declaration -> identifier inner_option_identifier_array_declaration
rule 100  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration
rule 101  option_identifier_array_declaration -> identifier ASS_P ass_right inner_option_identifier_array_declaration
rule 102  option_identifier_array_declaration -> ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration
rule 103  option_identifier_array_declaration -> ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration
rule 104  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration
rule 105  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration
rule 106  option_identifier_array_declaration -> MUL option_identifier_array_declaration
rule 107  inner_option_identifier_array_declaration -> COMMA option_identifier_array_declaration
rule 108  inner_option_identifier_array_declaration -> COMMA error
rule 109  inner_option_identifier_array_declaration ->		/* empty */
rule 114  ass_statement -> ass_left assign_operator ass_right
rule 115  ass_left -> identifier
rule 116  ass_left -> struct_member_exp
rule 117  ass_left -> array
rule 118  ass_left -> point_exp
rule 119  ass_left -> OPEN_PAR ass_left CLOSE_PAR
rule 120  ass_left -> NEXT ass_left
rule 121  ass_left -> leftaddrshift
rule 122  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 123  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 124  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 125  leftaddrshift -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 126  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 127  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 128  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 129  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 130  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 131  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 132  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 133  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 134  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 135  assign_operator -> ASS_P
rule 136  assign_operator -> ASS_N
rule 137  ass_right -> ari_exp
rule 138  ass_right -> array_exp
rule 139  ass_right -> strliteral
rule 140  ass_right -> OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function
rule 141  ass_right -> OPEN_PAR ass_right CLOSE_PAR
rule 142  ass_right -> rightaddrshift
rule 143  rightaddrshift -> MUL OPEN_PAR leftaddrshift CLOSE_PAR
rule 144  array -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 145  array -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 146  array -> OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 147  array -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 148  array -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 149  array -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 150  array -> OPEN_PAR array CLOSE_PAR
rule 151  option_ari_exp -> COMMA ari_exp option_ari_exp
rule 152  option_ari_exp -> COMMA error
rule 153  option_ari_exp ->		/* empty */
rule 154  point_exp -> MUL identifier
rule 155  point_exp -> MUL point_exp
rule 156  point_exp -> MUL array
rule 157  point_exp -> OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 158  point_exp -> MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp
rule 159  point_exp -> MUL OPEN_PAR ari_exp CLOSE_PAR
rule 160  point_exp -> OPEN_PAR point_exp CLOSE_PAR
rule 161  ari_exp -> simple_ari_exp
rule 162  ari_exp -> simple_ari_exp relation_operator ari_exp
rule 163  ari_exp -> ari_exp ari_operator simple_ari_exp
rule 164  ari_exp -> IF bool_exp THEN ari_exp option_exp_else_statement
rule 165  type_cast_alg_exp -> simple_ari_exp
rule 166  type_cast_alg_exp -> simple_ari_exp ari_operator simple_ari_exp
rule 167  option_exp_else_statement -> ELSE ari_exp
rule 168  option_exp_else_statement ->		/* empty */
rule 169  simple_ari_exp -> member_in_exp
rule 170  simple_ari_exp -> simple_ari_exp bi_operator member_in_exp
rule 171  member_in_exp -> intliteral
rule 172  member_in_exp -> SUB member_in_exp
rule 173  member_in_exp -> BNE member_in_exp
rule 174  member_in_exp -> POINTERNULL
rule 175  member_in_exp -> floatliteral
rule 176  member_in_exp -> identifier
rule 177  member_in_exp -> array
rule 178  member_in_exp -> point_exp
rule 179  member_in_exp -> function
rule 180  member_in_exp -> OPEN_PAR ari_exp CLOSE_PAR
rule 181  member_in_exp -> charliteral
rule 182  member_in_exp -> address_exp
rule 183  member_in_exp -> type_cast
rule 184  member_in_exp -> struct_member_exp
rule 185  bi_operator -> MUL
rule 186  bi_operator -> DIV
rule 187  bi_operator -> MOD
rule 188  bi_operator -> LST
rule 189  bi_operator -> RST
rule 190  bi_operator -> ADDRESS
rule 191  bi_operator -> INTER_OR
rule 192  bi_operator -> CON
rule 193  ari_operator -> ADD
rule 194  ari_operator -> SUB
rule 195  array_exp -> array_exp CON array_exp
rule 196  array_exp -> option_list_value
rule 197  array_exp -> option_struct_list_value
rule 198  array_exp -> OPEN_PAR array_exp CLOSE_PAR
rule 199  option_list_value -> OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR
rule 200  option_list_value -> OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR
rule 201  option_list_value -> OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR
rule 202  option_struct_list_value -> OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR
rule 203  option_struct_list_value -> OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR
rule 204  option_struct_list_value -> OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR
rule 205  inner_option_list_value -> COMMA ari_exp inner_option_list_value
rule 206  inner_option_list_value -> COMMA strliteral inner_option_list_value
rule 207  inner_option_list_value -> COMMA array_exp inner_option_list_value
rule 208  inner_option_list_value ->		/* empty */
rule 209  inner_option_list_value -> COMMA error
rule 210  address_exp -> ADDRESS identifier
rule 211  address_exp -> ADDRESS array
rule 212  address_exp -> ADDRESS struct_member_exp
rule 213  address_exp -> ADDRESS address_exp
rule 214  address_exp -> OPEN_PAR address_exp CLOSE_PAR
rule 215  type_cast -> OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 216  type_cast -> OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp
rule 217  type_cast -> OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 218  type_cast -> OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 219  type_cast -> OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 220  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 221  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 222  type_cast -> OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element
rule 223  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element
rule 224  type_cast -> OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element
rule 225  type_cast -> OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element
rule 226  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element
rule 227  type_cast -> OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element
rule 228  type_cast -> OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 229  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 230  type_cast -> OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element
rule 231  type_cast -> OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 232  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 233  type_cast -> OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element
rule 234  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 235  type_cast -> OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 236  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 237  type_cast -> OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 238  casted_element -> type_cast_alg_exp
rule 239  bool_exp -> prime_bool_exp
rule 240  bool_exp -> NEGATION bool_exp
rule 241  bool_exp -> bool_exp AND bool_exp
rule 242  bool_exp -> bool_exp OR bool_exp
rule 243  bool_exp -> OPEN_PAR bool_exp CLOSE_PAR
rule 244  prime_bool_exp -> ari_exp relation_operator ari_exp
rule 245  prime_bool_exp -> MY_TRUE
rule 246  prime_bool_exp -> MY_FALSE
rule 247  prime_bool_exp -> ari_exp
rule 248  prime_bool_exp -> ari_exp EQ strliteral
rule 249  prime_bool_exp -> ari_exp NE strliteral
rule 250  prime_bool_exp -> strliteral EQ ari_exp
rule 251  prime_bool_exp -> strliteral NE ari_exp
rule 252  prime_bool_exp -> ari_exp EQ POINTERNULL
rule 253  prime_bool_exp -> ari_exp NE POINTERNULL
rule 254  prime_bool_exp -> POINTERNULL EQ ari_exp
rule 255  prime_bool_exp -> POINTERNULL NE ari_exp
rule 256  prime_bool_exp -> ari_exp EQ charliteral
rule 257  prime_bool_exp -> ari_exp NE charliteral
rule 258  relation_operator -> GE
rule 259  relation_operator -> LE
rule 260  relation_operator -> NE
rule 261  relation_operator -> GT
rule 262  relation_operator -> LT
rule 263  relation_operator -> EQ
rule 264  sign_type_define -> UNSIGNED INTDECLARATION
rule 265  sign_type_define -> UNSIGNED CHARDECLARATION
rule 266  all_type_define -> sign_type_define
rule 267  all_type_define -> type_define
rule 268  option_function_parameter_list -> all_type_define identifier inner_option_define_identifier
rule 269  option_function_parameter_list -> all_type_define inner_option_define_identifier
rule 270  option_function_parameter_list -> STRUCT_TYPE identifier inner_option_define_identifier
rule 271  option_function_parameter_list -> STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 272  option_function_parameter_list -> STRUCT_TYPE MUL MUL identifier inner_option_define_identifier
rule 273  option_function_parameter_list -> STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 274  option_function_parameter_list -> ID identifier inner_option_define_identifier
rule 275  option_function_parameter_list -> ID MUL identifier inner_option_define_identifier
rule 276  option_function_parameter_list -> ID MUL MUL identifier inner_option_define_identifier
rule 277  option_function_parameter_list -> ID identifier ARRAY inner_option_define_identifier
rule 278  option_function_parameter_list -> STRUCT_TYPE inner_option_define_identifier
rule 279  option_function_parameter_list -> STRUCT_TYPE MUL inner_option_define_identifier
rule 280  option_function_parameter_list -> STRUCT_TYPE MUL MUL inner_option_define_identifier
rule 281  option_function_parameter_list -> ID inner_option_define_identifier
rule 282  option_function_parameter_list -> ID MUL inner_option_define_identifier
rule 283  option_function_parameter_list -> ID MUL MUL inner_option_define_identifier
rule 284  option_function_parameter_list -> all_type_define identifier ARRAY inner_option_define_identifier
rule 285  option_function_parameter_list -> all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 286  option_function_parameter_list -> all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 287  option_function_parameter_list -> all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 288  option_function_parameter_list -> all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 289  option_function_parameter_list -> all_type_define MUL identifier inner_option_define_identifier
rule 290  option_function_parameter_list -> all_type_define MUL inner_option_define_identifier
rule 291  option_function_parameter_list -> all_type_define MUL MUL identifier inner_option_define_identifier
rule 292  option_function_parameter_list -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 293  option_function_parameter_list ->		/* empty */
rule 294  inner_option_define_identifier -> COMMA all_type_define identifier inner_option_define_identifier
rule 295  inner_option_define_identifier -> COMMA all_type_define inner_option_define_identifier
rule 296  inner_option_define_identifier -> COMMA ID identifier inner_option_define_identifier
rule 297  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier inner_option_define_identifier
rule 298  inner_option_define_identifier -> COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 299  inner_option_define_identifier -> COMMA ID identifier ARRAY inner_option_define_identifier
rule 300  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 301  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY inner_option_define_identifier
rule 302  inner_option_define_identifier -> COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 303  inner_option_define_identifier -> COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 304  inner_option_define_identifier ->		/* empty */
rule 305  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 306  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 307  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 308  inner_option_define_identifier -> COMMA all_type_define MUL identifier inner_option_define_identifier
rule 309  inner_option_define_identifier -> COMMA all_type_define MUL inner_option_define_identifier
rule 310  inner_option_define_identifier -> COMMA error
rule 311  option_function_identifier -> ass_right inner_option_function_identifier
rule 312  option_function_identifier -> ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 313  option_function_identifier ->		/* empty */
rule 314  option_function_identifier -> ADDRESS error
rule 315  inner_option_function_identifier -> COMMA ass_right inner_option_function_identifier
rule 316  inner_option_function_identifier -> COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 317  inner_option_function_identifier ->		/* empty */
rule 318  inner_option_function_identifier -> COMMA error
rule 319  statement_bpar -> OPEN_BPAR statement CLOSE_BPAR
rule 320  statement_bpar -> error CLOSE_BPAR
rule 321  bool_par -> OPEN_PAR bool_exp CLOSE_PAR
rule 322  bool_par -> error CLOSE_PAR
rule 323  identifier -> ID
rule 324  identifier -> OPEN_PAR identifier CLOSE_PAR
rule 325  strliteral -> STRLITERAL
rule 326  intliteral -> INTLITERAL
rule 327  charliteral -> CHARLITERAL
rule 328  floatliteral -> FLOATLITERAL
rule 329  option_frame_identifier -> COMMA identifier option_frame_identifier
rule 330  option_frame_identifier ->		/* empty */
rule 331  option_frame_identifier -> COMMA error
rule 332  option_projection ->		/* empty */
rule 333  option_projection -> COMMA statement option_projection
rule 334  imply_pre -> prime_bool_exp
rule 335  imply_pre -> NEGATION imply_pre
rule 336  imply_pre -> imply_pre AND imply_pre
rule 337  imply_pre -> imply_pre OR imply_pre
rule 338  imply_pre -> OPEN_PAR imply_pre CLOSE_PAR
rule 339  while_statement -> WHILE bool_par statement_bpar
rule 340  for_statement -> FOR ari_exp TIMES DO statement_bpar
rule 341  extend_for_statement -> FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar
rule 342  for_sta_init -> ass_statement
rule 343  for_sta_init -> declaration
rule 344  for_sta_init ->		/* empty */
rule 345  for_sta_condition -> bool_exp
rule 346  for_sta_condition ->		/* empty */
rule 347  for_sta_control -> ass_statement
rule 348  for_sta_control ->		/* empty */
rule 349  if_statement -> IF bool_exp THEN statement_bpar option_else_statement
rule 350  option_else_statement -> ELSE statement_bpar
rule 351  option_else_statement ->		/* empty */
rule 352  output_statement -> DISPLAY OPEN_PAR ass_right CLOSE_PAR
rule 353  output_statement -> DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR
rule 354  option_output ->		/* empty */
rule 355  option_output -> COMMA ass_right option_output
rule 356  input_statement -> REQUEST OPEN_PAR identifier CLOSE_PAR
rule 357  input_statement -> REQUEST OPEN_PAR identifier option_input CLOSE_PAR
rule 358  input_statement -> REQUEST OPEN_PAR array CLOSE_PAR
rule 359  input_statement -> REQUEST OPEN_PAR array option_input CLOSE_PAR
rule 360  input_statement -> REQUEST OPEN_PAR struct_member_exp CLOSE_PAR
rule 361  option_input ->		/* empty */
rule 362  option_input -> COMMA identifier option_input
rule 363  option_input -> COMMA array option_input
rule 364  struct_member_exp -> identifier DOT identifier option_struct_member_exp
rule 365  struct_member_exp -> array DOT identifier option_struct_member_exp
rule 366  struct_member_exp -> point_exp DOT identifier option_struct_member_exp
rule 367  struct_member_exp -> identifier DOT array option_struct_member_exp
rule 368  struct_member_exp -> array DOT array option_struct_member_exp
rule 369  struct_member_exp -> point_exp DOT array option_struct_member_exp
rule 370  struct_member_exp -> identifier IMPLY identifier option_struct_member_exp
rule 371  struct_member_exp -> array IMPLY identifier option_struct_member_exp
rule 372  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp
rule 373  struct_member_exp -> point_exp IMPLY identifier option_struct_member_exp
rule 374  struct_member_exp -> identifier IMPLY array option_struct_member_exp
rule 375  struct_member_exp -> array IMPLY array option_struct_member_exp
rule 376  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp
rule 377  struct_member_exp -> identifier DOT function
rule 378  struct_member_exp -> identifier IMPLY function
rule 379  struct_member_exp -> point_exp IMPLY array option_struct_member_exp
rule 380  struct_member_exp -> OPEN_PAR struct_member_exp CLOSE_PAR
rule 381  option_struct_member_exp ->		/* empty */
rule 382  option_struct_member_exp -> DOT identifier option_struct_member_exp
rule 383  option_struct_member_exp -> DOT array option_struct_member_exp
rule 384  option_struct_member_exp -> IMPLY identifier option_struct_member_exp
rule 385  option_struct_member_exp -> IMPLY array option_struct_member_exp
rule 386  option_struct_member_exp -> DOT function
rule 387  option_struct_member_exp -> IMPLY function

Terminals, with rules where they appear

$ (-1)
error (256) 108 113 152 209 310 314 318 320 322 331
IF (258) 164 349
ELSE (259) 167 350
EMPTY (260) 18 45
AWAIT (261) 42
PROJECTION (262) 23 56 57
PBEGIN (263) 2
PEND (264) 2
POINTERNULL (265) 174 252 253 254 255
ARRAY (266) 102 103 273 277 284 285 288 299 300 301 302 307
STRUCT (267) 71 72 73 78 85 87 234 236
DOT (268) 364 365 366 367 368 369 377 382 383 386
UNION (269) 79 86 88
FILEDECLARATION (270) 98
MORE (271) 19 46
DEFINE (272) 25 58
MY_TRUE (273) 15 245
MY_FALSE (274) 16 246
EXIST (275) 62
FRAME (276) 55
FOR (277) 340 341
WHILE (278) 339
DO (279) 340
TRUE (280) 50
FALSE (281) 51
REPEAT (282) 43
UNTIL (283) 43
DISPLAY (284) 352 353
SKIP (285) 14 44
THEN (286) 164 349
COMMA (287) 28 107 108 111 113 151 152 205 206 207 209 287 294 295
    296 297 298 299 300 301 302 303 305 306 307 308 309 310 315 316
    318 329 331 333 341 355 362 363
COLON (288) 25 62
INTDECLARATION (289) 93 124 128 131 132 133 134 145 146 215 218 220
    222 223 228 229 264
STRDECLARATION (290) 96
POINTERDECLARATION (291)
CHARDECLARATION (292) 95 122 123 126 127 128 129 130 131 132 133 148
    149 217 219 221 225 226 231 232 265
VOIDDECLARATION (293) 97 227 233
FLOATDECLARATION (294) 94 125 147 216 224 230
LISTDECLARATION (295)
OPEN_PAR (296) 27 39 40 41 42 43 47 52 54 55 58 63 68 69 70 71 72 73
    74 75 76 89 90 91 92 119 122 123 124 125 126 127 128 129 130 131
    132 133 134 140 141 143 145 146 147 148 149 150 157 158 159 160
    180 198 214 215 216 217 218 219 220 221 222 223 224 225 226 227
    228 229 230 231 232 233 234 235 236 237 243 292 303 312 316 321
    324 338 341 352 353 356 357 358 359 360 372 376 380
CLOSE_PAR (297) 27 39 40 41 42 43 47 52 54 55 58 63 68 69 70 71 72
    73 74 75 76 89 90 91 92 119 122 123 124 125 126 127 128 129 130
    131 132 133 134 140 141 143 145 146 147 148 149 150 157 158 159
    160 180 198 214 215 216 217 218 219 220 221 222 223 224 225 226
    227 228 229 230 231 232 233 234 235 236 237 243 292 303 312 316
    321 322 324 338 341 352 353 356 357 358 359 360 372 376 380
TIMES (298) 340
OPEN_BPAR (299) 23 43 56 57 58 62 68 69 70 71 72 73 77 202 203 204
    319
CLOSE_BPAR (300) 23 43 56 57 58 62 68 69 70 71 72 73 77 202 203 204
    319 320
OPEN_MPAR (301) 54 91 92 100 104 105 110 111 122 123 124 125 126 127
    128 129 130 131 132 133 134 144 145 146 147 148 149 157 199 200
    201 286 287 288 305 306 307
CLOSE_MPAR (302) 54 91 92 100 104 105 110 111 122 123 124 125 126 127
    128 129 130 131 132 133 134 144 145 146 147 148 149 157 199 200
    201 286 287 288 305 306 307
FUNCTION (303)
OVER (304)
CYLINDER (305)
OVEREP (306)
INTER_OR (307) 191
NON_DETERMINED (308)
SEND (309)
RECEIVE (310)
PROCESS (311)
CHANNEL (312)
PUT (313)
GET (314)
ERROR_TOKEN (315)
STRFUNCHEAD (316)
STRFUNCTAIL (317)
STRFUNCCAT (318)
STRFUNCCMP (319)
STRFUNCCPY (320)
STRFUNCLEN (321)
EXTERN (322) 75
UNSIGNED (323) 81 123 127 129 130 131 133 146 149 220 221 223 226 229
    232 264 265
SIGNED (324) 80 218 219
CHOP (325) 8 32
IMPLY (326) 54 370 371 372 373 374 375 376 378 379 384 385 387
IFF (327) 6
PROPIMPLY (328) 7
OR (329) 5 31 242 337
PARALLEL (330) 53
AND (331) 4 30 55 65 241 336
ASS_P (332) 58 92 101 102 103 104 105 135
ASS_N (333) 136
CON (334) 192 195
ADDRESS (335) 190 210 211 212 213 314
NE (336) 249 251 253 255 257 260
EQ (337) 248 250 252 254 256 263
GE (338) 258
LE (339) 259
GT (340) 261
LT (341) 262
LST (342) 188
RST (343) 189
ADD (344) 193
SUB (345) 172 194
MUL (346) 69 70 72 73 89 90 91 92 106 122 123 124 125 126 127 128 129
    130 131 132 133 134 143 145 146 147 148 149 154 155 156 158 159
    185 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236
    237 271 272 275 276 279 280 282 283 285 289 290 291 292 298 302
    303 308 309
DIV (347) 186
MOD (348) 187
BNE (349) 173
CHOPSTAR (350) 26
NEXT (351) 13 39 120
NEGATION (352) 22 240 335
LENGTH (353) 17 47
REQUEST (354) 356 357 358 359 360
FINAL (355) 21 52
KEEP (356) 10 40
ALWAYS (357) 9 41
HALT (358) 20
W_NEXT (359) 12
PREFIX (360)
SOMETIMES (361) 11
ID (362) 24 25 58 68 69 70 71 72 73 74 75 78 79 85 86 91 92 100 102
    103 104 105 110 111 144 145 146 147 148 149 274 275 276 277 281
    282 283 296 299 312 316 323
STRLITERAL (363) 325
STRUCT_TYPE (364) 71 72 73 84 87 88 234 235 236 237 270 271 272 273
    278 279 280 297 298 300
INTLITERAL (365) 122 123 124 125 126 127 128 129 130 131 132 133 134
    326
FLOATLITERAL (366) 328
CHARLITERAL (367) 327

Nonterminals, with rules where they appear

program (113)
    on left: 1
gComplexProposition (114)
    on left: 2 3, on right: 1
complexProposition (115)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27, on right: 2 4 5 6 7 8 9 10 11 12 13 20 21 22 23 26
    27 28
poptional_projection (116)
    on left: 28 29, on right: 23 28
statement (117)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63,
    on right: 1 30 31 32 39 40 41 43 52 53 54 55 56 57 62 63 66 68
    69 70 71 72 73 319 333
option_struct_declaration (118)
    on left: 64 65, on right: 65 77
empty_statement (119)
    on left: 66 67, on right: 58
function_define (120)
    on left: 68 69 70 71 72 73, on right: 60
function (121)
    on left: 74 75 76, on right: 61 140 179 377 378 386 387
struct_define_statement (122)
    on left: 77, on right: 59
struct_identifier (123)
    on left: 78 79, on right: 77
sign_declaration (124)
    on left: 80 81 82, on right: 34 64 65
declaration (125)
    on left: 83 84 85 86 87 88 89 90 91 92, on right: 80 81 82 343
type_define (126)
    on left: 93 94 95 96 97 98, on right: 83 140 267
option_identifier_array_declaration (127)
    on left: 99 100 101 102 103 104 105 106, on right: 83 84 85 86
    87 88 106 107
inner_option_identifier_array_declaration (128)
    on left: 107 108 109, on right: 99 100 101 102 103 104 105
ass_statement (129)
    on left: 114, on right: 33 342 347
ass_left (130)
    on left: 115 116 117 118 119 120 121, on right: 114 119 120
leftaddrshift (131)
    on left: 122 123 124 125 126 127 128 129 130 131 132 133 134,
    on right: 121 143
assign_operator (132)
    on left: 135 136, on right: 114
ass_right (133)
    on left: 137 138 139 140 141 142, on right: 101 114 141 311 315
    352 353 355
rightaddrshift (134)
    on left: 143, on right: 142
array (135)
    on left: 144 145 146 147 148 149 150, on right: 76 117 150 156
    177 211 358 359 363 365 367 368 369 371 374 375 376 379 383 385
option_ari_exp (136)
    on left: 151 152 153, on right: 91 92 100 104 105 110 111 122 123
    124 125 126 127 128 129 130 131 132 133 134 144 145 146 147 148
    149 151 157
point_exp (137)
    on left: 154 155 156 157 158 159 160, on right: 118 155 157 160
    178 366 369 373 379
ari_exp (138)
    on left: 161 162 163 164, on right: 17 47 91 92 100 104 105 110
    111 122 123 124 125 126 127 128 129 130 131 132 133 134 137 144
    145 146 147 148 149 151 157 158 159 162 163 164 167 180 199 202
    205 244 247 248 249 250 251 252 253 254 255 256 257 286 287 288
    305 306 307 340
type_cast_alg_exp (139)
    on left: 165 166, on right: 215 216 217 218 219 220 221 238
option_exp_else_statement (140)
    on left: 167 168, on right: 164
simple_ari_exp (141)
    on left: 169 170, on right: 161 162 163 165 166 170
member_in_exp (142)
    on left: 171 172 173 174 175 176 177 178 179 180 181 182 183 184
   , on right: 169 170 172 173
bi_operator (143)
    on left: 185 186 187 188 189 190 191 192, on right: 170
ari_operator (144)
    on left: 193 194, on right: 163 166
array_exp (145)
    on left: 195 196 197 198, on right: 92 102 104 138 195 198 201
    204 207
option_list_value (146)
    on left: 199 200 201, on right: 196
option_struct_list_value (147)
    on left: 202 203 204, on right: 197
inner_option_list_value (148)
    on left: 205 206 207 208 209, on right: 199 200 201 202 203 204
    205 206 207
address_exp (149)
    on left: 210 211 212 213 214, on right: 182 213 214 372 376
type_cast (150)
    on left: 215 216 217 218 219 220 221 222 223 224 225 226 227 228
    229 230 231 232 233 234 235 236 237, on right: 183
casted_element (151)
    on left: 238, on right: 222 223 224 225 226 227 228 229 230 231
    232 233 234 235 236 237
bool_exp (152)
    on left: 239 240 241 242 243, on right: 42 43 164 240 241 242 243
    321 345 349
prime_bool_exp (153)
    on left: 244 245 246 247 248 249 250 251 252 253 254 255 256 257
   , on right: 25 239 334
relation_operator (154)
    on left: 258 259 260 261 262 263, on right: 162 244
sign_type_define (155)
    on left: 264 265, on right: 266
all_type_define (156)
    on left: 266 267, on right: 68 69 70 158 268 269 284 285 286 287
    288 289 290 291 294 295 301 302 305 306 307 308 309
option_function_parameter_list (157)
    on left: 268 269 270 271 272 273 274 275 276 277 278 279 280 281
    282 283 284 285 286 287 288 289 290 291 292 293,
    on right: 58 68 69 70 71 72 73 89 90 91 92 140 292 303
inner_option_define_identifier (158)
    on left: 294 295 296 297 298 299 300 301 302 303 304 305 306 307
    308 309 310, on right: 62 268 269 270 271 272 273 274 275 276 277
    278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 294
    295 296 297 298 299 300 301 302 303 305 306 307 308 309
option_function_identifier (159)
    on left: 311 312 313 314, on right: 74 75 76 312 316
inner_option_function_identifier (160)
    on left: 315 316 317 318, on right: 311 312 315 316
statement_bpar (161)
    on left: 319 320, on right: 56 57 339 340 341 349 350
bool_par (162)
    on left: 321 322, on right: 339
identifier (163)
    on left: 323 324, on right: 55 62 89 90 99 101 115 154 176 210
    268 270 271 272 273 274 275 276 277 284 285 286 287 288 289 291
    292 294 296 297 298 299 300 301 302 303 305 306 307 308 324 329
    356 357 362 364 365 366 367 370 371 372 373 374 377 378 382 384
strliteral (164)
    on left: 325, on right: 103 105 139 140 200 203 206 248 249 250
    251
intliteral (165)
    on left: 326, on right: 171
charliteral (166)
    on left: 327, on right: 181 256 257
floatliteral (167)
    on left: 328, on right: 175
option_frame_identifier (168)
    on left: 329 330 331, on right: 55 329
option_projection (169)
    on left: 332 333, on right: 56 333
imply_pre (170)
    on left: 334 335 336 337 338, on right: 54 335 336 337 338
while_statement (171)
    on left: 339, on right: 36
for_statement (172)
    on left: 340, on right: 37
extend_for_statement (173)
    on left: 341, on right: 38
for_sta_init (174)
    on left: 342 343 344, on right: 341
for_sta_condition (175)
    on left: 345 346, on right: 341
for_sta_control (176)
    on left: 347 348, on right: 341
if_statement (177)
    on left: 349, on right: 35
option_else_statement (178)
    on left: 350 351, on right: 349
output_statement (179)
    on left: 352 353, on right: 49
option_output (180)
    on left: 354 355, on right: 353 355
input_statement (181)
    on left: 356 357 358 359 360, on right: 48
option_input (182)
    on left: 361 362 363, on right: 357 359 362 363
struct_member_exp (183)
    on left: 364 365 366 367 368 369 370 371 372 373 374 375 376 377
    378 379 380, on right: 116 184 212 360 380
option_struct_member_exp (184)
    on left: 381 382 383 384 385 386 387, on right: 364 365 366 367
    368 369 370 371 372 373 374 375 376 379 382 383 384 385


state 0

    PBEGIN	shift, and go to state 1

    $default	reduce using rule 3 (gComplexProposition)

    program	go to state 1206
    gComplexProposition	go to state 2



state 1

    gComplexProposition  ->  PBEGIN . complexProposition PEND   (rule 2)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 21



state 2

    program  ->  gComplexProposition . statement   (rule 1)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 47
    SIGNED	shift, and go to state 48
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 50
    LENGTH	shift, and go to state 51
    REQUEST	shift, and go to state 52
    FINAL	shift, and go to state 53
    KEEP	shift, and go to state 54
    ALWAYS	shift, and go to state 55
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 57

    statement	go to state 58
    function_define	go to state 59
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    sign_type_define	go to state 71
    all_type_define	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 3

    complexProposition  ->  EMPTY .   (rule 18)

    $default	reduce using rule 18 (complexProposition)



state 4

    complexProposition  ->  MORE .   (rule 19)

    $default	reduce using rule 19 (complexProposition)



state 5

    complexProposition  ->  DEFINE . ID COLON prime_bool_exp   (rule 25)

    ID  	shift, and go to state 81



state 6

    complexProposition  ->  MY_TRUE .   (rule 15)

    $default	reduce using rule 15 (complexProposition)



state 7

    complexProposition  ->  MY_FALSE .   (rule 16)

    $default	reduce using rule 16 (complexProposition)



state 8

    complexProposition  ->  SKIP .   (rule 14)

    $default	reduce using rule 14 (complexProposition)



state 9

    complexProposition  ->  OPEN_PAR . complexProposition CLOSE_PAR   (rule 27)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 82



state 10

    complexProposition  ->  OPEN_BPAR . complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 83



state 11

    complexProposition  ->  NEXT . complexProposition   (rule 13)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 84



state 12

    complexProposition  ->  NEGATION . complexProposition   (rule 22)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 85



state 13

    complexProposition  ->  LENGTH . ari_exp   (rule 17)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 98
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 14

    complexProposition  ->  FINAL . complexProposition   (rule 21)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 108



state 15

    complexProposition  ->  KEEP . complexProposition   (rule 10)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 109



state 16

    complexProposition  ->  ALWAYS . complexProposition   (rule 9)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 110



state 17

    complexProposition  ->  HALT . complexProposition   (rule 20)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 111



state 18

    complexProposition  ->  W_NEXT . complexProposition   (rule 12)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 112



state 19

    complexProposition  ->  SOMETIMES . complexProposition   (rule 11)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 113



state 20

    complexProposition  ->  ID .   (rule 24)

    $default	reduce using rule 24 (complexProposition)



state 21

    gComplexProposition  ->  PBEGIN complexProposition . PEND   (rule 2)
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    PEND	shift, and go to state 114
    CHOP	shift, and go to state 115
    IFF 	shift, and go to state 116
    PROPIMPLY	shift, and go to state 117
    OR  	shift, and go to state 118
    AND 	shift, and go to state 119
    CHOPSTAR	shift, and go to state 120



state 22

    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 349)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 121
    MY_TRUE	shift, and go to state 122
    MY_FALSE	shift, and go to state 123
    OPEN_PAR	shift, and go to state 124
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 125
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 127
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    bool_exp	go to state 128
    prime_bool_exp	go to state 129
    identifier	go to state 103
    strliteral	go to state 130
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 23

    statement  ->  EMPTY .   (rule 45)

    $default	reduce using rule 45 (statement)



state 24

    statement  ->  AWAIT . OPEN_PAR bool_exp CLOSE_PAR   (rule 42)

    OPEN_PAR	shift, and go to state 131



state 25

    function_define  ->  STRUCT . STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 71)
    function_define  ->  STRUCT . STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)
    function_define  ->  STRUCT . STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)
    struct_identifier  ->  STRUCT . ID   (rule 78)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 85)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 87)

    ID  	shift, and go to state 132
    STRUCT_TYPE	shift, and go to state 133



state 26

    struct_identifier  ->  UNION . ID   (rule 79)
    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 86)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 88)

    ID  	shift, and go to state 134
    STRUCT_TYPE	shift, and go to state 135



state 27

    type_define  ->  FILEDECLARATION .   (rule 98)

    $default	reduce using rule 98 (type_define)



state 28

    statement  ->  MORE .   (rule 46)

    $default	reduce using rule 46 (statement)



state 29

    statement  ->  DEFINE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 58)

    ID  	shift, and go to state 136



state 30

    statement  ->  EXIST . identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 62)

    OPEN_PAR	shift, and go to state 137
    ID  	shift, and go to state 138

    identifier	go to state 139



state 31

    statement  ->  FRAME . OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 55)

    OPEN_PAR	shift, and go to state 140



state 32

    for_statement  ->  FOR . ari_exp TIMES DO statement_bpar   (rule 340)
    extend_for_statement  ->  FOR . OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 341)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 141
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 142
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 33

    while_statement  ->  WHILE . bool_par statement_bpar   (rule 339)

    error	shift, and go to state 143
    OPEN_PAR	shift, and go to state 144

    bool_par	go to state 145



state 34

    statement  ->  TRUE .   (rule 50)

    $default	reduce using rule 50 (statement)



state 35

    statement  ->  FALSE .   (rule 51)

    $default	reduce using rule 51 (statement)



state 36

    statement  ->  REPEAT . OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 43)

    OPEN_BPAR	shift, and go to state 146



state 37

    output_statement  ->  DISPLAY . OPEN_PAR ass_right CLOSE_PAR   (rule 352)
    output_statement  ->  DISPLAY . OPEN_PAR ass_right option_output CLOSE_PAR   (rule 353)

    OPEN_PAR	shift, and go to state 147



state 38

    statement  ->  SKIP .   (rule 44)

    $default	reduce using rule 44 (statement)



state 39

    type_define  ->  INTDECLARATION .   (rule 93)

    $default	reduce using rule 93 (type_define)



state 40

    type_define  ->  STRDECLARATION .   (rule 96)

    $default	reduce using rule 96 (type_define)



state 41

    type_define  ->  CHARDECLARATION .   (rule 95)

    $default	reduce using rule 95 (type_define)



state 42

    type_define  ->  VOIDDECLARATION .   (rule 97)

    $default	reduce using rule 97 (type_define)



state 43

    type_define  ->  FLOATDECLARATION .   (rule 94)

    $default	reduce using rule 94 (type_define)



state 44

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 54)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 63)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 148
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    MY_TRUE	shift, and go to state 122
    MY_FALSE	shift, and go to state 123
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 149
    OPEN_BPAR	shift, and go to state 45
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 47
    SIGNED	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 150
    BNE 	shift, and go to state 91
    NEXT	shift, and go to state 50
    NEGATION	shift, and go to state 151
    LENGTH	shift, and go to state 51
    REQUEST	shift, and go to state 52
    FINAL	shift, and go to state 53
    KEEP	shift, and go to state 54
    ALWAYS	shift, and go to state 55
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    STRUCT_TYPE	shift, and go to state 57
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    statement	go to state 152
    function_define	go to state 59
    function	go to state 153
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 154
    leftaddrshift	go to state 68
    array	go to state 155
    point_exp	go to state 156
    ari_exp	go to state 127
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 157
    type_cast	go to state 102
    prime_bool_exp	go to state 158
    sign_type_define	go to state 71
    all_type_define	go to state 72
    identifier	go to state 159
    strliteral	go to state 130
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    imply_pre	go to state 160
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 161



state 45

    statement  ->  OPEN_BPAR . statement option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 56)
    statement  ->  OPEN_BPAR . statement CLOSE_BPAR PROJECTION statement_bpar   (rule 57)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 47
    SIGNED	shift, and go to state 48
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 50
    LENGTH	shift, and go to state 51
    REQUEST	shift, and go to state 52
    FINAL	shift, and go to state 53
    KEEP	shift, and go to state 54
    ALWAYS	shift, and go to state 55
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 57

    statement	go to state 162
    function_define	go to state 59
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    sign_type_define	go to state 71
    all_type_define	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 46

    function  ->  EXTERN . ID OPEN_PAR option_function_identifier CLOSE_PAR   (rule 75)

    ID  	shift, and go to state 163



state 47

    sign_declaration  ->  UNSIGNED . declaration   (rule 81)
    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 264)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 265)

    STRUCT	shift, and go to state 164
    UNION	shift, and go to state 165
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 166
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 167
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 168
    STRUCT_TYPE	shift, and go to state 57

    declaration	go to state 169
    type_define	go to state 170



state 48

    sign_declaration  ->  SIGNED . declaration   (rule 80)

    STRUCT	shift, and go to state 164
    UNION	shift, and go to state 165
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 168
    STRUCT_TYPE	shift, and go to state 57

    declaration	go to state 171
    type_define	go to state 170



state 49

    point_exp  ->  MUL . identifier   (rule 154)
    point_exp  ->  MUL . point_exp   (rule 155)
    point_exp  ->  MUL . array   (rule 156)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 158)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 159)

    OPEN_PAR	shift, and go to state 172
    MUL 	shift, and go to state 49
    ID  	shift, and go to state 173

    array	go to state 174
    point_exp	go to state 175
    identifier	go to state 176



state 50

    statement  ->  NEXT . OPEN_PAR statement CLOSE_PAR   (rule 39)
    ass_left  ->  NEXT . ass_left   (rule 120)

    OPEN_PAR	shift, and go to state 177
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 178
    ID  	shift, and go to state 173

    ass_left	go to state 179
    leftaddrshift	go to state 68
    array	go to state 180
    point_exp	go to state 70
    identifier	go to state 73
    struct_member_exp	go to state 80



state 51

    statement  ->  LENGTH . OPEN_PAR ari_exp CLOSE_PAR   (rule 47)

    OPEN_PAR	shift, and go to state 181



state 52

    input_statement  ->  REQUEST . OPEN_PAR identifier CLOSE_PAR   (rule 356)
    input_statement  ->  REQUEST . OPEN_PAR identifier option_input CLOSE_PAR   (rule 357)
    input_statement  ->  REQUEST . OPEN_PAR array CLOSE_PAR   (rule 358)
    input_statement  ->  REQUEST . OPEN_PAR array option_input CLOSE_PAR   (rule 359)
    input_statement  ->  REQUEST . OPEN_PAR struct_member_exp CLOSE_PAR   (rule 360)

    OPEN_PAR	shift, and go to state 182



state 53

    statement  ->  FINAL . OPEN_PAR statement CLOSE_PAR   (rule 52)

    OPEN_PAR	shift, and go to state 183



state 54

    statement  ->  KEEP . OPEN_PAR statement CLOSE_PAR   (rule 40)

    OPEN_PAR	shift, and go to state 184



state 55

    statement  ->  ALWAYS . OPEN_PAR statement CLOSE_PAR   (rule 41)

    OPEN_PAR	shift, and go to state 185



state 56

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 74)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    identifier  ->  ID .   (rule 323)

    OPEN_PAR	shift, and go to state 186
    OPEN_MPAR	shift, and go to state 187

    $default	reduce using rule 323 (identifier)



state 57

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 84)

    OPEN_PAR	shift, and go to state 137
    MUL 	shift, and go to state 188
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 190
    identifier	go to state 191



state 58

    program  ->  gComplexProposition statement .   (rule 1)
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)

    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195

    $default	reduce using rule 1 (program)



state 59

    statement  ->  function_define .   (rule 60)

    $default	reduce using rule 60 (statement)



state 60

    statement  ->  function .   (rule 61)

    $default	reduce using rule 61 (statement)



state 61

    statement  ->  struct_define_statement .   (rule 59)

    $default	reduce using rule 59 (statement)



state 62

    struct_define_statement  ->  struct_identifier . OPEN_BPAR option_struct_declaration CLOSE_BPAR   (rule 77)

    OPEN_BPAR	shift, and go to state 196



state 63

    statement  ->  sign_declaration .   (rule 34)

    $default	reduce using rule 34 (statement)



state 64

    sign_declaration  ->  declaration .   (rule 82)

    $default	reduce using rule 82 (sign_declaration)



state 65

    declaration  ->  type_define . option_identifier_array_declaration   (rule 83)
    all_type_define  ->  type_define .   (rule 267)

    OPEN_PAR	shift, and go to state 137
    MUL 	shift, and go to state 188
    ID  	shift, and go to state 189

    MUL 	[reduce using rule 267 (all_type_define)]
    ID  	[reduce using rule 267 (all_type_define)]
    $default	reduce using rule 267 (all_type_define)

    option_identifier_array_declaration	go to state 197
    identifier	go to state 191



state 66

    statement  ->  ass_statement .   (rule 33)

    $default	reduce using rule 33 (statement)



state 67

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 114)

    ASS_P	shift, and go to state 198
    ASS_N	shift, and go to state 199

    assign_operator	go to state 200



state 68

    ass_left  ->  leftaddrshift .   (rule 121)

    $default	reduce using rule 121 (ass_left)



state 69

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    ass_left  ->  array .   (rule 117)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 201
    OPEN_PAR	shift, and go to state 202
    IMPLY	shift, and go to state 203

    $default	reduce using rule 117 (ass_left)



state 70

    ass_left  ->  point_exp .   (rule 118)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 379)

    DOT 	shift, and go to state 204
    IMPLY	shift, and go to state 205

    $default	reduce using rule 118 (ass_left)



state 71

    all_type_define  ->  sign_type_define .   (rule 266)

    $default	reduce using rule 266 (all_type_define)



state 72

    function_define  ->  all_type_define . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 68)
    function_define  ->  all_type_define . MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 69)
    function_define  ->  all_type_define . MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    MUL 	shift, and go to state 206
    ID  	shift, and go to state 207



state 73

    ass_left  ->  identifier .   (rule 115)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . DOT function   (rule 377)
    struct_member_exp  ->  identifier . IMPLY function   (rule 378)

    DOT 	shift, and go to state 208
    IMPLY	shift, and go to state 209

    $default	reduce using rule 115 (ass_left)



state 74

    statement  ->  while_statement .   (rule 36)

    $default	reduce using rule 36 (statement)



state 75

    statement  ->  for_statement .   (rule 37)

    $default	reduce using rule 37 (statement)



state 76

    statement  ->  extend_for_statement .   (rule 38)

    $default	reduce using rule 38 (statement)



state 77

    statement  ->  if_statement .   (rule 35)

    $default	reduce using rule 35 (statement)



state 78

    statement  ->  output_statement .   (rule 49)

    $default	reduce using rule 49 (statement)



state 79

    statement  ->  input_statement .   (rule 48)

    $default	reduce using rule 48 (statement)



state 80

    ass_left  ->  struct_member_exp .   (rule 116)

    $default	reduce using rule 116 (ass_left)



state 81

    complexProposition  ->  DEFINE ID . COLON prime_bool_exp   (rule 25)

    COLON	shift, and go to state 210



state 82

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    complexProposition  ->  OPEN_PAR complexProposition . CLOSE_PAR   (rule 27)

    CLOSE_PAR	shift, and go to state 211
    CHOP	shift, and go to state 115
    IFF 	shift, and go to state 116
    PROPIMPLY	shift, and go to state 117
    OR  	shift, and go to state 118
    AND 	shift, and go to state 119
    CHOPSTAR	shift, and go to state 120



state 83

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition . poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    COMMA	shift, and go to state 212
    CHOP	shift, and go to state 115
    IFF 	shift, and go to state 116
    PROPIMPLY	shift, and go to state 117
    OR  	shift, and go to state 118
    AND 	shift, and go to state 119
    CHOPSTAR	shift, and go to state 120

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 213



state 84

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEXT complexProposition .   (rule 13)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 13 (complexProposition)



state 85

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEGATION complexProposition .   (rule 22)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 22 (complexProposition)



state 86

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 164)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 121
    MY_TRUE	shift, and go to state 122
    MY_FALSE	shift, and go to state 123
    OPEN_PAR	shift, and go to state 124
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 125
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 127
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    bool_exp	go to state 214
    prime_bool_exp	go to state 129
    identifier	go to state 103
    strliteral	go to state 130
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 87

    member_in_exp  ->  POINTERNULL .   (rule 174)

    $default	reduce using rule 174 (member_in_exp)



state 88

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 180)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 214)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 237)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 215
    INTDECLARATION	shift, and go to state 216
    CHARDECLARATION	shift, and go to state 217
    VOIDDECLARATION	shift, and go to state 218
    FLOATDECLARATION	shift, and go to state 219
    OPEN_PAR	shift, and go to state 220
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 221
    SIGNED	shift, and go to state 222
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 223
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 224
    point_exp	go to state 225
    ari_exp	go to state 226
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 227
    type_cast	go to state 102
    identifier	go to state 228
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 229



state 89

    address_exp  ->  ADDRESS . identifier   (rule 210)
    address_exp  ->  ADDRESS . array   (rule 211)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 212)
    address_exp  ->  ADDRESS . address_exp   (rule 213)

    OPEN_PAR	shift, and go to state 230
    ADDRESS	shift, and go to state 89
    MUL 	shift, and go to state 49
    ID  	shift, and go to state 173

    array	go to state 231
    point_exp	go to state 232
    address_exp	go to state 233
    identifier	go to state 234
    struct_member_exp	go to state 235



state 90

    member_in_exp  ->  SUB . member_in_exp   (rule 172)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    member_in_exp	go to state 236
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 91

    member_in_exp  ->  BNE . member_in_exp   (rule 173)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    member_in_exp	go to state 237
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 92

    intliteral  ->  INTLITERAL .   (rule 326)

    $default	reduce using rule 326 (intliteral)



state 93

    floatliteral  ->  FLOATLITERAL .   (rule 328)

    $default	reduce using rule 328 (floatliteral)



state 94

    charliteral  ->  CHARLITERAL .   (rule 327)

    $default	reduce using rule 327 (charliteral)



state 95

    member_in_exp  ->  function .   (rule 179)

    $default	reduce using rule 179 (member_in_exp)



state 96

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    member_in_exp  ->  array .   (rule 177)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 201
    OPEN_PAR	shift, and go to state 202
    IMPLY	shift, and go to state 203

    DOT 	[reduce using rule 177 (member_in_exp)]
    IMPLY	[reduce using rule 177 (member_in_exp)]
    $default	reduce using rule 177 (member_in_exp)



state 97

    member_in_exp  ->  point_exp .   (rule 178)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 379)

    DOT 	shift, and go to state 204
    IMPLY	shift, and go to state 205

    DOT 	[reduce using rule 178 (member_in_exp)]
    IMPLY	[reduce using rule 178 (member_in_exp)]
    $default	reduce using rule 178 (member_in_exp)



state 98

    complexProposition  ->  LENGTH ari_exp .   (rule 17)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 17 (complexProposition)

    ari_operator	go to state 240



state 99

    ari_exp  ->  simple_ari_exp .   (rule 161)
    ari_exp  ->  simple_ari_exp . relation_operator ari_exp   (rule 162)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 170)

    INTER_OR	shift, and go to state 241
    CON 	shift, and go to state 242
    ADDRESS	shift, and go to state 243
    NE  	shift, and go to state 244
    EQ  	shift, and go to state 245
    GE  	shift, and go to state 246
    LE  	shift, and go to state 247
    GT  	shift, and go to state 248
    LT  	shift, and go to state 249
    LST 	shift, and go to state 250
    RST 	shift, and go to state 251
    MUL 	shift, and go to state 252
    DIV 	shift, and go to state 253
    MOD 	shift, and go to state 254

    INTER_OR	[reduce using rule 161 (ari_exp)]
    CON 	[reduce using rule 161 (ari_exp)]
    ADDRESS	[reduce using rule 161 (ari_exp)]
    NE  	[reduce using rule 161 (ari_exp)]
    EQ  	[reduce using rule 161 (ari_exp)]
    GE  	[reduce using rule 161 (ari_exp)]
    LE  	[reduce using rule 161 (ari_exp)]
    GT  	[reduce using rule 161 (ari_exp)]
    LT  	[reduce using rule 161 (ari_exp)]
    LST 	[reduce using rule 161 (ari_exp)]
    RST 	[reduce using rule 161 (ari_exp)]
    MUL 	[reduce using rule 161 (ari_exp)]
    DIV 	[reduce using rule 161 (ari_exp)]
    MOD 	[reduce using rule 161 (ari_exp)]
    $default	reduce using rule 161 (ari_exp)

    bi_operator	go to state 255
    relation_operator	go to state 256



state 100

    simple_ari_exp  ->  member_in_exp .   (rule 169)

    $default	reduce using rule 169 (simple_ari_exp)



state 101

    member_in_exp  ->  address_exp .   (rule 182)

    $default	reduce using rule 182 (member_in_exp)



state 102

    member_in_exp  ->  type_cast .   (rule 183)

    $default	reduce using rule 183 (member_in_exp)



state 103

    member_in_exp  ->  identifier .   (rule 176)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . DOT function   (rule 377)
    struct_member_exp  ->  identifier . IMPLY function   (rule 378)

    DOT 	shift, and go to state 208
    IMPLY	shift, and go to state 209

    DOT 	[reduce using rule 176 (member_in_exp)]
    IMPLY	[reduce using rule 176 (member_in_exp)]
    $default	reduce using rule 176 (member_in_exp)



state 104

    member_in_exp  ->  intliteral .   (rule 171)

    $default	reduce using rule 171 (member_in_exp)



state 105

    member_in_exp  ->  charliteral .   (rule 181)

    $default	reduce using rule 181 (member_in_exp)



state 106

    member_in_exp  ->  floatliteral .   (rule 175)

    $default	reduce using rule 175 (member_in_exp)



state 107

    member_in_exp  ->  struct_member_exp .   (rule 184)

    $default	reduce using rule 184 (member_in_exp)



state 108

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  FINAL complexProposition .   (rule 21)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 21 (complexProposition)



state 109

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  KEEP complexProposition .   (rule 10)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 10 (complexProposition)



state 110

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  ALWAYS complexProposition .   (rule 9)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 9 (complexProposition)



state 111

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  HALT complexProposition .   (rule 20)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 20 (complexProposition)



state 112

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  W_NEXT complexProposition .   (rule 12)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 12 (complexProposition)



state 113

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  SOMETIMES complexProposition .   (rule 11)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 11 (complexProposition)



state 114

    gComplexProposition  ->  PBEGIN complexProposition PEND .   (rule 2)

    $default	reduce using rule 2 (gComplexProposition)



state 115

    complexProposition  ->  complexProposition CHOP . complexProposition   (rule 8)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 257



state 116

    complexProposition  ->  complexProposition IFF . complexProposition   (rule 6)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 258



state 117

    complexProposition  ->  complexProposition PROPIMPLY . complexProposition   (rule 7)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 259



state 118

    complexProposition  ->  complexProposition OR . complexProposition   (rule 5)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 260



state 119

    complexProposition  ->  complexProposition AND . complexProposition   (rule 4)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 261



state 120

    complexProposition  ->  complexProposition CHOPSTAR .   (rule 26)

    $default	reduce using rule 26 (complexProposition)



state 121

    member_in_exp  ->  POINTERNULL .   (rule 174)
    prime_bool_exp  ->  POINTERNULL . EQ ari_exp   (rule 254)
    prime_bool_exp  ->  POINTERNULL . NE ari_exp   (rule 255)

    NE  	shift, and go to state 262
    EQ  	shift, and go to state 263

    NE  	[reduce using rule 174 (member_in_exp)]
    EQ  	[reduce using rule 174 (member_in_exp)]
    $default	reduce using rule 174 (member_in_exp)



state 122

    prime_bool_exp  ->  MY_TRUE .   (rule 245)

    $default	reduce using rule 245 (prime_bool_exp)



state 123

    prime_bool_exp  ->  MY_FALSE .   (rule 246)

    $default	reduce using rule 246 (prime_bool_exp)



state 124

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 180)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 214)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 237)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 243)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 215
    MY_TRUE	shift, and go to state 122
    MY_FALSE	shift, and go to state 123
    INTDECLARATION	shift, and go to state 216
    CHARDECLARATION	shift, and go to state 217
    VOIDDECLARATION	shift, and go to state 218
    FLOATDECLARATION	shift, and go to state 219
    OPEN_PAR	shift, and go to state 264
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 221
    SIGNED	shift, and go to state 222
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 125
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    STRUCT_TYPE	shift, and go to state 223
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 224
    point_exp	go to state 225
    ari_exp	go to state 265
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 227
    type_cast	go to state 102
    bool_exp	go to state 266
    prime_bool_exp	go to state 129
    identifier	go to state 228
    strliteral	go to state 130
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 229



state 125

    bool_exp  ->  NEGATION . bool_exp   (rule 240)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 121
    MY_TRUE	shift, and go to state 122
    MY_FALSE	shift, and go to state 123
    OPEN_PAR	shift, and go to state 124
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 125
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 127
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    bool_exp	go to state 267
    prime_bool_exp	go to state 129
    identifier	go to state 103
    strliteral	go to state 130
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 126

    strliteral  ->  STRLITERAL .   (rule 325)

    $default	reduce using rule 325 (strliteral)



state 127

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 244)
    prime_bool_exp  ->  ari_exp .   (rule 247)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 248)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 249)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 252)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 253)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 256)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 257)

    NE  	shift, and go to state 268
    EQ  	shift, and go to state 269
    GE  	shift, and go to state 246
    LE  	shift, and go to state 247
    GT  	shift, and go to state 248
    LT  	shift, and go to state 249
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 247 (prime_bool_exp)

    ari_operator	go to state 240
    relation_operator	go to state 270



state 128

    bool_exp  ->  bool_exp . AND bool_exp   (rule 241)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 242)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 349)

    THEN	shift, and go to state 271
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273



state 129

    bool_exp  ->  prime_bool_exp .   (rule 239)

    $default	reduce using rule 239 (bool_exp)



state 130

    prime_bool_exp  ->  strliteral . EQ ari_exp   (rule 250)
    prime_bool_exp  ->  strliteral . NE ari_exp   (rule 251)

    NE  	shift, and go to state 274
    EQ  	shift, and go to state 275



state 131

    statement  ->  AWAIT OPEN_PAR . bool_exp CLOSE_PAR   (rule 42)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 121
    MY_TRUE	shift, and go to state 122
    MY_FALSE	shift, and go to state 123
    OPEN_PAR	shift, and go to state 124
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 125
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 127
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    bool_exp	go to state 276
    prime_bool_exp	go to state 129
    identifier	go to state 103
    strliteral	go to state 130
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 132

    struct_identifier  ->  STRUCT ID .   (rule 78)
    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 85)

    OPEN_PAR	shift, and go to state 137
    MUL 	shift, and go to state 188
    ID  	shift, and go to state 189

    $default	reduce using rule 78 (struct_identifier)

    option_identifier_array_declaration	go to state 277
    identifier	go to state 191



state 133

    function_define  ->  STRUCT STRUCT_TYPE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 71)
    function_define  ->  STRUCT STRUCT_TYPE . MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)
    function_define  ->  STRUCT STRUCT_TYPE . MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)
    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 87)

    OPEN_PAR	shift, and go to state 137
    MUL 	shift, and go to state 278
    ID  	shift, and go to state 279

    option_identifier_array_declaration	go to state 280
    identifier	go to state 191



state 134

    struct_identifier  ->  UNION ID .   (rule 79)
    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 86)

    OPEN_PAR	shift, and go to state 137
    MUL 	shift, and go to state 188
    ID  	shift, and go to state 189

    $default	reduce using rule 79 (struct_identifier)

    option_identifier_array_declaration	go to state 281
    identifier	go to state 191



state 135

    declaration  ->  UNION STRUCT_TYPE . option_identifier_array_declaration   (rule 88)

    OPEN_PAR	shift, and go to state 137
    MUL 	shift, and go to state 188
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 282
    identifier	go to state 191



state 136

    statement  ->  DEFINE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 58)

    OPEN_PAR	shift, and go to state 283



state 137

    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)

    OPEN_PAR	shift, and go to state 137
    ID  	shift, and go to state 138

    identifier	go to state 284



state 138

    identifier  ->  ID .   (rule 323)

    $default	reduce using rule 323 (identifier)



state 139

    statement  ->  EXIST identifier . inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 62)

    COMMA	shift, and go to state 285

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 286



state 140

    statement  ->  FRAME OPEN_PAR . identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 55)

    OPEN_PAR	shift, and go to state 137
    ID  	shift, and go to state 138

    identifier	go to state 287



state 141

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 180)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 214)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 237)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    extend_for_statement  ->  FOR OPEN_PAR . for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 341)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 288
    UNION	shift, and go to state 165
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 289
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 290
    VOIDDECLARATION	shift, and go to state 291
    FLOATDECLARATION	shift, and go to state 292
    OPEN_PAR	shift, and go to state 293
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 221
    SIGNED	shift, and go to state 222
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    NEXT	shift, and go to state 178
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 294
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    $default	reduce using rule 344 (for_sta_init)

    function	go to state 95
    declaration	go to state 295
    type_define	go to state 170
    ass_statement	go to state 296
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 155
    point_exp	go to state 156
    ari_exp	go to state 226
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 227
    type_cast	go to state 102
    identifier	go to state 159
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    for_sta_init	go to state 297
    struct_member_exp	go to state 161



state 142

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)
    for_statement  ->  FOR ari_exp . TIMES DO statement_bpar   (rule 340)

    TIMES	shift, and go to state 298
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    ari_operator	go to state 240



state 143

    bool_par  ->  error . CLOSE_PAR   (rule 322)

    CLOSE_PAR	shift, and go to state 299



state 144

    bool_par  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 321)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 121
    MY_TRUE	shift, and go to state 122
    MY_FALSE	shift, and go to state 123
    OPEN_PAR	shift, and go to state 124
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 125
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 127
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    bool_exp	go to state 300
    prime_bool_exp	go to state 129
    identifier	go to state 103
    strliteral	go to state 130
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 145

    while_statement  ->  WHILE bool_par . statement_bpar   (rule 339)

    error	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302

    statement_bpar	go to state 303



state 146

    statement  ->  REPEAT OPEN_BPAR . statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 43)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 47
    SIGNED	shift, and go to state 48
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 50
    LENGTH	shift, and go to state 51
    REQUEST	shift, and go to state 52
    FINAL	shift, and go to state 53
    KEEP	shift, and go to state 54
    ALWAYS	shift, and go to state 55
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 57

    statement	go to state 304
    function_define	go to state 59
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    sign_type_define	go to state 71
    all_type_define	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 147

    output_statement  ->  DISPLAY OPEN_PAR . ass_right CLOSE_PAR   (rule 352)
    output_statement  ->  DISPLAY OPEN_PAR . ass_right option_output CLOSE_PAR   (rule 353)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    ass_right	go to state 309
    rightaddrshift	go to state 310
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 311
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    strliteral	go to state 315
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 148

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 164)
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 349)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 121
    MY_TRUE	shift, and go to state 122
    MY_FALSE	shift, and go to state 123
    OPEN_PAR	shift, and go to state 124
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 125
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 127
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    bool_exp	go to state 316
    prime_bool_exp	go to state 129
    identifier	go to state 103
    strliteral	go to state 130
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 149

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 54)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 63)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 180)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 214)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 237)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 148
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 317
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    MY_TRUE	shift, and go to state 122
    MY_FALSE	shift, and go to state 123
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 318
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 319
    VOIDDECLARATION	shift, and go to state 291
    FLOATDECLARATION	shift, and go to state 320
    OPEN_PAR	shift, and go to state 149
    OPEN_BPAR	shift, and go to state 45
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 321
    SIGNED	shift, and go to state 322
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 150
    BNE 	shift, and go to state 91
    NEXT	shift, and go to state 50
    NEGATION	shift, and go to state 151
    LENGTH	shift, and go to state 51
    REQUEST	shift, and go to state 52
    FINAL	shift, and go to state 53
    KEEP	shift, and go to state 54
    ALWAYS	shift, and go to state 55
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    STRUCT_TYPE	shift, and go to state 294
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    statement	go to state 152
    function_define	go to state 59
    function	go to state 153
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 154
    leftaddrshift	go to state 68
    array	go to state 155
    point_exp	go to state 156
    ari_exp	go to state 265
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 227
    type_cast	go to state 102
    prime_bool_exp	go to state 158
    sign_type_define	go to state 71
    all_type_define	go to state 72
    identifier	go to state 159
    strliteral	go to state 130
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    imply_pre	go to state 323
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 161



state 150

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)
    point_exp  ->  MUL . identifier   (rule 154)
    point_exp  ->  MUL . point_exp   (rule 155)
    point_exp  ->  MUL . array   (rule 156)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 158)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 159)

    OPEN_PAR	shift, and go to state 172
    MUL 	shift, and go to state 324
    ID  	shift, and go to state 325

    array	go to state 174
    point_exp	go to state 175
    identifier	go to state 326



state 151

    imply_pre  ->  NEGATION . imply_pre   (rule 335)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 121
    MY_TRUE	shift, and go to state 122
    MY_FALSE	shift, and go to state 123
    OPEN_PAR	shift, and go to state 327
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 151
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 127
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    prime_bool_exp	go to state 158
    identifier	go to state 103
    strliteral	go to state 130
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    imply_pre	go to state 328
    struct_member_exp	go to state 107



state 152

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    statement  ->  OPEN_PAR statement . CLOSE_PAR   (rule 63)

    CLOSE_PAR	shift, and go to state 329
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 153

    statement  ->  function .   (rule 61)
    member_in_exp  ->  function .   (rule 179)

    CLOSE_PAR	reduce using rule 61 (statement)
    CLOSE_PAR	[reduce using rule 179 (member_in_exp)]
    CHOP	reduce using rule 61 (statement)
    OR  	reduce using rule 61 (statement)
    OR  	[reduce using rule 179 (member_in_exp)]
    PARALLEL	reduce using rule 61 (statement)
    AND 	reduce using rule 61 (statement)
    AND 	[reduce using rule 179 (member_in_exp)]
    $default	reduce using rule 179 (member_in_exp)



state 154

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 114)
    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 119)

    CLOSE_PAR	shift, and go to state 330
    ASS_P	shift, and go to state 198
    ASS_N	shift, and go to state 199

    assign_operator	go to state 200



state 155

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    ass_left  ->  array .   (rule 117)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 150)
    member_in_exp  ->  array .   (rule 177)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 201
    OPEN_PAR	shift, and go to state 202
    CLOSE_PAR	shift, and go to state 331
    IMPLY	shift, and go to state 203

    CLOSE_PAR	[reduce using rule 117 (ass_left)]
    CLOSE_PAR	[reduce using rule 177 (member_in_exp)]
    ASS_P	reduce using rule 117 (ass_left)
    ASS_N	reduce using rule 117 (ass_left)
    $default	reduce using rule 177 (member_in_exp)



state 156

    ass_left  ->  point_exp .   (rule 118)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 160)
    member_in_exp  ->  point_exp .   (rule 178)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 379)

    DOT 	shift, and go to state 204
    CLOSE_PAR	shift, and go to state 332
    IMPLY	shift, and go to state 205

    CLOSE_PAR	[reduce using rule 118 (ass_left)]
    CLOSE_PAR	[reduce using rule 178 (member_in_exp)]
    ASS_P	reduce using rule 118 (ass_left)
    ASS_N	reduce using rule 118 (ass_left)
    $default	reduce using rule 178 (member_in_exp)



state 157

    member_in_exp  ->  address_exp .   (rule 182)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)

    CLOSE_PAR	shift, and go to state 333

    CLOSE_PAR	[reduce using rule 182 (member_in_exp)]
    $default	reduce using rule 182 (member_in_exp)



state 158

    imply_pre  ->  prime_bool_exp .   (rule 334)

    $default	reduce using rule 334 (imply_pre)



state 159

    ass_left  ->  identifier .   (rule 115)
    member_in_exp  ->  identifier .   (rule 176)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 324)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . DOT function   (rule 377)
    struct_member_exp  ->  identifier . IMPLY function   (rule 378)

    DOT 	shift, and go to state 208
    CLOSE_PAR	shift, and go to state 334
    IMPLY	shift, and go to state 209

    CLOSE_PAR	[reduce using rule 115 (ass_left)]
    CLOSE_PAR	[reduce using rule 176 (member_in_exp)]
    ASS_P	reduce using rule 115 (ass_left)
    ASS_N	reduce using rule 115 (ass_left)
    $default	reduce using rule 176 (member_in_exp)



state 160

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 54)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 336)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 337)

    CLOSE_PAR	shift, and go to state 335
    OR  	shift, and go to state 336
    AND 	shift, and go to state 337



state 161

    ass_left  ->  struct_member_exp .   (rule 116)
    member_in_exp  ->  struct_member_exp .   (rule 184)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 380)

    CLOSE_PAR	shift, and go to state 338

    CLOSE_PAR	[reduce using rule 116 (ass_left)]
    CLOSE_PAR	[reduce using rule 184 (member_in_exp)]
    ASS_P	reduce using rule 116 (ass_left)
    ASS_N	reduce using rule 116 (ass_left)
    $default	reduce using rule 184 (member_in_exp)



state 162

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    statement  ->  OPEN_BPAR statement . option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 56)
    statement  ->  OPEN_BPAR statement . CLOSE_BPAR PROJECTION statement_bpar   (rule 57)

    COMMA	shift, and go to state 339
    CLOSE_BPAR	shift, and go to state 340
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195

    CLOSE_BPAR	[reduce using rule 332 (option_projection)]
    $default	reduce using rule 332 (option_projection)

    option_projection	go to state 341



state 163

    function  ->  EXTERN ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 75)

    OPEN_PAR	shift, and go to state 342



state 164

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 85)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 87)

    ID  	shift, and go to state 343
    STRUCT_TYPE	shift, and go to state 344



state 165

    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 86)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 88)

    ID  	shift, and go to state 345
    STRUCT_TYPE	shift, and go to state 135



state 166

    type_define  ->  INTDECLARATION .   (rule 93)
    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 264)

    MUL 	reduce using rule 93 (type_define)
    MUL 	[reduce using rule 264 (sign_type_define)]
    ID  	reduce using rule 93 (type_define)
    ID  	[reduce using rule 264 (sign_type_define)]
    $default	reduce using rule 93 (type_define)



state 167

    type_define  ->  CHARDECLARATION .   (rule 95)
    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 265)

    MUL 	reduce using rule 95 (type_define)
    MUL 	[reduce using rule 265 (sign_type_define)]
    ID  	reduce using rule 95 (type_define)
    ID  	[reduce using rule 265 (sign_type_define)]
    $default	reduce using rule 95 (type_define)



state 168

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)

    MUL 	shift, and go to state 346



state 169

    sign_declaration  ->  UNSIGNED declaration .   (rule 81)

    $default	reduce using rule 81 (sign_declaration)



state 170

    declaration  ->  type_define . option_identifier_array_declaration   (rule 83)

    OPEN_PAR	shift, and go to state 137
    MUL 	shift, and go to state 188
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 197
    identifier	go to state 191



state 171

    sign_declaration  ->  SIGNED declaration .   (rule 80)

    $default	reduce using rule 80 (sign_declaration)



state 172

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 158)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 220
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 347
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    type_define	go to state 348
    array	go to state 224
    point_exp	go to state 225
    ari_exp	go to state 349
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    sign_type_define	go to state 71
    all_type_define	go to state 350
    identifier	go to state 228
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 173

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    identifier  ->  ID .   (rule 323)

    OPEN_MPAR	shift, and go to state 187

    $default	reduce using rule 323 (identifier)



state 174

    point_exp  ->  MUL array .   (rule 156)

    $default	reduce using rule 156 (point_exp)



state 175

    point_exp  ->  MUL point_exp .   (rule 155)

    $default	reduce using rule 155 (point_exp)



state 176

    point_exp  ->  MUL identifier .   (rule 154)

    $default	reduce using rule 154 (point_exp)



state 177

    statement  ->  NEXT OPEN_PAR . statement CLOSE_PAR   (rule 39)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 351
    OPEN_BPAR	shift, and go to state 45
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 47
    SIGNED	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 50
    LENGTH	shift, and go to state 51
    REQUEST	shift, and go to state 52
    FINAL	shift, and go to state 53
    KEEP	shift, and go to state 54
    ALWAYS	shift, and go to state 55
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 57

    statement	go to state 352
    function_define	go to state 59
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 154
    leftaddrshift	go to state 68
    array	go to state 353
    point_exp	go to state 354
    address_exp	go to state 355
    sign_type_define	go to state 71
    all_type_define	go to state 72
    identifier	go to state 356
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 357



state 178

    ass_left  ->  NEXT . ass_left   (rule 120)

    OPEN_PAR	shift, and go to state 358
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 178
    ID  	shift, and go to state 173

    ass_left	go to state 179
    leftaddrshift	go to state 68
    array	go to state 180
    point_exp	go to state 70
    identifier	go to state 73
    struct_member_exp	go to state 80



state 179

    ass_left  ->  NEXT ass_left .   (rule 120)

    $default	reduce using rule 120 (ass_left)



state 180

    ass_left  ->  array .   (rule 117)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 201
    IMPLY	shift, and go to state 203

    $default	reduce using rule 117 (ass_left)



state 181

    statement  ->  LENGTH OPEN_PAR . ari_exp CLOSE_PAR   (rule 47)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 359
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 182

    input_statement  ->  REQUEST OPEN_PAR . identifier CLOSE_PAR   (rule 356)
    input_statement  ->  REQUEST OPEN_PAR . identifier option_input CLOSE_PAR   (rule 357)
    input_statement  ->  REQUEST OPEN_PAR . array CLOSE_PAR   (rule 358)
    input_statement  ->  REQUEST OPEN_PAR . array option_input CLOSE_PAR   (rule 359)
    input_statement  ->  REQUEST OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 360)

    OPEN_PAR	shift, and go to state 360
    MUL 	shift, and go to state 49
    ID  	shift, and go to state 173

    array	go to state 361
    point_exp	go to state 232
    identifier	go to state 362
    struct_member_exp	go to state 363



state 183

    statement  ->  FINAL OPEN_PAR . statement CLOSE_PAR   (rule 52)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 47
    SIGNED	shift, and go to state 48
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 50
    LENGTH	shift, and go to state 51
    REQUEST	shift, and go to state 52
    FINAL	shift, and go to state 53
    KEEP	shift, and go to state 54
    ALWAYS	shift, and go to state 55
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 57

    statement	go to state 364
    function_define	go to state 59
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    sign_type_define	go to state 71
    all_type_define	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 184

    statement  ->  KEEP OPEN_PAR . statement CLOSE_PAR   (rule 40)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 47
    SIGNED	shift, and go to state 48
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 50
    LENGTH	shift, and go to state 51
    REQUEST	shift, and go to state 52
    FINAL	shift, and go to state 53
    KEEP	shift, and go to state 54
    ALWAYS	shift, and go to state 55
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 57

    statement	go to state 365
    function_define	go to state 59
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    sign_type_define	go to state 71
    all_type_define	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 185

    statement  ->  ALWAYS OPEN_PAR . statement CLOSE_PAR   (rule 41)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 47
    SIGNED	shift, and go to state 48
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 50
    LENGTH	shift, and go to state 51
    REQUEST	shift, and go to state 52
    FINAL	shift, and go to state 53
    KEEP	shift, and go to state 54
    ALWAYS	shift, and go to state 55
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 57

    statement	go to state 366
    function_define	go to state 59
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    sign_type_define	go to state 71
    all_type_define	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 186

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 74)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 367
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 368
    STRLITERAL	shift, and go to state 126
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    $default	reduce using rule 313 (option_function_identifier)

    function	go to state 95
    ass_right	go to state 369
    rightaddrshift	go to state 310
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 311
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 101
    type_cast	go to state 102
    option_function_identifier	go to state 370
    identifier	go to state 103
    strliteral	go to state 315
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 187

    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 371
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 188

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 106)

    OPEN_PAR	shift, and go to state 137
    MUL 	shift, and go to state 188
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 372
    identifier	go to state 191



state 189

    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 103)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 105)
    identifier  ->  ID .   (rule 323)

    ARRAY	shift, and go to state 373
    OPEN_MPAR	shift, and go to state 374

    $default	reduce using rule 323 (identifier)



state 190

    declaration  ->  STRUCT_TYPE option_identifier_array_declaration .   (rule 84)

    $default	reduce using rule 84 (declaration)



state 191

    option_identifier_array_declaration  ->  identifier . inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  identifier . ASS_P ass_right inner_option_identifier_array_declaration   (rule 101)

    COMMA	shift, and go to state 375
    ASS_P	shift, and go to state 376

    COMMA	[reduce using rule 109 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 109 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 377



state 192

    statement  ->  statement CHOP . statement   (rule 32)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 47
    SIGNED	shift, and go to state 48
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 50
    LENGTH	shift, and go to state 51
    REQUEST	shift, and go to state 52
    FINAL	shift, and go to state 53
    KEEP	shift, and go to state 54
    ALWAYS	shift, and go to state 55
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 57

    statement	go to state 378
    function_define	go to state 59
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    sign_type_define	go to state 71
    all_type_define	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 193

    statement  ->  statement OR . statement   (rule 31)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 47
    SIGNED	shift, and go to state 48
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 50
    LENGTH	shift, and go to state 51
    REQUEST	shift, and go to state 52
    FINAL	shift, and go to state 53
    KEEP	shift, and go to state 54
    ALWAYS	shift, and go to state 55
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 57

    statement	go to state 379
    function_define	go to state 59
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    sign_type_define	go to state 71
    all_type_define	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 194

    statement  ->  statement PARALLEL . statement   (rule 53)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 47
    SIGNED	shift, and go to state 48
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 50
    LENGTH	shift, and go to state 51
    REQUEST	shift, and go to state 52
    FINAL	shift, and go to state 53
    KEEP	shift, and go to state 54
    ALWAYS	shift, and go to state 55
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 57

    statement	go to state 380
    function_define	go to state 59
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    sign_type_define	go to state 71
    all_type_define	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 195

    statement  ->  statement AND . statement   (rule 30)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 47
    SIGNED	shift, and go to state 48
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 50
    LENGTH	shift, and go to state 51
    REQUEST	shift, and go to state 52
    FINAL	shift, and go to state 53
    KEEP	shift, and go to state 54
    ALWAYS	shift, and go to state 55
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 57

    statement	go to state 381
    function_define	go to state 59
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    sign_type_define	go to state 71
    all_type_define	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 196

    struct_define_statement  ->  struct_identifier OPEN_BPAR . option_struct_declaration CLOSE_BPAR   (rule 77)

    STRUCT	shift, and go to state 164
    UNION	shift, and go to state 165
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 168
    UNSIGNED	shift, and go to state 382
    SIGNED	shift, and go to state 48
    STRUCT_TYPE	shift, and go to state 57

    option_struct_declaration	go to state 383
    sign_declaration	go to state 384
    declaration	go to state 64
    type_define	go to state 170



state 197

    declaration  ->  type_define option_identifier_array_declaration .   (rule 83)

    $default	reduce using rule 83 (declaration)



state 198

    assign_operator  ->  ASS_P .   (rule 135)

    $default	reduce using rule 135 (assign_operator)



state 199

    assign_operator  ->  ASS_N .   (rule 136)

    $default	reduce using rule 136 (assign_operator)



state 200

    ass_statement  ->  ass_left assign_operator . ass_right   (rule 114)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    ass_right	go to state 385
    rightaddrshift	go to state 310
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 311
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    strliteral	go to state 315
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 201

    struct_member_exp  ->  array DOT . identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  array DOT . array option_struct_member_exp   (rule 368)

    OPEN_PAR	shift, and go to state 386
    ID  	shift, and go to state 173

    array	go to state 387
    identifier	go to state 388



state 202

    function  ->  array OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 76)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 367
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 368
    STRLITERAL	shift, and go to state 126
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    $default	reduce using rule 313 (option_function_identifier)

    function	go to state 95
    ass_right	go to state 369
    rightaddrshift	go to state 310
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 311
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 101
    type_cast	go to state 102
    option_function_identifier	go to state 389
    identifier	go to state 103
    strliteral	go to state 315
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 203

    struct_member_exp  ->  array IMPLY . identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array IMPLY . array option_struct_member_exp   (rule 375)

    OPEN_PAR	shift, and go to state 386
    ID  	shift, and go to state 173

    array	go to state 390
    identifier	go to state 391



state 204

    struct_member_exp  ->  point_exp DOT . identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  point_exp DOT . array option_struct_member_exp   (rule 369)

    OPEN_PAR	shift, and go to state 386
    ID  	shift, and go to state 173

    array	go to state 392
    identifier	go to state 393



state 205

    struct_member_exp  ->  point_exp IMPLY . identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp IMPLY . array option_struct_member_exp   (rule 379)

    OPEN_PAR	shift, and go to state 386
    ID  	shift, and go to state 173

    array	go to state 394
    identifier	go to state 395



state 206

    function_define  ->  all_type_define MUL . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 69)
    function_define  ->  all_type_define MUL . MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    MUL 	shift, and go to state 396
    ID  	shift, and go to state 397



state 207

    function_define  ->  all_type_define ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 68)

    OPEN_PAR	shift, and go to state 398



state 208

    struct_member_exp  ->  identifier DOT . identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  identifier DOT . array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier DOT . function   (rule 377)

    OPEN_PAR	shift, and go to state 386
    EXTERN	shift, and go to state 46
    ID  	shift, and go to state 56

    function	go to state 399
    array	go to state 400
    identifier	go to state 401



state 209

    struct_member_exp  ->  identifier IMPLY . identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier IMPLY . array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier IMPLY . function   (rule 378)

    OPEN_PAR	shift, and go to state 386
    EXTERN	shift, and go to state 46
    ID  	shift, and go to state 56

    function	go to state 402
    array	go to state 403
    identifier	go to state 404



state 210

    complexProposition  ->  DEFINE ID COLON . prime_bool_exp   (rule 25)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 121
    MY_TRUE	shift, and go to state 122
    MY_FALSE	shift, and go to state 123
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 127
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    prime_bool_exp	go to state 405
    identifier	go to state 103
    strliteral	go to state 130
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 211

    complexProposition  ->  OPEN_PAR complexProposition CLOSE_PAR .   (rule 27)

    $default	reduce using rule 27 (complexProposition)



state 212

    poptional_projection  ->  COMMA . complexProposition poptional_projection   (rule 28)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 406



state 213

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection . CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    CLOSE_BPAR	shift, and go to state 407



state 214

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 164)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 241)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 242)

    THEN	shift, and go to state 408
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273



state 215

    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)

    STRUCT_TYPE	shift, and go to state 409



state 216

    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 411



state 217

    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 413



state 218

    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    MUL 	shift, and go to state 414



state 219

    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 415
    MUL 	shift, and go to state 416



state 220

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 180)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 214)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 237)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 215
    INTDECLARATION	shift, and go to state 417
    CHARDECLARATION	shift, and go to state 418
    VOIDDECLARATION	shift, and go to state 218
    FLOATDECLARATION	shift, and go to state 419
    OPEN_PAR	shift, and go to state 220
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 420
    SIGNED	shift, and go to state 222
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 223
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 224
    point_exp	go to state 225
    ari_exp	go to state 226
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 227
    type_cast	go to state 102
    identifier	go to state 228
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 229



state 221

    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)

    INTDECLARATION	shift, and go to state 421
    CHARDECLARATION	shift, and go to state 422



state 222

    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)

    INTDECLARATION	shift, and go to state 423
    CHARDECLARATION	shift, and go to state 424



state 223

    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 237)

    MUL 	shift, and go to state 425



state 224

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 150)
    member_in_exp  ->  array .   (rule 177)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 201
    OPEN_PAR	shift, and go to state 202
    CLOSE_PAR	shift, and go to state 331
    IMPLY	shift, and go to state 203

    CLOSE_PAR	[reduce using rule 177 (member_in_exp)]
    $default	reduce using rule 177 (member_in_exp)



state 225

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 160)
    member_in_exp  ->  point_exp .   (rule 178)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 379)

    DOT 	shift, and go to state 204
    CLOSE_PAR	shift, and go to state 332
    IMPLY	shift, and go to state 205

    CLOSE_PAR	[reduce using rule 178 (member_in_exp)]
    $default	reduce using rule 178 (member_in_exp)



state 226

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 180)

    CLOSE_PAR	shift, and go to state 426
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    ari_operator	go to state 240



state 227

    member_in_exp  ->  address_exp .   (rule 182)
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 214)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)

    CLOSE_PAR	shift, and go to state 427

    CLOSE_PAR	[reduce using rule 182 (member_in_exp)]
    $default	reduce using rule 182 (member_in_exp)



state 228

    member_in_exp  ->  identifier .   (rule 176)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 324)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . DOT function   (rule 377)
    struct_member_exp  ->  identifier . IMPLY function   (rule 378)

    DOT 	shift, and go to state 208
    CLOSE_PAR	shift, and go to state 334
    IMPLY	shift, and go to state 209

    CLOSE_PAR	[reduce using rule 176 (member_in_exp)]
    $default	reduce using rule 176 (member_in_exp)



state 229

    member_in_exp  ->  struct_member_exp .   (rule 184)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 380)

    CLOSE_PAR	shift, and go to state 338

    CLOSE_PAR	[reduce using rule 184 (member_in_exp)]
    $default	reduce using rule 184 (member_in_exp)



state 230

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 214)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    OPEN_PAR	shift, and go to state 428
    ADDRESS	shift, and go to state 89
    MUL 	shift, and go to state 49
    ID  	shift, and go to state 173

    array	go to state 429
    point_exp	go to state 430
    address_exp	go to state 431
    identifier	go to state 432
    struct_member_exp	go to state 433



state 231

    address_exp  ->  ADDRESS array .   (rule 211)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 201

    DOT 	[reduce using rule 211 (address_exp)]
    $default	reduce using rule 211 (address_exp)



state 232

    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 379)

    DOT 	shift, and go to state 204
    IMPLY	shift, and go to state 205



state 233

    address_exp  ->  ADDRESS address_exp .   (rule 213)

    $default	reduce using rule 213 (address_exp)



state 234

    address_exp  ->  ADDRESS identifier .   (rule 210)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . DOT function   (rule 377)
    struct_member_exp  ->  identifier . IMPLY function   (rule 378)

    DOT 	shift, and go to state 208

    DOT 	[reduce using rule 210 (address_exp)]
    $default	reduce using rule 210 (address_exp)



state 235

    address_exp  ->  ADDRESS struct_member_exp .   (rule 212)

    $default	reduce using rule 212 (address_exp)



state 236

    member_in_exp  ->  SUB member_in_exp .   (rule 172)

    $default	reduce using rule 172 (member_in_exp)



state 237

    member_in_exp  ->  BNE member_in_exp .   (rule 173)

    $default	reduce using rule 173 (member_in_exp)



state 238

    ari_operator  ->  ADD .   (rule 193)

    $default	reduce using rule 193 (ari_operator)



state 239

    ari_operator  ->  SUB .   (rule 194)

    $default	reduce using rule 194 (ari_operator)



state 240

    ari_exp  ->  ari_exp ari_operator . simple_ari_exp   (rule 163)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    simple_ari_exp	go to state 434
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 241

    bi_operator  ->  INTER_OR .   (rule 191)

    $default	reduce using rule 191 (bi_operator)



state 242

    bi_operator  ->  CON .   (rule 192)

    $default	reduce using rule 192 (bi_operator)



state 243

    bi_operator  ->  ADDRESS .   (rule 190)

    $default	reduce using rule 190 (bi_operator)



state 244

    relation_operator  ->  NE .   (rule 260)

    $default	reduce using rule 260 (relation_operator)



state 245

    relation_operator  ->  EQ .   (rule 263)

    $default	reduce using rule 263 (relation_operator)



state 246

    relation_operator  ->  GE .   (rule 258)

    $default	reduce using rule 258 (relation_operator)



state 247

    relation_operator  ->  LE .   (rule 259)

    $default	reduce using rule 259 (relation_operator)



state 248

    relation_operator  ->  GT .   (rule 261)

    $default	reduce using rule 261 (relation_operator)



state 249

    relation_operator  ->  LT .   (rule 262)

    $default	reduce using rule 262 (relation_operator)



state 250

    bi_operator  ->  LST .   (rule 188)

    $default	reduce using rule 188 (bi_operator)



state 251

    bi_operator  ->  RST .   (rule 189)

    $default	reduce using rule 189 (bi_operator)



state 252

    bi_operator  ->  MUL .   (rule 185)

    $default	reduce using rule 185 (bi_operator)



state 253

    bi_operator  ->  DIV .   (rule 186)

    $default	reduce using rule 186 (bi_operator)



state 254

    bi_operator  ->  MOD .   (rule 187)

    $default	reduce using rule 187 (bi_operator)



state 255

    simple_ari_exp  ->  simple_ari_exp bi_operator . member_in_exp   (rule 170)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    member_in_exp	go to state 435
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 256

    ari_exp  ->  simple_ari_exp relation_operator . ari_exp   (rule 162)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 436
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 257

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition CHOP complexProposition .   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    IFF 	shift, and go to state 116
    PROPIMPLY	shift, and go to state 117
    OR  	shift, and go to state 118
    AND 	shift, and go to state 119
    CHOPSTAR	shift, and go to state 120

    $default	reduce using rule 8 (complexProposition)



state 258

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition IFF complexProposition .   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 118
    AND 	shift, and go to state 119
    CHOPSTAR	shift, and go to state 120

    $default	reduce using rule 6 (complexProposition)



state 259

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition PROPIMPLY complexProposition .   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 118
    AND 	shift, and go to state 119
    CHOPSTAR	shift, and go to state 120

    $default	reduce using rule 7 (complexProposition)



state 260

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition OR complexProposition .   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    AND 	shift, and go to state 119
    CHOPSTAR	shift, and go to state 120

    $default	reduce using rule 5 (complexProposition)



state 261

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition AND complexProposition .   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CHOPSTAR	shift, and go to state 120

    $default	reduce using rule 4 (complexProposition)



state 262

    prime_bool_exp  ->  POINTERNULL NE . ari_exp   (rule 255)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 437
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 263

    prime_bool_exp  ->  POINTERNULL EQ . ari_exp   (rule 254)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 438
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 264

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 180)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 214)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 237)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 243)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 215
    MY_TRUE	shift, and go to state 122
    MY_FALSE	shift, and go to state 123
    INTDECLARATION	shift, and go to state 417
    CHARDECLARATION	shift, and go to state 418
    VOIDDECLARATION	shift, and go to state 218
    FLOATDECLARATION	shift, and go to state 419
    OPEN_PAR	shift, and go to state 264
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 420
    SIGNED	shift, and go to state 222
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 125
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    STRUCT_TYPE	shift, and go to state 223
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 224
    point_exp	go to state 225
    ari_exp	go to state 265
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 227
    type_cast	go to state 102
    bool_exp	go to state 266
    prime_bool_exp	go to state 129
    identifier	go to state 228
    strliteral	go to state 130
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 229



state 265

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 180)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 244)
    prime_bool_exp  ->  ari_exp .   (rule 247)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 248)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 249)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 252)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 253)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 256)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 257)

    CLOSE_PAR	shift, and go to state 426
    NE  	shift, and go to state 268
    EQ  	shift, and go to state 269
    GE  	shift, and go to state 246
    LE  	shift, and go to state 247
    GT  	shift, and go to state 248
    LT  	shift, and go to state 249
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    CLOSE_PAR	[reduce using rule 247 (prime_bool_exp)]
    $default	reduce using rule 247 (prime_bool_exp)

    ari_operator	go to state 240
    relation_operator	go to state 270



state 266

    bool_exp  ->  bool_exp . AND bool_exp   (rule 241)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 242)
    bool_exp  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 243)

    CLOSE_PAR	shift, and go to state 439
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273



state 267

    bool_exp  ->  NEGATION bool_exp .   (rule 240)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 241)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 242)


    $default	reduce using rule 240 (bool_exp)



state 268

    prime_bool_exp  ->  ari_exp NE . strliteral   (rule 249)
    prime_bool_exp  ->  ari_exp NE . POINTERNULL   (rule 253)
    prime_bool_exp  ->  ari_exp NE . charliteral   (rule 257)
    relation_operator  ->  NE .   (rule 260)

    POINTERNULL	shift, and go to state 440
    STRLITERAL	shift, and go to state 126
    CHARLITERAL	shift, and go to state 94

    POINTERNULL	[reduce using rule 260 (relation_operator)]
    CHARLITERAL	[reduce using rule 260 (relation_operator)]
    $default	reduce using rule 260 (relation_operator)

    strliteral	go to state 441
    charliteral	go to state 442



state 269

    prime_bool_exp  ->  ari_exp EQ . strliteral   (rule 248)
    prime_bool_exp  ->  ari_exp EQ . POINTERNULL   (rule 252)
    prime_bool_exp  ->  ari_exp EQ . charliteral   (rule 256)
    relation_operator  ->  EQ .   (rule 263)

    POINTERNULL	shift, and go to state 443
    STRLITERAL	shift, and go to state 126
    CHARLITERAL	shift, and go to state 94

    POINTERNULL	[reduce using rule 263 (relation_operator)]
    CHARLITERAL	[reduce using rule 263 (relation_operator)]
    $default	reduce using rule 263 (relation_operator)

    strliteral	go to state 444
    charliteral	go to state 445



state 270

    prime_bool_exp  ->  ari_exp relation_operator . ari_exp   (rule 244)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 446
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 271

    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 349)

    error	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302

    statement_bpar	go to state 447



state 272

    bool_exp  ->  bool_exp OR . bool_exp   (rule 242)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 121
    MY_TRUE	shift, and go to state 122
    MY_FALSE	shift, and go to state 123
    OPEN_PAR	shift, and go to state 124
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 125
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 127
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    bool_exp	go to state 448
    prime_bool_exp	go to state 129
    identifier	go to state 103
    strliteral	go to state 130
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 273

    bool_exp  ->  bool_exp AND . bool_exp   (rule 241)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 121
    MY_TRUE	shift, and go to state 122
    MY_FALSE	shift, and go to state 123
    OPEN_PAR	shift, and go to state 124
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 125
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 127
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    bool_exp	go to state 449
    prime_bool_exp	go to state 129
    identifier	go to state 103
    strliteral	go to state 130
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 274

    prime_bool_exp  ->  strliteral NE . ari_exp   (rule 251)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 450
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 275

    prime_bool_exp  ->  strliteral EQ . ari_exp   (rule 250)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 451
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 276

    statement  ->  AWAIT OPEN_PAR bool_exp . CLOSE_PAR   (rule 42)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 241)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 242)

    CLOSE_PAR	shift, and go to state 452
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273



state 277

    declaration  ->  STRUCT ID option_identifier_array_declaration .   (rule 85)

    $default	reduce using rule 85 (declaration)



state 278

    function_define  ->  STRUCT STRUCT_TYPE MUL . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)
    function_define  ->  STRUCT STRUCT_TYPE MUL . MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 106)

    OPEN_PAR	shift, and go to state 137
    MUL 	shift, and go to state 453
    ID  	shift, and go to state 454

    option_identifier_array_declaration	go to state 372
    identifier	go to state 191



state 279

    function_define  ->  STRUCT STRUCT_TYPE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 71)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 103)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 105)
    identifier  ->  ID .   (rule 323)

    ARRAY	shift, and go to state 373
    OPEN_PAR	shift, and go to state 455
    OPEN_MPAR	shift, and go to state 374

    $default	reduce using rule 323 (identifier)



state 280

    declaration  ->  STRUCT STRUCT_TYPE option_identifier_array_declaration .   (rule 87)

    $default	reduce using rule 87 (declaration)



state 281

    declaration  ->  UNION ID option_identifier_array_declaration .   (rule 86)

    $default	reduce using rule 86 (declaration)



state 282

    declaration  ->  UNION STRUCT_TYPE option_identifier_array_declaration .   (rule 88)

    $default	reduce using rule 88 (declaration)



state 283

    statement  ->  DEFINE ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 58)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 348
    sign_type_define	go to state 71
    all_type_define	go to state 459
    option_function_parameter_list	go to state 460



state 284

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 324)

    CLOSE_PAR	shift, and go to state 334



state 285

    inner_option_define_identifier  ->  COMMA . all_type_define identifier inner_option_define_identifier   (rule 294)
    inner_option_define_identifier  ->  COMMA . all_type_define inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA . ID identifier inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE MUL identifier inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA . ID identifier ARRAY inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier ARRAY inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier ARRAY inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA . OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 305)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 306)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 307)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier inner_option_define_identifier   (rule 308)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL inner_option_define_identifier   (rule 309)
    inner_option_define_identifier  ->  COMMA . error   (rule 310)

    error	shift, and go to state 461
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 462
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 463
    STRUCT_TYPE	shift, and go to state 464

    type_define	go to state 348
    sign_type_define	go to state 71
    all_type_define	go to state 465



state 286

    statement  ->  EXIST identifier inner_option_define_identifier . COLON OPEN_BPAR statement CLOSE_BPAR   (rule 62)

    COLON	shift, and go to state 466



state 287

    statement  ->  FRAME OPEN_PAR identifier . option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 55)

    COMMA	shift, and go to state 467

    $default	reduce using rule 330 (option_frame_identifier)

    option_frame_identifier	go to state 468



state 288

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 85)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 87)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)

    ID  	shift, and go to state 343
    STRUCT_TYPE	shift, and go to state 469



state 289

    type_define  ->  INTDECLARATION .   (rule 93)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 411

    MUL 	[reduce using rule 93 (type_define)]
    $default	reduce using rule 93 (type_define)



state 290

    type_define  ->  CHARDECLARATION .   (rule 95)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 413

    MUL 	[reduce using rule 95 (type_define)]
    $default	reduce using rule 95 (type_define)



state 291

    type_define  ->  VOIDDECLARATION .   (rule 97)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    MUL 	shift, and go to state 414

    MUL 	[reduce using rule 97 (type_define)]
    $default	reduce using rule 97 (type_define)



state 292

    type_define  ->  FLOATDECLARATION .   (rule 94)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 415
    MUL 	shift, and go to state 416

    MUL 	[reduce using rule 94 (type_define)]
    $default	reduce using rule 94 (type_define)



state 293

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 180)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 214)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 237)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 215
    INTDECLARATION	shift, and go to state 417
    CHARDECLARATION	shift, and go to state 418
    VOIDDECLARATION	shift, and go to state 218
    FLOATDECLARATION	shift, and go to state 419
    OPEN_PAR	shift, and go to state 470
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 420
    SIGNED	shift, and go to state 222
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 150
    BNE 	shift, and go to state 91
    NEXT	shift, and go to state 178
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 223
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    ass_left	go to state 471
    leftaddrshift	go to state 68
    array	go to state 155
    point_exp	go to state 156
    ari_exp	go to state 226
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 227
    type_cast	go to state 102
    identifier	go to state 159
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 161



state 294

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 84)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 237)

    OPEN_PAR	shift, and go to state 137
    MUL 	shift, and go to state 472
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 190
    identifier	go to state 191



state 295

    for_sta_init  ->  declaration .   (rule 343)

    $default	reduce using rule 343 (for_sta_init)



state 296

    for_sta_init  ->  ass_statement .   (rule 342)

    $default	reduce using rule 342 (for_sta_init)



state 297

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init . COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 341)

    COMMA	shift, and go to state 473



state 298

    for_statement  ->  FOR ari_exp TIMES . DO statement_bpar   (rule 340)

    DO  	shift, and go to state 474



state 299

    bool_par  ->  error CLOSE_PAR .   (rule 322)

    $default	reduce using rule 322 (bool_par)



state 300

    bool_exp  ->  bool_exp . AND bool_exp   (rule 241)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 242)
    bool_par  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 321)

    CLOSE_PAR	shift, and go to state 475
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273



state 301

    statement_bpar  ->  error . CLOSE_BPAR   (rule 320)

    CLOSE_BPAR	shift, and go to state 476



state 302

    statement_bpar  ->  OPEN_BPAR . statement CLOSE_BPAR   (rule 319)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 47
    SIGNED	shift, and go to state 48
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 50
    LENGTH	shift, and go to state 51
    REQUEST	shift, and go to state 52
    FINAL	shift, and go to state 53
    KEEP	shift, and go to state 54
    ALWAYS	shift, and go to state 55
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 57

    statement	go to state 477
    function_define	go to state 59
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    sign_type_define	go to state 71
    all_type_define	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 303

    while_statement  ->  WHILE bool_par statement_bpar .   (rule 339)

    $default	reduce using rule 339 (while_statement)



state 304

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  REPEAT OPEN_BPAR statement . CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 43)
    statement  ->  statement . PARALLEL statement   (rule 53)

    CLOSE_BPAR	shift, and go to state 478
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 305

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 140)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 180)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 198)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 214)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 237)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 215
    INTDECLARATION	shift, and go to state 216
    CHARDECLARATION	shift, and go to state 217
    VOIDDECLARATION	shift, and go to state 218
    FLOATDECLARATION	shift, and go to state 219
    OPEN_PAR	shift, and go to state 479
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 221
    SIGNED	shift, and go to state 222
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    STRUCT_TYPE	shift, and go to state 223
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    ass_right	go to state 480
    rightaddrshift	go to state 310
    array	go to state 224
    point_exp	go to state 225
    ari_exp	go to state 481
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 482
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 227
    type_cast	go to state 102
    identifier	go to state 228
    strliteral	go to state 483
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 229



state 306

    option_struct_list_value  ->  OPEN_BPAR . ari_exp inner_option_list_value CLOSE_BPAR   (rule 202)
    option_struct_list_value  ->  OPEN_BPAR . strliteral inner_option_list_value CLOSE_BPAR   (rule 203)
    option_struct_list_value  ->  OPEN_BPAR . array_exp inner_option_list_value CLOSE_BPAR   (rule 204)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 484
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 485
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 486
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    strliteral	go to state 487
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 307

    option_list_value  ->  OPEN_MPAR . ari_exp inner_option_list_value CLOSE_MPAR   (rule 199)
    option_list_value  ->  OPEN_MPAR . strliteral inner_option_list_value CLOSE_MPAR   (rule 200)
    option_list_value  ->  OPEN_MPAR . array_exp inner_option_list_value CLOSE_MPAR   (rule 201)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 484
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 488
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 489
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    strliteral	go to state 490
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 308

    rightaddrshift  ->  MUL . OPEN_PAR leftaddrshift CLOSE_PAR   (rule 143)
    point_exp  ->  MUL . identifier   (rule 154)
    point_exp  ->  MUL . point_exp   (rule 155)
    point_exp  ->  MUL . array   (rule 156)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 158)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 159)

    OPEN_PAR	shift, and go to state 491
    MUL 	shift, and go to state 49
    ID  	shift, and go to state 173

    array	go to state 174
    point_exp	go to state 175
    identifier	go to state 176



state 309

    output_statement  ->  DISPLAY OPEN_PAR ass_right . CLOSE_PAR   (rule 352)
    output_statement  ->  DISPLAY OPEN_PAR ass_right . option_output CLOSE_PAR   (rule 353)

    COMMA	shift, and go to state 492
    CLOSE_PAR	shift, and go to state 493

    CLOSE_PAR	[reduce using rule 354 (option_output)]
    $default	reduce using rule 354 (option_output)

    option_output	go to state 494



state 310

    ass_right  ->  rightaddrshift .   (rule 142)

    $default	reduce using rule 142 (ass_right)



state 311

    ass_right  ->  ari_exp .   (rule 137)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 137 (ass_right)

    ari_operator	go to state 240



state 312

    ass_right  ->  array_exp .   (rule 138)
    array_exp  ->  array_exp . CON array_exp   (rule 195)

    CON 	shift, and go to state 495

    $default	reduce using rule 138 (ass_right)



state 313

    array_exp  ->  option_list_value .   (rule 196)

    $default	reduce using rule 196 (array_exp)



state 314

    array_exp  ->  option_struct_list_value .   (rule 197)

    $default	reduce using rule 197 (array_exp)



state 315

    ass_right  ->  strliteral .   (rule 139)

    $default	reduce using rule 139 (ass_right)



state 316

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 164)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 241)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 242)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 349)

    THEN	shift, and go to state 496
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273



state 317

    function_define  ->  STRUCT . STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 71)
    function_define  ->  STRUCT . STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)
    function_define  ->  STRUCT . STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)
    struct_identifier  ->  STRUCT . ID   (rule 78)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 85)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 87)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)

    ID  	shift, and go to state 132
    STRUCT_TYPE	shift, and go to state 497



state 318

    type_define  ->  INTDECLARATION .   (rule 93)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 498

    MUL 	[reduce using rule 93 (type_define)]
    $default	reduce using rule 93 (type_define)



state 319

    type_define  ->  CHARDECLARATION .   (rule 95)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 499

    MUL 	[reduce using rule 95 (type_define)]
    $default	reduce using rule 95 (type_define)



state 320

    type_define  ->  FLOATDECLARATION .   (rule 94)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 415
    MUL 	shift, and go to state 500

    MUL 	[reduce using rule 94 (type_define)]
    $default	reduce using rule 94 (type_define)



state 321

    sign_declaration  ->  UNSIGNED . declaration   (rule 81)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 264)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 265)

    STRUCT	shift, and go to state 164
    UNION	shift, and go to state 165
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 501
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 502
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 168
    STRUCT_TYPE	shift, and go to state 57

    declaration	go to state 169
    type_define	go to state 170



state 322

    sign_declaration  ->  SIGNED . declaration   (rule 80)
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)

    STRUCT	shift, and go to state 164
    UNION	shift, and go to state 165
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 503
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 504
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 168
    STRUCT_TYPE	shift, and go to state 57

    declaration	go to state 171
    type_define	go to state 170



state 323

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 54)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 336)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 337)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 338)

    CLOSE_PAR	shift, and go to state 505
    OR  	shift, and go to state 336
    AND 	shift, and go to state 337



state 324

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    point_exp  ->  MUL . identifier   (rule 154)
    point_exp  ->  MUL . point_exp   (rule 155)
    point_exp  ->  MUL . array   (rule 156)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 158)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 159)

    OPEN_PAR	shift, and go to state 172
    MUL 	shift, and go to state 49
    ID  	shift, and go to state 173

    array	go to state 174
    point_exp	go to state 175
    identifier	go to state 506



state 325

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    identifier  ->  ID .   (rule 323)

    OPEN_MPAR	shift, and go to state 507

    $default	reduce using rule 323 (identifier)



state 326

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    point_exp  ->  MUL identifier .   (rule 154)

    CLOSE_PAR	shift, and go to state 508

    CLOSE_PAR	[reduce using rule 154 (point_exp)]
    $default	reduce using rule 154 (point_exp)



state 327

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 180)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 214)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 237)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 215
    MY_TRUE	shift, and go to state 122
    MY_FALSE	shift, and go to state 123
    INTDECLARATION	shift, and go to state 216
    CHARDECLARATION	shift, and go to state 217
    VOIDDECLARATION	shift, and go to state 218
    FLOATDECLARATION	shift, and go to state 219
    OPEN_PAR	shift, and go to state 509
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 221
    SIGNED	shift, and go to state 222
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 151
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    STRUCT_TYPE	shift, and go to state 223
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 224
    point_exp	go to state 225
    ari_exp	go to state 265
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 227
    type_cast	go to state 102
    prime_bool_exp	go to state 158
    identifier	go to state 228
    strliteral	go to state 130
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    imply_pre	go to state 510
    struct_member_exp	go to state 229



state 328

    imply_pre  ->  NEGATION imply_pre .   (rule 335)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 336)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 337)


    $default	reduce using rule 335 (imply_pre)



state 329

    statement  ->  OPEN_PAR statement CLOSE_PAR .   (rule 63)

    $default	reduce using rule 63 (statement)



state 330

    ass_left  ->  OPEN_PAR ass_left CLOSE_PAR .   (rule 119)

    $default	reduce using rule 119 (ass_left)



state 331

    array  ->  OPEN_PAR array CLOSE_PAR .   (rule 150)

    $default	reduce using rule 150 (array)



state 332

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR .   (rule 160)

    OPEN_MPAR	shift, and go to state 511

    $default	reduce using rule 160 (point_exp)



state 333

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 376)

    IMPLY	shift, and go to state 512



state 334

    identifier  ->  OPEN_PAR identifier CLOSE_PAR .   (rule 324)

    $default	reduce using rule 324 (identifier)



state 335

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 54)

    IMPLY	shift, and go to state 513



state 336

    imply_pre  ->  imply_pre OR . imply_pre   (rule 337)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 121
    MY_TRUE	shift, and go to state 122
    MY_FALSE	shift, and go to state 123
    OPEN_PAR	shift, and go to state 327
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 151
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 127
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    prime_bool_exp	go to state 158
    identifier	go to state 103
    strliteral	go to state 130
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    imply_pre	go to state 514
    struct_member_exp	go to state 107



state 337

    imply_pre  ->  imply_pre AND . imply_pre   (rule 336)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 121
    MY_TRUE	shift, and go to state 122
    MY_FALSE	shift, and go to state 123
    OPEN_PAR	shift, and go to state 327
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 151
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 127
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    prime_bool_exp	go to state 158
    identifier	go to state 103
    strliteral	go to state 130
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    imply_pre	go to state 515
    struct_member_exp	go to state 107



state 338

    struct_member_exp  ->  OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 380)

    $default	reduce using rule 380 (struct_member_exp)



state 339

    option_projection  ->  COMMA . statement option_projection   (rule 333)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 47
    SIGNED	shift, and go to state 48
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 50
    LENGTH	shift, and go to state 51
    REQUEST	shift, and go to state 52
    FINAL	shift, and go to state 53
    KEEP	shift, and go to state 54
    ALWAYS	shift, and go to state 55
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 57

    statement	go to state 516
    function_define	go to state 59
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    sign_type_define	go to state 71
    all_type_define	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 340

    statement  ->  OPEN_BPAR statement CLOSE_BPAR . PROJECTION statement_bpar   (rule 57)

    PROJECTION	shift, and go to state 517



state 341

    statement  ->  OPEN_BPAR statement option_projection . CLOSE_BPAR PROJECTION statement_bpar   (rule 56)

    CLOSE_BPAR	shift, and go to state 518



state 342

    function  ->  EXTERN ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 75)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 367
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 368
    STRLITERAL	shift, and go to state 126
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    $default	reduce using rule 313 (option_function_identifier)

    function	go to state 95
    ass_right	go to state 369
    rightaddrshift	go to state 310
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 311
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 101
    type_cast	go to state 102
    option_function_identifier	go to state 519
    identifier	go to state 103
    strliteral	go to state 315
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 343

    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 85)

    OPEN_PAR	shift, and go to state 137
    MUL 	shift, and go to state 188
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 277
    identifier	go to state 191



state 344

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 87)

    OPEN_PAR	shift, and go to state 137
    MUL 	shift, and go to state 188
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 280
    identifier	go to state 191



state 345

    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 86)

    OPEN_PAR	shift, and go to state 137
    MUL 	shift, and go to state 188
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 281
    identifier	go to state 191



state 346

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)

    OPEN_PAR	shift, and go to state 137
    MUL 	shift, and go to state 520
    ID  	shift, and go to state 521

    identifier	go to state 522



state 347

    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 264)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 265)

    INTDECLARATION	shift, and go to state 523
    CHARDECLARATION	shift, and go to state 524



state 348

    all_type_define  ->  type_define .   (rule 267)

    $default	reduce using rule 267 (all_type_define)



state 349

    point_exp  ->  MUL OPEN_PAR ari_exp . CLOSE_PAR   (rule 159)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    CLOSE_PAR	shift, and go to state 525
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    ari_operator	go to state 240



state 350

    point_exp  ->  MUL OPEN_PAR all_type_define . MUL CLOSE_PAR ari_exp   (rule 158)

    MUL 	shift, and go to state 526



state 351

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 54)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 63)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 214)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 148
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    MY_TRUE	shift, and go to state 122
    MY_FALSE	shift, and go to state 123
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 527
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 528
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 529
    OPEN_PAR	shift, and go to state 149
    OPEN_BPAR	shift, and go to state 45
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 530
    SIGNED	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 150
    BNE 	shift, and go to state 91
    NEXT	shift, and go to state 50
    NEGATION	shift, and go to state 151
    LENGTH	shift, and go to state 51
    REQUEST	shift, and go to state 52
    FINAL	shift, and go to state 53
    KEEP	shift, and go to state 54
    ALWAYS	shift, and go to state 55
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    STRUCT_TYPE	shift, and go to state 57
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    statement	go to state 152
    function_define	go to state 59
    function	go to state 153
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 154
    leftaddrshift	go to state 68
    array	go to state 155
    point_exp	go to state 156
    ari_exp	go to state 127
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 227
    type_cast	go to state 102
    prime_bool_exp	go to state 158
    sign_type_define	go to state 71
    all_type_define	go to state 72
    identifier	go to state 159
    strliteral	go to state 130
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    imply_pre	go to state 160
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 161



state 352

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  NEXT OPEN_PAR statement . CLOSE_PAR   (rule 39)
    statement  ->  statement . PARALLEL statement   (rule 53)

    CLOSE_PAR	shift, and go to state 531
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 353

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    ass_left  ->  array .   (rule 117)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 150)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 201
    OPEN_PAR	shift, and go to state 202
    CLOSE_PAR	shift, and go to state 331
    IMPLY	shift, and go to state 203

    CLOSE_PAR	[reduce using rule 117 (ass_left)]
    $default	reduce using rule 117 (ass_left)



state 354

    ass_left  ->  point_exp .   (rule 118)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 160)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 379)

    DOT 	shift, and go to state 204
    CLOSE_PAR	shift, and go to state 332
    IMPLY	shift, and go to state 205

    CLOSE_PAR	[reduce using rule 118 (ass_left)]
    $default	reduce using rule 118 (ass_left)



state 355

    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)

    CLOSE_PAR	shift, and go to state 333



state 356

    ass_left  ->  identifier .   (rule 115)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 324)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . DOT function   (rule 377)
    struct_member_exp  ->  identifier . IMPLY function   (rule 378)

    DOT 	shift, and go to state 208
    CLOSE_PAR	shift, and go to state 334
    IMPLY	shift, and go to state 209

    CLOSE_PAR	[reduce using rule 115 (ass_left)]
    $default	reduce using rule 115 (ass_left)



state 357

    ass_left  ->  struct_member_exp .   (rule 116)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 380)

    CLOSE_PAR	shift, and go to state 338

    CLOSE_PAR	[reduce using rule 116 (ass_left)]
    $default	reduce using rule 116 (ass_left)



state 358

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    OPEN_PAR	shift, and go to state 532
    ADDRESS	shift, and go to state 89
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 178
    ID  	shift, and go to state 173

    ass_left	go to state 471
    leftaddrshift	go to state 68
    array	go to state 533
    point_exp	go to state 354
    address_exp	go to state 355
    identifier	go to state 356
    struct_member_exp	go to state 357



state 359

    statement  ->  LENGTH OPEN_PAR ari_exp . CLOSE_PAR   (rule 47)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    CLOSE_PAR	shift, and go to state 534
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    ari_operator	go to state 240



state 360

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    OPEN_PAR	shift, and go to state 428
    ADDRESS	shift, and go to state 89
    MUL 	shift, and go to state 49
    ID  	shift, and go to state 173

    array	go to state 429
    point_exp	go to state 430
    address_exp	go to state 355
    identifier	go to state 432
    struct_member_exp	go to state 433



state 361

    input_statement  ->  REQUEST OPEN_PAR array . CLOSE_PAR   (rule 358)
    input_statement  ->  REQUEST OPEN_PAR array . option_input CLOSE_PAR   (rule 359)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 201
    COMMA	shift, and go to state 535
    CLOSE_PAR	shift, and go to state 536
    IMPLY	shift, and go to state 203

    CLOSE_PAR	[reduce using rule 361 (option_input)]
    $default	reduce using rule 361 (option_input)

    option_input	go to state 537



state 362

    input_statement  ->  REQUEST OPEN_PAR identifier . CLOSE_PAR   (rule 356)
    input_statement  ->  REQUEST OPEN_PAR identifier . option_input CLOSE_PAR   (rule 357)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . DOT function   (rule 377)
    struct_member_exp  ->  identifier . IMPLY function   (rule 378)

    DOT 	shift, and go to state 208
    COMMA	shift, and go to state 535
    CLOSE_PAR	shift, and go to state 538
    IMPLY	shift, and go to state 209

    CLOSE_PAR	[reduce using rule 361 (option_input)]
    $default	reduce using rule 361 (option_input)

    option_input	go to state 539



state 363

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 360)

    CLOSE_PAR	shift, and go to state 540



state 364

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  FINAL OPEN_PAR statement . CLOSE_PAR   (rule 52)
    statement  ->  statement . PARALLEL statement   (rule 53)

    CLOSE_PAR	shift, and go to state 541
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 365

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  KEEP OPEN_PAR statement . CLOSE_PAR   (rule 40)
    statement  ->  statement . PARALLEL statement   (rule 53)

    CLOSE_PAR	shift, and go to state 542
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 366

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  ALWAYS OPEN_PAR statement . CLOSE_PAR   (rule 41)
    statement  ->  statement . PARALLEL statement   (rule 53)

    CLOSE_PAR	shift, and go to state 543
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 367

    address_exp  ->  ADDRESS . identifier   (rule 210)
    address_exp  ->  ADDRESS . array   (rule 211)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 212)
    address_exp  ->  ADDRESS . address_exp   (rule 213)
    option_function_identifier  ->  ADDRESS . error   (rule 314)

    error	shift, and go to state 544
    OPEN_PAR	shift, and go to state 230
    ADDRESS	shift, and go to state 89
    MUL 	shift, and go to state 49
    ID  	shift, and go to state 173

    array	go to state 231
    point_exp	go to state 232
    address_exp	go to state 233
    identifier	go to state 234
    struct_member_exp	go to state 235



state 368

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 74)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    option_function_identifier  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 312)
    identifier  ->  ID .   (rule 323)

    OPEN_PAR	shift, and go to state 545
    OPEN_MPAR	shift, and go to state 187

    $default	reduce using rule 323 (identifier)



state 369

    option_function_identifier  ->  ass_right . inner_option_function_identifier   (rule 311)

    COMMA	shift, and go to state 546

    $default	reduce using rule 317 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 547



state 370

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 74)

    CLOSE_PAR	shift, and go to state 548



state 371

    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 144)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    COMMA	shift, and go to state 549
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 153 (option_ari_exp)

    option_ari_exp	go to state 550
    ari_operator	go to state 240



state 372

    option_identifier_array_declaration  ->  MUL option_identifier_array_declaration .   (rule 106)

    $default	reduce using rule 106 (option_identifier_array_declaration)



state 373

    option_identifier_array_declaration  ->  ID ARRAY . ASS_P array_exp inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID ARRAY . ASS_P strliteral inner_option_identifier_array_declaration   (rule 103)

    ASS_P	shift, and go to state 551



state 374

    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 105)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 552
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 375

    inner_option_identifier_array_declaration  ->  COMMA . option_identifier_array_declaration   (rule 107)
    inner_option_identifier_array_declaration  ->  COMMA . error   (rule 108)

    error	shift, and go to state 553
    OPEN_PAR	shift, and go to state 137
    MUL 	shift, and go to state 188
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 554
    identifier	go to state 191



state 376

    option_identifier_array_declaration  ->  identifier ASS_P . ass_right inner_option_identifier_array_declaration   (rule 101)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    ass_right	go to state 555
    rightaddrshift	go to state 310
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 311
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    strliteral	go to state 315
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 377

    option_identifier_array_declaration  ->  identifier inner_option_identifier_array_declaration .   (rule 99)

    $default	reduce using rule 99 (option_identifier_array_declaration)



state 378

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement CHOP statement .   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)

    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195

    $default	reduce using rule 32 (statement)



state 379

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement OR statement .   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)

    AND 	shift, and go to state 195

    $default	reduce using rule 31 (statement)



state 380

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    statement  ->  statement PARALLEL statement .   (rule 53)

    AND 	shift, and go to state 195

    $default	reduce using rule 53 (statement)



state 381

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement AND statement .   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)


    $default	reduce using rule 30 (statement)



state 382

    sign_declaration  ->  UNSIGNED . declaration   (rule 81)

    STRUCT	shift, and go to state 164
    UNION	shift, and go to state 165
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 168
    STRUCT_TYPE	shift, and go to state 57

    declaration	go to state 169
    type_define	go to state 170



state 383

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration . CLOSE_BPAR   (rule 77)

    CLOSE_BPAR	shift, and go to state 556



state 384

    option_struct_declaration  ->  sign_declaration .   (rule 64)
    option_struct_declaration  ->  sign_declaration . AND option_struct_declaration   (rule 65)

    AND 	shift, and go to state 557

    $default	reduce using rule 64 (option_struct_declaration)



state 385

    ass_statement  ->  ass_left assign_operator ass_right .   (rule 114)

    $default	reduce using rule 114 (ass_statement)



state 386

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)

    OPEN_PAR	shift, and go to state 558
    ID  	shift, and go to state 173

    array	go to state 559
    identifier	go to state 284



state 387

    struct_member_exp  ->  array DOT array . option_struct_member_exp   (rule 368)

    DOT 	shift, and go to state 560
    IMPLY	shift, and go to state 561

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 562



state 388

    struct_member_exp  ->  array DOT identifier . option_struct_member_exp   (rule 365)

    DOT 	shift, and go to state 560
    IMPLY	shift, and go to state 561

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 563



state 389

    function  ->  array OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 76)

    CLOSE_PAR	shift, and go to state 564



state 390

    struct_member_exp  ->  array IMPLY array . option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 560
    IMPLY	shift, and go to state 561

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 565



state 391

    struct_member_exp  ->  array IMPLY identifier . option_struct_member_exp   (rule 371)

    DOT 	shift, and go to state 560
    IMPLY	shift, and go to state 561

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 566



state 392

    struct_member_exp  ->  point_exp DOT array . option_struct_member_exp   (rule 369)

    DOT 	shift, and go to state 560
    IMPLY	shift, and go to state 561

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 567



state 393

    struct_member_exp  ->  point_exp DOT identifier . option_struct_member_exp   (rule 366)

    DOT 	shift, and go to state 560
    IMPLY	shift, and go to state 561

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 568



state 394

    struct_member_exp  ->  point_exp IMPLY array . option_struct_member_exp   (rule 379)

    DOT 	shift, and go to state 560
    IMPLY	shift, and go to state 561

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 569



state 395

    struct_member_exp  ->  point_exp IMPLY identifier . option_struct_member_exp   (rule 373)

    DOT 	shift, and go to state 560
    IMPLY	shift, and go to state 561

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 570



state 396

    function_define  ->  all_type_define MUL MUL . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    ID  	shift, and go to state 571



state 397

    function_define  ->  all_type_define MUL ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 69)

    OPEN_PAR	shift, and go to state 572



state 398

    function_define  ->  all_type_define ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 68)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 348
    sign_type_define	go to state 71
    all_type_define	go to state 459
    option_function_parameter_list	go to state 573



state 399

    struct_member_exp  ->  identifier DOT function .   (rule 377)

    $default	reduce using rule 377 (struct_member_exp)



state 400

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    struct_member_exp  ->  identifier DOT array . option_struct_member_exp   (rule 367)

    DOT 	shift, and go to state 560
    OPEN_PAR	shift, and go to state 202
    IMPLY	shift, and go to state 561

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 574



state 401

    struct_member_exp  ->  identifier DOT identifier . option_struct_member_exp   (rule 364)

    DOT 	shift, and go to state 560
    IMPLY	shift, and go to state 561

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 575



state 402

    struct_member_exp  ->  identifier IMPLY function .   (rule 378)

    $default	reduce using rule 378 (struct_member_exp)



state 403

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    struct_member_exp  ->  identifier IMPLY array . option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 560
    OPEN_PAR	shift, and go to state 202
    IMPLY	shift, and go to state 561

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 576



state 404

    struct_member_exp  ->  identifier IMPLY identifier . option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 560
    IMPLY	shift, and go to state 561

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 577



state 405

    complexProposition  ->  DEFINE ID COLON prime_bool_exp .   (rule 25)

    $default	reduce using rule 25 (complexProposition)



state 406

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    poptional_projection  ->  COMMA complexProposition . poptional_projection   (rule 28)

    COMMA	shift, and go to state 212
    CHOP	shift, and go to state 115
    IFF 	shift, and go to state 116
    PROPIMPLY	shift, and go to state 117
    OR  	shift, and go to state 118
    AND 	shift, and go to state 119
    CHOPSTAR	shift, and go to state 120

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 578



state 407

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR . PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    PROJECTION	shift, and go to state 579



state 408

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 164)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 580
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 409

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 236)

    MUL 	shift, and go to state 581



state 410

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 215)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 582
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 411

    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 584
    MUL 	shift, and go to state 585



state 412

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 217)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 586
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 413

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 587
    MUL 	shift, and go to state 588



state 414

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 589
    MUL 	shift, and go to state 590



state 415

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 216)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 591
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 416

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 592
    MUL 	shift, and go to state 593



state 417

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 594



state 418

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 595



state 419

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 415
    MUL 	shift, and go to state 596



state 420

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)

    INTDECLARATION	shift, and go to state 597
    CHARDECLARATION	shift, and go to state 598



state 421

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 599
    MUL 	shift, and go to state 600



state 422

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 601
    MUL 	shift, and go to state 602



state 423

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)

    CLOSE_PAR	shift, and go to state 603



state 424

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)

    CLOSE_PAR	shift, and go to state 604



state 425

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 605
    MUL 	shift, and go to state 606



state 426

    member_in_exp  ->  OPEN_PAR ari_exp CLOSE_PAR .   (rule 180)

    $default	reduce using rule 180 (member_in_exp)



state 427

    address_exp  ->  OPEN_PAR address_exp CLOSE_PAR .   (rule 214)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 376)

    IMPLY	shift, and go to state 512

    IMPLY	[reduce using rule 214 (address_exp)]
    $default	reduce using rule 214 (address_exp)



state 428

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 214)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    INTDECLARATION	shift, and go to state 607
    CHARDECLARATION	shift, and go to state 608
    FLOATDECLARATION	shift, and go to state 609
    OPEN_PAR	shift, and go to state 428
    UNSIGNED	shift, and go to state 610
    ADDRESS	shift, and go to state 89
    MUL 	shift, and go to state 49
    ID  	shift, and go to state 173

    array	go to state 429
    point_exp	go to state 430
    address_exp	go to state 431
    identifier	go to state 432
    struct_member_exp	go to state 433



state 429

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 150)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 201
    CLOSE_PAR	shift, and go to state 331
    IMPLY	shift, and go to state 203



state 430

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 160)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 379)

    DOT 	shift, and go to state 204
    CLOSE_PAR	shift, and go to state 332
    IMPLY	shift, and go to state 205



state 431

    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 214)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)

    CLOSE_PAR	shift, and go to state 427



state 432

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 324)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . DOT function   (rule 377)
    struct_member_exp  ->  identifier . IMPLY function   (rule 378)

    DOT 	shift, and go to state 208
    CLOSE_PAR	shift, and go to state 334
    IMPLY	shift, and go to state 209



state 433

    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 380)

    CLOSE_PAR	shift, and go to state 338



state 434

    ari_exp  ->  ari_exp ari_operator simple_ari_exp .   (rule 163)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 170)

    INTER_OR	shift, and go to state 241
    CON 	shift, and go to state 242
    ADDRESS	shift, and go to state 243
    LST 	shift, and go to state 250
    RST 	shift, and go to state 251
    MUL 	shift, and go to state 252
    DIV 	shift, and go to state 253
    MOD 	shift, and go to state 254

    INTER_OR	[reduce using rule 163 (ari_exp)]
    CON 	[reduce using rule 163 (ari_exp)]
    ADDRESS	[reduce using rule 163 (ari_exp)]
    LST 	[reduce using rule 163 (ari_exp)]
    RST 	[reduce using rule 163 (ari_exp)]
    MUL 	[reduce using rule 163 (ari_exp)]
    DIV 	[reduce using rule 163 (ari_exp)]
    MOD 	[reduce using rule 163 (ari_exp)]
    $default	reduce using rule 163 (ari_exp)

    bi_operator	go to state 255



state 435

    simple_ari_exp  ->  simple_ari_exp bi_operator member_in_exp .   (rule 170)

    $default	reduce using rule 170 (simple_ari_exp)



state 436

    ari_exp  ->  simple_ari_exp relation_operator ari_exp .   (rule 162)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    ADD 	[reduce using rule 162 (ari_exp)]
    SUB 	[reduce using rule 162 (ari_exp)]
    $default	reduce using rule 162 (ari_exp)

    ari_operator	go to state 240



state 437

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)
    prime_bool_exp  ->  POINTERNULL NE ari_exp .   (rule 255)

    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 255 (prime_bool_exp)

    ari_operator	go to state 240



state 438

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)
    prime_bool_exp  ->  POINTERNULL EQ ari_exp .   (rule 254)

    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 254 (prime_bool_exp)

    ari_operator	go to state 240



state 439

    bool_exp  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 243)

    $default	reduce using rule 243 (bool_exp)



state 440

    prime_bool_exp  ->  ari_exp NE POINTERNULL .   (rule 253)

    $default	reduce using rule 253 (prime_bool_exp)



state 441

    prime_bool_exp  ->  ari_exp NE strliteral .   (rule 249)

    $default	reduce using rule 249 (prime_bool_exp)



state 442

    prime_bool_exp  ->  ari_exp NE charliteral .   (rule 257)

    $default	reduce using rule 257 (prime_bool_exp)



state 443

    prime_bool_exp  ->  ari_exp EQ POINTERNULL .   (rule 252)

    $default	reduce using rule 252 (prime_bool_exp)



state 444

    prime_bool_exp  ->  ari_exp EQ strliteral .   (rule 248)

    $default	reduce using rule 248 (prime_bool_exp)



state 445

    prime_bool_exp  ->  ari_exp EQ charliteral .   (rule 256)

    $default	reduce using rule 256 (prime_bool_exp)



state 446

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)
    prime_bool_exp  ->  ari_exp relation_operator ari_exp .   (rule 244)

    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 244 (prime_bool_exp)

    ari_operator	go to state 240



state 447

    if_statement  ->  IF bool_exp THEN statement_bpar . option_else_statement   (rule 349)

    ELSE	shift, and go to state 611

    $default	reduce using rule 351 (option_else_statement)

    option_else_statement	go to state 612



state 448

    bool_exp  ->  bool_exp . AND bool_exp   (rule 241)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 242)
    bool_exp  ->  bool_exp OR bool_exp .   (rule 242)

    AND 	shift, and go to state 273

    $default	reduce using rule 242 (bool_exp)



state 449

    bool_exp  ->  bool_exp . AND bool_exp   (rule 241)
    bool_exp  ->  bool_exp AND bool_exp .   (rule 241)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 242)


    $default	reduce using rule 241 (bool_exp)



state 450

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)
    prime_bool_exp  ->  strliteral NE ari_exp .   (rule 251)

    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 251 (prime_bool_exp)

    ari_operator	go to state 240



state 451

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)
    prime_bool_exp  ->  strliteral EQ ari_exp .   (rule 250)

    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 250 (prime_bool_exp)

    ari_operator	go to state 240



state 452

    statement  ->  AWAIT OPEN_PAR bool_exp CLOSE_PAR .   (rule 42)

    $default	reduce using rule 42 (statement)



state 453

    function_define  ->  STRUCT STRUCT_TYPE MUL MUL . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 106)

    OPEN_PAR	shift, and go to state 137
    MUL 	shift, and go to state 188
    ID  	shift, and go to state 613

    option_identifier_array_declaration	go to state 372
    identifier	go to state 191



state 454

    function_define  ->  STRUCT STRUCT_TYPE MUL ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 103)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 105)
    identifier  ->  ID .   (rule 323)

    ARRAY	shift, and go to state 373
    OPEN_PAR	shift, and go to state 614
    OPEN_MPAR	shift, and go to state 374

    $default	reduce using rule 323 (identifier)



state 455

    function_define  ->  STRUCT STRUCT_TYPE ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 71)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 348
    sign_type_define	go to state 71
    all_type_define	go to state 459
    option_function_parameter_list	go to state 615



state 456

    option_function_parameter_list  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 292)

    MUL 	shift, and go to state 616



state 457

    option_function_parameter_list  ->  ID . identifier inner_option_define_identifier   (rule 274)
    option_function_parameter_list  ->  ID . MUL identifier inner_option_define_identifier   (rule 275)
    option_function_parameter_list  ->  ID . MUL MUL identifier inner_option_define_identifier   (rule 276)
    option_function_parameter_list  ->  ID . identifier ARRAY inner_option_define_identifier   (rule 277)
    option_function_parameter_list  ->  ID . inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  ID . MUL inner_option_define_identifier   (rule 282)
    option_function_parameter_list  ->  ID . MUL MUL inner_option_define_identifier   (rule 283)

    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 137
    MUL 	shift, and go to state 617
    ID  	shift, and go to state 138

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 618
    identifier	go to state 619



state 458

    option_function_parameter_list  ->  STRUCT_TYPE . identifier inner_option_define_identifier   (rule 270)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL identifier inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 273)
    option_function_parameter_list  ->  STRUCT_TYPE . inner_option_define_identifier   (rule 278)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL inner_option_define_identifier   (rule 279)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL inner_option_define_identifier   (rule 280)

    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 137
    MUL 	shift, and go to state 620
    ID  	shift, and go to state 138

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 621
    identifier	go to state 622



state 459

    option_function_parameter_list  ->  all_type_define . identifier inner_option_define_identifier   (rule 268)
    option_function_parameter_list  ->  all_type_define . inner_option_define_identifier   (rule 269)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY inner_option_define_identifier   (rule 284)
    option_function_parameter_list  ->  all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 285)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 286)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 287)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 288)
    option_function_parameter_list  ->  all_type_define . MUL identifier inner_option_define_identifier   (rule 289)
    option_function_parameter_list  ->  all_type_define . MUL inner_option_define_identifier   (rule 290)
    option_function_parameter_list  ->  all_type_define . MUL MUL identifier inner_option_define_identifier   (rule 291)

    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 137
    MUL 	shift, and go to state 623
    ID  	shift, and go to state 138

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 624
    identifier	go to state 625



state 460

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 58)

    CLOSE_PAR	shift, and go to state 626



state 461

    inner_option_define_identifier  ->  COMMA error .   (rule 310)

    $default	reduce using rule 310 (inner_option_define_identifier)



state 462

    inner_option_define_identifier  ->  COMMA OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 303)

    MUL 	shift, and go to state 627



state 463

    inner_option_define_identifier  ->  COMMA ID . identifier inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA ID . identifier ARRAY inner_option_define_identifier   (rule 299)

    OPEN_PAR	shift, and go to state 137
    ID  	shift, and go to state 138

    identifier	go to state 628



state 464

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 300)

    OPEN_PAR	shift, and go to state 137
    MUL 	shift, and go to state 629
    ID  	shift, and go to state 138

    identifier	go to state 630



state 465

    inner_option_define_identifier  ->  COMMA all_type_define . identifier inner_option_define_identifier   (rule 294)
    inner_option_define_identifier  ->  COMMA all_type_define . inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 305)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 306)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 307)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier inner_option_define_identifier   (rule 308)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL inner_option_define_identifier   (rule 309)

    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 137
    MUL 	shift, and go to state 631
    ID  	shift, and go to state 138

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 632
    identifier	go to state 633



state 466

    statement  ->  EXIST identifier inner_option_define_identifier COLON . OPEN_BPAR statement CLOSE_BPAR   (rule 62)

    OPEN_BPAR	shift, and go to state 634



state 467

    option_frame_identifier  ->  COMMA . identifier option_frame_identifier   (rule 329)
    option_frame_identifier  ->  COMMA . error   (rule 331)

    error	shift, and go to state 635
    OPEN_PAR	shift, and go to state 137
    ID  	shift, and go to state 138

    identifier	go to state 636



state 468

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier . CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 55)

    CLOSE_PAR	shift, and go to state 637



state 469

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 87)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 236)

    OPEN_PAR	shift, and go to state 137
    MUL 	shift, and go to state 638
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 280
    identifier	go to state 191



state 470

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 180)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 214)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 237)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 215
    INTDECLARATION	shift, and go to state 639
    CHARDECLARATION	shift, and go to state 640
    VOIDDECLARATION	shift, and go to state 218
    FLOATDECLARATION	shift, and go to state 641
    OPEN_PAR	shift, and go to state 470
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 642
    SIGNED	shift, and go to state 222
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    NEXT	shift, and go to state 178
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 223
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    ass_left	go to state 471
    leftaddrshift	go to state 68
    array	go to state 155
    point_exp	go to state 156
    ari_exp	go to state 226
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 227
    type_cast	go to state 102
    identifier	go to state 159
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 161



state 471

    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 119)

    CLOSE_PAR	shift, and go to state 330



state 472

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 106)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 237)

    OPEN_PAR	shift, and go to state 137
    CLOSE_PAR	shift, and go to state 605
    MUL 	shift, and go to state 643
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 372
    identifier	go to state 191



state 473

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA . for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 341)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 121
    MY_TRUE	shift, and go to state 122
    MY_FALSE	shift, and go to state 123
    OPEN_PAR	shift, and go to state 124
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 125
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    $default	reduce using rule 346 (for_sta_condition)

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 127
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    bool_exp	go to state 644
    prime_bool_exp	go to state 129
    identifier	go to state 103
    strliteral	go to state 130
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    for_sta_condition	go to state 645
    struct_member_exp	go to state 107



state 474

    for_statement  ->  FOR ari_exp TIMES DO . statement_bpar   (rule 340)

    error	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302

    statement_bpar	go to state 646



state 475

    bool_par  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 321)

    $default	reduce using rule 321 (bool_par)



state 476

    statement_bpar  ->  error CLOSE_BPAR .   (rule 320)

    $default	reduce using rule 320 (statement_bpar)



state 477

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    statement_bpar  ->  OPEN_BPAR statement . CLOSE_BPAR   (rule 319)

    CLOSE_BPAR	shift, and go to state 647
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 478

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR . UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 43)

    UNTIL	shift, and go to state 648



state 479

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 140)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 180)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 198)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 214)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 237)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 215
    INTDECLARATION	shift, and go to state 417
    CHARDECLARATION	shift, and go to state 418
    VOIDDECLARATION	shift, and go to state 218
    FLOATDECLARATION	shift, and go to state 419
    OPEN_PAR	shift, and go to state 479
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 420
    SIGNED	shift, and go to state 222
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    STRUCT_TYPE	shift, and go to state 223
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    ass_right	go to state 480
    rightaddrshift	go to state 310
    array	go to state 224
    point_exp	go to state 225
    ari_exp	go to state 481
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 482
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 227
    type_cast	go to state 102
    identifier	go to state 228
    strliteral	go to state 483
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 229



state 480

    ass_right  ->  OPEN_PAR ass_right . CLOSE_PAR   (rule 141)

    CLOSE_PAR	shift, and go to state 649



state 481

    ass_right  ->  ari_exp .   (rule 137)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 180)

    CLOSE_PAR	shift, and go to state 426
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    CLOSE_PAR	[reduce using rule 137 (ass_right)]
    $default	reduce using rule 137 (ass_right)

    ari_operator	go to state 240



state 482

    ass_right  ->  array_exp .   (rule 138)
    array_exp  ->  array_exp . CON array_exp   (rule 195)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 198)

    CLOSE_PAR	shift, and go to state 650
    CON 	shift, and go to state 495

    CLOSE_PAR	[reduce using rule 138 (ass_right)]
    $default	reduce using rule 138 (ass_right)



state 483

    ass_right  ->  strliteral .   (rule 139)
    ass_right  ->  OPEN_PAR strliteral . CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 140)

    CLOSE_PAR	shift, and go to state 651

    CLOSE_PAR	[reduce using rule 139 (ass_right)]
    $default	reduce using rule 139 (ass_right)



state 484

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 180)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 198)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 214)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 237)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 215
    INTDECLARATION	shift, and go to state 216
    CHARDECLARATION	shift, and go to state 217
    VOIDDECLARATION	shift, and go to state 218
    FLOATDECLARATION	shift, and go to state 219
    OPEN_PAR	shift, and go to state 652
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 221
    SIGNED	shift, and go to state 222
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 223
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 224
    point_exp	go to state 225
    ari_exp	go to state 226
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 653
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 227
    type_cast	go to state 102
    identifier	go to state 228
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 229



state 485

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)
    option_struct_list_value  ->  OPEN_BPAR ari_exp . inner_option_list_value CLOSE_BPAR   (rule 202)

    COMMA	shift, and go to state 654
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 208 (inner_option_list_value)

    ari_operator	go to state 240
    inner_option_list_value	go to state 655



state 486

    array_exp  ->  array_exp . CON array_exp   (rule 195)
    option_struct_list_value  ->  OPEN_BPAR array_exp . inner_option_list_value CLOSE_BPAR   (rule 204)

    COMMA	shift, and go to state 654
    CON 	shift, and go to state 495

    $default	reduce using rule 208 (inner_option_list_value)

    inner_option_list_value	go to state 656



state 487

    option_struct_list_value  ->  OPEN_BPAR strliteral . inner_option_list_value CLOSE_BPAR   (rule 203)

    COMMA	shift, and go to state 654

    $default	reduce using rule 208 (inner_option_list_value)

    inner_option_list_value	go to state 657



state 488

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)
    option_list_value  ->  OPEN_MPAR ari_exp . inner_option_list_value CLOSE_MPAR   (rule 199)

    COMMA	shift, and go to state 654
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 208 (inner_option_list_value)

    ari_operator	go to state 240
    inner_option_list_value	go to state 658



state 489

    array_exp  ->  array_exp . CON array_exp   (rule 195)
    option_list_value  ->  OPEN_MPAR array_exp . inner_option_list_value CLOSE_MPAR   (rule 201)

    COMMA	shift, and go to state 654
    CON 	shift, and go to state 495

    $default	reduce using rule 208 (inner_option_list_value)

    inner_option_list_value	go to state 659



state 490

    option_list_value  ->  OPEN_MPAR strliteral . inner_option_list_value CLOSE_MPAR   (rule 200)

    COMMA	shift, and go to state 654

    $default	reduce using rule 208 (inner_option_list_value)

    inner_option_list_value	go to state 660



state 491

    rightaddrshift  ->  MUL OPEN_PAR . leftaddrshift CLOSE_PAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 158)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 661
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 347
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    type_define	go to state 348
    leftaddrshift	go to state 662
    array	go to state 224
    point_exp	go to state 225
    ari_exp	go to state 349
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    sign_type_define	go to state 71
    all_type_define	go to state 350
    identifier	go to state 228
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 492

    option_output  ->  COMMA . ass_right option_output   (rule 355)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    ass_right	go to state 663
    rightaddrshift	go to state 310
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 311
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    strliteral	go to state 315
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 493

    output_statement  ->  DISPLAY OPEN_PAR ass_right CLOSE_PAR .   (rule 352)

    $default	reduce using rule 352 (output_statement)



state 494

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output . CLOSE_PAR   (rule 353)

    CLOSE_PAR	shift, and go to state 664



state 495

    array_exp  ->  array_exp CON . array_exp   (rule 195)

    OPEN_PAR	shift, and go to state 665
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307

    array_exp	go to state 666
    option_list_value	go to state 313
    option_struct_list_value	go to state 314



state 496

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 164)
    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 349)

    error	shift, and go to state 301
    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    OPEN_BPAR	shift, and go to state 302
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 580
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    statement_bpar	go to state 447
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 497

    function_define  ->  STRUCT STRUCT_TYPE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 71)
    function_define  ->  STRUCT STRUCT_TYPE . MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)
    function_define  ->  STRUCT STRUCT_TYPE . MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)
    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 87)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 236)

    OPEN_PAR	shift, and go to state 137
    MUL 	shift, and go to state 667
    ID  	shift, and go to state 279

    option_identifier_array_declaration	go to state 280
    identifier	go to state 191



state 498

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 668
    MUL 	shift, and go to state 585



state 499

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 669
    MUL 	shift, and go to state 588



state 500

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 670
    MUL 	shift, and go to state 593



state 501

    type_define  ->  INTDECLARATION .   (rule 93)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)
    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 264)

    CLOSE_PAR	shift, and go to state 599
    MUL 	shift, and go to state 671

    MUL 	[reduce using rule 93 (type_define)]
    MUL 	[reduce using rule 264 (sign_type_define)]
    ID  	reduce using rule 93 (type_define)
    ID  	[reduce using rule 264 (sign_type_define)]
    $default	reduce using rule 93 (type_define)



state 502

    type_define  ->  CHARDECLARATION .   (rule 95)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)
    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 265)

    CLOSE_PAR	shift, and go to state 601
    MUL 	shift, and go to state 672

    MUL 	[reduce using rule 95 (type_define)]
    MUL 	[reduce using rule 265 (sign_type_define)]
    ID  	reduce using rule 95 (type_define)
    ID  	[reduce using rule 265 (sign_type_define)]
    $default	reduce using rule 95 (type_define)



state 503

    type_define  ->  INTDECLARATION .   (rule 93)
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)

    CLOSE_PAR	shift, and go to state 603

    $default	reduce using rule 93 (type_define)



state 504

    type_define  ->  CHARDECLARATION .   (rule 95)
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)

    CLOSE_PAR	shift, and go to state 604

    $default	reduce using rule 95 (type_define)



state 505

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 54)
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 338)

    IMPLY	shift, and go to state 513

    $default	reduce using rule 338 (imply_pre)



state 506

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    point_exp  ->  MUL identifier .   (rule 154)

    CLOSE_PAR	shift, and go to state 673

    CLOSE_PAR	[reduce using rule 154 (point_exp)]
    $default	reduce using rule 154 (point_exp)



state 507

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)
    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 674
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 508

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)

    OPEN_PAR	shift, and go to state 675



state 509

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 180)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 214)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 237)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 338)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 121
    STRUCT	shift, and go to state 215
    MY_TRUE	shift, and go to state 122
    MY_FALSE	shift, and go to state 123
    INTDECLARATION	shift, and go to state 417
    CHARDECLARATION	shift, and go to state 418
    VOIDDECLARATION	shift, and go to state 218
    FLOATDECLARATION	shift, and go to state 419
    OPEN_PAR	shift, and go to state 509
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 420
    SIGNED	shift, and go to state 222
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 151
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    STRUCT_TYPE	shift, and go to state 223
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 224
    point_exp	go to state 225
    ari_exp	go to state 265
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 227
    type_cast	go to state 102
    prime_bool_exp	go to state 158
    identifier	go to state 228
    strliteral	go to state 130
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    imply_pre	go to state 510
    struct_member_exp	go to state 229



state 510

    imply_pre  ->  imply_pre . AND imply_pre   (rule 336)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 337)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 338)

    CLOSE_PAR	shift, and go to state 676
    OR  	shift, and go to state 336
    AND 	shift, and go to state 337



state 511

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 157)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 677
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 512

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . array option_struct_member_exp   (rule 376)

    OPEN_PAR	shift, and go to state 386
    ID  	shift, and go to state 173

    array	go to state 678
    identifier	go to state 679



state 513

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY . OPEN_MPAR statement CLOSE_MPAR   (rule 54)

    OPEN_MPAR	shift, and go to state 680



state 514

    imply_pre  ->  imply_pre . AND imply_pre   (rule 336)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 337)
    imply_pre  ->  imply_pre OR imply_pre .   (rule 337)

    AND 	shift, and go to state 337

    $default	reduce using rule 337 (imply_pre)



state 515

    imply_pre  ->  imply_pre . AND imply_pre   (rule 336)
    imply_pre  ->  imply_pre AND imply_pre .   (rule 336)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 337)


    $default	reduce using rule 336 (imply_pre)



state 516

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    option_projection  ->  COMMA statement . option_projection   (rule 333)

    COMMA	shift, and go to state 339
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195

    $default	reduce using rule 332 (option_projection)

    option_projection	go to state 681



state 517

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION . statement_bpar   (rule 57)

    error	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302

    statement_bpar	go to state 682



state 518

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR . PROJECTION statement_bpar   (rule 56)

    PROJECTION	shift, and go to state 683



state 519

    function  ->  EXTERN ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 75)

    CLOSE_PAR	shift, and go to state 684



state 520

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)

    OPEN_PAR	shift, and go to state 137
    ID  	shift, and go to state 138

    identifier	go to state 685



state 521

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)
    identifier  ->  ID .   (rule 323)

    OPEN_MPAR	shift, and go to state 686

    $default	reduce using rule 323 (identifier)



state 522

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)

    CLOSE_PAR	shift, and go to state 508



state 523

    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 264)

    $default	reduce using rule 264 (sign_type_define)



state 524

    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 265)

    $default	reduce using rule 265 (sign_type_define)



state 525

    point_exp  ->  MUL OPEN_PAR ari_exp CLOSE_PAR .   (rule 159)

    $default	reduce using rule 159 (point_exp)



state 526

    point_exp  ->  MUL OPEN_PAR all_type_define MUL . CLOSE_PAR ari_exp   (rule 158)

    CLOSE_PAR	shift, and go to state 687



state 527

    type_define  ->  INTDECLARATION .   (rule 93)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    MUL 	shift, and go to state 688

    MUL 	[reduce using rule 93 (type_define)]
    $default	reduce using rule 93 (type_define)



state 528

    type_define  ->  CHARDECLARATION .   (rule 95)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    MUL 	shift, and go to state 689

    MUL 	[reduce using rule 95 (type_define)]
    $default	reduce using rule 95 (type_define)



state 529

    type_define  ->  FLOATDECLARATION .   (rule 94)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    MUL 	shift, and go to state 690

    MUL 	[reduce using rule 94 (type_define)]
    $default	reduce using rule 94 (type_define)



state 530

    sign_declaration  ->  UNSIGNED . declaration   (rule 81)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 264)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 265)

    STRUCT	shift, and go to state 164
    UNION	shift, and go to state 165
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 691
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 692
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 168
    STRUCT_TYPE	shift, and go to state 57

    declaration	go to state 169
    type_define	go to state 170



state 531

    statement  ->  NEXT OPEN_PAR statement CLOSE_PAR .   (rule 39)

    $default	reduce using rule 39 (statement)



state 532

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 214)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    INTDECLARATION	shift, and go to state 693
    CHARDECLARATION	shift, and go to state 694
    FLOATDECLARATION	shift, and go to state 695
    OPEN_PAR	shift, and go to state 532
    UNSIGNED	shift, and go to state 696
    ADDRESS	shift, and go to state 89
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 178
    ID  	shift, and go to state 173

    ass_left	go to state 471
    leftaddrshift	go to state 68
    array	go to state 533
    point_exp	go to state 354
    address_exp	go to state 431
    identifier	go to state 356
    struct_member_exp	go to state 357



state 533

    ass_left  ->  array .   (rule 117)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 150)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 201
    CLOSE_PAR	shift, and go to state 331
    IMPLY	shift, and go to state 203

    CLOSE_PAR	[reduce using rule 117 (ass_left)]
    $default	reduce using rule 117 (ass_left)



state 534

    statement  ->  LENGTH OPEN_PAR ari_exp CLOSE_PAR .   (rule 47)

    $default	reduce using rule 47 (statement)



state 535

    option_input  ->  COMMA . identifier option_input   (rule 362)
    option_input  ->  COMMA . array option_input   (rule 363)

    OPEN_PAR	shift, and go to state 386
    ID  	shift, and go to state 173

    array	go to state 697
    identifier	go to state 698



state 536

    input_statement  ->  REQUEST OPEN_PAR array CLOSE_PAR .   (rule 358)

    $default	reduce using rule 358 (input_statement)



state 537

    input_statement  ->  REQUEST OPEN_PAR array option_input . CLOSE_PAR   (rule 359)

    CLOSE_PAR	shift, and go to state 699



state 538

    input_statement  ->  REQUEST OPEN_PAR identifier CLOSE_PAR .   (rule 356)

    $default	reduce using rule 356 (input_statement)



state 539

    input_statement  ->  REQUEST OPEN_PAR identifier option_input . CLOSE_PAR   (rule 357)

    CLOSE_PAR	shift, and go to state 700



state 540

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 360)

    $default	reduce using rule 360 (input_statement)



state 541

    statement  ->  FINAL OPEN_PAR statement CLOSE_PAR .   (rule 52)

    $default	reduce using rule 52 (statement)



state 542

    statement  ->  KEEP OPEN_PAR statement CLOSE_PAR .   (rule 40)

    $default	reduce using rule 40 (statement)



state 543

    statement  ->  ALWAYS OPEN_PAR statement CLOSE_PAR .   (rule 41)

    $default	reduce using rule 41 (statement)



state 544

    option_function_identifier  ->  ADDRESS error .   (rule 314)

    $default	reduce using rule 314 (option_function_identifier)



state 545

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 74)
    option_function_identifier  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 312)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 367
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 368
    STRLITERAL	shift, and go to state 126
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    $default	reduce using rule 313 (option_function_identifier)

    function	go to state 95
    ass_right	go to state 369
    rightaddrshift	go to state 310
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 311
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 101
    type_cast	go to state 102
    option_function_identifier	go to state 701
    identifier	go to state 103
    strliteral	go to state 315
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 546

    inner_option_function_identifier  ->  COMMA . ass_right inner_option_function_identifier   (rule 315)
    inner_option_function_identifier  ->  COMMA . ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 316)
    inner_option_function_identifier  ->  COMMA . error   (rule 318)

    error	shift, and go to state 702
    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 703
    STRLITERAL	shift, and go to state 126
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    ass_right	go to state 704
    rightaddrshift	go to state 310
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 311
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    strliteral	go to state 315
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 547

    option_function_identifier  ->  ass_right inner_option_function_identifier .   (rule 311)

    $default	reduce using rule 311 (option_function_identifier)



state 548

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 74)

    $default	reduce using rule 74 (function)



state 549

    option_ari_exp  ->  COMMA . ari_exp option_ari_exp   (rule 151)
    option_ari_exp  ->  COMMA . error   (rule 152)

    error	shift, and go to state 705
    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 706
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 550

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 144)

    CLOSE_MPAR	shift, and go to state 707



state 551

    option_identifier_array_declaration  ->  ID ARRAY ASS_P . array_exp inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID ARRAY ASS_P . strliteral inner_option_identifier_array_declaration   (rule 103)

    OPEN_PAR	shift, and go to state 665
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    STRLITERAL	shift, and go to state 126

    array_exp	go to state 708
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    strliteral	go to state 709



state 552

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 105)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    COMMA	shift, and go to state 549
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 153 (option_ari_exp)

    option_ari_exp	go to state 710
    ari_operator	go to state 240



state 553

    inner_option_identifier_array_declaration  ->  COMMA error .   (rule 108)

    $default	reduce using rule 108 (inner_option_identifier_array_declaration)



state 554

    inner_option_identifier_array_declaration  ->  COMMA option_identifier_array_declaration .   (rule 107)

    $default	reduce using rule 107 (inner_option_identifier_array_declaration)



state 555

    option_identifier_array_declaration  ->  identifier ASS_P ass_right . inner_option_identifier_array_declaration   (rule 101)

    COMMA	shift, and go to state 375

    COMMA	[reduce using rule 109 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 109 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 711



state 556

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR .   (rule 77)

    $default	reduce using rule 77 (struct_define_statement)



state 557

    option_struct_declaration  ->  sign_declaration AND . option_struct_declaration   (rule 65)

    STRUCT	shift, and go to state 164
    UNION	shift, and go to state 165
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 168
    UNSIGNED	shift, and go to state 382
    SIGNED	shift, and go to state 48
    STRUCT_TYPE	shift, and go to state 57

    option_struct_declaration	go to state 712
    sign_declaration	go to state 384
    declaration	go to state 64
    type_define	go to state 170



state 558

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)

    INTDECLARATION	shift, and go to state 607
    CHARDECLARATION	shift, and go to state 608
    FLOATDECLARATION	shift, and go to state 609
    OPEN_PAR	shift, and go to state 558
    UNSIGNED	shift, and go to state 610
    ID  	shift, and go to state 173

    array	go to state 559
    identifier	go to state 284



state 559

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 150)

    CLOSE_PAR	shift, and go to state 331



state 560

    option_struct_member_exp  ->  DOT . identifier option_struct_member_exp   (rule 382)
    option_struct_member_exp  ->  DOT . array option_struct_member_exp   (rule 383)
    option_struct_member_exp  ->  DOT . function   (rule 386)

    OPEN_PAR	shift, and go to state 386
    EXTERN	shift, and go to state 46
    ID  	shift, and go to state 56

    function	go to state 713
    array	go to state 714
    identifier	go to state 715



state 561

    option_struct_member_exp  ->  IMPLY . identifier option_struct_member_exp   (rule 384)
    option_struct_member_exp  ->  IMPLY . array option_struct_member_exp   (rule 385)
    option_struct_member_exp  ->  IMPLY . function   (rule 387)

    OPEN_PAR	shift, and go to state 386
    EXTERN	shift, and go to state 46
    ID  	shift, and go to state 56

    function	go to state 716
    array	go to state 717
    identifier	go to state 718



state 562

    struct_member_exp  ->  array DOT array option_struct_member_exp .   (rule 368)

    $default	reduce using rule 368 (struct_member_exp)



state 563

    struct_member_exp  ->  array DOT identifier option_struct_member_exp .   (rule 365)

    $default	reduce using rule 365 (struct_member_exp)



state 564

    function  ->  array OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 76)

    $default	reduce using rule 76 (function)



state 565

    struct_member_exp  ->  array IMPLY array option_struct_member_exp .   (rule 375)

    $default	reduce using rule 375 (struct_member_exp)



state 566

    struct_member_exp  ->  array IMPLY identifier option_struct_member_exp .   (rule 371)

    $default	reduce using rule 371 (struct_member_exp)



state 567

    struct_member_exp  ->  point_exp DOT array option_struct_member_exp .   (rule 369)

    $default	reduce using rule 369 (struct_member_exp)



state 568

    struct_member_exp  ->  point_exp DOT identifier option_struct_member_exp .   (rule 366)

    $default	reduce using rule 366 (struct_member_exp)



state 569

    struct_member_exp  ->  point_exp IMPLY array option_struct_member_exp .   (rule 379)

    $default	reduce using rule 379 (struct_member_exp)



state 570

    struct_member_exp  ->  point_exp IMPLY identifier option_struct_member_exp .   (rule 373)

    $default	reduce using rule 373 (struct_member_exp)



state 571

    function_define  ->  all_type_define MUL MUL ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    OPEN_PAR	shift, and go to state 719



state 572

    function_define  ->  all_type_define MUL ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 69)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 348
    sign_type_define	go to state 71
    all_type_define	go to state 459
    option_function_parameter_list	go to state 720



state 573

    function_define  ->  all_type_define ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 68)

    CLOSE_PAR	shift, and go to state 721



state 574

    struct_member_exp  ->  identifier DOT array option_struct_member_exp .   (rule 367)

    $default	reduce using rule 367 (struct_member_exp)



state 575

    struct_member_exp  ->  identifier DOT identifier option_struct_member_exp .   (rule 364)

    $default	reduce using rule 364 (struct_member_exp)



state 576

    struct_member_exp  ->  identifier IMPLY array option_struct_member_exp .   (rule 374)

    $default	reduce using rule 374 (struct_member_exp)



state 577

    struct_member_exp  ->  identifier IMPLY identifier option_struct_member_exp .   (rule 370)

    $default	reduce using rule 370 (struct_member_exp)



state 578

    poptional_projection  ->  COMMA complexProposition poptional_projection .   (rule 28)

    $default	reduce using rule 28 (poptional_projection)



state 579

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION . OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    OPEN_BPAR	shift, and go to state 722



state 580

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)
    ari_exp  ->  IF bool_exp THEN ari_exp . option_exp_else_statement   (rule 164)

    ELSE	shift, and go to state 723
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    ELSE	[reduce using rule 168 (option_exp_else_statement)]
    ADD 	[reduce using rule 168 (option_exp_else_statement)]
    SUB 	[reduce using rule 168 (option_exp_else_statement)]
    $default	reduce using rule 168 (option_exp_else_statement)

    option_exp_else_statement	go to state 724
    ari_operator	go to state 240



state 581

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 725
    MUL 	shift, and go to state 726



state 582

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 215)

    $default	reduce using rule 215 (type_cast)



state 583

    type_cast_alg_exp  ->  simple_ari_exp .   (rule 165)
    type_cast_alg_exp  ->  simple_ari_exp . ari_operator simple_ari_exp   (rule 166)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 170)

    INTER_OR	shift, and go to state 241
    CON 	shift, and go to state 242
    ADDRESS	shift, and go to state 243
    LST 	shift, and go to state 250
    RST 	shift, and go to state 251
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239
    MUL 	shift, and go to state 252
    DIV 	shift, and go to state 253
    MOD 	shift, and go to state 254

    INTER_OR	[reduce using rule 165 (type_cast_alg_exp)]
    CON 	[reduce using rule 165 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 165 (type_cast_alg_exp)]
    LST 	[reduce using rule 165 (type_cast_alg_exp)]
    RST 	[reduce using rule 165 (type_cast_alg_exp)]
    ADD 	[reduce using rule 165 (type_cast_alg_exp)]
    SUB 	[reduce using rule 165 (type_cast_alg_exp)]
    MUL 	[reduce using rule 165 (type_cast_alg_exp)]
    DIV 	[reduce using rule 165 (type_cast_alg_exp)]
    MOD 	[reduce using rule 165 (type_cast_alg_exp)]
    $default	reduce using rule 165 (type_cast_alg_exp)

    bi_operator	go to state 255
    ari_operator	go to state 727



state 584

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 729
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 585

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 730



state 586

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 217)

    $default	reduce using rule 217 (type_cast)



state 587

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 731
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 588

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 732



state 589

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 733
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 590

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 734



state 591

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 216)

    $default	reduce using rule 216 (type_cast)



state 592

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 735
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 593

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 736



state 594

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 737
    MUL 	shift, and go to state 585



state 595

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 738
    MUL 	shift, and go to state 588



state 596

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 739
    MUL 	shift, and go to state 593



state 597

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 599
    MUL 	shift, and go to state 671



state 598

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 601
    MUL 	shift, and go to state 740



state 599

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 220)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 741
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 600

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 742
    MUL 	shift, and go to state 743



state 601

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 221)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 744
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 602

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 745
    MUL 	shift, and go to state 746



state 603

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 218)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 747
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 604

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 219)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 748
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 605

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 235)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 749
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 606

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 750



state 607

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    MUL 	shift, and go to state 751



state 608

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    MUL 	shift, and go to state 752



state 609

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    MUL 	shift, and go to state 753



state 610

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    INTDECLARATION	shift, and go to state 754
    CHARDECLARATION	shift, and go to state 755



state 611

    option_else_statement  ->  ELSE . statement_bpar   (rule 350)

    error	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302

    statement_bpar	go to state 756



state 612

    if_statement  ->  IF bool_exp THEN statement_bpar option_else_statement .   (rule 349)

    $default	reduce using rule 349 (if_statement)



state 613

    function_define  ->  STRUCT STRUCT_TYPE MUL MUL ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 103)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 105)
    identifier  ->  ID .   (rule 323)

    ARRAY	shift, and go to state 373
    OPEN_PAR	shift, and go to state 757
    OPEN_MPAR	shift, and go to state 374

    $default	reduce using rule 323 (identifier)



state 614

    function_define  ->  STRUCT STRUCT_TYPE MUL ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 348
    sign_type_define	go to state 71
    all_type_define	go to state 459
    option_function_parameter_list	go to state 758



state 615

    function_define  ->  STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 71)

    CLOSE_PAR	shift, and go to state 759



state 616

    option_function_parameter_list  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 292)

    OPEN_PAR	shift, and go to state 137
    ID  	shift, and go to state 138

    identifier	go to state 760



state 617

    option_function_parameter_list  ->  ID MUL . identifier inner_option_define_identifier   (rule 275)
    option_function_parameter_list  ->  ID MUL . MUL identifier inner_option_define_identifier   (rule 276)
    option_function_parameter_list  ->  ID MUL . inner_option_define_identifier   (rule 282)
    option_function_parameter_list  ->  ID MUL . MUL inner_option_define_identifier   (rule 283)

    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 137
    MUL 	shift, and go to state 761
    ID  	shift, and go to state 138

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 762
    identifier	go to state 763



state 618

    option_function_parameter_list  ->  ID inner_option_define_identifier .   (rule 281)

    $default	reduce using rule 281 (option_function_parameter_list)



state 619

    option_function_parameter_list  ->  ID identifier . inner_option_define_identifier   (rule 274)
    option_function_parameter_list  ->  ID identifier . ARRAY inner_option_define_identifier   (rule 277)

    ARRAY	shift, and go to state 764
    COMMA	shift, and go to state 285

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 765



state 620

    option_function_parameter_list  ->  STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL identifier inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . inner_option_define_identifier   (rule 279)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL inner_option_define_identifier   (rule 280)

    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 137
    MUL 	shift, and go to state 766
    ID  	shift, and go to state 138

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 767
    identifier	go to state 768



state 621

    option_function_parameter_list  ->  STRUCT_TYPE inner_option_define_identifier .   (rule 278)

    $default	reduce using rule 278 (option_function_parameter_list)



state 622

    option_function_parameter_list  ->  STRUCT_TYPE identifier . inner_option_define_identifier   (rule 270)
    option_function_parameter_list  ->  STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 273)

    ARRAY	shift, and go to state 769
    COMMA	shift, and go to state 285

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 770



state 623

    option_function_parameter_list  ->  all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 285)
    option_function_parameter_list  ->  all_type_define MUL . identifier inner_option_define_identifier   (rule 289)
    option_function_parameter_list  ->  all_type_define MUL . inner_option_define_identifier   (rule 290)
    option_function_parameter_list  ->  all_type_define MUL . MUL identifier inner_option_define_identifier   (rule 291)

    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 137
    MUL 	shift, and go to state 771
    ID  	shift, and go to state 138

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 772
    identifier	go to state 773



state 624

    option_function_parameter_list  ->  all_type_define inner_option_define_identifier .   (rule 269)

    $default	reduce using rule 269 (option_function_parameter_list)



state 625

    option_function_parameter_list  ->  all_type_define identifier . inner_option_define_identifier   (rule 268)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY inner_option_define_identifier   (rule 284)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 286)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 287)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 288)

    ARRAY	shift, and go to state 774
    COMMA	shift, and go to state 285
    OPEN_MPAR	shift, and go to state 775

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 776



state 626

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 58)

    ASS_P	shift, and go to state 777



state 627

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 303)

    OPEN_PAR	shift, and go to state 137
    ID  	shift, and go to state 138

    identifier	go to state 778



state 628

    inner_option_define_identifier  ->  COMMA ID identifier . inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA ID identifier . ARRAY inner_option_define_identifier   (rule 299)

    ARRAY	shift, and go to state 779
    COMMA	shift, and go to state 285

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 780



state 629

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 298)

    OPEN_PAR	shift, and go to state 137
    ID  	shift, and go to state 138

    identifier	go to state 781



state 630

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 300)

    ARRAY	shift, and go to state 782
    COMMA	shift, and go to state 285

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 783



state 631

    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier inner_option_define_identifier   (rule 308)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . inner_option_define_identifier   (rule 309)

    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 137
    ID  	shift, and go to state 138

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 784
    identifier	go to state 785



state 632

    inner_option_define_identifier  ->  COMMA all_type_define inner_option_define_identifier .   (rule 295)

    $default	reduce using rule 295 (inner_option_define_identifier)



state 633

    inner_option_define_identifier  ->  COMMA all_type_define identifier . inner_option_define_identifier   (rule 294)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 305)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 306)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 307)

    ARRAY	shift, and go to state 786
    COMMA	shift, and go to state 285
    OPEN_MPAR	shift, and go to state 787

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 788



state 634

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR . statement CLOSE_BPAR   (rule 62)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 47
    SIGNED	shift, and go to state 48
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 50
    LENGTH	shift, and go to state 51
    REQUEST	shift, and go to state 52
    FINAL	shift, and go to state 53
    KEEP	shift, and go to state 54
    ALWAYS	shift, and go to state 55
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 57

    statement	go to state 789
    function_define	go to state 59
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    sign_type_define	go to state 71
    all_type_define	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 635

    option_frame_identifier  ->  COMMA error .   (rule 331)

    $default	reduce using rule 331 (option_frame_identifier)



state 636

    option_frame_identifier  ->  COMMA identifier . option_frame_identifier   (rule 329)

    COMMA	shift, and go to state 467

    $default	reduce using rule 330 (option_frame_identifier)

    option_frame_identifier	go to state 790



state 637

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR . AND OPEN_PAR statement CLOSE_PAR   (rule 55)

    AND 	shift, and go to state 791



state 638

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 106)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 236)

    OPEN_PAR	shift, and go to state 137
    CLOSE_PAR	shift, and go to state 725
    MUL 	shift, and go to state 792
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 372
    identifier	go to state 191



state 639

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 498



state 640

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 499



state 641

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 415
    MUL 	shift, and go to state 500



state 642

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)

    INTDECLARATION	shift, and go to state 597
    CHARDECLARATION	shift, and go to state 793



state 643

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 106)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 237)

    OPEN_PAR	shift, and go to state 137
    CLOSE_PAR	shift, and go to state 750
    MUL 	shift, and go to state 188
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 372
    identifier	go to state 191



state 644

    bool_exp  ->  bool_exp . AND bool_exp   (rule 241)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 242)
    for_sta_condition  ->  bool_exp .   (rule 345)

    OR  	shift, and go to state 272
    AND 	shift, and go to state 273

    $default	reduce using rule 345 (for_sta_condition)



state 645

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition . COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 341)

    COMMA	shift, and go to state 794



state 646

    for_statement  ->  FOR ari_exp TIMES DO statement_bpar .   (rule 340)

    $default	reduce using rule 340 (for_statement)



state 647

    statement_bpar  ->  OPEN_BPAR statement CLOSE_BPAR .   (rule 319)

    $default	reduce using rule 319 (statement_bpar)



state 648

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL . OPEN_PAR bool_exp CLOSE_PAR   (rule 43)

    OPEN_PAR	shift, and go to state 795



state 649

    ass_right  ->  OPEN_PAR ass_right CLOSE_PAR .   (rule 141)

    $default	reduce using rule 141 (ass_right)



state 650

    array_exp  ->  OPEN_PAR array_exp CLOSE_PAR .   (rule 198)

    $default	reduce using rule 198 (array_exp)



state 651

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR . OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 140)

    OPEN_PAR	shift, and go to state 796



state 652

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 180)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 198)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 214)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 237)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 215
    INTDECLARATION	shift, and go to state 417
    CHARDECLARATION	shift, and go to state 418
    VOIDDECLARATION	shift, and go to state 218
    FLOATDECLARATION	shift, and go to state 419
    OPEN_PAR	shift, and go to state 652
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 420
    SIGNED	shift, and go to state 222
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 223
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 224
    point_exp	go to state 225
    ari_exp	go to state 226
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 653
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 227
    type_cast	go to state 102
    identifier	go to state 228
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 229



state 653

    array_exp  ->  array_exp . CON array_exp   (rule 195)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 198)

    CLOSE_PAR	shift, and go to state 650
    CON 	shift, and go to state 495



state 654

    inner_option_list_value  ->  COMMA . ari_exp inner_option_list_value   (rule 205)
    inner_option_list_value  ->  COMMA . strliteral inner_option_list_value   (rule 206)
    inner_option_list_value  ->  COMMA . array_exp inner_option_list_value   (rule 207)
    inner_option_list_value  ->  COMMA . error   (rule 209)

    error	shift, and go to state 797
    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 484
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 798
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 799
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    strliteral	go to state 800
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 655

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value . CLOSE_BPAR   (rule 202)

    CLOSE_BPAR	shift, and go to state 801



state 656

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value . CLOSE_BPAR   (rule 204)

    CLOSE_BPAR	shift, and go to state 802



state 657

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value . CLOSE_BPAR   (rule 203)

    CLOSE_BPAR	shift, and go to state 803



state 658

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value . CLOSE_MPAR   (rule 199)

    CLOSE_MPAR	shift, and go to state 804



state 659

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value . CLOSE_MPAR   (rule 201)

    CLOSE_MPAR	shift, and go to state 805



state 660

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value . CLOSE_MPAR   (rule 200)

    CLOSE_MPAR	shift, and go to state 806



state 661

    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 180)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 214)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 237)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 215
    INTDECLARATION	shift, and go to state 417
    CHARDECLARATION	shift, and go to state 418
    VOIDDECLARATION	shift, and go to state 218
    FLOATDECLARATION	shift, and go to state 419
    OPEN_PAR	shift, and go to state 807
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 420
    SIGNED	shift, and go to state 222
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 223
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 224
    point_exp	go to state 225
    ari_exp	go to state 226
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 227
    type_cast	go to state 102
    identifier	go to state 228
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 229



state 662

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift . CLOSE_PAR   (rule 143)

    CLOSE_PAR	shift, and go to state 808



state 663

    option_output  ->  COMMA ass_right . option_output   (rule 355)

    COMMA	shift, and go to state 492

    $default	reduce using rule 354 (option_output)

    option_output	go to state 809



state 664

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR .   (rule 353)

    $default	reduce using rule 353 (output_statement)



state 665

    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 198)

    OPEN_PAR	shift, and go to state 665
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307

    array_exp	go to state 653
    option_list_value	go to state 313
    option_struct_list_value	go to state 314



state 666

    array_exp  ->  array_exp . CON array_exp   (rule 195)
    array_exp  ->  array_exp CON array_exp .   (rule 195)


    $default	reduce using rule 195 (array_exp)



state 667

    function_define  ->  STRUCT STRUCT_TYPE MUL . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)
    function_define  ->  STRUCT STRUCT_TYPE MUL . MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 106)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 236)

    OPEN_PAR	shift, and go to state 137
    CLOSE_PAR	shift, and go to state 725
    MUL 	shift, and go to state 810
    ID  	shift, and go to state 454

    option_identifier_array_declaration	go to state 372
    identifier	go to state 191



state 668

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 811
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 812
    INTLITERAL	shift, and go to state 813
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 729
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 669

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 814
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 815
    INTLITERAL	shift, and go to state 816
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 731
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 670

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 817
    INTLITERAL	shift, and go to state 818
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 735
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 671

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 819
    MUL 	shift, and go to state 743



state 672

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 820
    MUL 	shift, and go to state 746



state 673

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)

    OPEN_PAR	shift, and go to state 821



state 674

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)
    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 144)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    COMMA	shift, and go to state 549
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 153 (option_ari_exp)

    option_ari_exp	go to state 822
    ari_operator	go to state 240



state 675

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 89)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 348
    sign_type_define	go to state 71
    all_type_define	go to state 459
    option_function_parameter_list	go to state 823



state 676

    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 338)

    $default	reduce using rule 338 (imply_pre)



state 677

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 157)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    COMMA	shift, and go to state 549
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 153 (option_ari_exp)

    option_ari_exp	go to state 824
    ari_operator	go to state 240



state 678

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array . option_struct_member_exp   (rule 376)

    DOT 	shift, and go to state 560
    IMPLY	shift, and go to state 561

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 825



state 679

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier . option_struct_member_exp   (rule 372)

    DOT 	shift, and go to state 560
    IMPLY	shift, and go to state 561

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 826



state 680

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR . statement CLOSE_MPAR   (rule 54)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 47
    SIGNED	shift, and go to state 48
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 50
    LENGTH	shift, and go to state 51
    REQUEST	shift, and go to state 52
    FINAL	shift, and go to state 53
    KEEP	shift, and go to state 54
    ALWAYS	shift, and go to state 55
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 57

    statement	go to state 827
    function_define	go to state 59
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    sign_type_define	go to state 71
    all_type_define	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 681

    option_projection  ->  COMMA statement option_projection .   (rule 333)

    $default	reduce using rule 333 (option_projection)



state 682

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar .   (rule 57)

    $default	reduce using rule 57 (statement)



state 683

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION . statement_bpar   (rule 56)

    error	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302

    statement_bpar	go to state 828



state 684

    function  ->  EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 75)

    $default	reduce using rule 75 (function)



state 685

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)

    CLOSE_PAR	shift, and go to state 673



state 686

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 829
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 687

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR . ari_exp   (rule 158)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 830
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 688

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    CLOSE_PAR	shift, and go to state 831



state 689

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    CLOSE_PAR	shift, and go to state 832



state 690

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    CLOSE_PAR	shift, and go to state 833



state 691

    type_define  ->  INTDECLARATION .   (rule 93)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 264)

    MUL 	shift, and go to state 834

    MUL 	[reduce using rule 93 (type_define)]
    MUL 	[reduce using rule 264 (sign_type_define)]
    ID  	reduce using rule 93 (type_define)
    ID  	[reduce using rule 264 (sign_type_define)]
    $default	reduce using rule 93 (type_define)



state 692

    type_define  ->  CHARDECLARATION .   (rule 95)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 265)

    MUL 	shift, and go to state 835

    MUL 	[reduce using rule 95 (type_define)]
    MUL 	[reduce using rule 265 (sign_type_define)]
    ID  	reduce using rule 95 (type_define)
    ID  	[reduce using rule 265 (sign_type_define)]
    $default	reduce using rule 95 (type_define)



state 693

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    MUL 	shift, and go to state 688



state 694

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    MUL 	shift, and go to state 689



state 695

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    MUL 	shift, and go to state 690



state 696

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    INTDECLARATION	shift, and go to state 754
    CHARDECLARATION	shift, and go to state 836



state 697

    option_input  ->  COMMA array . option_input   (rule 363)

    COMMA	shift, and go to state 535

    $default	reduce using rule 361 (option_input)

    option_input	go to state 837



state 698

    option_input  ->  COMMA identifier . option_input   (rule 362)

    COMMA	shift, and go to state 535

    $default	reduce using rule 361 (option_input)

    option_input	go to state 838



state 699

    input_statement  ->  REQUEST OPEN_PAR array option_input CLOSE_PAR .   (rule 359)

    $default	reduce using rule 359 (input_statement)



state 700

    input_statement  ->  REQUEST OPEN_PAR identifier option_input CLOSE_PAR .   (rule 357)

    $default	reduce using rule 357 (input_statement)



state 701

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 74)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 312)

    CLOSE_PAR	shift, and go to state 839



state 702

    inner_option_function_identifier  ->  COMMA error .   (rule 318)

    $default	reduce using rule 318 (inner_option_function_identifier)



state 703

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 74)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    inner_option_function_identifier  ->  COMMA ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 316)
    identifier  ->  ID .   (rule 323)

    OPEN_PAR	shift, and go to state 840
    OPEN_MPAR	shift, and go to state 187

    $default	reduce using rule 323 (identifier)



state 704

    inner_option_function_identifier  ->  COMMA ass_right . inner_option_function_identifier   (rule 315)

    COMMA	shift, and go to state 546

    $default	reduce using rule 317 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 841



state 705

    option_ari_exp  ->  COMMA error .   (rule 152)

    $default	reduce using rule 152 (option_ari_exp)



state 706

    option_ari_exp  ->  COMMA ari_exp . option_ari_exp   (rule 151)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    COMMA	shift, and go to state 549
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 153 (option_ari_exp)

    option_ari_exp	go to state 842
    ari_operator	go to state 240



state 707

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 144)

    $default	reduce using rule 144 (array)



state 708

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp . inner_option_identifier_array_declaration   (rule 102)
    array_exp  ->  array_exp . CON array_exp   (rule 195)

    COMMA	shift, and go to state 375
    CON 	shift, and go to state 495

    COMMA	[reduce using rule 109 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 109 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 843



state 709

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral . inner_option_identifier_array_declaration   (rule 103)

    COMMA	shift, and go to state 375

    COMMA	[reduce using rule 109 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 109 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 844



state 710

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 105)

    CLOSE_MPAR	shift, and go to state 845



state 711

    option_identifier_array_declaration  ->  identifier ASS_P ass_right inner_option_identifier_array_declaration .   (rule 101)

    $default	reduce using rule 101 (option_identifier_array_declaration)



state 712

    option_struct_declaration  ->  sign_declaration AND option_struct_declaration .   (rule 65)

    $default	reduce using rule 65 (option_struct_declaration)



state 713

    option_struct_member_exp  ->  DOT function .   (rule 386)

    $default	reduce using rule 386 (option_struct_member_exp)



state 714

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    option_struct_member_exp  ->  DOT array . option_struct_member_exp   (rule 383)

    DOT 	shift, and go to state 560
    OPEN_PAR	shift, and go to state 202
    IMPLY	shift, and go to state 561

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 846



state 715

    option_struct_member_exp  ->  DOT identifier . option_struct_member_exp   (rule 382)

    DOT 	shift, and go to state 560
    IMPLY	shift, and go to state 561

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 847



state 716

    option_struct_member_exp  ->  IMPLY function .   (rule 387)

    $default	reduce using rule 387 (option_struct_member_exp)



state 717

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    option_struct_member_exp  ->  IMPLY array . option_struct_member_exp   (rule 385)

    DOT 	shift, and go to state 560
    OPEN_PAR	shift, and go to state 202
    IMPLY	shift, and go to state 561

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 848



state 718

    option_struct_member_exp  ->  IMPLY identifier . option_struct_member_exp   (rule 384)

    DOT 	shift, and go to state 560
    IMPLY	shift, and go to state 561

    DOT 	[reduce using rule 381 (option_struct_member_exp)]
    IMPLY	[reduce using rule 381 (option_struct_member_exp)]
    $default	reduce using rule 381 (option_struct_member_exp)

    option_struct_member_exp	go to state 849



state 719

    function_define  ->  all_type_define MUL MUL ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 348
    sign_type_define	go to state 71
    all_type_define	go to state 459
    option_function_parameter_list	go to state 850



state 720

    function_define  ->  all_type_define MUL ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 69)

    CLOSE_PAR	shift, and go to state 851



state 721

    function_define  ->  all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 68)

    OPEN_BPAR	shift, and go to state 852



state 722

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR . complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 853



state 723

    option_exp_else_statement  ->  ELSE . ari_exp   (rule 167)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 854
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 724

    ari_exp  ->  IF bool_exp THEN ari_exp option_exp_else_statement .   (rule 164)

    $default	reduce using rule 164 (ari_exp)



state 725

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 855
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 726

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 236)

    CLOSE_PAR	shift, and go to state 856



state 727

    type_cast_alg_exp  ->  simple_ari_exp ari_operator . simple_ari_exp   (rule 166)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    simple_ari_exp	go to state 857
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 728

    casted_element  ->  type_cast_alg_exp .   (rule 238)

    $default	reduce using rule 238 (casted_element)



state 729

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 222)

    $default	reduce using rule 222 (type_cast)



state 730

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 858
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 731

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 225)

    $default	reduce using rule 225 (type_cast)



state 732

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 231)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 859
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 733

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element .   (rule 227)

    $default	reduce using rule 227 (type_cast)



state 734

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 860
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 735

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element .   (rule 224)

    $default	reduce using rule 224 (type_cast)



state 736

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 230)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 861
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 737

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 812
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 729
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 738

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 815
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 731
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 739

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 817
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 735
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 740

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 862
    MUL 	shift, and go to state 746



state 741

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 220)

    $default	reduce using rule 220 (type_cast)



state 742

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 863
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 743

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 864



state 744

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 221)

    $default	reduce using rule 221 (type_cast)



state 745

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 865
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 746

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 866



state 747

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 218)

    $default	reduce using rule 218 (type_cast)



state 748

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 219)

    $default	reduce using rule 219 (type_cast)



state 749

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 235)

    $default	reduce using rule 235 (type_cast)



state 750

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 237)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 867
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 751

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    CLOSE_PAR	shift, and go to state 868



state 752

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    CLOSE_PAR	shift, and go to state 869



state 753

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    CLOSE_PAR	shift, and go to state 870



state 754

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    MUL 	shift, and go to state 834



state 755

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    MUL 	shift, and go to state 871



state 756

    option_else_statement  ->  ELSE statement_bpar .   (rule 350)

    $default	reduce using rule 350 (option_else_statement)



state 757

    function_define  ->  STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 348
    sign_type_define	go to state 71
    all_type_define	go to state 459
    option_function_parameter_list	go to state 872



state 758

    function_define  ->  STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    CLOSE_PAR	shift, and go to state 873



state 759

    function_define  ->  STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 71)

    OPEN_BPAR	shift, and go to state 874



state 760

    option_function_parameter_list  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 292)

    CLOSE_PAR	shift, and go to state 875



state 761

    option_function_parameter_list  ->  ID MUL MUL . identifier inner_option_define_identifier   (rule 276)
    option_function_parameter_list  ->  ID MUL MUL . inner_option_define_identifier   (rule 283)

    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 137
    ID  	shift, and go to state 138

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 876
    identifier	go to state 877



state 762

    option_function_parameter_list  ->  ID MUL inner_option_define_identifier .   (rule 282)

    $default	reduce using rule 282 (option_function_parameter_list)



state 763

    option_function_parameter_list  ->  ID MUL identifier . inner_option_define_identifier   (rule 275)

    COMMA	shift, and go to state 285

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 878



state 764

    option_function_parameter_list  ->  ID identifier ARRAY . inner_option_define_identifier   (rule 277)

    COMMA	shift, and go to state 285

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 879



state 765

    option_function_parameter_list  ->  ID identifier inner_option_define_identifier .   (rule 274)

    $default	reduce using rule 274 (option_function_parameter_list)



state 766

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . identifier inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . inner_option_define_identifier   (rule 280)

    COMMA	shift, and go to state 285
    OPEN_PAR	shift, and go to state 137
    ID  	shift, and go to state 138

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 880
    identifier	go to state 881



state 767

    option_function_parameter_list  ->  STRUCT_TYPE MUL inner_option_define_identifier .   (rule 279)

    $default	reduce using rule 279 (option_function_parameter_list)



state 768

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 271)

    COMMA	shift, and go to state 285

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 882



state 769

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 273)

    COMMA	shift, and go to state 285

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 883



state 770

    option_function_parameter_list  ->  STRUCT_TYPE identifier inner_option_define_identifier .   (rule 270)

    $default	reduce using rule 270 (option_function_parameter_list)



state 771

    option_function_parameter_list  ->  all_type_define MUL MUL . identifier inner_option_define_identifier   (rule 291)

    OPEN_PAR	shift, and go to state 137
    ID  	shift, and go to state 138

    identifier	go to state 884



state 772

    option_function_parameter_list  ->  all_type_define MUL inner_option_define_identifier .   (rule 290)

    $default	reduce using rule 290 (option_function_parameter_list)



state 773

    option_function_parameter_list  ->  all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 285)
    option_function_parameter_list  ->  all_type_define MUL identifier . inner_option_define_identifier   (rule 289)

    ARRAY	shift, and go to state 885
    COMMA	shift, and go to state 285

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 886



state 774

    option_function_parameter_list  ->  all_type_define identifier ARRAY . inner_option_define_identifier   (rule 284)
    option_function_parameter_list  ->  all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 288)

    COMMA	shift, and go to state 285
    OPEN_MPAR	shift, and go to state 887

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 888



state 775

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 286)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 287)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 889
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 776

    option_function_parameter_list  ->  all_type_define identifier inner_option_define_identifier .   (rule 268)

    $default	reduce using rule 268 (option_function_parameter_list)



state 777

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 58)

    OPEN_BPAR	shift, and go to state 890



state 778

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 303)

    CLOSE_PAR	shift, and go to state 891



state 779

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY . inner_option_define_identifier   (rule 299)

    COMMA	shift, and go to state 285

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 892



state 780

    inner_option_define_identifier  ->  COMMA ID identifier inner_option_define_identifier .   (rule 296)

    $default	reduce using rule 296 (inner_option_define_identifier)



state 781

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 298)

    COMMA	shift, and go to state 285

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 893



state 782

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 300)

    COMMA	shift, and go to state 285

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 894



state 783

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier inner_option_define_identifier .   (rule 297)

    $default	reduce using rule 297 (inner_option_define_identifier)



state 784

    inner_option_define_identifier  ->  COMMA all_type_define MUL inner_option_define_identifier .   (rule 309)

    $default	reduce using rule 309 (inner_option_define_identifier)



state 785

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . inner_option_define_identifier   (rule 308)

    ARRAY	shift, and go to state 895
    COMMA	shift, and go to state 285

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 896



state 786

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 307)

    COMMA	shift, and go to state 285
    OPEN_MPAR	shift, and go to state 897

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 898



state 787

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 305)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 306)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 899
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 788

    inner_option_define_identifier  ->  COMMA all_type_define identifier inner_option_define_identifier .   (rule 294)

    $default	reduce using rule 294 (inner_option_define_identifier)



state 789

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement . CLOSE_BPAR   (rule 62)

    CLOSE_BPAR	shift, and go to state 900
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 790

    option_frame_identifier  ->  COMMA identifier option_frame_identifier .   (rule 329)

    $default	reduce using rule 329 (option_frame_identifier)



state 791

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND . OPEN_PAR statement CLOSE_PAR   (rule 55)

    OPEN_PAR	shift, and go to state 901



state 792

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 106)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 236)

    OPEN_PAR	shift, and go to state 137
    CLOSE_PAR	shift, and go to state 856
    MUL 	shift, and go to state 188
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 372
    identifier	go to state 191



state 793

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 601
    MUL 	shift, and go to state 672



state 794

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA . for_sta_control CLOSE_PAR statement_bpar   (rule 341)

    OPEN_PAR	shift, and go to state 358
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 178
    ID  	shift, and go to state 173

    $default	reduce using rule 348 (for_sta_control)

    ass_statement	go to state 902
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 180
    point_exp	go to state 70
    identifier	go to state 73
    for_sta_control	go to state 903
    struct_member_exp	go to state 80



state 795

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR . bool_exp CLOSE_PAR   (rule 43)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 121
    MY_TRUE	shift, and go to state 122
    MY_FALSE	shift, and go to state 123
    OPEN_PAR	shift, and go to state 124
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 125
    ID  	shift, and go to state 56
    STRLITERAL	shift, and go to state 126
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 127
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    bool_exp	go to state 904
    prime_bool_exp	go to state 129
    identifier	go to state 103
    strliteral	go to state 130
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 796

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR . type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 140)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43

    type_define	go to state 905



state 797

    inner_option_list_value  ->  COMMA error .   (rule 209)

    $default	reduce using rule 209 (inner_option_list_value)



state 798

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)
    inner_option_list_value  ->  COMMA ari_exp . inner_option_list_value   (rule 205)

    COMMA	shift, and go to state 654
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 208 (inner_option_list_value)

    ari_operator	go to state 240
    inner_option_list_value	go to state 906



state 799

    array_exp  ->  array_exp . CON array_exp   (rule 195)
    inner_option_list_value  ->  COMMA array_exp . inner_option_list_value   (rule 207)

    COMMA	shift, and go to state 654
    CON 	shift, and go to state 495

    $default	reduce using rule 208 (inner_option_list_value)

    inner_option_list_value	go to state 907



state 800

    inner_option_list_value  ->  COMMA strliteral . inner_option_list_value   (rule 206)

    COMMA	shift, and go to state 654

    $default	reduce using rule 208 (inner_option_list_value)

    inner_option_list_value	go to state 908



state 801

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR .   (rule 202)

    $default	reduce using rule 202 (option_struct_list_value)



state 802

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR .   (rule 204)

    $default	reduce using rule 204 (option_struct_list_value)



state 803

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR .   (rule 203)

    $default	reduce using rule 203 (option_struct_list_value)



state 804

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR .   (rule 199)

    $default	reduce using rule 199 (option_list_value)



state 805

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR .   (rule 201)

    $default	reduce using rule 201 (option_list_value)



state 806

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR .   (rule 200)

    $default	reduce using rule 200 (option_list_value)



state 807

    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 180)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 214)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 237)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 215
    INTDECLARATION	shift, and go to state 639
    CHARDECLARATION	shift, and go to state 640
    VOIDDECLARATION	shift, and go to state 218
    FLOATDECLARATION	shift, and go to state 641
    OPEN_PAR	shift, and go to state 220
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 642
    SIGNED	shift, and go to state 222
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 223
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 224
    point_exp	go to state 225
    ari_exp	go to state 226
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 227
    type_cast	go to state 102
    identifier	go to state 228
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 229



state 808

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift CLOSE_PAR .   (rule 143)

    $default	reduce using rule 143 (rightaddrshift)



state 809

    option_output  ->  COMMA ass_right option_output .   (rule 355)

    $default	reduce using rule 355 (option_output)



state 810

    function_define  ->  STRUCT STRUCT_TYPE MUL MUL . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 106)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 236)

    OPEN_PAR	shift, and go to state 137
    CLOSE_PAR	shift, and go to state 856
    MUL 	shift, and go to state 188
    ID  	shift, and go to state 613

    option_identifier_array_declaration	go to state 372
    identifier	go to state 191



state 811

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 180)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 214)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 237)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 215
    INTDECLARATION	shift, and go to state 216
    CHARDECLARATION	shift, and go to state 217
    VOIDDECLARATION	shift, and go to state 218
    FLOATDECLARATION	shift, and go to state 219
    OPEN_PAR	shift, and go to state 909
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 221
    SIGNED	shift, and go to state 222
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 223
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 224
    point_exp	go to state 225
    ari_exp	go to state 226
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 227
    type_cast	go to state 102
    identifier	go to state 228
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 229



state 812

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 74)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    identifier  ->  ID .   (rule 323)

    OPEN_PAR	shift, and go to state 186
    CLOSE_PAR	shift, and go to state 910
    OPEN_MPAR	shift, and go to state 187

    CLOSE_PAR	[reduce using rule 323 (identifier)]
    $default	reduce using rule 323 (identifier)



state 813

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    intliteral  ->  INTLITERAL .   (rule 326)

    CLOSE_PAR	shift, and go to state 911

    CLOSE_PAR	[reduce using rule 326 (intliteral)]
    $default	reduce using rule 326 (intliteral)



state 814

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 180)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 214)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 237)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 215
    INTDECLARATION	shift, and go to state 216
    CHARDECLARATION	shift, and go to state 217
    VOIDDECLARATION	shift, and go to state 218
    FLOATDECLARATION	shift, and go to state 219
    OPEN_PAR	shift, and go to state 912
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 221
    SIGNED	shift, and go to state 222
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 223
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 224
    point_exp	go to state 225
    ari_exp	go to state 226
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 227
    type_cast	go to state 102
    identifier	go to state 228
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 229



state 815

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 74)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    identifier  ->  ID .   (rule 323)

    OPEN_PAR	shift, and go to state 186
    CLOSE_PAR	shift, and go to state 913
    OPEN_MPAR	shift, and go to state 187

    CLOSE_PAR	[reduce using rule 323 (identifier)]
    $default	reduce using rule 323 (identifier)



state 816

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    intliteral  ->  INTLITERAL .   (rule 326)

    CLOSE_PAR	shift, and go to state 914

    CLOSE_PAR	[reduce using rule 326 (intliteral)]
    $default	reduce using rule 326 (intliteral)



state 817

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 74)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    identifier  ->  ID .   (rule 323)

    OPEN_PAR	shift, and go to state 186
    CLOSE_PAR	shift, and go to state 915
    OPEN_MPAR	shift, and go to state 187

    CLOSE_PAR	[reduce using rule 323 (identifier)]
    $default	reduce using rule 323 (identifier)



state 818

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    intliteral  ->  INTLITERAL .   (rule 326)

    CLOSE_PAR	shift, and go to state 916

    CLOSE_PAR	[reduce using rule 326 (intliteral)]
    $default	reduce using rule 326 (intliteral)



state 819

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 917
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 863
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 820

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 918
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 919
    INTLITERAL	shift, and go to state 920
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 865
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 821

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 90)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 348
    sign_type_define	go to state 71
    all_type_define	go to state 459
    option_function_parameter_list	go to state 921



state 822

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 144)

    CLOSE_MPAR	shift, and go to state 922



state 823

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 89)

    CLOSE_PAR	shift, and go to state 923



state 824

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 157)

    CLOSE_MPAR	shift, and go to state 924



state 825

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp .   (rule 376)

    $default	reduce using rule 376 (struct_member_exp)



state 826

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp .   (rule 372)

    $default	reduce using rule 372 (struct_member_exp)



state 827

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement . CLOSE_MPAR   (rule 54)

    CLOSE_MPAR	shift, and go to state 925
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 828

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar .   (rule 56)

    $default	reduce using rule 56 (statement)



state 829

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    COMMA	shift, and go to state 549
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 153 (option_ari_exp)

    option_ari_exp	go to state 926
    ari_operator	go to state 240



state 830

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp .   (rule 158)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    ADD 	[reduce using rule 158 (point_exp)]
    SUB 	[reduce using rule 158 (point_exp)]
    $default	reduce using rule 158 (point_exp)

    ari_operator	go to state 240



state 831

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    OPEN_PAR	shift, and go to state 927
    ID  	shift, and go to state 928
    INTLITERAL	shift, and go to state 929



state 832

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    OPEN_PAR	shift, and go to state 930
    ID  	shift, and go to state 931
    INTLITERAL	shift, and go to state 932



state 833

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    ID  	shift, and go to state 933
    INTLITERAL	shift, and go to state 934



state 834

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    CLOSE_PAR	shift, and go to state 935



state 835

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    CLOSE_PAR	shift, and go to state 936



state 836

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    MUL 	shift, and go to state 835



state 837

    option_input  ->  COMMA array option_input .   (rule 363)

    $default	reduce using rule 363 (option_input)



state 838

    option_input  ->  COMMA identifier option_input .   (rule 362)

    $default	reduce using rule 362 (option_input)



state 839

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 74)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 312)

    COMMA	shift, and go to state 546

    COMMA	[reduce using rule 74 (function)]
    CLOSE_PAR	reduce using rule 74 (function)
    CLOSE_PAR	[reduce using rule 317 (inner_option_function_identifier)]
    $default	reduce using rule 74 (function)

    inner_option_function_identifier	go to state 937



state 840

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 74)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 316)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 305
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 367
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 308
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 368
    STRLITERAL	shift, and go to state 126
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    $default	reduce using rule 313 (option_function_identifier)

    function	go to state 95
    ass_right	go to state 369
    rightaddrshift	go to state 310
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 311
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    array_exp	go to state 312
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    address_exp	go to state 101
    type_cast	go to state 102
    option_function_identifier	go to state 938
    identifier	go to state 103
    strliteral	go to state 315
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 841

    inner_option_function_identifier  ->  COMMA ass_right inner_option_function_identifier .   (rule 315)

    $default	reduce using rule 315 (inner_option_function_identifier)



state 842

    option_ari_exp  ->  COMMA ari_exp option_ari_exp .   (rule 151)

    $default	reduce using rule 151 (option_ari_exp)



state 843

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration .   (rule 102)

    $default	reduce using rule 102 (option_identifier_array_declaration)



state 844

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration .   (rule 103)

    $default	reduce using rule 103 (option_identifier_array_declaration)



state 845

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P strliteral inner_option_identifier_array_declaration   (rule 105)

    COMMA	shift, and go to state 375
    ASS_P	shift, and go to state 939

    COMMA	[reduce using rule 109 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 109 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 940



state 846

    option_struct_member_exp  ->  DOT array option_struct_member_exp .   (rule 383)

    $default	reduce using rule 383 (option_struct_member_exp)



state 847

    option_struct_member_exp  ->  DOT identifier option_struct_member_exp .   (rule 382)

    $default	reduce using rule 382 (option_struct_member_exp)



state 848

    option_struct_member_exp  ->  IMPLY array option_struct_member_exp .   (rule 385)

    $default	reduce using rule 385 (option_struct_member_exp)



state 849

    option_struct_member_exp  ->  IMPLY identifier option_struct_member_exp .   (rule 384)

    $default	reduce using rule 384 (option_struct_member_exp)



state 850

    function_define  ->  all_type_define MUL MUL ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    CLOSE_PAR	shift, and go to state 941



state 851

    function_define  ->  all_type_define MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 69)

    OPEN_BPAR	shift, and go to state 942



state 852

    function_define  ->  all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 68)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 47
    SIGNED	shift, and go to state 48
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 50
    LENGTH	shift, and go to state 51
    REQUEST	shift, and go to state 52
    FINAL	shift, and go to state 53
    KEEP	shift, and go to state 54
    ALWAYS	shift, and go to state 55
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 57

    statement	go to state 943
    function_define	go to state 59
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    sign_type_define	go to state 71
    all_type_define	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 853

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition . CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CLOSE_BPAR	shift, and go to state 944
    CHOP	shift, and go to state 115
    IFF 	shift, and go to state 116
    PROPIMPLY	shift, and go to state 117
    OR  	shift, and go to state 118
    AND 	shift, and go to state 119
    CHOPSTAR	shift, and go to state 120



state 854

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)
    option_exp_else_statement  ->  ELSE ari_exp .   (rule 167)

    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    ADD 	[reduce using rule 167 (option_exp_else_statement)]
    SUB 	[reduce using rule 167 (option_exp_else_statement)]
    $default	reduce using rule 167 (option_exp_else_statement)

    ari_operator	go to state 240



state 855

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 234)

    $default	reduce using rule 234 (type_cast)



state 856

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 236)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 945
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 857

    type_cast_alg_exp  ->  simple_ari_exp ari_operator simple_ari_exp .   (rule 166)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 170)

    INTER_OR	shift, and go to state 241
    CON 	shift, and go to state 242
    ADDRESS	shift, and go to state 243
    LST 	shift, and go to state 250
    RST 	shift, and go to state 251
    MUL 	shift, and go to state 252
    DIV 	shift, and go to state 253
    MOD 	shift, and go to state 254

    INTER_OR	[reduce using rule 166 (type_cast_alg_exp)]
    CON 	[reduce using rule 166 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 166 (type_cast_alg_exp)]
    LST 	[reduce using rule 166 (type_cast_alg_exp)]
    RST 	[reduce using rule 166 (type_cast_alg_exp)]
    MUL 	[reduce using rule 166 (type_cast_alg_exp)]
    DIV 	[reduce using rule 166 (type_cast_alg_exp)]
    MOD 	[reduce using rule 166 (type_cast_alg_exp)]
    $default	reduce using rule 166 (type_cast_alg_exp)

    bi_operator	go to state 255



state 858

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 228)

    $default	reduce using rule 228 (type_cast)



state 859

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 231)

    $default	reduce using rule 231 (type_cast)



state 860

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 233)

    $default	reduce using rule 233 (type_cast)



state 861

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 230)

    $default	reduce using rule 230 (type_cast)



state 862

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 919
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 865
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 863

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 223)

    $default	reduce using rule 223 (type_cast)



state 864

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 229)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 946
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 865

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 226)

    $default	reduce using rule 226 (type_cast)



state 866

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 947
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 867

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 237)

    $default	reduce using rule 237 (type_cast)



state 868

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    ID  	shift, and go to state 928



state 869

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    ID  	shift, and go to state 931



state 870

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    ID  	shift, and go to state 933



state 871

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    CLOSE_PAR	shift, and go to state 948



state 872

    function_define  ->  STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)

    CLOSE_PAR	shift, and go to state 949



state 873

    function_define  ->  STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    OPEN_BPAR	shift, and go to state 950



state 874

    function_define  ->  STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 71)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 47
    SIGNED	shift, and go to state 48
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 50
    LENGTH	shift, and go to state 51
    REQUEST	shift, and go to state 52
    FINAL	shift, and go to state 53
    KEEP	shift, and go to state 54
    ALWAYS	shift, and go to state 55
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 57

    statement	go to state 951
    function_define	go to state 59
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    sign_type_define	go to state 71
    all_type_define	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 875

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 292)

    OPEN_PAR	shift, and go to state 952



state 876

    option_function_parameter_list  ->  ID MUL MUL inner_option_define_identifier .   (rule 283)

    $default	reduce using rule 283 (option_function_parameter_list)



state 877

    option_function_parameter_list  ->  ID MUL MUL identifier . inner_option_define_identifier   (rule 276)

    COMMA	shift, and go to state 285

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 953



state 878

    option_function_parameter_list  ->  ID MUL identifier inner_option_define_identifier .   (rule 275)

    $default	reduce using rule 275 (option_function_parameter_list)



state 879

    option_function_parameter_list  ->  ID identifier ARRAY inner_option_define_identifier .   (rule 277)

    $default	reduce using rule 277 (option_function_parameter_list)



state 880

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL inner_option_define_identifier .   (rule 280)

    $default	reduce using rule 280 (option_function_parameter_list)



state 881

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier . inner_option_define_identifier   (rule 272)

    COMMA	shift, and go to state 285

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 954



state 882

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 271)

    $default	reduce using rule 271 (option_function_parameter_list)



state 883

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 273)

    $default	reduce using rule 273 (option_function_parameter_list)



state 884

    option_function_parameter_list  ->  all_type_define MUL MUL identifier . inner_option_define_identifier   (rule 291)

    COMMA	shift, and go to state 285

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 955



state 885

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 285)

    COMMA	shift, and go to state 285

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 956



state 886

    option_function_parameter_list  ->  all_type_define MUL identifier inner_option_define_identifier .   (rule 289)

    $default	reduce using rule 289 (option_function_parameter_list)



state 887

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 288)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 957
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 888

    option_function_parameter_list  ->  all_type_define identifier ARRAY inner_option_define_identifier .   (rule 284)

    $default	reduce using rule 284 (option_function_parameter_list)



state 889

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 286)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 287)

    COMMA	shift, and go to state 958
    CLOSE_MPAR	shift, and go to state 959
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    ari_operator	go to state 240



state 890

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 58)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 47
    SIGNED	shift, and go to state 48
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 50
    LENGTH	shift, and go to state 51
    REQUEST	shift, and go to state 52
    FINAL	shift, and go to state 53
    KEEP	shift, and go to state 54
    ALWAYS	shift, and go to state 55
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 57

    $default	reduce using rule 67 (empty_statement)

    statement	go to state 960
    empty_statement	go to state 961
    function_define	go to state 59
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    sign_type_define	go to state 71
    all_type_define	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 891

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 303)

    OPEN_PAR	shift, and go to state 962



state 892

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY inner_option_define_identifier .   (rule 299)

    $default	reduce using rule 299 (inner_option_define_identifier)



state 893

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 298)

    $default	reduce using rule 298 (inner_option_define_identifier)



state 894

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 300)

    $default	reduce using rule 300 (inner_option_define_identifier)



state 895

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 302)

    COMMA	shift, and go to state 285

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 963



state 896

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier inner_option_define_identifier .   (rule 308)

    $default	reduce using rule 308 (inner_option_define_identifier)



state 897

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 307)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 964
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 898

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY inner_option_define_identifier .   (rule 301)

    $default	reduce using rule 301 (inner_option_define_identifier)



state 899

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 305)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 306)

    COMMA	shift, and go to state 965
    CLOSE_MPAR	shift, and go to state 966
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    ari_operator	go to state 240



state 900

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR .   (rule 62)

    $default	reduce using rule 62 (statement)



state 901

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR . statement CLOSE_PAR   (rule 55)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 47
    SIGNED	shift, and go to state 48
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 50
    LENGTH	shift, and go to state 51
    REQUEST	shift, and go to state 52
    FINAL	shift, and go to state 53
    KEEP	shift, and go to state 54
    ALWAYS	shift, and go to state 55
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 57

    statement	go to state 967
    function_define	go to state 59
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    sign_type_define	go to state 71
    all_type_define	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 902

    for_sta_control  ->  ass_statement .   (rule 347)

    $default	reduce using rule 347 (for_sta_control)



state 903

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control . CLOSE_PAR statement_bpar   (rule 341)

    CLOSE_PAR	shift, and go to state 968



state 904

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp . CLOSE_PAR   (rule 43)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 241)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 242)

    CLOSE_PAR	shift, and go to state 969
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273



state 905

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 140)

    CLOSE_PAR	shift, and go to state 970



state 906

    inner_option_list_value  ->  COMMA ari_exp inner_option_list_value .   (rule 205)

    $default	reduce using rule 205 (inner_option_list_value)



state 907

    inner_option_list_value  ->  COMMA array_exp inner_option_list_value .   (rule 207)

    $default	reduce using rule 207 (inner_option_list_value)



state 908

    inner_option_list_value  ->  COMMA strliteral inner_option_list_value .   (rule 206)

    $default	reduce using rule 206 (inner_option_list_value)



state 909

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 180)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 214)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 237)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 215
    INTDECLARATION	shift, and go to state 971
    CHARDECLARATION	shift, and go to state 972
    VOIDDECLARATION	shift, and go to state 218
    FLOATDECLARATION	shift, and go to state 419
    OPEN_PAR	shift, and go to state 220
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 973
    SIGNED	shift, and go to state 222
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 223
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 224
    point_exp	go to state 225
    ari_exp	go to state 226
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 227
    type_cast	go to state 102
    identifier	go to state 228
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 229



state 910

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    OPEN_MPAR	shift, and go to state 974



state 911

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    OPEN_MPAR	shift, and go to state 975



state 912

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 180)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 214)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 237)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 215
    INTDECLARATION	shift, and go to state 976
    CHARDECLARATION	shift, and go to state 977
    VOIDDECLARATION	shift, and go to state 218
    FLOATDECLARATION	shift, and go to state 419
    OPEN_PAR	shift, and go to state 220
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 978
    SIGNED	shift, and go to state 222
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 223
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 224
    point_exp	go to state 225
    ari_exp	go to state 226
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 227
    type_cast	go to state 102
    identifier	go to state 228
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 229



state 913

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    OPEN_MPAR	shift, and go to state 979



state 914

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    OPEN_MPAR	shift, and go to state 980



state 915

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    OPEN_MPAR	shift, and go to state 981



state 916

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    OPEN_MPAR	shift, and go to state 982



state 917

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 74)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    identifier  ->  ID .   (rule 323)

    OPEN_PAR	shift, and go to state 186
    CLOSE_PAR	shift, and go to state 983
    OPEN_MPAR	shift, and go to state 187

    CLOSE_PAR	[reduce using rule 323 (identifier)]
    $default	reduce using rule 323 (identifier)



state 918

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 180)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 214)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 237)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 215
    INTDECLARATION	shift, and go to state 216
    CHARDECLARATION	shift, and go to state 217
    VOIDDECLARATION	shift, and go to state 218
    FLOATDECLARATION	shift, and go to state 219
    OPEN_PAR	shift, and go to state 984
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 221
    SIGNED	shift, and go to state 222
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 223
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 224
    point_exp	go to state 225
    ari_exp	go to state 226
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 227
    type_cast	go to state 102
    identifier	go to state 228
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 229



state 919

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 74)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    identifier  ->  ID .   (rule 323)

    OPEN_PAR	shift, and go to state 186
    CLOSE_PAR	shift, and go to state 985
    OPEN_MPAR	shift, and go to state 187

    CLOSE_PAR	[reduce using rule 323 (identifier)]
    $default	reduce using rule 323 (identifier)



state 920

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    intliteral  ->  INTLITERAL .   (rule 326)

    CLOSE_PAR	shift, and go to state 986

    CLOSE_PAR	[reduce using rule 326 (intliteral)]
    $default	reduce using rule 326 (intliteral)



state 921

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 90)

    CLOSE_PAR	shift, and go to state 987



state 922

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 144)

    CLOSE_PAR	shift, and go to state 988

    CLOSE_PAR	[reduce using rule 144 (array)]
    $default	reduce using rule 144 (array)



state 923

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 89)

    $default	reduce using rule 89 (declaration)



state 924

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 157)

    $default	reduce using rule 157 (point_exp)



state 925

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR .   (rule 54)

    $default	reduce using rule 54 (statement)



state 926

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)

    CLOSE_MPAR	shift, and go to state 989



state 927

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    OPEN_PAR	shift, and go to state 990



state 928

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    CLOSE_PAR	shift, and go to state 910



state 929

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 911



state 930

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    OPEN_PAR	shift, and go to state 991



state 931

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    CLOSE_PAR	shift, and go to state 913



state 932

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CLOSE_PAR	shift, and go to state 914



state 933

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    CLOSE_PAR	shift, and go to state 915



state 934

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 916



state 935

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    ID  	shift, and go to state 992



state 936

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    OPEN_PAR	shift, and go to state 993
    ID  	shift, and go to state 994
    INTLITERAL	shift, and go to state 995



state 937

    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 312)

    $default	reduce using rule 312 (option_function_identifier)



state 938

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 74)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 316)

    CLOSE_PAR	shift, and go to state 996



state 939

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . strliteral inner_option_identifier_array_declaration   (rule 105)

    OPEN_PAR	shift, and go to state 665
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307
    STRLITERAL	shift, and go to state 126

    array_exp	go to state 997
    option_list_value	go to state 313
    option_struct_list_value	go to state 314
    strliteral	go to state 998



state 940

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration .   (rule 100)

    $default	reduce using rule 100 (option_identifier_array_declaration)



state 941

    function_define  ->  all_type_define MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    OPEN_BPAR	shift, and go to state 999



state 942

    function_define  ->  all_type_define MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 69)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 47
    SIGNED	shift, and go to state 48
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 50
    LENGTH	shift, and go to state 51
    REQUEST	shift, and go to state 52
    FINAL	shift, and go to state 53
    KEEP	shift, and go to state 54
    ALWAYS	shift, and go to state 55
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 57

    statement	go to state 1000
    function_define	go to state 59
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    sign_type_define	go to state 71
    all_type_define	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 943

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    function_define  ->  all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 68)

    CLOSE_BPAR	shift, and go to state 1001
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 944

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR .   (rule 23)

    $default	reduce using rule 23 (complexProposition)



state 945

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 236)

    $default	reduce using rule 236 (type_cast)



state 946

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 229)

    $default	reduce using rule 229 (type_cast)



state 947

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 232)

    $default	reduce using rule 232 (type_cast)



state 948

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    ID  	shift, and go to state 994



state 949

    function_define  ->  STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 73)

    OPEN_BPAR	shift, and go to state 1002



state 950

    function_define  ->  STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 72)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 47
    SIGNED	shift, and go to state 48
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 50
    LENGTH	shift, and go to state 51
    REQUEST	shift, and go to state 52
    FINAL	shift, and go to state 53
    KEEP	shift, and go to state 54
    ALWAYS	shift, and go to state 55
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 57

    statement	go to state 1003
    function_define	go to state 59
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    sign_type_define	go to state 71
    all_type_define	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 951

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    function_define  ->  STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 71)

    CLOSE_BPAR	shift, and go to state 1004
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 952

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 292)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 348
    sign_type_define	go to state 71
    all_type_define	go to state 459
    option_function_parameter_list	go to state 1005



state 953

    option_function_parameter_list  ->  ID MUL MUL identifier inner_option_define_identifier .   (rule 276)

    $default	reduce using rule 276 (option_function_parameter_list)



state 954

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier inner_option_define_identifier .   (rule 272)

    $default	reduce using rule 272 (option_function_parameter_list)



state 955

    option_function_parameter_list  ->  all_type_define MUL MUL identifier inner_option_define_identifier .   (rule 291)

    $default	reduce using rule 291 (option_function_parameter_list)



state 956

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 285)

    $default	reduce using rule 285 (option_function_parameter_list)



state 957

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 288)

    CLOSE_MPAR	shift, and go to state 1006
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    ari_operator	go to state 240



state 958

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 287)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1007
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 959

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 286)

    COMMA	shift, and go to state 285

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1008



state 960

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    empty_statement  ->  statement .   (rule 66)

    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195

    $default	reduce using rule 66 (empty_statement)



state 961

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 58)

    CLOSE_BPAR	shift, and go to state 1009



state 962

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 303)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 348
    sign_type_define	go to state 71
    all_type_define	go to state 459
    option_function_parameter_list	go to state 1010



state 963

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 302)

    $default	reduce using rule 302 (inner_option_define_identifier)



state 964

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 307)

    CLOSE_MPAR	shift, and go to state 1011
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    ari_operator	go to state 240



state 965

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 306)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1012
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 966

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 305)

    COMMA	shift, and go to state 285

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1013



state 967

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement . CLOSE_PAR   (rule 55)

    CLOSE_PAR	shift, and go to state 1014
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 968

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR . statement_bpar   (rule 341)

    error	shift, and go to state 301
    OPEN_BPAR	shift, and go to state 302

    statement_bpar	go to state 1015



state 969

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR .   (rule 43)

    $default	reduce using rule 43 (statement)



state 970

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 140)

    OPEN_PAR	shift, and go to state 1016



state 971

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 1017



state 972

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 1018



state 973

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)

    INTDECLARATION	shift, and go to state 597
    CHARDECLARATION	shift, and go to state 1019



state 974

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1020
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 975

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1021
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 976

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 1022



state 977

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 1023



state 978

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)

    INTDECLARATION	shift, and go to state 597
    CHARDECLARATION	shift, and go to state 1024



state 979

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1025
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 980

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1026
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 981

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1027
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 982

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1028
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 983

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    OPEN_MPAR	shift, and go to state 1029



state 984

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 160)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 180)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 214)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 237)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 324)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 380)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 215
    INTDECLARATION	shift, and go to state 1030
    CHARDECLARATION	shift, and go to state 1031
    VOIDDECLARATION	shift, and go to state 218
    FLOATDECLARATION	shift, and go to state 419
    OPEN_PAR	shift, and go to state 220
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 1032
    SIGNED	shift, and go to state 222
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 223
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 224
    point_exp	go to state 225
    ari_exp	go to state 226
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 227
    type_cast	go to state 102
    identifier	go to state 228
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 229



state 985

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    OPEN_MPAR	shift, and go to state 1033



state 986

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    OPEN_MPAR	shift, and go to state 1034



state 987

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 90)

    $default	reduce using rule 90 (declaration)



state 988

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)

    OPEN_PAR	shift, and go to state 1035



state 989

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)

    CLOSE_PAR	shift, and go to state 988



state 990

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    INTDECLARATION	shift, and go to state 1036
    CHARDECLARATION	shift, and go to state 1037
    UNSIGNED	shift, and go to state 1038



state 991

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    INTDECLARATION	shift, and go to state 1039
    CHARDECLARATION	shift, and go to state 1040
    UNSIGNED	shift, and go to state 1041



state 992

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    CLOSE_PAR	shift, and go to state 983



state 993

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    OPEN_PAR	shift, and go to state 1042



state 994

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    CLOSE_PAR	shift, and go to state 985



state 995

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 986



state 996

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 74)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 316)

    COMMA	shift, and go to state 546

    COMMA	[reduce using rule 74 (function)]
    CLOSE_PAR	reduce using rule 74 (function)
    CLOSE_PAR	[reduce using rule 317 (inner_option_function_identifier)]
    $default	reduce using rule 74 (function)

    inner_option_function_identifier	go to state 1043



state 997

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp . inner_option_identifier_array_declaration   (rule 104)
    array_exp  ->  array_exp . CON array_exp   (rule 195)

    COMMA	shift, and go to state 375
    CON 	shift, and go to state 495

    COMMA	[reduce using rule 109 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 109 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1044



state 998

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral . inner_option_identifier_array_declaration   (rule 105)

    COMMA	shift, and go to state 375

    COMMA	[reduce using rule 109 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 109 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1045



state 999

    function_define  ->  all_type_define MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 70)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 47
    SIGNED	shift, and go to state 48
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 50
    LENGTH	shift, and go to state 51
    REQUEST	shift, and go to state 52
    FINAL	shift, and go to state 53
    KEEP	shift, and go to state 54
    ALWAYS	shift, and go to state 55
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 57

    statement	go to state 1046
    function_define	go to state 59
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    sign_type_define	go to state 71
    all_type_define	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 1000

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    function_define  ->  all_type_define MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 69)

    CLOSE_BPAR	shift, and go to state 1047
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 1001

    function_define  ->  all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 68)

    $default	reduce using rule 68 (function_define)



state 1002

    function_define  ->  STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 73)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    EXTERN	shift, and go to state 46
    UNSIGNED	shift, and go to state 47
    SIGNED	shift, and go to state 48
    MUL 	shift, and go to state 49
    NEXT	shift, and go to state 50
    LENGTH	shift, and go to state 51
    REQUEST	shift, and go to state 52
    FINAL	shift, and go to state 53
    KEEP	shift, and go to state 54
    ALWAYS	shift, and go to state 55
    ID  	shift, and go to state 56
    STRUCT_TYPE	shift, and go to state 57

    statement	go to state 1048
    function_define	go to state 59
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    sign_type_define	go to state 71
    all_type_define	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 1003

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    function_define  ->  STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 72)

    CLOSE_BPAR	shift, and go to state 1049
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 1004

    function_define  ->  STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 71)

    $default	reduce using rule 71 (function_define)



state 1005

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 292)

    CLOSE_PAR	shift, and go to state 1050



state 1006

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 288)

    COMMA	shift, and go to state 285

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1051



state 1007

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 287)

    CLOSE_MPAR	shift, and go to state 1052
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    ari_operator	go to state 240



state 1008

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 286)

    $default	reduce using rule 286 (option_function_parameter_list)



state 1009

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 58)

    $default	reduce using rule 58 (statement)



state 1010

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 303)

    CLOSE_PAR	shift, and go to state 1053



state 1011

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 307)

    COMMA	shift, and go to state 285

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1054



state 1012

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 306)

    CLOSE_MPAR	shift, and go to state 1055
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    ari_operator	go to state 240



state 1013

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 305)

    $default	reduce using rule 305 (inner_option_define_identifier)



state 1014

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR .   (rule 55)

    $default	reduce using rule 55 (statement)



state 1015

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar .   (rule 341)

    $default	reduce using rule 341 (extend_for_statement)



state 1016

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR function   (rule 140)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 348
    sign_type_define	go to state 71
    all_type_define	go to state 459
    option_function_parameter_list	go to state 1056



state 1017

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 1057
    MUL 	shift, and go to state 585



state 1018

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 1058
    MUL 	shift, and go to state 588



state 1019

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 601
    MUL 	shift, and go to state 1059



state 1020

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 145)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    COMMA	shift, and go to state 549
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 153 (option_ari_exp)

    option_ari_exp	go to state 1060
    ari_operator	go to state 240



state 1021

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 124)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    COMMA	shift, and go to state 549
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 153 (option_ari_exp)

    option_ari_exp	go to state 1061
    ari_operator	go to state 240



state 1022

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 1062
    MUL 	shift, and go to state 585



state 1023

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 1063
    MUL 	shift, and go to state 588



state 1024

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 601
    MUL 	shift, and go to state 1064



state 1025

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 148)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    COMMA	shift, and go to state 549
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 153 (option_ari_exp)

    option_ari_exp	go to state 1065
    ari_operator	go to state 240



state 1026

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 122)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    COMMA	shift, and go to state 549
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 153 (option_ari_exp)

    option_ari_exp	go to state 1066
    ari_operator	go to state 240



state 1027

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 147)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    COMMA	shift, and go to state 549
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 153 (option_ari_exp)

    option_ari_exp	go to state 1067
    ari_operator	go to state 240



state 1028

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 125)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    COMMA	shift, and go to state 549
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 153 (option_ari_exp)

    option_ari_exp	go to state 1068
    ari_operator	go to state 240



state 1029

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1069
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 1030

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 1070



state 1031

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 1071



state 1032

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)

    INTDECLARATION	shift, and go to state 597
    CHARDECLARATION	shift, and go to state 1072



state 1033

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1073
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 1034

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1074
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 1035

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 456
    UNSIGNED	shift, and go to state 347
    ID  	shift, and go to state 457
    STRUCT_TYPE	shift, and go to state 458

    $default	reduce using rule 293 (option_function_parameter_list)

    type_define	go to state 348
    sign_type_define	go to state 71
    all_type_define	go to state 459
    option_function_parameter_list	go to state 1075



state 1036

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    MUL 	shift, and go to state 1076



state 1037

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    MUL 	shift, and go to state 1077



state 1038

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    CHARDECLARATION	shift, and go to state 1078



state 1039

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    MUL 	shift, and go to state 1079



state 1040

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    MUL 	shift, and go to state 1080



state 1041

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CHARDECLARATION	shift, and go to state 1081



state 1042

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    INTDECLARATION	shift, and go to state 1082
    CHARDECLARATION	shift, and go to state 1083
    UNSIGNED	shift, and go to state 1084



state 1043

    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 316)

    $default	reduce using rule 316 (inner_option_function_identifier)



state 1044

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration .   (rule 104)

    $default	reduce using rule 104 (option_identifier_array_declaration)



state 1045

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration .   (rule 105)

    $default	reduce using rule 105 (option_identifier_array_declaration)



state 1046

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    function_define  ->  all_type_define MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 70)

    CLOSE_BPAR	shift, and go to state 1085
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 1047

    function_define  ->  all_type_define MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 69)

    $default	reduce using rule 69 (function_define)



state 1048

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    function_define  ->  STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 73)

    CLOSE_BPAR	shift, and go to state 1086
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 1049

    function_define  ->  STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 72)

    $default	reduce using rule 72 (function_define)



state 1050

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 292)

    COMMA	shift, and go to state 285

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1087



state 1051

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 288)

    $default	reduce using rule 288 (option_function_parameter_list)



state 1052

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 287)

    COMMA	shift, and go to state 285

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1088



state 1053

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 303)

    COMMA	shift, and go to state 285

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1089



state 1054

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 307)

    $default	reduce using rule 307 (inner_option_define_identifier)



state 1055

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 306)

    COMMA	shift, and go to state 285

    $default	reduce using rule 304 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1090



state 1056

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR function   (rule 140)

    CLOSE_PAR	shift, and go to state 1091



state 1057

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 812
    INTLITERAL	shift, and go to state 1092
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 729
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 1058

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 815
    INTLITERAL	shift, and go to state 1093
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 731
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 1059

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 1094
    MUL 	shift, and go to state 746



state 1060

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 145)

    CLOSE_MPAR	shift, and go to state 1095



state 1061

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 124)

    CLOSE_MPAR	shift, and go to state 1096



state 1062

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 812
    INTLITERAL	shift, and go to state 1097
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 729
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 1063

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 815
    INTLITERAL	shift, and go to state 1098
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 731
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 1064

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 1099
    MUL 	shift, and go to state 746



state 1065

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 148)

    CLOSE_MPAR	shift, and go to state 1100



state 1066

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 122)

    CLOSE_MPAR	shift, and go to state 1101



state 1067

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 147)

    CLOSE_MPAR	shift, and go to state 1102



state 1068

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 125)

    CLOSE_MPAR	shift, and go to state 1103



state 1069

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 146)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    COMMA	shift, and go to state 549
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 153 (option_ari_exp)

    option_ari_exp	go to state 1104
    ari_operator	go to state 240



state 1070

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 1105
    MUL 	shift, and go to state 585



state 1071

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 1106
    MUL 	shift, and go to state 588



state 1072

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 601
    MUL 	shift, and go to state 1107



state 1073

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 149)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    COMMA	shift, and go to state 549
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 153 (option_ari_exp)

    option_ari_exp	go to state 1108
    ari_operator	go to state 240



state 1074

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 123)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    COMMA	shift, and go to state 549
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 153 (option_ari_exp)

    option_ari_exp	go to state 1109
    ari_operator	go to state 240



state 1075

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P array_exp   (rule 92)

    CLOSE_PAR	shift, and go to state 1110



state 1076

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    CLOSE_PAR	shift, and go to state 1111



state 1077

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    CLOSE_PAR	shift, and go to state 1112



state 1078

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    MUL 	shift, and go to state 1113



state 1079

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1114



state 1080

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1115



state 1081

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    MUL 	shift, and go to state 1116



state 1082

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    MUL 	shift, and go to state 1117



state 1083

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    MUL 	shift, and go to state 1118



state 1084

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CHARDECLARATION	shift, and go to state 1119



state 1085

    function_define  ->  all_type_define MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 70)

    $default	reduce using rule 70 (function_define)



state 1086

    function_define  ->  STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 73)

    $default	reduce using rule 73 (function_define)



state 1087

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 292)

    $default	reduce using rule 292 (option_function_parameter_list)



state 1088

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 287)

    $default	reduce using rule 287 (option_function_parameter_list)



state 1089

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 303)

    $default	reduce using rule 303 (inner_option_define_identifier)



state 1090

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 306)

    $default	reduce using rule 306 (inner_option_define_identifier)



state 1091

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . function   (rule 140)

    OPEN_PAR	shift, and go to state 1120
    EXTERN	shift, and go to state 46
    ID  	shift, and go to state 1121

    function	go to state 1122
    array	go to state 1123



state 1092

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    intliteral  ->  INTLITERAL .   (rule 326)

    CLOSE_PAR	shift, and go to state 1124

    CLOSE_PAR	[reduce using rule 326 (intliteral)]
    $default	reduce using rule 326 (intliteral)



state 1093

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    intliteral  ->  INTLITERAL .   (rule 326)

    CLOSE_PAR	shift, and go to state 1125

    CLOSE_PAR	[reduce using rule 326 (intliteral)]
    $default	reduce using rule 326 (intliteral)



state 1094

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 919
    INTLITERAL	shift, and go to state 1126
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 865
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 1095

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 145)

    $default	reduce using rule 145 (array)



state 1096

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 124)

    $default	reduce using rule 124 (leftaddrshift)



state 1097

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    intliteral  ->  INTLITERAL .   (rule 326)

    CLOSE_PAR	shift, and go to state 1127

    CLOSE_PAR	[reduce using rule 326 (intliteral)]
    $default	reduce using rule 326 (intliteral)



state 1098

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    intliteral  ->  INTLITERAL .   (rule 326)

    CLOSE_PAR	shift, and go to state 1128

    CLOSE_PAR	[reduce using rule 326 (intliteral)]
    $default	reduce using rule 326 (intliteral)



state 1099

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 919
    INTLITERAL	shift, and go to state 1129
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 865
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 1100

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 148)

    $default	reduce using rule 148 (array)



state 1101

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 122)

    $default	reduce using rule 122 (leftaddrshift)



state 1102

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 147)

    $default	reduce using rule 147 (array)



state 1103

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 125)

    $default	reduce using rule 125 (leftaddrshift)



state 1104

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 146)

    CLOSE_MPAR	shift, and go to state 1130



state 1105

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 812
    INTLITERAL	shift, and go to state 1131
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 729
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 1106

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 815
    INTLITERAL	shift, and go to state 1132
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 731
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 1107

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 1133
    MUL 	shift, and go to state 746



state 1108

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 149)

    CLOSE_MPAR	shift, and go to state 1134



state 1109

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 123)

    CLOSE_MPAR	shift, and go to state 1135



state 1110

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 91)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P array_exp   (rule 92)

    ASS_P	shift, and go to state 1136

    $default	reduce using rule 91 (declaration)



state 1111

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    INTLITERAL	shift, and go to state 1137



state 1112

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    INTLITERAL	shift, and go to state 1138



state 1113

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    CLOSE_PAR	shift, and go to state 1139



state 1114

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    INTLITERAL	shift, and go to state 1140



state 1115

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    INTLITERAL	shift, and go to state 1141



state 1116

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1142



state 1117

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    CLOSE_PAR	shift, and go to state 1143



state 1118

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1144



state 1119

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    MUL 	shift, and go to state 1145



state 1120

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)

    OPEN_PAR	shift, and go to state 1146
    ID  	shift, and go to state 1147

    array	go to state 559



state 1121

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 74)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    OPEN_PAR	shift, and go to state 186
    OPEN_MPAR	shift, and go to state 187



state 1122

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function .   (rule 140)

    $default	reduce using rule 140 (ass_right)



state 1123

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)

    OPEN_PAR	shift, and go to state 202



state 1124

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    CLOSE_PAR	shift, and go to state 1148



state 1125

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    CLOSE_PAR	shift, and go to state 1149



state 1126

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    intliteral  ->  INTLITERAL .   (rule 326)

    CLOSE_PAR	shift, and go to state 1150

    CLOSE_PAR	[reduce using rule 326 (intliteral)]
    $default	reduce using rule 326 (intliteral)



state 1127

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1151



state 1128

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1152



state 1129

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    intliteral  ->  INTLITERAL .   (rule 326)

    CLOSE_PAR	shift, and go to state 1153

    CLOSE_PAR	[reduce using rule 326 (intliteral)]
    $default	reduce using rule 326 (intliteral)



state 1130

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 146)

    $default	reduce using rule 146 (array)



state 1131

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    intliteral  ->  INTLITERAL .   (rule 326)

    CLOSE_PAR	shift, and go to state 1154

    CLOSE_PAR	[reduce using rule 326 (intliteral)]
    $default	reduce using rule 326 (intliteral)



state 1132

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    intliteral  ->  INTLITERAL .   (rule 326)

    CLOSE_PAR	shift, and go to state 1155

    CLOSE_PAR	[reduce using rule 326 (intliteral)]
    $default	reduce using rule 326 (intliteral)



state 1133

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 919
    INTLITERAL	shift, and go to state 1156
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 583
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    casted_element	go to state 865
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 1134

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 149)

    $default	reduce using rule 149 (array)



state 1135

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 123)

    $default	reduce using rule 123 (leftaddrshift)



state 1136

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . array_exp   (rule 92)

    OPEN_PAR	shift, and go to state 665
    OPEN_BPAR	shift, and go to state 306
    OPEN_MPAR	shift, and go to state 307

    array_exp	go to state 1157
    option_list_value	go to state 313
    option_struct_list_value	go to state 314



state 1137

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    CLOSE_PAR	shift, and go to state 1124



state 1138

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    CLOSE_PAR	shift, and go to state 1125



state 1139

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    INTLITERAL	shift, and go to state 1158



state 1140

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1127



state 1141

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1128



state 1142

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    INTLITERAL	shift, and go to state 1159



state 1143

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    INTLITERAL	shift, and go to state 1160



state 1144

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    INTLITERAL	shift, and go to state 1161



state 1145

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1162



state 1146

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 150)

    INTDECLARATION	shift, and go to state 607
    CHARDECLARATION	shift, and go to state 608
    FLOATDECLARATION	shift, and go to state 609
    OPEN_PAR	shift, and go to state 1146
    UNSIGNED	shift, and go to state 610
    ID  	shift, and go to state 1147

    array	go to state 559



state 1147

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    OPEN_MPAR	shift, and go to state 187



state 1148

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    OPEN_MPAR	shift, and go to state 1163



state 1149

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    OPEN_MPAR	shift, and go to state 1164



state 1150

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    CLOSE_PAR	shift, and go to state 1165



state 1151

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    OPEN_MPAR	shift, and go to state 1166



state 1152

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    OPEN_MPAR	shift, and go to state 1167



state 1153

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1168



state 1154

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    CLOSE_PAR	shift, and go to state 1169



state 1155

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1170



state 1156

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    intliteral  ->  INTLITERAL .   (rule 326)

    CLOSE_PAR	shift, and go to state 1171

    CLOSE_PAR	[reduce using rule 326 (intliteral)]
    $default	reduce using rule 326 (intliteral)



state 1157

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp .   (rule 92)
    array_exp  ->  array_exp . CON array_exp   (rule 195)

    CON 	shift, and go to state 495

    $default	reduce using rule 92 (declaration)



state 1158

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    CLOSE_PAR	shift, and go to state 1150



state 1159

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1153



state 1160

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    CLOSE_PAR	shift, and go to state 1154



state 1161

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1155



state 1162

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    INTLITERAL	shift, and go to state 1172



state 1163

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1173
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 1164

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1174
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 1165

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    OPEN_MPAR	shift, and go to state 1175



state 1166

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1176
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 1167

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1177
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 1168

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    OPEN_MPAR	shift, and go to state 1178



state 1169

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    OPEN_MPAR	shift, and go to state 1179



state 1170

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    OPEN_MPAR	shift, and go to state 1180



state 1171

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1181



state 1172

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1171



state 1173

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 134)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    COMMA	shift, and go to state 549
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 153 (option_ari_exp)

    option_ari_exp	go to state 1182
    ari_operator	go to state 240



state 1174

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 132)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    COMMA	shift, and go to state 549
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 153 (option_ari_exp)

    option_ari_exp	go to state 1183
    ari_operator	go to state 240



state 1175

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1184
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 1176

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 128)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    COMMA	shift, and go to state 549
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 153 (option_ari_exp)

    option_ari_exp	go to state 1185
    ari_operator	go to state 240



state 1177

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 126)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    COMMA	shift, and go to state 549
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 153 (option_ari_exp)

    option_ari_exp	go to state 1186
    ari_operator	go to state 240



state 1178

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1187
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 1179

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1188
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 1180

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1189
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 1181

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    OPEN_MPAR	shift, and go to state 1190



state 1182

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 134)

    CLOSE_MPAR	shift, and go to state 1191



state 1183

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 132)

    CLOSE_MPAR	shift, and go to state 1192



state 1184

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 133)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    COMMA	shift, and go to state 549
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 153 (option_ari_exp)

    option_ari_exp	go to state 1193
    ari_operator	go to state 240



state 1185

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 128)

    CLOSE_MPAR	shift, and go to state 1194



state 1186

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 126)

    CLOSE_MPAR	shift, and go to state 1195



state 1187

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 127)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    COMMA	shift, and go to state 549
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 153 (option_ari_exp)

    option_ari_exp	go to state 1196
    ari_operator	go to state 240



state 1188

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 131)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    COMMA	shift, and go to state 549
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 153 (option_ari_exp)

    option_ari_exp	go to state 1197
    ari_operator	go to state 240



state 1189

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 129)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    COMMA	shift, and go to state 549
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 153 (option_ari_exp)

    option_ari_exp	go to state 1198
    ari_operator	go to state 240



state 1190

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 46
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 49
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 56
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    point_exp	go to state 97
    ari_exp	go to state 1199
    simple_ari_exp	go to state 99
    member_in_exp	go to state 100
    address_exp	go to state 101
    type_cast	go to state 102
    identifier	go to state 103
    intliteral	go to state 104
    charliteral	go to state 105
    floatliteral	go to state 106
    struct_member_exp	go to state 107



state 1191

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 134)

    $default	reduce using rule 134 (leftaddrshift)



state 1192

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 132)

    $default	reduce using rule 132 (leftaddrshift)



state 1193

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 133)

    CLOSE_MPAR	shift, and go to state 1200



state 1194

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 128)

    $default	reduce using rule 128 (leftaddrshift)



state 1195

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 126)

    $default	reduce using rule 126 (leftaddrshift)



state 1196

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 127)

    CLOSE_MPAR	shift, and go to state 1201



state 1197

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 131)

    CLOSE_MPAR	shift, and go to state 1202



state 1198

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 129)

    CLOSE_MPAR	shift, and go to state 1203



state 1199

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 130)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 163)

    COMMA	shift, and go to state 549
    ADD 	shift, and go to state 238
    SUB 	shift, and go to state 239

    $default	reduce using rule 153 (option_ari_exp)

    option_ari_exp	go to state 1204
    ari_operator	go to state 240



state 1200

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 133)

    $default	reduce using rule 133 (leftaddrshift)



state 1201

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 127)

    $default	reduce using rule 127 (leftaddrshift)



state 1202

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 131)

    $default	reduce using rule 131 (leftaddrshift)



state 1203

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 129)

    $default	reduce using rule 129 (leftaddrshift)



state 1204

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 130)

    CLOSE_MPAR	shift, and go to state 1205



state 1205

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 130)

    $default	reduce using rule 130 (leftaddrshift)



state 1206

    $   	go to state 1207



state 1207

    $   	go to state 1208



state 1208

    $default	accept
