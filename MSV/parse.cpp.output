Useless nonterminals:

   option_array_declaration
   inner_option_array_declaration


Terminals which are not used:

   POINTERDECLARATION
   LISTDECLARATION
   OVER
   CYLINDER
   OVEREP
   NON_DETERMINED
   SEND
   RECEIVE
   PROCESS
   CHANNEL
   PUT
   GET
   ERROR_TOKEN
   STRFUNCHEAD
   STRFUNCTAIL
   STRFUNCCAT
   STRFUNCCMP
   STRFUNCCPY
   STRFUNCLEN
   PREFIX


Useless rules:

#106   option_array_declaration :	 ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#107   inner_option_array_declaration :	 COMMA ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#108   inner_option_array_declaration :	;
#109   inner_option_array_declaration :	 COMMA error;


Conflict in state 85 between rule 13 and token CHOP resolved as reduce.
Conflict in state 85 between rule 13 and token IFF resolved as reduce.
Conflict in state 85 between rule 13 and token PROPIMPLY resolved as reduce.
Conflict in state 85 between rule 13 and token OR resolved as reduce.
Conflict in state 85 between rule 13 and token AND resolved as reduce.
Conflict in state 85 between rule 13 and token CHOPSTAR resolved as an error.
Conflict in state 86 between rule 22 and token CHOP resolved as reduce.
Conflict in state 86 between rule 22 and token IFF resolved as reduce.
Conflict in state 86 between rule 22 and token PROPIMPLY resolved as reduce.
Conflict in state 86 between rule 22 and token OR resolved as reduce.
Conflict in state 86 between rule 22 and token AND resolved as reduce.
Conflict in state 86 between rule 22 and token CHOPSTAR resolved as an error.
Conflict in state 109 between rule 21 and token CHOP resolved as reduce.
Conflict in state 109 between rule 21 and token IFF resolved as reduce.
Conflict in state 109 between rule 21 and token PROPIMPLY resolved as reduce.
Conflict in state 109 between rule 21 and token OR resolved as reduce.
Conflict in state 109 between rule 21 and token AND resolved as reduce.
Conflict in state 109 between rule 21 and token CHOPSTAR resolved as an error.
Conflict in state 110 between rule 10 and token CHOP resolved as reduce.
Conflict in state 110 between rule 10 and token IFF resolved as reduce.
Conflict in state 110 between rule 10 and token PROPIMPLY resolved as reduce.
Conflict in state 110 between rule 10 and token OR resolved as reduce.
Conflict in state 110 between rule 10 and token AND resolved as reduce.
Conflict in state 110 between rule 10 and token CHOPSTAR resolved as an error.
Conflict in state 111 between rule 9 and token CHOP resolved as reduce.
Conflict in state 111 between rule 9 and token IFF resolved as reduce.
Conflict in state 111 between rule 9 and token PROPIMPLY resolved as reduce.
Conflict in state 111 between rule 9 and token OR resolved as reduce.
Conflict in state 111 between rule 9 and token AND resolved as reduce.
Conflict in state 111 between rule 9 and token CHOPSTAR resolved as an error.
Conflict in state 112 between rule 20 and token CHOP resolved as reduce.
Conflict in state 112 between rule 20 and token IFF resolved as reduce.
Conflict in state 112 between rule 20 and token PROPIMPLY resolved as reduce.
Conflict in state 112 between rule 20 and token OR resolved as reduce.
Conflict in state 112 between rule 20 and token AND resolved as reduce.
Conflict in state 112 between rule 20 and token CHOPSTAR resolved as an error.
Conflict in state 113 between rule 12 and token CHOP resolved as reduce.
Conflict in state 113 between rule 12 and token IFF resolved as reduce.
Conflict in state 113 between rule 12 and token PROPIMPLY resolved as reduce.
Conflict in state 113 between rule 12 and token OR resolved as reduce.
Conflict in state 113 between rule 12 and token AND resolved as reduce.
Conflict in state 113 between rule 12 and token CHOPSTAR resolved as an error.
Conflict in state 114 between rule 11 and token CHOP resolved as reduce.
Conflict in state 114 between rule 11 and token IFF resolved as reduce.
Conflict in state 114 between rule 11 and token PROPIMPLY resolved as reduce.
Conflict in state 114 between rule 11 and token OR resolved as reduce.
Conflict in state 114 between rule 11 and token AND resolved as reduce.
Conflict in state 114 between rule 11 and token CHOPSTAR resolved as an error.
Conflict in state 230 between rule 207 and token IMPLY resolved as reduce.
Conflict in state 233 between rule 206 and token IMPLY resolved as reduce.
Conflict in state 256 between rule 8 and token CHOP resolved as reduce.
Conflict in state 256 between rule 8 and token IFF resolved as shift.
Conflict in state 256 between rule 8 and token PROPIMPLY resolved as shift.
Conflict in state 256 between rule 8 and token OR resolved as shift.
Conflict in state 256 between rule 8 and token AND resolved as shift.
Conflict in state 256 between rule 8 and token CHOPSTAR resolved as shift.
Conflict in state 257 between rule 6 and token CHOP resolved as reduce.
Conflict in state 257 between rule 6 and token IFF resolved as reduce.
Conflict in state 257 between rule 6 and token PROPIMPLY resolved as reduce.
Conflict in state 257 between rule 6 and token OR resolved as shift.
Conflict in state 257 between rule 6 and token AND resolved as shift.
Conflict in state 257 between rule 6 and token CHOPSTAR resolved as shift.
Conflict in state 258 between rule 7 and token CHOP resolved as reduce.
Conflict in state 258 between rule 7 and token IFF resolved as reduce.
Conflict in state 258 between rule 7 and token PROPIMPLY resolved as reduce.
Conflict in state 258 between rule 7 and token OR resolved as shift.
Conflict in state 258 between rule 7 and token AND resolved as shift.
Conflict in state 258 between rule 7 and token CHOPSTAR resolved as shift.
Conflict in state 259 between rule 5 and token CHOP resolved as reduce.
Conflict in state 259 between rule 5 and token IFF resolved as reduce.
Conflict in state 259 between rule 5 and token PROPIMPLY resolved as reduce.
Conflict in state 259 between rule 5 and token OR resolved as reduce.
Conflict in state 259 between rule 5 and token AND resolved as shift.
Conflict in state 259 between rule 5 and token CHOPSTAR resolved as shift.
Conflict in state 260 between rule 4 and token CHOP resolved as reduce.
Conflict in state 260 between rule 4 and token IFF resolved as reduce.
Conflict in state 260 between rule 4 and token PROPIMPLY resolved as reduce.
Conflict in state 260 between rule 4 and token OR resolved as reduce.
Conflict in state 260 between rule 4 and token AND resolved as reduce.
Conflict in state 260 between rule 4 and token CHOPSTAR resolved as shift.
Conflict in state 267 between rule 236 and token OR resolved as reduce.
Conflict in state 267 between rule 236 and token AND resolved as reduce.
Conflict in state 326 between rule 328 and token OR resolved as reduce.
Conflict in state 326 between rule 328 and token AND resolved as reduce.
Conflict in state 377 between rule 32 and token CHOP resolved as reduce.
Conflict in state 377 between rule 32 and token OR resolved as shift.
Conflict in state 377 between rule 32 and token PARALLEL resolved as shift.
Conflict in state 377 between rule 32 and token AND resolved as shift.
Conflict in state 378 between rule 31 and token CHOP resolved as reduce.
Conflict in state 378 between rule 31 and token OR resolved as reduce.
Conflict in state 378 between rule 31 and token PARALLEL resolved as reduce.
Conflict in state 378 between rule 31 and token AND resolved as shift.
Conflict in state 379 between rule 55 and token CHOP resolved as reduce.
Conflict in state 379 between rule 55 and token OR resolved as reduce.
Conflict in state 379 between rule 55 and token PARALLEL resolved as reduce.
Conflict in state 379 between rule 55 and token AND resolved as shift.
Conflict in state 380 between rule 30 and token CHOP resolved as reduce.
Conflict in state 380 between rule 30 and token OR resolved as reduce.
Conflict in state 380 between rule 30 and token PARALLEL resolved as reduce.
Conflict in state 380 between rule 30 and token AND resolved as reduce.
Conflict in state 444 between rule 238 and token OR resolved as reduce.
Conflict in state 444 between rule 238 and token AND resolved as shift.
Conflict in state 445 between rule 237 and token OR resolved as reduce.
Conflict in state 445 between rule 237 and token AND resolved as reduce.
Conflict in state 506 between rule 330 and token OR resolved as reduce.
Conflict in state 506 between rule 330 and token AND resolved as shift.
Conflict in state 507 between rule 329 and token OR resolved as reduce.
Conflict in state 507 between rule 329 and token AND resolved as reduce.
Conflict in state 653 between rule 191 and token CON resolved as reduce.
State 97 contains 2 shift/reduce conflicts.
State 98 contains 2 shift/reduce conflicts.
State 100 contains 14 shift/reduce conflicts.
State 104 contains 2 shift/reduce conflicts.
State 124 contains 2 shift/reduce conflicts.
State 156 contains 3 reduce/reduce conflicts.
State 158 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 159 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 160 contains 1 shift/reduce conflict.
State 162 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 164 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 165 contains 1 shift/reduce conflict.
State 192 contains 1 shift/reduce conflict.
State 223 contains 1 shift/reduce conflict.
State 224 contains 1 shift/reduce conflict.
State 226 contains 1 shift/reduce conflict.
State 227 contains 1 shift/reduce conflict.
State 228 contains 1 shift/reduce conflict.
State 230 contains 1 shift/reduce conflict.
State 233 contains 1 shift/reduce conflict.
State 265 contains 1 shift/reduce conflict.
State 268 contains 2 shift/reduce conflicts.
State 269 contains 2 shift/reduce conflicts.
State 287 contains 1 shift/reduce conflict.
State 288 contains 1 shift/reduce conflict.
State 289 contains 1 shift/reduce conflict.
State 290 contains 1 shift/reduce conflict.
State 307 contains 1 shift/reduce conflict.
State 316 contains 1 shift/reduce conflict.
State 317 contains 1 shift/reduce conflict.
State 318 contains 1 shift/reduce conflict.
State 324 contains 1 shift/reduce conflict.
State 352 contains 1 shift/reduce conflict.
State 353 contains 1 shift/reduce conflict.
State 355 contains 1 shift/reduce conflict.
State 356 contains 1 shift/reduce conflict.
State 360 contains 1 shift/reduce conflict.
State 361 contains 1 shift/reduce conflict.
State 385 contains 2 shift/reduce conflicts.
State 386 contains 2 shift/reduce conflicts.
State 388 contains 2 shift/reduce conflicts.
State 389 contains 2 shift/reduce conflicts.
State 390 contains 2 shift/reduce conflicts.
State 391 contains 2 shift/reduce conflicts.
State 392 contains 2 shift/reduce conflicts.
State 393 contains 2 shift/reduce conflicts.
State 395 contains 2 shift/reduce conflicts.
State 396 contains 2 shift/reduce conflicts.
State 398 contains 2 shift/reduce conflicts.
State 399 contains 2 shift/reduce conflicts.
State 422 contains 1 shift/reduce conflict.
State 429 contains 8 shift/reduce conflicts.
State 431 contains 2 shift/reduce conflicts.
State 474 contains 1 shift/reduce conflict.
State 475 contains 1 shift/reduce conflict.
State 476 contains 1 shift/reduce conflict.
State 493 contains 1 shift/reduce conflict.
State 494 contains 1 shift/reduce conflict.
State 498 contains 1 shift/reduce conflict.
State 520 contains 1 shift/reduce conflict.
State 521 contains 1 shift/reduce conflict.
State 522 contains 1 shift/reduce conflict.
State 526 contains 1 shift/reduce conflict.
State 547 contains 1 shift/reduce conflict.
State 569 contains 3 shift/reduce conflicts.
State 572 contains 10 shift/reduce conflicts.
State 664 contains 2 shift/reduce conflicts.
State 665 contains 2 shift/reduce conflicts.
State 678 contains 1 shift/reduce conflict.
State 679 contains 1 shift/reduce conflict.
State 693 contains 1 shift/reduce conflict.
State 694 contains 1 shift/reduce conflict.
State 699 contains 2 shift/reduce conflicts.
State 700 contains 2 shift/reduce conflicts.
State 702 contains 2 shift/reduce conflicts.
State 703 contains 2 shift/reduce conflicts.
State 792 contains 1 shift/reduce conflict.
State 793 contains 1 shift/reduce conflict.
State 795 contains 1 shift/reduce conflict.
State 796 contains 1 shift/reduce conflict.
State 797 contains 1 shift/reduce conflict.
State 798 contains 1 shift/reduce conflict.
State 811 contains 2 shift/reduce conflicts.
State 824 contains 1 shift/reduce conflict.
State 830 contains 2 shift/reduce conflicts.
State 833 contains 8 shift/reduce conflicts.
State 892 contains 1 shift/reduce conflict.
State 894 contains 1 shift/reduce conflict.
State 895 contains 1 shift/reduce conflict.
State 897 contains 1 shift/reduce conflict.
State 965 contains 1 shift/reduce conflict.
State 966 contains 1 shift/reduce conflict.
State 1048 contains 1 shift/reduce conflict.
State 1049 contains 1 shift/reduce conflict.
State 1053 contains 1 shift/reduce conflict.
State 1054 contains 1 shift/reduce conflict.
State 1085 contains 1 shift/reduce conflict.
State 1088 contains 1 shift/reduce conflict.
State 1090 contains 1 shift/reduce conflict.
State 1091 contains 1 shift/reduce conflict.
State 1116 contains 1 shift/reduce conflict.

Grammar
rule 1    program -> gComplexProposition statement
rule 2    gComplexProposition -> PBEGIN complexProposition PEND
rule 3    gComplexProposition ->		/* empty */
rule 4    complexProposition -> complexProposition AND complexProposition
rule 5    complexProposition -> complexProposition OR complexProposition
rule 6    complexProposition -> complexProposition IFF complexProposition
rule 7    complexProposition -> complexProposition PROPIMPLY complexProposition
rule 8    complexProposition -> complexProposition CHOP complexProposition
rule 9    complexProposition -> ALWAYS complexProposition
rule 10   complexProposition -> KEEP complexProposition
rule 11   complexProposition -> SOMETIMES complexProposition
rule 12   complexProposition -> W_NEXT complexProposition
rule 13   complexProposition -> NEXT complexProposition
rule 14   complexProposition -> SKIP
rule 15   complexProposition -> MY_TRUE
rule 16   complexProposition -> MY_FALSE
rule 17   complexProposition -> LENGTH ari_exp
rule 18   complexProposition -> EMPTY
rule 19   complexProposition -> MORE
rule 20   complexProposition -> HALT complexProposition
rule 21   complexProposition -> FINAL complexProposition
rule 22   complexProposition -> NEGATION complexProposition
rule 23   complexProposition -> OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR
rule 24   complexProposition -> ID
rule 25   complexProposition -> DEFINE ID COLON prime_bool_exp
rule 26   complexProposition -> complexProposition CHOPSTAR
rule 27   complexProposition -> OPEN_PAR complexProposition CLOSE_PAR
rule 28   poptional_projection -> COMMA complexProposition poptional_projection
rule 29   poptional_projection ->		/* empty */
rule 30   statement -> statement AND statement
rule 31   statement -> statement OR statement
rule 32   statement -> statement CHOP statement
rule 33   statement -> ass_statement
rule 34   statement -> sign_declaration
rule 35   statement -> switch_statement
rule 36   statement -> RETURN ID
rule 37   statement -> if_statement
rule 38   statement -> while_statement
rule 39   statement -> for_statement
rule 40   statement -> extend_for_statement
rule 41   statement -> NEXT OPEN_PAR statement CLOSE_PAR
rule 42   statement -> KEEP OPEN_PAR statement CLOSE_PAR
rule 43   statement -> ALWAYS OPEN_PAR statement CLOSE_PAR
rule 44   statement -> AWAIT OPEN_PAR bool_exp CLOSE_PAR
rule 45   statement -> REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR
rule 46   statement -> SKIP
rule 47   statement -> EMPTY
rule 48   statement -> MORE
rule 49   statement -> LENGTH OPEN_PAR ari_exp CLOSE_PAR
rule 50   statement -> input_statement
rule 51   statement -> output_statement
rule 52   statement -> TRUE
rule 53   statement -> FALSE
rule 54   statement -> FINAL OPEN_PAR statement CLOSE_PAR
rule 55   statement -> statement PARALLEL statement
rule 56   statement -> OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR
rule 57   statement -> FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR
rule 58   statement -> OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar
rule 59   statement -> OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar
rule 60   statement -> FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 61   statement -> DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR
rule 62   statement -> struct_define_statement
rule 63   statement -> function
rule 64   statement -> EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR
rule 65   statement -> OPEN_PAR statement CLOSE_PAR
rule 66   option_struct_declaration -> sign_declaration
rule 67   option_struct_declaration -> sign_declaration AND option_struct_declaration
rule 68   empty_statement -> statement
rule 69   empty_statement ->		/* empty */
rule 70   function -> ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 71   function -> EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 72   function -> array OPEN_PAR option_function_identifier CLOSE_PAR
rule 73   struct_define_statement -> struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR
rule 74   struct_identifier -> STRUCT ID
rule 75   struct_identifier -> UNION ID
rule 76   sign_declaration -> SIGNED declaration
rule 77   sign_declaration -> UNSIGNED declaration
rule 78   sign_declaration -> declaration
rule 79   declaration -> type_define option_identifier_array_declaration
rule 80   declaration -> STRUCT_TYPE option_identifier_array_declaration
rule 81   declaration -> STRUCT ID option_identifier_array_declaration
rule 82   declaration -> UNION ID option_identifier_array_declaration
rule 83   declaration -> STRUCT STRUCT_TYPE option_identifier_array_declaration
rule 84   declaration -> UNION STRUCT_TYPE option_identifier_array_declaration
rule 85   declaration -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 86   declaration -> OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 87   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 88   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp
rule 89   type_define -> INTDECLARATION
rule 90   type_define -> FLOATDECLARATION
rule 91   type_define -> CHARDECLARATION
rule 92   type_define -> STRDECLARATION
rule 93   type_define -> VOIDDECLARATION
rule 94   type_define -> FILEDECLARATION
rule 95   option_identifier_array_declaration -> identifier inner_option_identifier_array_declaration
rule 96   option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration
rule 97   option_identifier_array_declaration -> identifier ASS_P ass_right inner_option_identifier_array_declaration
rule 98   option_identifier_array_declaration -> ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration
rule 99   option_identifier_array_declaration -> ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration
rule 100  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration
rule 101  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration
rule 102  option_identifier_array_declaration -> MUL option_identifier_array_declaration
rule 103  inner_option_identifier_array_declaration -> COMMA option_identifier_array_declaration
rule 104  inner_option_identifier_array_declaration -> COMMA error
rule 105  inner_option_identifier_array_declaration ->		/* empty */
rule 110  ass_statement -> ass_left assign_operator ass_right
rule 111  ass_left -> identifier
rule 112  ass_left -> struct_member_exp
rule 113  ass_left -> array
rule 114  ass_left -> point_exp
rule 115  ass_left -> OPEN_PAR ass_left CLOSE_PAR
rule 116  ass_left -> NEXT ass_left
rule 117  ass_left -> leftaddrshift
rule 118  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 119  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 120  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 121  leftaddrshift -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 122  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 123  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 124  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 125  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 126  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 127  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 128  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 129  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 130  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 131  assign_operator -> ASS_P
rule 132  assign_operator -> ASS_N
rule 133  ass_right -> ari_exp
rule 134  ass_right -> array_exp
rule 135  ass_right -> strliteral
rule 136  ass_right -> OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function
rule 137  ass_right -> OPEN_PAR ass_right CLOSE_PAR
rule 138  ass_right -> rightaddrshift
rule 139  rightaddrshift -> MUL OPEN_PAR leftaddrshift CLOSE_PAR
rule 140  array -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 141  array -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 142  array -> OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 143  array -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 144  array -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 145  array -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 146  array -> OPEN_PAR array CLOSE_PAR
rule 147  option_ari_exp -> COMMA ari_exp option_ari_exp
rule 148  option_ari_exp -> COMMA error
rule 149  option_ari_exp ->		/* empty */
rule 150  point_exp -> MUL identifier
rule 151  point_exp -> MUL point_exp
rule 152  point_exp -> MUL array
rule 153  point_exp -> OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 154  point_exp -> MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp
rule 155  point_exp -> MUL OPEN_PAR ari_exp CLOSE_PAR
rule 156  point_exp -> OPEN_PAR point_exp CLOSE_PAR
rule 157  ari_exp -> simple_ari_exp
rule 158  ari_exp -> simple_ari_exp relation_operator ari_exp
rule 159  ari_exp -> ari_exp ari_operator simple_ari_exp
rule 160  ari_exp -> IF bool_exp THEN ari_exp option_exp_else_statement
rule 161  type_cast_alg_exp -> simple_ari_exp
rule 162  type_cast_alg_exp -> simple_ari_exp ari_operator simple_ari_exp
rule 163  option_exp_else_statement -> ELSE ari_exp
rule 164  option_exp_else_statement ->		/* empty */
rule 165  simple_ari_exp -> member_in_exp
rule 166  simple_ari_exp -> simple_ari_exp bi_operator member_in_exp
rule 167  member_in_exp -> intliteral
rule 168  member_in_exp -> SUB member_in_exp
rule 169  member_in_exp -> BNE member_in_exp
rule 170  member_in_exp -> POINTERNULL
rule 171  member_in_exp -> floatliteral
rule 172  member_in_exp -> identifier
rule 173  member_in_exp -> array
rule 174  member_in_exp -> point_exp
rule 175  member_in_exp -> function
rule 176  member_in_exp -> OPEN_PAR ari_exp CLOSE_PAR
rule 177  member_in_exp -> charliteral
rule 178  member_in_exp -> address_exp
rule 179  member_in_exp -> type_cast
rule 180  member_in_exp -> struct_member_exp
rule 181  bi_operator -> MUL
rule 182  bi_operator -> DIV
rule 183  bi_operator -> MOD
rule 184  bi_operator -> LST
rule 185  bi_operator -> RST
rule 186  bi_operator -> ADDRESS
rule 187  bi_operator -> INTER_OR
rule 188  bi_operator -> CON
rule 189  ari_operator -> ADD
rule 190  ari_operator -> SUB
rule 191  array_exp -> array_exp CON array_exp
rule 192  array_exp -> option_list_value
rule 193  array_exp -> option_struct_list_value
rule 194  array_exp -> OPEN_PAR array_exp CLOSE_PAR
rule 195  option_list_value -> OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR
rule 196  option_list_value -> OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR
rule 197  option_list_value -> OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR
rule 198  option_struct_list_value -> OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR
rule 199  option_struct_list_value -> OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR
rule 200  option_struct_list_value -> OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR
rule 201  inner_option_list_value -> COMMA ari_exp inner_option_list_value
rule 202  inner_option_list_value -> COMMA strliteral inner_option_list_value
rule 203  inner_option_list_value -> COMMA array_exp inner_option_list_value
rule 204  inner_option_list_value ->		/* empty */
rule 205  inner_option_list_value -> COMMA error
rule 206  address_exp -> ADDRESS identifier
rule 207  address_exp -> ADDRESS array
rule 208  address_exp -> ADDRESS struct_member_exp
rule 209  address_exp -> ADDRESS address_exp
rule 210  address_exp -> OPEN_PAR address_exp CLOSE_PAR
rule 211  type_cast -> OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 212  type_cast -> OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp
rule 213  type_cast -> OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 214  type_cast -> OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 215  type_cast -> OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 216  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 217  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 218  type_cast -> OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element
rule 219  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element
rule 220  type_cast -> OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element
rule 221  type_cast -> OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element
rule 222  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element
rule 223  type_cast -> OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element
rule 224  type_cast -> OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 225  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 226  type_cast -> OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element
rule 227  type_cast -> OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 228  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 229  type_cast -> OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element
rule 230  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 231  type_cast -> OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 232  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 233  type_cast -> OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 234  casted_element -> type_cast_alg_exp
rule 235  bool_exp -> prime_bool_exp
rule 236  bool_exp -> NEGATION bool_exp
rule 237  bool_exp -> bool_exp AND bool_exp
rule 238  bool_exp -> bool_exp OR bool_exp
rule 239  bool_exp -> OPEN_PAR bool_exp CLOSE_PAR
rule 240  prime_bool_exp -> ari_exp relation_operator ari_exp
rule 241  prime_bool_exp -> MY_TRUE
rule 242  prime_bool_exp -> MY_FALSE
rule 243  prime_bool_exp -> ari_exp
rule 244  prime_bool_exp -> ari_exp EQ strliteral
rule 245  prime_bool_exp -> ari_exp NE strliteral
rule 246  prime_bool_exp -> strliteral EQ ari_exp
rule 247  prime_bool_exp -> strliteral NE ari_exp
rule 248  prime_bool_exp -> ari_exp EQ POINTERNULL
rule 249  prime_bool_exp -> ari_exp NE POINTERNULL
rule 250  prime_bool_exp -> POINTERNULL EQ ari_exp
rule 251  prime_bool_exp -> POINTERNULL NE ari_exp
rule 252  prime_bool_exp -> ari_exp EQ charliteral
rule 253  prime_bool_exp -> ari_exp NE charliteral
rule 254  relation_operator -> GE
rule 255  relation_operator -> LE
rule 256  relation_operator -> NE
rule 257  relation_operator -> GT
rule 258  relation_operator -> LT
rule 259  relation_operator -> EQ
rule 260  sign_type_define -> UNSIGNED INTDECLARATION
rule 261  sign_type_define -> UNSIGNED CHARDECLARATION
rule 262  all_type_define -> sign_type_define
rule 263  all_type_define -> type_define
rule 264  option_function_parameter_list -> all_type_define identifier inner_option_define_identifier
rule 265  option_function_parameter_list -> all_type_define inner_option_define_identifier
rule 266  option_function_parameter_list -> STRUCT_TYPE identifier inner_option_define_identifier
rule 267  option_function_parameter_list -> STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 268  option_function_parameter_list -> STRUCT_TYPE MUL MUL identifier inner_option_define_identifier
rule 269  option_function_parameter_list -> STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 270  option_function_parameter_list -> ID identifier inner_option_define_identifier
rule 271  option_function_parameter_list -> ID MUL identifier inner_option_define_identifier
rule 272  option_function_parameter_list -> ID MUL MUL identifier inner_option_define_identifier
rule 273  option_function_parameter_list -> ID identifier ARRAY inner_option_define_identifier
rule 274  option_function_parameter_list -> STRUCT_TYPE inner_option_define_identifier
rule 275  option_function_parameter_list -> STRUCT_TYPE MUL inner_option_define_identifier
rule 276  option_function_parameter_list -> STRUCT_TYPE MUL MUL inner_option_define_identifier
rule 277  option_function_parameter_list -> ID inner_option_define_identifier
rule 278  option_function_parameter_list -> ID MUL inner_option_define_identifier
rule 279  option_function_parameter_list -> ID MUL MUL inner_option_define_identifier
rule 280  option_function_parameter_list -> all_type_define identifier ARRAY inner_option_define_identifier
rule 281  option_function_parameter_list -> all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 282  option_function_parameter_list -> all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 283  option_function_parameter_list -> all_type_define MUL identifier inner_option_define_identifier
rule 284  option_function_parameter_list -> all_type_define MUL inner_option_define_identifier
rule 285  option_function_parameter_list -> all_type_define MUL MUL identifier inner_option_define_identifier
rule 286  option_function_parameter_list -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 287  option_function_parameter_list ->		/* empty */
rule 288  inner_option_define_identifier -> COMMA all_type_define identifier inner_option_define_identifier
rule 289  inner_option_define_identifier -> COMMA all_type_define inner_option_define_identifier
rule 290  inner_option_define_identifier -> COMMA ID identifier inner_option_define_identifier
rule 291  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier inner_option_define_identifier
rule 292  inner_option_define_identifier -> COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 293  inner_option_define_identifier -> COMMA ID identifier ARRAY inner_option_define_identifier
rule 294  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 295  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY inner_option_define_identifier
rule 296  inner_option_define_identifier -> COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 297  inner_option_define_identifier -> COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 298  inner_option_define_identifier ->		/* empty */
rule 299  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 300  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 301  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 302  inner_option_define_identifier -> COMMA all_type_define MUL identifier inner_option_define_identifier
rule 303  inner_option_define_identifier -> COMMA all_type_define MUL inner_option_define_identifier
rule 304  inner_option_define_identifier -> COMMA error
rule 305  option_function_identifier -> ass_right inner_option_function_identifier
rule 306  option_function_identifier -> all_type_define
rule 307  option_function_identifier ->		/* empty */
rule 308  option_function_identifier -> ADDRESS error
rule 309  inner_option_function_identifier -> COMMA ass_right inner_option_function_identifier
rule 310  inner_option_function_identifier ->		/* empty */
rule 311  inner_option_function_identifier -> COMMA error
rule 312  statement_bpar -> OPEN_BPAR statement CLOSE_BPAR
rule 313  statement_bpar -> error CLOSE_BPAR
rule 314  bool_par -> OPEN_PAR bool_exp CLOSE_PAR
rule 315  bool_par -> error CLOSE_PAR
rule 316  identifier -> ID
rule 317  identifier -> OPEN_PAR identifier CLOSE_PAR
rule 318  strliteral -> STRLITERAL
rule 319  intliteral -> INTLITERAL
rule 320  charliteral -> CHARLITERAL
rule 321  floatliteral -> FLOATLITERAL
rule 322  option_frame_identifier -> COMMA identifier option_frame_identifier
rule 323  option_frame_identifier ->		/* empty */
rule 324  option_frame_identifier -> COMMA error
rule 325  option_projection ->		/* empty */
rule 326  option_projection -> COMMA statement option_projection
rule 327  imply_pre -> prime_bool_exp
rule 328  imply_pre -> NEGATION imply_pre
rule 329  imply_pre -> imply_pre AND imply_pre
rule 330  imply_pre -> imply_pre OR imply_pre
rule 331  imply_pre -> OPEN_PAR imply_pre CLOSE_PAR
rule 332  while_statement -> WHILE bool_par statement_bpar
rule 333  for_statement -> FOR ari_exp TIMES DO statement_bpar
rule 334  extend_for_statement -> FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar
rule 335  for_sta_init -> ass_statement
rule 336  for_sta_init -> declaration
rule 337  for_sta_init ->		/* empty */
rule 338  for_sta_condition -> bool_exp
rule 339  for_sta_condition ->		/* empty */
rule 340  for_sta_control -> ass_statement
rule 341  for_sta_control ->		/* empty */
rule 342  switch_statement -> SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR
rule 343  case_par -> CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par
rule 344  case_par -> DEFAULT COLON OPEN_PAR statement CLOSE_PAR
rule 345  init_case_par -> BREAK case_par
rule 346  init_case_par -> case_par
rule 347  init_case_par ->		/* empty */
rule 348  if_statement -> IF bool_exp THEN statement_bpar option_else_statement
rule 349  option_else_statement -> ELSE statement_bpar
rule 350  option_else_statement ->		/* empty */
rule 351  output_statement -> DISPLAY OPEN_PAR ass_right CLOSE_PAR
rule 352  output_statement -> DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR
rule 353  option_output ->		/* empty */
rule 354  option_output -> COMMA ass_right option_output
rule 355  input_statement -> REQUEST OPEN_PAR identifier CLOSE_PAR
rule 356  input_statement -> REQUEST OPEN_PAR identifier option_input CLOSE_PAR
rule 357  input_statement -> REQUEST OPEN_PAR array CLOSE_PAR
rule 358  input_statement -> REQUEST OPEN_PAR array option_input CLOSE_PAR
rule 359  input_statement -> REQUEST OPEN_PAR struct_member_exp CLOSE_PAR
rule 360  option_input ->		/* empty */
rule 361  option_input -> COMMA identifier option_input
rule 362  option_input -> COMMA array option_input
rule 363  struct_member_exp -> identifier DOT identifier option_struct_member_exp
rule 364  struct_member_exp -> array DOT identifier option_struct_member_exp
rule 365  struct_member_exp -> point_exp DOT identifier option_struct_member_exp
rule 366  struct_member_exp -> identifier DOT array option_struct_member_exp
rule 367  struct_member_exp -> array DOT array option_struct_member_exp
rule 368  struct_member_exp -> point_exp DOT array option_struct_member_exp
rule 369  struct_member_exp -> identifier IMPLY identifier option_struct_member_exp
rule 370  struct_member_exp -> array IMPLY identifier option_struct_member_exp
rule 371  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp
rule 372  struct_member_exp -> point_exp IMPLY identifier option_struct_member_exp
rule 373  struct_member_exp -> identifier IMPLY array option_struct_member_exp
rule 374  struct_member_exp -> array IMPLY array option_struct_member_exp
rule 375  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp
rule 376  struct_member_exp -> identifier DOT function
rule 377  struct_member_exp -> identifier IMPLY function
rule 378  struct_member_exp -> point_exp IMPLY array option_struct_member_exp
rule 379  struct_member_exp -> OPEN_PAR struct_member_exp CLOSE_PAR
rule 380  option_struct_member_exp ->		/* empty */
rule 381  option_struct_member_exp -> DOT identifier option_struct_member_exp
rule 382  option_struct_member_exp -> DOT array option_struct_member_exp
rule 383  option_struct_member_exp -> IMPLY identifier option_struct_member_exp
rule 384  option_struct_member_exp -> IMPLY array option_struct_member_exp
rule 385  option_struct_member_exp -> DOT function
rule 386  option_struct_member_exp -> IMPLY function

Terminals, with rules where they appear

$ (-1)
error (256) 104 109 148 205 304 308 311 313 315 324
SWITCH (258) 342
CASE (259) 343
BREAK (260) 345
DEFAULT (261) 344
RETURN (262) 36
IF (263) 160 348
ELSE (264) 163 349
EMPTY (265) 18 47
AWAIT (266) 44
PROJECTION (267) 23 58 59
PBEGIN (268) 2
PEND (269) 2
POINTERNULL (270) 170 248 249 250 251
ARRAY (271) 98 99 269 273 280 281 282 293 294 295 296 301
STRUCT (272) 74 81 83 230 232
DOT (273) 363 364 365 366 367 368 376 381 382 385
UNION (274) 75 82 84
FILEDECLARATION (275) 94
MORE (276) 19 48
DEFINE (277) 25 61
MY_TRUE (278) 15 241
MY_FALSE (279) 16 242
EXIST (280) 64
FRAME (281) 57
FOR (282) 333 334
WHILE (283) 332
DO (284) 333
TRUE (285) 52
FALSE (286) 53
REPEAT (287) 45
UNTIL (288) 45
DISPLAY (289) 351 352
SKIP (290) 14 46
THEN (291) 160 348
COMMA (292) 28 103 104 107 109 147 148 201 202 203 205 288 289 290
    291 292 293 294 295 296 297 299 300 301 302 303 304 309 311 322
    324 326 334 354 361 362
COLON (293) 25 64 343 344
INTDECLARATION (294) 89 120 124 127 128 129 130 141 142 211 214 216
    218 219 224 225 260
STRDECLARATION (295) 92
POINTERDECLARATION (296)
CHARDECLARATION (297) 91 118 119 122 123 124 125 126 127 128 129 144
    145 213 215 217 221 222 227 228 261
VOIDDECLARATION (298) 93 223 229
FLOATDECLARATION (299) 90 121 143 212 220 226
LISTDECLARATION (300)
OPEN_PAR (301) 27 41 42 43 44 45 49 54 56 57 60 61 65 70 71 72 85 86
    87 88 115 118 119 120 121 122 123 124 125 126 127 128 129 130 136
    137 139 141 142 143 144 145 146 153 154 155 156 176 194 210 211
    212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227
    228 229 230 231 232 233 239 286 297 314 317 331 334 342 343 344
    351 352 355 356 357 358 359 371 375 379
CLOSE_PAR (302) 27 41 42 43 44 45 49 54 56 57 60 61 65 70 71 72 85
    86 87 88 115 118 119 120 121 122 123 124 125 126 127 128 129 130
    136 137 139 141 142 143 144 145 146 153 154 155 156 176 194 210
    211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226
    227 228 229 230 231 232 233 239 286 297 314 315 317 331 334 342
    343 344 351 352 355 356 357 358 359 371 375 379
TIMES (303) 333
OPEN_BPAR (304) 23 45 58 59 60 61 64 73 198 199 200 312 342
CLOSE_BPAR (305) 23 45 58 59 60 61 64 73 198 199 200 312 313 342
OPEN_MPAR (306) 56 87 88 96 100 101 106 107 118 119 120 121 122 123
    124 125 126 127 128 129 130 140 141 142 143 144 145 153 195 196
    197 282 299 300 301
CLOSE_MPAR (307) 56 87 88 96 100 101 106 107 118 119 120 121 122 123
    124 125 126 127 128 129 130 140 141 142 143 144 145 153 195 196
    197 282 299 300 301
FUNCTION (308) 60
OVER (309)
CYLINDER (310)
OVEREP (311)
INTER_OR (312) 187
NON_DETERMINED (313)
SEND (314)
RECEIVE (315)
PROCESS (316)
CHANNEL (317)
PUT (318)
GET (319)
ERROR_TOKEN (320)
STRFUNCHEAD (321)
STRFUNCTAIL (322)
STRFUNCCAT (323)
STRFUNCCMP (324)
STRFUNCCPY (325)
STRFUNCLEN (326)
EXTERN (327) 71
UNSIGNED (328) 77 119 123 125 126 127 129 142 145 216 217 219 222 225
    228 260 261
SIGNED (329) 76 214 215
CHOP (330) 8 32
IMPLY (331) 56 369 370 371 372 373 374 375 377 378 383 384 386
IFF (332) 6
PROPIMPLY (333) 7
OR (334) 5 31 238 330
PARALLEL (335) 55
AND (336) 4 30 57 67 237 329
ASS_P (337) 61 88 97 98 99 100 101 131
ASS_N (338) 132
CON (339) 188 191
ADDRESS (340) 186 206 207 208 209 308
NE (341) 245 247 249 251 253 256
EQ (342) 244 246 248 250 252 259
GE (343) 254
LE (344) 255
GT (345) 257
LT (346) 258
LST (347) 184
RST (348) 185
ADD (349) 189
SUB (350) 168 190
MUL (351) 85 86 87 88 102 118 119 120 121 122 123 124 125 126 127 128
    129 130 139 141 142 143 144 145 150 151 152 154 155 181 218 219
    220 221 222 223 224 225 226 227 228 229 230 231 232 233 267 268
    271 272 275 276 278 279 281 283 284 285 286 292 296 297 302 303
DIV (352) 182
MOD (353) 183
BNE (354) 169
CHOPSTAR (355) 26
NEXT (356) 13 41 116
NEGATION (357) 22 236 328
LENGTH (358) 17 49
REQUEST (359) 355 356 357 358 359
FINAL (360) 21 54
KEEP (361) 10 42
ALWAYS (362) 9 43
HALT (363) 20
W_NEXT (364) 12
PREFIX (365)
SOMETIMES (366) 11
ID (367) 24 25 36 60 61 70 71 74 75 81 82 87 88 96 98 99 100 101 106
    107 140 141 142 143 144 145 270 271 272 273 277 278 279 290 293
    316
STRLITERAL (368) 318
STRUCT_TYPE (369) 80 83 84 230 231 232 233 266 267 268 269 274 275
    276 291 292 294
INTLITERAL (370) 118 119 120 121 122 123 124 125 126 127 128 129 130
    319
FLOATLITERAL (371) 321
CHARLITERAL (372) 320

Nonterminals, with rules where they appear

program (118)
    on left: 1
gComplexProposition (119)
    on left: 2 3, on right: 1
complexProposition (120)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27, on right: 2 4 5 6 7 8 9 10 11 12 13 20 21 22 23 26
    27 28
poptional_projection (121)
    on left: 28 29, on right: 23 28
statement (122)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65,
    on right: 1 30 31 32 41 42 43 45 54 55 56 57 58 59 60 64 65 68
    312 326 343 344
option_struct_declaration (123)
    on left: 66 67, on right: 67 73
empty_statement (124)
    on left: 68 69, on right: 61
function (125)
    on left: 70 71 72, on right: 63 136 175 376 377 385 386
struct_define_statement (126)
    on left: 73, on right: 62
struct_identifier (127)
    on left: 74 75, on right: 73
sign_declaration (128)
    on left: 76 77 78, on right: 34 66 67
declaration (129)
    on left: 79 80 81 82 83 84 85 86 87 88, on right: 76 77 78 336
type_define (130)
    on left: 89 90 91 92 93 94, on right: 79 136 263
option_identifier_array_declaration (131)
    on left: 95 96 97 98 99 100 101 102, on right: 79 80 81 82 83 84
    102 103
inner_option_identifier_array_declaration (132)
    on left: 103 104 105, on right: 95 96 97 98 99 100 101
ass_statement (133)
    on left: 110, on right: 33 335 340
ass_left (134)
    on left: 111 112 113 114 115 116 117, on right: 110 115 116
leftaddrshift (135)
    on left: 118 119 120 121 122 123 124 125 126 127 128 129 130,
    on right: 117 139
assign_operator (136)
    on left: 131 132, on right: 110
ass_right (137)
    on left: 133 134 135 136 137 138, on right: 97 110 137 305 309
    351 352 354
rightaddrshift (138)
    on left: 139, on right: 138
array (139)
    on left: 140 141 142 143 144 145 146, on right: 72 113 146 152
    173 207 357 358 362 364 366 367 368 370 373 374 375 378 382 384
option_ari_exp (140)
    on left: 147 148 149, on right: 87 88 96 100 101 106 107 118 119
    120 121 122 123 124 125 126 127 128 129 130 140 141 142 143 144
    145 147 153
point_exp (141)
    on left: 150 151 152 153 154 155 156, on right: 114 151 153 156
    174 365 368 372 378
ari_exp (142)
    on left: 157 158 159 160, on right: 17 49 87 88 96 100 101 106
    107 118 119 120 121 122 123 124 125 126 127 128 129 130 133 140
    141 142 143 144 145 147 153 154 155 158 159 160 163 176 195 198
    201 240 243 244 245 246 247 248 249 250 251 252 253 282 299 300
    301 333
type_cast_alg_exp (143)
    on left: 161 162, on right: 211 212 213 214 215 216 217 234
option_exp_else_statement (144)
    on left: 163 164, on right: 160
simple_ari_exp (145)
    on left: 165 166, on right: 157 158 159 161 162 166
member_in_exp (146)
    on left: 167 168 169 170 171 172 173 174 175 176 177 178 179 180
   , on right: 165 166 168 169 342 343
bi_operator (147)
    on left: 181 182 183 184 185 186 187 188, on right: 166
ari_operator (148)
    on left: 189 190, on right: 159 162
array_exp (149)
    on left: 191 192 193 194, on right: 88 98 100 134 191 194 197 200
    203
option_list_value (150)
    on left: 195 196 197, on right: 192
option_struct_list_value (151)
    on left: 198 199 200, on right: 193
inner_option_list_value (152)
    on left: 201 202 203 204 205, on right: 195 196 197 198 199 200
    201 202 203
address_exp (153)
    on left: 206 207 208 209 210, on right: 178 209 210 371 375
type_cast (154)
    on left: 211 212 213 214 215 216 217 218 219 220 221 222 223 224
    225 226 227 228 229 230 231 232 233, on right: 179
casted_element (155)
    on left: 234, on right: 218 219 220 221 222 223 224 225 226 227
    228 229 230 231 232 233
bool_exp (156)
    on left: 235 236 237 238 239, on right: 44 45 160 236 237 238 239
    314 338 348
prime_bool_exp (157)
    on left: 240 241 242 243 244 245 246 247 248 249 250 251 252 253
   , on right: 25 235 327
relation_operator (158)
    on left: 254 255 256 257 258 259, on right: 158 240
sign_type_define (159)
    on left: 260 261, on right: 262
all_type_define (160)
    on left: 262 263, on right: 154 264 265 280 281 282 283 284 285
    288 289 295 296 299 300 301 302 303 306
option_function_parameter_list (161)
    on left: 264 265 266 267 268 269 270 271 272 273 274 275 276 277
    278 279 280 281 282 283 284 285 286 287, on right: 60 61 85 86
    87 88 136 286 297
inner_option_define_identifier (162)
    on left: 288 289 290 291 292 293 294 295 296 297 298 299 300 301
    302 303 304, on right: 64 264 265 266 267 268 269 270 271 272 273
    274 275 276 277 278 279 280 281 282 283 284 285 286 288 289 290
    291 292 293 294 295 296 297 299 300 301 302 303
option_function_identifier (163)
    on left: 305 306 307 308, on right: 70 71 72
inner_option_function_identifier (164)
    on left: 309 310 311, on right: 305 309
statement_bpar (165)
    on left: 312 313, on right: 58 59 332 333 334 348 349
bool_par (166)
    on left: 314 315, on right: 332
identifier (167)
    on left: 316 317, on right: 57 64 85 86 95 97 111 150 172 206 264
    266 267 268 269 270 271 272 273 280 281 282 283 285 286 288 290
    291 292 293 294 295 296 297 299 300 301 302 317 322 355 356 361
    363 364 365 366 369 370 371 372 373 376 377 381 383
strliteral (168)
    on left: 318, on right: 99 101 135 136 196 199 202 244 245 246
    247
intliteral (169)
    on left: 319, on right: 167
charliteral (170)
    on left: 320, on right: 177 252 253
floatliteral (171)
    on left: 321, on right: 171
option_frame_identifier (172)
    on left: 322 323 324, on right: 57 322
option_projection (173)
    on left: 325 326, on right: 58 326
imply_pre (174)
    on left: 327 328 329 330 331, on right: 56 328 329 330 331
while_statement (175)
    on left: 332, on right: 38
for_statement (176)
    on left: 333, on right: 39
extend_for_statement (177)
    on left: 334, on right: 40
for_sta_init (178)
    on left: 335 336 337, on right: 334
for_sta_condition (179)
    on left: 338 339, on right: 334
for_sta_control (180)
    on left: 340 341, on right: 334
switch_statement (181)
    on left: 342, on right: 35
case_par (182)
    on left: 343 344, on right: 342 345 346
init_case_par (183)
    on left: 345 346 347, on right: 343
if_statement (184)
    on left: 348, on right: 37
option_else_statement (185)
    on left: 349 350, on right: 348
output_statement (186)
    on left: 351 352, on right: 51
option_output (187)
    on left: 353 354, on right: 352 354
input_statement (188)
    on left: 355 356 357 358 359, on right: 50
option_input (189)
    on left: 360 361 362, on right: 356 358 361 362
struct_member_exp (190)
    on left: 363 364 365 366 367 368 369 370 371 372 373 374 375 376
    377 378 379, on right: 112 180 208 359 379
option_struct_member_exp (191)
    on left: 380 381 382 383 384 385 386, on right: 363 364 365 366
    367 368 369 370 371 372 373 374 375 378 381 382 383 384


state 0

    PBEGIN	shift, and go to state 1

    $default	reduce using rule 3 (gComplexProposition)

    program	go to state 1166
    gComplexProposition	go to state 2



state 1

    gComplexProposition  ->  PBEGIN . complexProposition PEND   (rule 2)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 21



state 2

    program  ->  gComplexProposition . statement   (rule 1)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 3

    complexProposition  ->  EMPTY .   (rule 18)

    $default	reduce using rule 18 (complexProposition)



state 4

    complexProposition  ->  MORE .   (rule 19)

    $default	reduce using rule 19 (complexProposition)



state 5

    complexProposition  ->  DEFINE . ID COLON prime_bool_exp   (rule 25)

    ID  	shift, and go to state 82



state 6

    complexProposition  ->  MY_TRUE .   (rule 15)

    $default	reduce using rule 15 (complexProposition)



state 7

    complexProposition  ->  MY_FALSE .   (rule 16)

    $default	reduce using rule 16 (complexProposition)



state 8

    complexProposition  ->  SKIP .   (rule 14)

    $default	reduce using rule 14 (complexProposition)



state 9

    complexProposition  ->  OPEN_PAR . complexProposition CLOSE_PAR   (rule 27)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 83



state 10

    complexProposition  ->  OPEN_BPAR . complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 84



state 11

    complexProposition  ->  NEXT . complexProposition   (rule 13)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 85



state 12

    complexProposition  ->  NEGATION . complexProposition   (rule 22)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 86



state 13

    complexProposition  ->  LENGTH . ari_exp   (rule 17)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 99
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 14

    complexProposition  ->  FINAL . complexProposition   (rule 21)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 109



state 15

    complexProposition  ->  KEEP . complexProposition   (rule 10)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 110



state 16

    complexProposition  ->  ALWAYS . complexProposition   (rule 9)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 111



state 17

    complexProposition  ->  HALT . complexProposition   (rule 20)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 112



state 18

    complexProposition  ->  W_NEXT . complexProposition   (rule 12)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 113



state 19

    complexProposition  ->  SOMETIMES . complexProposition   (rule 11)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 114



state 20

    complexProposition  ->  ID .   (rule 24)

    $default	reduce using rule 24 (complexProposition)



state 21

    gComplexProposition  ->  PBEGIN complexProposition . PEND   (rule 2)
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    PEND	shift, and go to state 115
    CHOP	shift, and go to state 116
    IFF 	shift, and go to state 117
    PROPIMPLY	shift, and go to state 118
    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121



state 22

    switch_statement  ->  SWITCH . OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 342)

    OPEN_PAR	shift, and go to state 122



state 23

    statement  ->  RETURN . ID   (rule 36)

    ID  	shift, and go to state 123



state 24

    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 348)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 131
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 25

    statement  ->  EMPTY .   (rule 47)

    $default	reduce using rule 47 (statement)



state 26

    statement  ->  AWAIT . OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

    OPEN_PAR	shift, and go to state 134



state 27

    struct_identifier  ->  STRUCT . ID   (rule 74)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 81)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 83)

    ID  	shift, and go to state 135
    STRUCT_TYPE	shift, and go to state 136



state 28

    struct_identifier  ->  UNION . ID   (rule 75)
    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 82)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 84)

    ID  	shift, and go to state 137
    STRUCT_TYPE	shift, and go to state 138



state 29

    type_define  ->  FILEDECLARATION .   (rule 94)

    $default	reduce using rule 94 (type_define)



state 30

    statement  ->  MORE .   (rule 48)

    $default	reduce using rule 48 (statement)



state 31

    statement  ->  DEFINE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    ID  	shift, and go to state 139



state 32

    statement  ->  EXIST . identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 64)

    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 142



state 33

    statement  ->  FRAME . OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    OPEN_PAR	shift, and go to state 143



state 34

    for_statement  ->  FOR . ari_exp TIMES DO statement_bpar   (rule 333)
    extend_for_statement  ->  FOR . OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 334)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 144
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 145
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 35

    while_statement  ->  WHILE . bool_par statement_bpar   (rule 332)

    error	shift, and go to state 146
    OPEN_PAR	shift, and go to state 147

    bool_par	go to state 148



state 36

    statement  ->  TRUE .   (rule 52)

    $default	reduce using rule 52 (statement)



state 37

    statement  ->  FALSE .   (rule 53)

    $default	reduce using rule 53 (statement)



state 38

    statement  ->  REPEAT . OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    OPEN_BPAR	shift, and go to state 149



state 39

    output_statement  ->  DISPLAY . OPEN_PAR ass_right CLOSE_PAR   (rule 351)
    output_statement  ->  DISPLAY . OPEN_PAR ass_right option_output CLOSE_PAR   (rule 352)

    OPEN_PAR	shift, and go to state 150



state 40

    statement  ->  SKIP .   (rule 46)

    $default	reduce using rule 46 (statement)



state 41

    type_define  ->  INTDECLARATION .   (rule 89)

    $default	reduce using rule 89 (type_define)



state 42

    type_define  ->  STRDECLARATION .   (rule 92)

    $default	reduce using rule 92 (type_define)



state 43

    type_define  ->  CHARDECLARATION .   (rule 91)

    $default	reduce using rule 91 (type_define)



state 44

    type_define  ->  VOIDDECLARATION .   (rule 93)

    $default	reduce using rule 93 (type_define)



state 45

    type_define  ->  FLOATDECLARATION .   (rule 90)

    $default	reduce using rule 90 (type_define)



state 46

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 65)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 115)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 151
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 152
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 153
    BNE 	shift, and go to state 92
    NEXT	shift, and go to state 53
    NEGATION	shift, and go to state 154
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 60
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    statement	go to state 155
    function	go to state 156
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 157
    leftaddrshift	go to state 70
    array	go to state 158
    point_exp	go to state 159
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 160
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 162
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 163
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 164



state 47

    statement  ->  OPEN_BPAR . statement option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 58)
    statement  ->  OPEN_BPAR . statement CLOSE_BPAR PROJECTION statement_bpar   (rule 59)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 165
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 48

    statement  ->  FUNCTION . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 60)

    ID  	shift, and go to state 166



state 49

    function  ->  EXTERN . ID OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)

    ID  	shift, and go to state 167



state 50

    sign_declaration  ->  UNSIGNED . declaration   (rule 77)

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 170
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 171
    type_define	go to state 67



state 51

    sign_declaration  ->  SIGNED . declaration   (rule 76)

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 170
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 172
    type_define	go to state 67



state 52

    point_exp  ->  MUL . identifier   (rule 150)
    point_exp  ->  MUL . point_exp   (rule 151)
    point_exp  ->  MUL . array   (rule 152)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 154)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 155)

    OPEN_PAR	shift, and go to state 173
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 174

    array	go to state 175
    point_exp	go to state 176
    identifier	go to state 177



state 53

    statement  ->  NEXT . OPEN_PAR statement CLOSE_PAR   (rule 41)
    ass_left  ->  NEXT . ass_left   (rule 116)

    OPEN_PAR	shift, and go to state 178
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 179
    ID  	shift, and go to state 174

    ass_left	go to state 180
    leftaddrshift	go to state 70
    array	go to state 181
    point_exp	go to state 72
    identifier	go to state 73
    struct_member_exp	go to state 81



state 54

    statement  ->  LENGTH . OPEN_PAR ari_exp CLOSE_PAR   (rule 49)

    OPEN_PAR	shift, and go to state 182



state 55

    input_statement  ->  REQUEST . OPEN_PAR identifier CLOSE_PAR   (rule 355)
    input_statement  ->  REQUEST . OPEN_PAR identifier option_input CLOSE_PAR   (rule 356)
    input_statement  ->  REQUEST . OPEN_PAR array CLOSE_PAR   (rule 357)
    input_statement  ->  REQUEST . OPEN_PAR array option_input CLOSE_PAR   (rule 358)
    input_statement  ->  REQUEST . OPEN_PAR struct_member_exp CLOSE_PAR   (rule 359)

    OPEN_PAR	shift, and go to state 183



state 56

    statement  ->  FINAL . OPEN_PAR statement CLOSE_PAR   (rule 54)

    OPEN_PAR	shift, and go to state 184



state 57

    statement  ->  KEEP . OPEN_PAR statement CLOSE_PAR   (rule 42)

    OPEN_PAR	shift, and go to state 185



state 58

    statement  ->  ALWAYS . OPEN_PAR statement CLOSE_PAR   (rule 43)

    OPEN_PAR	shift, and go to state 186



state 59

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    identifier  ->  ID .   (rule 316)

    OPEN_PAR	shift, and go to state 187
    OPEN_MPAR	shift, and go to state 188

    $default	reduce using rule 316 (identifier)



state 60

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 80)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 189
    ID  	shift, and go to state 190

    option_identifier_array_declaration	go to state 191
    identifier	go to state 192



state 61

    program  ->  gComplexProposition statement .   (rule 1)
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196

    $default	reduce using rule 1 (program)



state 62

    statement  ->  function .   (rule 63)

    $default	reduce using rule 63 (statement)



state 63

    statement  ->  struct_define_statement .   (rule 62)

    $default	reduce using rule 62 (statement)



state 64

    struct_define_statement  ->  struct_identifier . OPEN_BPAR option_struct_declaration CLOSE_BPAR   (rule 73)

    OPEN_BPAR	shift, and go to state 197



state 65

    statement  ->  sign_declaration .   (rule 34)

    $default	reduce using rule 34 (statement)



state 66

    sign_declaration  ->  declaration .   (rule 78)

    $default	reduce using rule 78 (sign_declaration)



state 67

    declaration  ->  type_define . option_identifier_array_declaration   (rule 79)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 189
    ID  	shift, and go to state 190

    option_identifier_array_declaration	go to state 198
    identifier	go to state 192



state 68

    statement  ->  ass_statement .   (rule 33)

    $default	reduce using rule 33 (statement)



state 69

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 110)

    ASS_P	shift, and go to state 199
    ASS_N	shift, and go to state 200

    assign_operator	go to state 201



state 70

    ass_left  ->  leftaddrshift .   (rule 117)

    $default	reduce using rule 117 (ass_left)



state 71

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    ass_left  ->  array .   (rule 113)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 202
    OPEN_PAR	shift, and go to state 203
    IMPLY	shift, and go to state 204

    $default	reduce using rule 113 (ass_left)



state 72

    ass_left  ->  point_exp .   (rule 114)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 205
    IMPLY	shift, and go to state 206

    $default	reduce using rule 114 (ass_left)



state 73

    ass_left  ->  identifier .   (rule 111)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 363)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . DOT function   (rule 376)
    struct_member_exp  ->  identifier . IMPLY function   (rule 377)

    DOT 	shift, and go to state 207
    IMPLY	shift, and go to state 208

    $default	reduce using rule 111 (ass_left)



state 74

    statement  ->  while_statement .   (rule 38)

    $default	reduce using rule 38 (statement)



state 75

    statement  ->  for_statement .   (rule 39)

    $default	reduce using rule 39 (statement)



state 76

    statement  ->  extend_for_statement .   (rule 40)

    $default	reduce using rule 40 (statement)



state 77

    statement  ->  switch_statement .   (rule 35)

    $default	reduce using rule 35 (statement)



state 78

    statement  ->  if_statement .   (rule 37)

    $default	reduce using rule 37 (statement)



state 79

    statement  ->  output_statement .   (rule 51)

    $default	reduce using rule 51 (statement)



state 80

    statement  ->  input_statement .   (rule 50)

    $default	reduce using rule 50 (statement)



state 81

    ass_left  ->  struct_member_exp .   (rule 112)

    $default	reduce using rule 112 (ass_left)



state 82

    complexProposition  ->  DEFINE ID . COLON prime_bool_exp   (rule 25)

    COLON	shift, and go to state 209



state 83

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    complexProposition  ->  OPEN_PAR complexProposition . CLOSE_PAR   (rule 27)

    CLOSE_PAR	shift, and go to state 210
    CHOP	shift, and go to state 116
    IFF 	shift, and go to state 117
    PROPIMPLY	shift, and go to state 118
    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121



state 84

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition . poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    COMMA	shift, and go to state 211
    CHOP	shift, and go to state 116
    IFF 	shift, and go to state 117
    PROPIMPLY	shift, and go to state 118
    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 212



state 85

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEXT complexProposition .   (rule 13)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 13 (complexProposition)



state 86

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEGATION complexProposition .   (rule 22)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 22 (complexProposition)



state 87

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 160)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 213
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 88

    member_in_exp  ->  POINTERNULL .   (rule 170)

    $default	reduce using rule 170 (member_in_exp)



state 89

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 215
    CHARDECLARATION	shift, and go to state 216
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 218
    OPEN_PAR	shift, and go to state 219
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 220
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 90

    address_exp  ->  ADDRESS . identifier   (rule 206)
    address_exp  ->  ADDRESS . array   (rule 207)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 208)
    address_exp  ->  ADDRESS . address_exp   (rule 209)

    OPEN_PAR	shift, and go to state 229
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 174

    array	go to state 230
    point_exp	go to state 231
    address_exp	go to state 232
    identifier	go to state 233
    struct_member_exp	go to state 234



state 91

    member_in_exp  ->  SUB . member_in_exp   (rule 168)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    member_in_exp	go to state 235
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 92

    member_in_exp  ->  BNE . member_in_exp   (rule 169)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    member_in_exp	go to state 236
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 93

    intliteral  ->  INTLITERAL .   (rule 319)

    $default	reduce using rule 319 (intliteral)



state 94

    floatliteral  ->  FLOATLITERAL .   (rule 321)

    $default	reduce using rule 321 (floatliteral)



state 95

    charliteral  ->  CHARLITERAL .   (rule 320)

    $default	reduce using rule 320 (charliteral)



state 96

    member_in_exp  ->  function .   (rule 175)

    $default	reduce using rule 175 (member_in_exp)



state 97

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    member_in_exp  ->  array .   (rule 173)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 202
    OPEN_PAR	shift, and go to state 203
    IMPLY	shift, and go to state 204

    DOT 	[reduce using rule 173 (member_in_exp)]
    IMPLY	[reduce using rule 173 (member_in_exp)]
    $default	reduce using rule 173 (member_in_exp)



state 98

    member_in_exp  ->  point_exp .   (rule 174)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 205
    IMPLY	shift, and go to state 206

    DOT 	[reduce using rule 174 (member_in_exp)]
    IMPLY	[reduce using rule 174 (member_in_exp)]
    $default	reduce using rule 174 (member_in_exp)



state 99

    complexProposition  ->  LENGTH ari_exp .   (rule 17)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 17 (complexProposition)

    ari_operator	go to state 239



state 100

    ari_exp  ->  simple_ari_exp .   (rule 157)
    ari_exp  ->  simple_ari_exp . relation_operator ari_exp   (rule 158)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 166)

    INTER_OR	shift, and go to state 240
    CON 	shift, and go to state 241
    ADDRESS	shift, and go to state 242
    NE  	shift, and go to state 243
    EQ  	shift, and go to state 244
    GE  	shift, and go to state 245
    LE  	shift, and go to state 246
    GT  	shift, and go to state 247
    LT  	shift, and go to state 248
    LST 	shift, and go to state 249
    RST 	shift, and go to state 250
    MUL 	shift, and go to state 251
    DIV 	shift, and go to state 252
    MOD 	shift, and go to state 253

    INTER_OR	[reduce using rule 157 (ari_exp)]
    CON 	[reduce using rule 157 (ari_exp)]
    ADDRESS	[reduce using rule 157 (ari_exp)]
    NE  	[reduce using rule 157 (ari_exp)]
    EQ  	[reduce using rule 157 (ari_exp)]
    GE  	[reduce using rule 157 (ari_exp)]
    LE  	[reduce using rule 157 (ari_exp)]
    GT  	[reduce using rule 157 (ari_exp)]
    LT  	[reduce using rule 157 (ari_exp)]
    LST 	[reduce using rule 157 (ari_exp)]
    RST 	[reduce using rule 157 (ari_exp)]
    MUL 	[reduce using rule 157 (ari_exp)]
    DIV 	[reduce using rule 157 (ari_exp)]
    MOD 	[reduce using rule 157 (ari_exp)]
    $default	reduce using rule 157 (ari_exp)

    bi_operator	go to state 254
    relation_operator	go to state 255



state 101

    simple_ari_exp  ->  member_in_exp .   (rule 165)

    $default	reduce using rule 165 (simple_ari_exp)



state 102

    member_in_exp  ->  address_exp .   (rule 178)

    $default	reduce using rule 178 (member_in_exp)



state 103

    member_in_exp  ->  type_cast .   (rule 179)

    $default	reduce using rule 179 (member_in_exp)



state 104

    member_in_exp  ->  identifier .   (rule 172)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 363)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . DOT function   (rule 376)
    struct_member_exp  ->  identifier . IMPLY function   (rule 377)

    DOT 	shift, and go to state 207
    IMPLY	shift, and go to state 208

    DOT 	[reduce using rule 172 (member_in_exp)]
    IMPLY	[reduce using rule 172 (member_in_exp)]
    $default	reduce using rule 172 (member_in_exp)



state 105

    member_in_exp  ->  intliteral .   (rule 167)

    $default	reduce using rule 167 (member_in_exp)



state 106

    member_in_exp  ->  charliteral .   (rule 177)

    $default	reduce using rule 177 (member_in_exp)



state 107

    member_in_exp  ->  floatliteral .   (rule 171)

    $default	reduce using rule 171 (member_in_exp)



state 108

    member_in_exp  ->  struct_member_exp .   (rule 180)

    $default	reduce using rule 180 (member_in_exp)



state 109

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  FINAL complexProposition .   (rule 21)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 21 (complexProposition)



state 110

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  KEEP complexProposition .   (rule 10)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 10 (complexProposition)



state 111

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  ALWAYS complexProposition .   (rule 9)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 9 (complexProposition)



state 112

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  HALT complexProposition .   (rule 20)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 20 (complexProposition)



state 113

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  W_NEXT complexProposition .   (rule 12)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 12 (complexProposition)



state 114

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  SOMETIMES complexProposition .   (rule 11)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 11 (complexProposition)



state 115

    gComplexProposition  ->  PBEGIN complexProposition PEND .   (rule 2)

    $default	reduce using rule 2 (gComplexProposition)



state 116

    complexProposition  ->  complexProposition CHOP . complexProposition   (rule 8)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 256



state 117

    complexProposition  ->  complexProposition IFF . complexProposition   (rule 6)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 257



state 118

    complexProposition  ->  complexProposition PROPIMPLY . complexProposition   (rule 7)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 258



state 119

    complexProposition  ->  complexProposition OR . complexProposition   (rule 5)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 259



state 120

    complexProposition  ->  complexProposition AND . complexProposition   (rule 4)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 260



state 121

    complexProposition  ->  complexProposition CHOPSTAR .   (rule 26)

    $default	reduce using rule 26 (complexProposition)



state 122

    switch_statement  ->  SWITCH OPEN_PAR . member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 342)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    member_in_exp	go to state 261
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 123

    statement  ->  RETURN ID .   (rule 36)

    $default	reduce using rule 36 (statement)



state 124

    member_in_exp  ->  POINTERNULL .   (rule 170)
    prime_bool_exp  ->  POINTERNULL . EQ ari_exp   (rule 250)
    prime_bool_exp  ->  POINTERNULL . NE ari_exp   (rule 251)

    NE  	shift, and go to state 262
    EQ  	shift, and go to state 263

    NE  	[reduce using rule 170 (member_in_exp)]
    EQ  	[reduce using rule 170 (member_in_exp)]
    $default	reduce using rule 170 (member_in_exp)



state 125

    prime_bool_exp  ->  MY_TRUE .   (rule 241)

    $default	reduce using rule 241 (prime_bool_exp)



state 126

    prime_bool_exp  ->  MY_FALSE .   (rule 242)

    $default	reduce using rule 242 (prime_bool_exp)



state 127

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 214
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    INTDECLARATION	shift, and go to state 215
    CHARDECLARATION	shift, and go to state 216
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 218
    OPEN_PAR	shift, and go to state 264
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 220
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 265
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    bool_exp	go to state 266
    prime_bool_exp	go to state 132
    identifier	go to state 227
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 128

    bool_exp  ->  NEGATION . bool_exp   (rule 236)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 267
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 129

    strliteral  ->  STRLITERAL .   (rule 318)

    $default	reduce using rule 318 (strliteral)



state 130

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 240)
    prime_bool_exp  ->  ari_exp .   (rule 243)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 244)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 245)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 248)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 249)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 252)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 253)

    NE  	shift, and go to state 268
    EQ  	shift, and go to state 269
    GE  	shift, and go to state 245
    LE  	shift, and go to state 246
    GT  	shift, and go to state 247
    LT  	shift, and go to state 248
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 243 (prime_bool_exp)

    ari_operator	go to state 239
    relation_operator	go to state 270



state 131

    bool_exp  ->  bool_exp . AND bool_exp   (rule 237)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 238)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 348)

    THEN	shift, and go to state 271
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273



state 132

    bool_exp  ->  prime_bool_exp .   (rule 235)

    $default	reduce using rule 235 (bool_exp)



state 133

    prime_bool_exp  ->  strliteral . EQ ari_exp   (rule 246)
    prime_bool_exp  ->  strliteral . NE ari_exp   (rule 247)

    NE  	shift, and go to state 274
    EQ  	shift, and go to state 275



state 134

    statement  ->  AWAIT OPEN_PAR . bool_exp CLOSE_PAR   (rule 44)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 276
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 135

    struct_identifier  ->  STRUCT ID .   (rule 74)
    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 81)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 189
    ID  	shift, and go to state 190

    $default	reduce using rule 74 (struct_identifier)

    option_identifier_array_declaration	go to state 277
    identifier	go to state 192



state 136

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 83)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 189
    ID  	shift, and go to state 190

    option_identifier_array_declaration	go to state 278
    identifier	go to state 192



state 137

    struct_identifier  ->  UNION ID .   (rule 75)
    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 82)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 189
    ID  	shift, and go to state 190

    $default	reduce using rule 75 (struct_identifier)

    option_identifier_array_declaration	go to state 279
    identifier	go to state 192



state 138

    declaration  ->  UNION STRUCT_TYPE . option_identifier_array_declaration   (rule 84)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 189
    ID  	shift, and go to state 190

    option_identifier_array_declaration	go to state 280
    identifier	go to state 192



state 139

    statement  ->  DEFINE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    OPEN_PAR	shift, and go to state 281



state 140

    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)

    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 282



state 141

    identifier  ->  ID .   (rule 316)

    $default	reduce using rule 316 (identifier)



state 142

    statement  ->  EXIST identifier . inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 64)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 284



state 143

    statement  ->  FRAME OPEN_PAR . identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 285



state 144

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    extend_for_statement  ->  FOR OPEN_PAR . for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 334)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 286
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 287
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 288
    VOIDDECLARATION	shift, and go to state 289
    FLOATDECLARATION	shift, and go to state 290
    OPEN_PAR	shift, and go to state 291
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 220
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEXT	shift, and go to state 179
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 292
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    $default	reduce using rule 337 (for_sta_init)

    function	go to state 96
    declaration	go to state 293
    type_define	go to state 67
    ass_statement	go to state 294
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 158
    point_exp	go to state 159
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 162
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    for_sta_init	go to state 295
    struct_member_exp	go to state 164



state 145

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    for_statement  ->  FOR ari_exp . TIMES DO statement_bpar   (rule 333)

    TIMES	shift, and go to state 296
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ari_operator	go to state 239



state 146

    bool_par  ->  error . CLOSE_PAR   (rule 315)

    CLOSE_PAR	shift, and go to state 297



state 147

    bool_par  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 314)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 298
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 148

    while_statement  ->  WHILE bool_par . statement_bpar   (rule 332)

    error	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300

    statement_bpar	go to state 301



state 149

    statement  ->  REPEAT OPEN_BPAR . statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 302
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 150

    output_statement  ->  DISPLAY OPEN_PAR . ass_right CLOSE_PAR   (rule 351)
    output_statement  ->  DISPLAY OPEN_PAR . ass_right option_output CLOSE_PAR   (rule 352)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 307
    rightaddrshift	go to state 308
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 151

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 160)
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 348)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 314
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 152

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 65)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 115)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 331)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 151
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 315
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 316
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 317
    VOIDDECLARATION	shift, and go to state 289
    FLOATDECLARATION	shift, and go to state 318
    OPEN_PAR	shift, and go to state 152
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 319
    SIGNED	shift, and go to state 320
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 153
    BNE 	shift, and go to state 92
    NEXT	shift, and go to state 53
    NEGATION	shift, and go to state 154
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 292
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    statement	go to state 155
    function	go to state 156
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 157
    leftaddrshift	go to state 70
    array	go to state 158
    point_exp	go to state 159
    ari_exp	go to state 265
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 162
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 321
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 164



state 153

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    point_exp  ->  MUL . identifier   (rule 150)
    point_exp  ->  MUL . point_exp   (rule 151)
    point_exp  ->  MUL . array   (rule 152)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 154)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 155)

    OPEN_PAR	shift, and go to state 173
    MUL 	shift, and go to state 322
    ID  	shift, and go to state 323

    array	go to state 175
    point_exp	go to state 176
    identifier	go to state 324



state 154

    imply_pre  ->  NEGATION . imply_pre   (rule 328)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 325
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 154
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 326
    struct_member_exp	go to state 108



state 155

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_PAR statement . CLOSE_PAR   (rule 65)

    CLOSE_PAR	shift, and go to state 327
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196



state 156

    statement  ->  function .   (rule 63)
    member_in_exp  ->  function .   (rule 175)

    CLOSE_PAR	reduce using rule 63 (statement)
    CLOSE_PAR	[reduce using rule 175 (member_in_exp)]
    CHOP	reduce using rule 63 (statement)
    OR  	reduce using rule 63 (statement)
    OR  	[reduce using rule 175 (member_in_exp)]
    PARALLEL	reduce using rule 63 (statement)
    AND 	reduce using rule 63 (statement)
    AND 	[reduce using rule 175 (member_in_exp)]
    $default	reduce using rule 175 (member_in_exp)



state 157

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 110)
    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 115)

    CLOSE_PAR	shift, and go to state 328
    ASS_P	shift, and go to state 199
    ASS_N	shift, and go to state 200

    assign_operator	go to state 201



state 158

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    ass_left  ->  array .   (rule 113)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 146)
    member_in_exp  ->  array .   (rule 173)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 202
    OPEN_PAR	shift, and go to state 203
    CLOSE_PAR	shift, and go to state 329
    IMPLY	shift, and go to state 204

    CLOSE_PAR	[reduce using rule 113 (ass_left)]
    CLOSE_PAR	[reduce using rule 173 (member_in_exp)]
    ASS_P	reduce using rule 113 (ass_left)
    ASS_N	reduce using rule 113 (ass_left)
    $default	reduce using rule 173 (member_in_exp)



state 159

    ass_left  ->  point_exp .   (rule 114)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 156)
    member_in_exp  ->  point_exp .   (rule 174)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 205
    CLOSE_PAR	shift, and go to state 330
    IMPLY	shift, and go to state 206

    CLOSE_PAR	[reduce using rule 114 (ass_left)]
    CLOSE_PAR	[reduce using rule 174 (member_in_exp)]
    ASS_P	reduce using rule 114 (ass_left)
    ASS_N	reduce using rule 114 (ass_left)
    $default	reduce using rule 174 (member_in_exp)



state 160

    member_in_exp  ->  address_exp .   (rule 178)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)

    CLOSE_PAR	shift, and go to state 331

    CLOSE_PAR	[reduce using rule 178 (member_in_exp)]
    $default	reduce using rule 178 (member_in_exp)



state 161

    imply_pre  ->  prime_bool_exp .   (rule 327)

    $default	reduce using rule 327 (imply_pre)



state 162

    ass_left  ->  identifier .   (rule 111)
    member_in_exp  ->  identifier .   (rule 172)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 317)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 363)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . DOT function   (rule 376)
    struct_member_exp  ->  identifier . IMPLY function   (rule 377)

    DOT 	shift, and go to state 207
    CLOSE_PAR	shift, and go to state 332
    IMPLY	shift, and go to state 208

    CLOSE_PAR	[reduce using rule 111 (ass_left)]
    CLOSE_PAR	[reduce using rule 172 (member_in_exp)]
    ASS_P	reduce using rule 111 (ass_left)
    ASS_N	reduce using rule 111 (ass_left)
    $default	reduce using rule 172 (member_in_exp)



state 163

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 329)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 330)

    CLOSE_PAR	shift, and go to state 333
    OR  	shift, and go to state 334
    AND 	shift, and go to state 335



state 164

    ass_left  ->  struct_member_exp .   (rule 112)
    member_in_exp  ->  struct_member_exp .   (rule 180)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 379)

    CLOSE_PAR	shift, and go to state 336

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    CLOSE_PAR	[reduce using rule 180 (member_in_exp)]
    ASS_P	reduce using rule 112 (ass_left)
    ASS_N	reduce using rule 112 (ass_left)
    $default	reduce using rule 180 (member_in_exp)



state 165

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_BPAR statement . option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 58)
    statement  ->  OPEN_BPAR statement . CLOSE_BPAR PROJECTION statement_bpar   (rule 59)

    COMMA	shift, and go to state 337
    CLOSE_BPAR	shift, and go to state 338
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196

    CLOSE_BPAR	[reduce using rule 325 (option_projection)]
    $default	reduce using rule 325 (option_projection)

    option_projection	go to state 339



state 166

    statement  ->  FUNCTION ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 60)

    OPEN_PAR	shift, and go to state 340



state 167

    function  ->  EXTERN ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)

    OPEN_PAR	shift, and go to state 341



state 168

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 81)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 83)

    ID  	shift, and go to state 342
    STRUCT_TYPE	shift, and go to state 136



state 169

    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 82)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 84)

    ID  	shift, and go to state 343
    STRUCT_TYPE	shift, and go to state 138



state 170

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)

    MUL 	shift, and go to state 344



state 171

    sign_declaration  ->  UNSIGNED declaration .   (rule 77)

    $default	reduce using rule 77 (sign_declaration)



state 172

    sign_declaration  ->  SIGNED declaration .   (rule 76)

    $default	reduce using rule 76 (sign_declaration)



state 173

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 154)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 155)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 219
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 345
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    type_define	go to state 346
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 347
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    sign_type_define	go to state 348
    all_type_define	go to state 349
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 174

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    identifier  ->  ID .   (rule 316)

    OPEN_MPAR	shift, and go to state 188

    $default	reduce using rule 316 (identifier)



state 175

    point_exp  ->  MUL array .   (rule 152)

    $default	reduce using rule 152 (point_exp)



state 176

    point_exp  ->  MUL point_exp .   (rule 151)

    $default	reduce using rule 151 (point_exp)



state 177

    point_exp  ->  MUL identifier .   (rule 150)

    $default	reduce using rule 150 (point_exp)



state 178

    statement  ->  NEXT OPEN_PAR . statement CLOSE_PAR   (rule 41)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 115)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 350
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 351
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 157
    leftaddrshift	go to state 70
    array	go to state 352
    point_exp	go to state 353
    address_exp	go to state 354
    identifier	go to state 355
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 356



state 179

    ass_left  ->  NEXT . ass_left   (rule 116)

    OPEN_PAR	shift, and go to state 357
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 179
    ID  	shift, and go to state 174

    ass_left	go to state 180
    leftaddrshift	go to state 70
    array	go to state 181
    point_exp	go to state 72
    identifier	go to state 73
    struct_member_exp	go to state 81



state 180

    ass_left  ->  NEXT ass_left .   (rule 116)

    $default	reduce using rule 116 (ass_left)



state 181

    ass_left  ->  array .   (rule 113)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 202
    IMPLY	shift, and go to state 204

    $default	reduce using rule 113 (ass_left)



state 182

    statement  ->  LENGTH OPEN_PAR . ari_exp CLOSE_PAR   (rule 49)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 358
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 183

    input_statement  ->  REQUEST OPEN_PAR . identifier CLOSE_PAR   (rule 355)
    input_statement  ->  REQUEST OPEN_PAR . identifier option_input CLOSE_PAR   (rule 356)
    input_statement  ->  REQUEST OPEN_PAR . array CLOSE_PAR   (rule 357)
    input_statement  ->  REQUEST OPEN_PAR . array option_input CLOSE_PAR   (rule 358)
    input_statement  ->  REQUEST OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 359)

    OPEN_PAR	shift, and go to state 359
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 174

    array	go to state 360
    point_exp	go to state 231
    identifier	go to state 361
    struct_member_exp	go to state 362



state 184

    statement  ->  FINAL OPEN_PAR . statement CLOSE_PAR   (rule 54)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 363
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 185

    statement  ->  KEEP OPEN_PAR . statement CLOSE_PAR   (rule 42)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 364
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 186

    statement  ->  ALWAYS OPEN_PAR . statement CLOSE_PAR   (rule 43)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 365
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 187

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 70)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 345
    ADDRESS	shift, and go to state 366
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    $default	reduce using rule 307 (option_function_identifier)

    function	go to state 96
    type_define	go to state 346
    ass_right	go to state 367
    rightaddrshift	go to state 308
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    sign_type_define	go to state 348
    all_type_define	go to state 368
    option_function_identifier	go to state 369
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 188

    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 370
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 189

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 102)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 189
    ID  	shift, and go to state 190

    option_identifier_array_declaration	go to state 371
    identifier	go to state 192



state 190

    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 96)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 98)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 101)
    identifier  ->  ID .   (rule 316)

    ARRAY	shift, and go to state 372
    OPEN_MPAR	shift, and go to state 373

    $default	reduce using rule 316 (identifier)



state 191

    declaration  ->  STRUCT_TYPE option_identifier_array_declaration .   (rule 80)

    $default	reduce using rule 80 (declaration)



state 192

    option_identifier_array_declaration  ->  identifier . inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  identifier . ASS_P ass_right inner_option_identifier_array_declaration   (rule 97)

    COMMA	shift, and go to state 374
    ASS_P	shift, and go to state 375

    COMMA	[reduce using rule 105 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 105 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 376



state 193

    statement  ->  statement CHOP . statement   (rule 32)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 377
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 194

    statement  ->  statement OR . statement   (rule 31)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 378
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 195

    statement  ->  statement PARALLEL . statement   (rule 55)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 379
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 196

    statement  ->  statement AND . statement   (rule 30)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 380
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 197

    struct_define_statement  ->  struct_identifier OPEN_BPAR . option_struct_declaration CLOSE_BPAR   (rule 73)

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 170
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    STRUCT_TYPE	shift, and go to state 60

    option_struct_declaration	go to state 381
    sign_declaration	go to state 382
    declaration	go to state 66
    type_define	go to state 67



state 198

    declaration  ->  type_define option_identifier_array_declaration .   (rule 79)

    $default	reduce using rule 79 (declaration)



state 199

    assign_operator  ->  ASS_P .   (rule 131)

    $default	reduce using rule 131 (assign_operator)



state 200

    assign_operator  ->  ASS_N .   (rule 132)

    $default	reduce using rule 132 (assign_operator)



state 201

    ass_statement  ->  ass_left assign_operator . ass_right   (rule 110)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 383
    rightaddrshift	go to state 308
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 202

    struct_member_exp  ->  array DOT . identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array DOT . array option_struct_member_exp   (rule 367)

    OPEN_PAR	shift, and go to state 384
    ID  	shift, and go to state 174

    array	go to state 385
    identifier	go to state 386



state 203

    function  ->  array OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 72)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 345
    ADDRESS	shift, and go to state 366
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    $default	reduce using rule 307 (option_function_identifier)

    function	go to state 96
    type_define	go to state 346
    ass_right	go to state 367
    rightaddrshift	go to state 308
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    sign_type_define	go to state 348
    all_type_define	go to state 368
    option_function_identifier	go to state 387
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 204

    struct_member_exp  ->  array IMPLY . identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array IMPLY . array option_struct_member_exp   (rule 374)

    OPEN_PAR	shift, and go to state 384
    ID  	shift, and go to state 174

    array	go to state 388
    identifier	go to state 389



state 205

    struct_member_exp  ->  point_exp DOT . identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  point_exp DOT . array option_struct_member_exp   (rule 368)

    OPEN_PAR	shift, and go to state 384
    ID  	shift, and go to state 174

    array	go to state 390
    identifier	go to state 391



state 206

    struct_member_exp  ->  point_exp IMPLY . identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp IMPLY . array option_struct_member_exp   (rule 378)

    OPEN_PAR	shift, and go to state 384
    ID  	shift, and go to state 174

    array	go to state 392
    identifier	go to state 393



state 207

    struct_member_exp  ->  identifier DOT . identifier option_struct_member_exp   (rule 363)
    struct_member_exp  ->  identifier DOT . array option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier DOT . function   (rule 376)

    OPEN_PAR	shift, and go to state 384
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59

    function	go to state 394
    array	go to state 395
    identifier	go to state 396



state 208

    struct_member_exp  ->  identifier IMPLY . identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier IMPLY . array option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier IMPLY . function   (rule 377)

    OPEN_PAR	shift, and go to state 384
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59

    function	go to state 397
    array	go to state 398
    identifier	go to state 399



state 209

    complexProposition  ->  DEFINE ID COLON . prime_bool_exp   (rule 25)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    prime_bool_exp	go to state 400
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 210

    complexProposition  ->  OPEN_PAR complexProposition CLOSE_PAR .   (rule 27)

    $default	reduce using rule 27 (complexProposition)



state 211

    poptional_projection  ->  COMMA . complexProposition poptional_projection   (rule 28)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 401



state 212

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection . CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    CLOSE_BPAR	shift, and go to state 402



state 213

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 160)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 237)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 238)

    THEN	shift, and go to state 403
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273



state 214

    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)

    STRUCT_TYPE	shift, and go to state 404



state 215

    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 405
    MUL 	shift, and go to state 406



state 216

    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 408



state 217

    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    MUL 	shift, and go to state 409



state 218

    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 411



state 219

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 412
    CHARDECLARATION	shift, and go to state 413
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 219
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 415
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 220

    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)

    INTDECLARATION	shift, and go to state 416
    CHARDECLARATION	shift, and go to state 417



state 221

    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)

    INTDECLARATION	shift, and go to state 418
    CHARDECLARATION	shift, and go to state 419



state 222

    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 233)

    MUL 	shift, and go to state 420



state 223

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 146)
    member_in_exp  ->  array .   (rule 173)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 202
    OPEN_PAR	shift, and go to state 203
    CLOSE_PAR	shift, and go to state 329
    IMPLY	shift, and go to state 204

    CLOSE_PAR	[reduce using rule 173 (member_in_exp)]
    $default	reduce using rule 173 (member_in_exp)



state 224

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 156)
    member_in_exp  ->  point_exp .   (rule 174)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 205
    CLOSE_PAR	shift, and go to state 330
    IMPLY	shift, and go to state 206

    CLOSE_PAR	[reduce using rule 174 (member_in_exp)]
    $default	reduce using rule 174 (member_in_exp)



state 225

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 176)

    CLOSE_PAR	shift, and go to state 421
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ari_operator	go to state 239



state 226

    member_in_exp  ->  address_exp .   (rule 178)
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 210)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)

    CLOSE_PAR	shift, and go to state 422

    CLOSE_PAR	[reduce using rule 178 (member_in_exp)]
    $default	reduce using rule 178 (member_in_exp)



state 227

    member_in_exp  ->  identifier .   (rule 172)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 317)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 363)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . DOT function   (rule 376)
    struct_member_exp  ->  identifier . IMPLY function   (rule 377)

    DOT 	shift, and go to state 207
    CLOSE_PAR	shift, and go to state 332
    IMPLY	shift, and go to state 208

    CLOSE_PAR	[reduce using rule 172 (member_in_exp)]
    $default	reduce using rule 172 (member_in_exp)



state 228

    member_in_exp  ->  struct_member_exp .   (rule 180)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 379)

    CLOSE_PAR	shift, and go to state 336

    CLOSE_PAR	[reduce using rule 180 (member_in_exp)]
    $default	reduce using rule 180 (member_in_exp)



state 229

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    OPEN_PAR	shift, and go to state 423
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 174

    array	go to state 424
    point_exp	go to state 425
    address_exp	go to state 426
    identifier	go to state 427
    struct_member_exp	go to state 428



state 230

    address_exp  ->  ADDRESS array .   (rule 207)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 202

    DOT 	[reduce using rule 207 (address_exp)]
    $default	reduce using rule 207 (address_exp)



state 231

    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 205
    IMPLY	shift, and go to state 206



state 232

    address_exp  ->  ADDRESS address_exp .   (rule 209)

    $default	reduce using rule 209 (address_exp)



state 233

    address_exp  ->  ADDRESS identifier .   (rule 206)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 363)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . DOT function   (rule 376)
    struct_member_exp  ->  identifier . IMPLY function   (rule 377)

    DOT 	shift, and go to state 207

    DOT 	[reduce using rule 206 (address_exp)]
    $default	reduce using rule 206 (address_exp)



state 234

    address_exp  ->  ADDRESS struct_member_exp .   (rule 208)

    $default	reduce using rule 208 (address_exp)



state 235

    member_in_exp  ->  SUB member_in_exp .   (rule 168)

    $default	reduce using rule 168 (member_in_exp)



state 236

    member_in_exp  ->  BNE member_in_exp .   (rule 169)

    $default	reduce using rule 169 (member_in_exp)



state 237

    ari_operator  ->  ADD .   (rule 189)

    $default	reduce using rule 189 (ari_operator)



state 238

    ari_operator  ->  SUB .   (rule 190)

    $default	reduce using rule 190 (ari_operator)



state 239

    ari_exp  ->  ari_exp ari_operator . simple_ari_exp   (rule 159)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    simple_ari_exp	go to state 429
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 240

    bi_operator  ->  INTER_OR .   (rule 187)

    $default	reduce using rule 187 (bi_operator)



state 241

    bi_operator  ->  CON .   (rule 188)

    $default	reduce using rule 188 (bi_operator)



state 242

    bi_operator  ->  ADDRESS .   (rule 186)

    $default	reduce using rule 186 (bi_operator)



state 243

    relation_operator  ->  NE .   (rule 256)

    $default	reduce using rule 256 (relation_operator)



state 244

    relation_operator  ->  EQ .   (rule 259)

    $default	reduce using rule 259 (relation_operator)



state 245

    relation_operator  ->  GE .   (rule 254)

    $default	reduce using rule 254 (relation_operator)



state 246

    relation_operator  ->  LE .   (rule 255)

    $default	reduce using rule 255 (relation_operator)



state 247

    relation_operator  ->  GT .   (rule 257)

    $default	reduce using rule 257 (relation_operator)



state 248

    relation_operator  ->  LT .   (rule 258)

    $default	reduce using rule 258 (relation_operator)



state 249

    bi_operator  ->  LST .   (rule 184)

    $default	reduce using rule 184 (bi_operator)



state 250

    bi_operator  ->  RST .   (rule 185)

    $default	reduce using rule 185 (bi_operator)



state 251

    bi_operator  ->  MUL .   (rule 181)

    $default	reduce using rule 181 (bi_operator)



state 252

    bi_operator  ->  DIV .   (rule 182)

    $default	reduce using rule 182 (bi_operator)



state 253

    bi_operator  ->  MOD .   (rule 183)

    $default	reduce using rule 183 (bi_operator)



state 254

    simple_ari_exp  ->  simple_ari_exp bi_operator . member_in_exp   (rule 166)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    member_in_exp	go to state 430
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 255

    ari_exp  ->  simple_ari_exp relation_operator . ari_exp   (rule 158)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 431
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 256

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition CHOP complexProposition .   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    IFF 	shift, and go to state 117
    PROPIMPLY	shift, and go to state 118
    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 8 (complexProposition)



state 257

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition IFF complexProposition .   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 6 (complexProposition)



state 258

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition PROPIMPLY complexProposition .   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 7 (complexProposition)



state 259

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition OR complexProposition .   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 5 (complexProposition)



state 260

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition AND complexProposition .   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 4 (complexProposition)



state 261

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp . CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 342)

    CLOSE_PAR	shift, and go to state 432



state 262

    prime_bool_exp  ->  POINTERNULL NE . ari_exp   (rule 251)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 433
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 263

    prime_bool_exp  ->  POINTERNULL EQ . ari_exp   (rule 250)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 434
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 264

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 214
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    INTDECLARATION	shift, and go to state 412
    CHARDECLARATION	shift, and go to state 413
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 264
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 415
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 265
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    bool_exp	go to state 266
    prime_bool_exp	go to state 132
    identifier	go to state 227
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 265

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 176)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 240)
    prime_bool_exp  ->  ari_exp .   (rule 243)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 244)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 245)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 248)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 249)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 252)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 253)

    CLOSE_PAR	shift, and go to state 421
    NE  	shift, and go to state 268
    EQ  	shift, and go to state 269
    GE  	shift, and go to state 245
    LE  	shift, and go to state 246
    GT  	shift, and go to state 247
    LT  	shift, and go to state 248
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    CLOSE_PAR	[reduce using rule 243 (prime_bool_exp)]
    $default	reduce using rule 243 (prime_bool_exp)

    ari_operator	go to state 239
    relation_operator	go to state 270



state 266

    bool_exp  ->  bool_exp . AND bool_exp   (rule 237)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 238)
    bool_exp  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 239)

    CLOSE_PAR	shift, and go to state 435
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273



state 267

    bool_exp  ->  NEGATION bool_exp .   (rule 236)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 237)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 238)


    $default	reduce using rule 236 (bool_exp)



state 268

    prime_bool_exp  ->  ari_exp NE . strliteral   (rule 245)
    prime_bool_exp  ->  ari_exp NE . POINTERNULL   (rule 249)
    prime_bool_exp  ->  ari_exp NE . charliteral   (rule 253)
    relation_operator  ->  NE .   (rule 256)

    POINTERNULL	shift, and go to state 436
    STRLITERAL	shift, and go to state 129
    CHARLITERAL	shift, and go to state 95

    POINTERNULL	[reduce using rule 256 (relation_operator)]
    CHARLITERAL	[reduce using rule 256 (relation_operator)]
    $default	reduce using rule 256 (relation_operator)

    strliteral	go to state 437
    charliteral	go to state 438



state 269

    prime_bool_exp  ->  ari_exp EQ . strliteral   (rule 244)
    prime_bool_exp  ->  ari_exp EQ . POINTERNULL   (rule 248)
    prime_bool_exp  ->  ari_exp EQ . charliteral   (rule 252)
    relation_operator  ->  EQ .   (rule 259)

    POINTERNULL	shift, and go to state 439
    STRLITERAL	shift, and go to state 129
    CHARLITERAL	shift, and go to state 95

    POINTERNULL	[reduce using rule 259 (relation_operator)]
    CHARLITERAL	[reduce using rule 259 (relation_operator)]
    $default	reduce using rule 259 (relation_operator)

    strliteral	go to state 440
    charliteral	go to state 441



state 270

    prime_bool_exp  ->  ari_exp relation_operator . ari_exp   (rule 240)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 442
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 271

    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 348)

    error	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300

    statement_bpar	go to state 443



state 272

    bool_exp  ->  bool_exp OR . bool_exp   (rule 238)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 444
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 273

    bool_exp  ->  bool_exp AND . bool_exp   (rule 237)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 445
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 274

    prime_bool_exp  ->  strliteral NE . ari_exp   (rule 247)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 446
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 275

    prime_bool_exp  ->  strliteral EQ . ari_exp   (rule 246)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 447
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 276

    statement  ->  AWAIT OPEN_PAR bool_exp . CLOSE_PAR   (rule 44)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 237)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 238)

    CLOSE_PAR	shift, and go to state 448
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273



state 277

    declaration  ->  STRUCT ID option_identifier_array_declaration .   (rule 81)

    $default	reduce using rule 81 (declaration)



state 278

    declaration  ->  STRUCT STRUCT_TYPE option_identifier_array_declaration .   (rule 83)

    $default	reduce using rule 83 (declaration)



state 279

    declaration  ->  UNION ID option_identifier_array_declaration .   (rule 82)

    $default	reduce using rule 82 (declaration)



state 280

    declaration  ->  UNION STRUCT_TYPE option_identifier_array_declaration .   (rule 84)

    $default	reduce using rule 84 (declaration)



state 281

    statement  ->  DEFINE ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 449
    UNSIGNED	shift, and go to state 345
    ID  	shift, and go to state 450
    STRUCT_TYPE	shift, and go to state 451

    $default	reduce using rule 287 (option_function_parameter_list)

    type_define	go to state 346
    sign_type_define	go to state 348
    all_type_define	go to state 452
    option_function_parameter_list	go to state 453



state 282

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 317)

    CLOSE_PAR	shift, and go to state 332



state 283

    inner_option_define_identifier  ->  COMMA . all_type_define identifier inner_option_define_identifier   (rule 288)
    inner_option_define_identifier  ->  COMMA . all_type_define inner_option_define_identifier   (rule 289)
    inner_option_define_identifier  ->  COMMA . ID identifier inner_option_define_identifier   (rule 290)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE MUL identifier inner_option_define_identifier   (rule 292)
    inner_option_define_identifier  ->  COMMA . ID identifier ARRAY inner_option_define_identifier   (rule 293)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier ARRAY inner_option_define_identifier   (rule 294)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier ARRAY inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA . OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA . error   (rule 304)

    error	shift, and go to state 454
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 455
    UNSIGNED	shift, and go to state 345
    ID  	shift, and go to state 456
    STRUCT_TYPE	shift, and go to state 457

    type_define	go to state 346
    sign_type_define	go to state 348
    all_type_define	go to state 458



state 284

    statement  ->  EXIST identifier inner_option_define_identifier . COLON OPEN_BPAR statement CLOSE_BPAR   (rule 64)

    COLON	shift, and go to state 459



state 285

    statement  ->  FRAME OPEN_PAR identifier . option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    COMMA	shift, and go to state 460

    $default	reduce using rule 323 (option_frame_identifier)

    option_frame_identifier	go to state 461



state 286

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 81)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 83)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)

    ID  	shift, and go to state 342
    STRUCT_TYPE	shift, and go to state 462



state 287

    type_define  ->  INTDECLARATION .   (rule 89)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 405
    MUL 	shift, and go to state 406

    MUL 	[reduce using rule 89 (type_define)]
    $default	reduce using rule 89 (type_define)



state 288

    type_define  ->  CHARDECLARATION .   (rule 91)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 408

    MUL 	[reduce using rule 91 (type_define)]
    $default	reduce using rule 91 (type_define)



state 289

    type_define  ->  VOIDDECLARATION .   (rule 93)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    MUL 	shift, and go to state 409

    MUL 	[reduce using rule 93 (type_define)]
    $default	reduce using rule 93 (type_define)



state 290

    type_define  ->  FLOATDECLARATION .   (rule 90)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 411

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 291

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 115)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 412
    CHARDECLARATION	shift, and go to state 413
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 463
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 415
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 153
    BNE 	shift, and go to state 92
    NEXT	shift, and go to state 179
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_left	go to state 464
    leftaddrshift	go to state 70
    array	go to state 158
    point_exp	go to state 159
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 162
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 164



state 292

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 80)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 233)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 465
    ID  	shift, and go to state 190

    option_identifier_array_declaration	go to state 191
    identifier	go to state 192



state 293

    for_sta_init  ->  declaration .   (rule 336)

    $default	reduce using rule 336 (for_sta_init)



state 294

    for_sta_init  ->  ass_statement .   (rule 335)

    $default	reduce using rule 335 (for_sta_init)



state 295

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init . COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 334)

    COMMA	shift, and go to state 466



state 296

    for_statement  ->  FOR ari_exp TIMES . DO statement_bpar   (rule 333)

    DO  	shift, and go to state 467



state 297

    bool_par  ->  error CLOSE_PAR .   (rule 315)

    $default	reduce using rule 315 (bool_par)



state 298

    bool_exp  ->  bool_exp . AND bool_exp   (rule 237)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 238)
    bool_par  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 314)

    CLOSE_PAR	shift, and go to state 468
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273



state 299

    statement_bpar  ->  error . CLOSE_BPAR   (rule 313)

    CLOSE_BPAR	shift, and go to state 469



state 300

    statement_bpar  ->  OPEN_BPAR . statement CLOSE_BPAR   (rule 312)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 470
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 301

    while_statement  ->  WHILE bool_par statement_bpar .   (rule 332)

    $default	reduce using rule 332 (while_statement)



state 302

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  REPEAT OPEN_BPAR statement . CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_BPAR	shift, and go to state 471
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196



state 303

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 136)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 137)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 194)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 215
    CHARDECLARATION	shift, and go to state 216
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 218
    OPEN_PAR	shift, and go to state 472
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 220
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 473
    rightaddrshift	go to state 308
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 474
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 475
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    strliteral	go to state 476
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 304

    option_struct_list_value  ->  OPEN_BPAR . ari_exp inner_option_list_value CLOSE_BPAR   (rule 198)
    option_struct_list_value  ->  OPEN_BPAR . strliteral inner_option_list_value CLOSE_BPAR   (rule 199)
    option_struct_list_value  ->  OPEN_BPAR . array_exp inner_option_list_value CLOSE_BPAR   (rule 200)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 477
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 478
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 479
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 480
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 305

    option_list_value  ->  OPEN_MPAR . ari_exp inner_option_list_value CLOSE_MPAR   (rule 195)
    option_list_value  ->  OPEN_MPAR . strliteral inner_option_list_value CLOSE_MPAR   (rule 196)
    option_list_value  ->  OPEN_MPAR . array_exp inner_option_list_value CLOSE_MPAR   (rule 197)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 477
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 481
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 482
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 483
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 306

    rightaddrshift  ->  MUL . OPEN_PAR leftaddrshift CLOSE_PAR   (rule 139)
    point_exp  ->  MUL . identifier   (rule 150)
    point_exp  ->  MUL . point_exp   (rule 151)
    point_exp  ->  MUL . array   (rule 152)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 154)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 155)

    OPEN_PAR	shift, and go to state 484
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 174

    array	go to state 175
    point_exp	go to state 176
    identifier	go to state 177



state 307

    output_statement  ->  DISPLAY OPEN_PAR ass_right . CLOSE_PAR   (rule 351)
    output_statement  ->  DISPLAY OPEN_PAR ass_right . option_output CLOSE_PAR   (rule 352)

    COMMA	shift, and go to state 485
    CLOSE_PAR	shift, and go to state 486

    CLOSE_PAR	[reduce using rule 353 (option_output)]
    $default	reduce using rule 353 (option_output)

    option_output	go to state 487



state 308

    ass_right  ->  rightaddrshift .   (rule 138)

    $default	reduce using rule 138 (ass_right)



state 309

    ass_right  ->  ari_exp .   (rule 133)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 133 (ass_right)

    ari_operator	go to state 239



state 310

    ass_right  ->  array_exp .   (rule 134)
    array_exp  ->  array_exp . CON array_exp   (rule 191)

    CON 	shift, and go to state 488

    $default	reduce using rule 134 (ass_right)



state 311

    array_exp  ->  option_list_value .   (rule 192)

    $default	reduce using rule 192 (array_exp)



state 312

    array_exp  ->  option_struct_list_value .   (rule 193)

    $default	reduce using rule 193 (array_exp)



state 313

    ass_right  ->  strliteral .   (rule 135)

    $default	reduce using rule 135 (ass_right)



state 314

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 160)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 237)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 238)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 348)

    THEN	shift, and go to state 489
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273



state 315

    struct_identifier  ->  STRUCT . ID   (rule 74)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 81)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 83)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)

    ID  	shift, and go to state 135
    STRUCT_TYPE	shift, and go to state 462



state 316

    type_define  ->  INTDECLARATION .   (rule 89)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 405
    MUL 	shift, and go to state 490

    MUL 	[reduce using rule 89 (type_define)]
    $default	reduce using rule 89 (type_define)



state 317

    type_define  ->  CHARDECLARATION .   (rule 91)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 491

    MUL 	[reduce using rule 91 (type_define)]
    $default	reduce using rule 91 (type_define)



state 318

    type_define  ->  FLOATDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 492

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 319

    sign_declaration  ->  UNSIGNED . declaration   (rule 77)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 493
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 494
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 170
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 171
    type_define	go to state 67



state 320

    sign_declaration  ->  SIGNED . declaration   (rule 76)
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 495
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 496
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 170
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 172
    type_define	go to state 67



state 321

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 329)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 330)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 331)

    CLOSE_PAR	shift, and go to state 497
    OR  	shift, and go to state 334
    AND 	shift, and go to state 335



state 322

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    point_exp  ->  MUL . identifier   (rule 150)
    point_exp  ->  MUL . point_exp   (rule 151)
    point_exp  ->  MUL . array   (rule 152)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 154)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 155)

    OPEN_PAR	shift, and go to state 173
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 174

    array	go to state 175
    point_exp	go to state 176
    identifier	go to state 498



state 323

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    identifier  ->  ID .   (rule 316)

    OPEN_MPAR	shift, and go to state 499

    $default	reduce using rule 316 (identifier)



state 324

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    point_exp  ->  MUL identifier .   (rule 150)

    CLOSE_PAR	shift, and go to state 500

    CLOSE_PAR	[reduce using rule 150 (point_exp)]
    $default	reduce using rule 150 (point_exp)



state 325

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 331)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 214
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    INTDECLARATION	shift, and go to state 215
    CHARDECLARATION	shift, and go to state 216
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 218
    OPEN_PAR	shift, and go to state 501
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 220
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 154
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 265
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 227
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 502
    struct_member_exp	go to state 228



state 326

    imply_pre  ->  NEGATION imply_pre .   (rule 328)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 329)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 330)


    $default	reduce using rule 328 (imply_pre)



state 327

    statement  ->  OPEN_PAR statement CLOSE_PAR .   (rule 65)

    $default	reduce using rule 65 (statement)



state 328

    ass_left  ->  OPEN_PAR ass_left CLOSE_PAR .   (rule 115)

    $default	reduce using rule 115 (ass_left)



state 329

    array  ->  OPEN_PAR array CLOSE_PAR .   (rule 146)

    $default	reduce using rule 146 (array)



state 330

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR .   (rule 156)

    OPEN_MPAR	shift, and go to state 503

    $default	reduce using rule 156 (point_exp)



state 331

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 375)

    IMPLY	shift, and go to state 504



state 332

    identifier  ->  OPEN_PAR identifier CLOSE_PAR .   (rule 317)

    $default	reduce using rule 317 (identifier)



state 333

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)

    IMPLY	shift, and go to state 505



state 334

    imply_pre  ->  imply_pre OR . imply_pre   (rule 330)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 325
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 154
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 506
    struct_member_exp	go to state 108



state 335

    imply_pre  ->  imply_pre AND . imply_pre   (rule 329)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 325
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 154
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 507
    struct_member_exp	go to state 108



state 336

    struct_member_exp  ->  OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 379)

    $default	reduce using rule 379 (struct_member_exp)



state 337

    option_projection  ->  COMMA . statement option_projection   (rule 326)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 508
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 338

    statement  ->  OPEN_BPAR statement CLOSE_BPAR . PROJECTION statement_bpar   (rule 59)

    PROJECTION	shift, and go to state 509



state 339

    statement  ->  OPEN_BPAR statement option_projection . CLOSE_BPAR PROJECTION statement_bpar   (rule 58)

    CLOSE_BPAR	shift, and go to state 510



state 340

    statement  ->  FUNCTION ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 60)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 449
    UNSIGNED	shift, and go to state 345
    ID  	shift, and go to state 450
    STRUCT_TYPE	shift, and go to state 451

    $default	reduce using rule 287 (option_function_parameter_list)

    type_define	go to state 346
    sign_type_define	go to state 348
    all_type_define	go to state 452
    option_function_parameter_list	go to state 511



state 341

    function  ->  EXTERN ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 71)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 345
    ADDRESS	shift, and go to state 366
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    $default	reduce using rule 307 (option_function_identifier)

    function	go to state 96
    type_define	go to state 346
    ass_right	go to state 367
    rightaddrshift	go to state 308
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    sign_type_define	go to state 348
    all_type_define	go to state 368
    option_function_identifier	go to state 512
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 342

    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 81)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 189
    ID  	shift, and go to state 190

    option_identifier_array_declaration	go to state 277
    identifier	go to state 192



state 343

    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 82)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 189
    ID  	shift, and go to state 190

    option_identifier_array_declaration	go to state 279
    identifier	go to state 192



state 344

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 513
    ID  	shift, and go to state 514

    identifier	go to state 515



state 345

    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 260)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 261)

    INTDECLARATION	shift, and go to state 516
    CHARDECLARATION	shift, and go to state 517



state 346

    all_type_define  ->  type_define .   (rule 263)

    $default	reduce using rule 263 (all_type_define)



state 347

    point_exp  ->  MUL OPEN_PAR ari_exp . CLOSE_PAR   (rule 155)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    CLOSE_PAR	shift, and go to state 518
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ari_operator	go to state 239



state 348

    all_type_define  ->  sign_type_define .   (rule 262)

    $default	reduce using rule 262 (all_type_define)



state 349

    point_exp  ->  MUL OPEN_PAR all_type_define . MUL CLOSE_PAR ari_exp   (rule 154)

    MUL 	shift, and go to state 519



state 350

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 65)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 115)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 151
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 520
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 521
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 522
    OPEN_PAR	shift, and go to state 152
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 523
    SIGNED	shift, and go to state 51
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 153
    BNE 	shift, and go to state 92
    NEXT	shift, and go to state 53
    NEGATION	shift, and go to state 154
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 60
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    statement	go to state 155
    function	go to state 156
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 157
    leftaddrshift	go to state 70
    array	go to state 158
    point_exp	go to state 159
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 162
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 163
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 164



state 351

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  NEXT OPEN_PAR statement . CLOSE_PAR   (rule 41)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 524
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196



state 352

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    ass_left  ->  array .   (rule 113)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 146)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 202
    OPEN_PAR	shift, and go to state 203
    CLOSE_PAR	shift, and go to state 329
    IMPLY	shift, and go to state 204

    CLOSE_PAR	[reduce using rule 113 (ass_left)]
    $default	reduce using rule 113 (ass_left)



state 353

    ass_left  ->  point_exp .   (rule 114)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 156)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 205
    CLOSE_PAR	shift, and go to state 330
    IMPLY	shift, and go to state 206

    CLOSE_PAR	[reduce using rule 114 (ass_left)]
    $default	reduce using rule 114 (ass_left)



state 354

    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)

    CLOSE_PAR	shift, and go to state 331



state 355

    ass_left  ->  identifier .   (rule 111)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 317)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 363)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . DOT function   (rule 376)
    struct_member_exp  ->  identifier . IMPLY function   (rule 377)

    DOT 	shift, and go to state 207
    CLOSE_PAR	shift, and go to state 332
    IMPLY	shift, and go to state 208

    CLOSE_PAR	[reduce using rule 111 (ass_left)]
    $default	reduce using rule 111 (ass_left)



state 356

    ass_left  ->  struct_member_exp .   (rule 112)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 379)

    CLOSE_PAR	shift, and go to state 336

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    $default	reduce using rule 112 (ass_left)



state 357

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 115)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    OPEN_PAR	shift, and go to state 525
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 179
    ID  	shift, and go to state 174

    ass_left	go to state 464
    leftaddrshift	go to state 70
    array	go to state 526
    point_exp	go to state 353
    address_exp	go to state 354
    identifier	go to state 355
    struct_member_exp	go to state 356



state 358

    statement  ->  LENGTH OPEN_PAR ari_exp . CLOSE_PAR   (rule 49)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    CLOSE_PAR	shift, and go to state 527
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ari_operator	go to state 239



state 359

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    OPEN_PAR	shift, and go to state 423
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 174

    array	go to state 424
    point_exp	go to state 425
    address_exp	go to state 354
    identifier	go to state 427
    struct_member_exp	go to state 428



state 360

    input_statement  ->  REQUEST OPEN_PAR array . CLOSE_PAR   (rule 357)
    input_statement  ->  REQUEST OPEN_PAR array . option_input CLOSE_PAR   (rule 358)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 202
    COMMA	shift, and go to state 528
    CLOSE_PAR	shift, and go to state 529
    IMPLY	shift, and go to state 204

    CLOSE_PAR	[reduce using rule 360 (option_input)]
    $default	reduce using rule 360 (option_input)

    option_input	go to state 530



state 361

    input_statement  ->  REQUEST OPEN_PAR identifier . CLOSE_PAR   (rule 355)
    input_statement  ->  REQUEST OPEN_PAR identifier . option_input CLOSE_PAR   (rule 356)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 363)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . DOT function   (rule 376)
    struct_member_exp  ->  identifier . IMPLY function   (rule 377)

    DOT 	shift, and go to state 207
    COMMA	shift, and go to state 528
    CLOSE_PAR	shift, and go to state 531
    IMPLY	shift, and go to state 208

    CLOSE_PAR	[reduce using rule 360 (option_input)]
    $default	reduce using rule 360 (option_input)

    option_input	go to state 532



state 362

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 359)

    CLOSE_PAR	shift, and go to state 533



state 363

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  FINAL OPEN_PAR statement . CLOSE_PAR   (rule 54)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 534
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196



state 364

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  KEEP OPEN_PAR statement . CLOSE_PAR   (rule 42)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 535
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196



state 365

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  ALWAYS OPEN_PAR statement . CLOSE_PAR   (rule 43)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 536
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196



state 366

    address_exp  ->  ADDRESS . identifier   (rule 206)
    address_exp  ->  ADDRESS . array   (rule 207)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 208)
    address_exp  ->  ADDRESS . address_exp   (rule 209)
    option_function_identifier  ->  ADDRESS . error   (rule 308)

    error	shift, and go to state 537
    OPEN_PAR	shift, and go to state 229
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 174

    array	go to state 230
    point_exp	go to state 231
    address_exp	go to state 232
    identifier	go to state 233
    struct_member_exp	go to state 234



state 367

    option_function_identifier  ->  ass_right . inner_option_function_identifier   (rule 305)

    COMMA	shift, and go to state 538

    $default	reduce using rule 310 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 539



state 368

    option_function_identifier  ->  all_type_define .   (rule 306)

    $default	reduce using rule 306 (option_function_identifier)



state 369

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 70)

    CLOSE_PAR	shift, and go to state 540



state 370

    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 140)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 542
    ari_operator	go to state 239



state 371

    option_identifier_array_declaration  ->  MUL option_identifier_array_declaration .   (rule 102)

    $default	reduce using rule 102 (option_identifier_array_declaration)



state 372

    option_identifier_array_declaration  ->  ID ARRAY . ASS_P array_exp inner_option_identifier_array_declaration   (rule 98)
    option_identifier_array_declaration  ->  ID ARRAY . ASS_P strliteral inner_option_identifier_array_declaration   (rule 99)

    ASS_P	shift, and go to state 543



state 373

    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 96)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 101)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 544
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 374

    inner_option_identifier_array_declaration  ->  COMMA . option_identifier_array_declaration   (rule 103)
    inner_option_identifier_array_declaration  ->  COMMA . error   (rule 104)

    error	shift, and go to state 545
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 189
    ID  	shift, and go to state 190

    option_identifier_array_declaration	go to state 546
    identifier	go to state 192



state 375

    option_identifier_array_declaration  ->  identifier ASS_P . ass_right inner_option_identifier_array_declaration   (rule 97)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 547
    rightaddrshift	go to state 308
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 376

    option_identifier_array_declaration  ->  identifier inner_option_identifier_array_declaration .   (rule 95)

    $default	reduce using rule 95 (option_identifier_array_declaration)



state 377

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement CHOP statement .   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)

    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196

    $default	reduce using rule 32 (statement)



state 378

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement OR statement .   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)

    AND 	shift, and go to state 196

    $default	reduce using rule 31 (statement)



state 379

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  statement PARALLEL statement .   (rule 55)

    AND 	shift, and go to state 196

    $default	reduce using rule 55 (statement)



state 380

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement AND statement .   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)


    $default	reduce using rule 30 (statement)



state 381

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration . CLOSE_BPAR   (rule 73)

    CLOSE_BPAR	shift, and go to state 548



state 382

    option_struct_declaration  ->  sign_declaration .   (rule 66)
    option_struct_declaration  ->  sign_declaration . AND option_struct_declaration   (rule 67)

    AND 	shift, and go to state 549

    $default	reduce using rule 66 (option_struct_declaration)



state 383

    ass_statement  ->  ass_left assign_operator ass_right .   (rule 110)

    $default	reduce using rule 110 (ass_statement)



state 384

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)

    OPEN_PAR	shift, and go to state 550
    ID  	shift, and go to state 174

    array	go to state 551
    identifier	go to state 282



state 385

    struct_member_exp  ->  array DOT array . option_struct_member_exp   (rule 367)

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 554



state 386

    struct_member_exp  ->  array DOT identifier . option_struct_member_exp   (rule 364)

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 555



state 387

    function  ->  array OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 72)

    CLOSE_PAR	shift, and go to state 556



state 388

    struct_member_exp  ->  array IMPLY array . option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 557



state 389

    struct_member_exp  ->  array IMPLY identifier . option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 558



state 390

    struct_member_exp  ->  point_exp DOT array . option_struct_member_exp   (rule 368)

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 559



state 391

    struct_member_exp  ->  point_exp DOT identifier . option_struct_member_exp   (rule 365)

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 560



state 392

    struct_member_exp  ->  point_exp IMPLY array . option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 561



state 393

    struct_member_exp  ->  point_exp IMPLY identifier . option_struct_member_exp   (rule 372)

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 562



state 394

    struct_member_exp  ->  identifier DOT function .   (rule 376)

    $default	reduce using rule 376 (struct_member_exp)



state 395

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    struct_member_exp  ->  identifier DOT array . option_struct_member_exp   (rule 366)

    DOT 	shift, and go to state 552
    OPEN_PAR	shift, and go to state 203
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 563



state 396

    struct_member_exp  ->  identifier DOT identifier . option_struct_member_exp   (rule 363)

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 564



state 397

    struct_member_exp  ->  identifier IMPLY function .   (rule 377)

    $default	reduce using rule 377 (struct_member_exp)



state 398

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    struct_member_exp  ->  identifier IMPLY array . option_struct_member_exp   (rule 373)

    DOT 	shift, and go to state 552
    OPEN_PAR	shift, and go to state 203
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 565



state 399

    struct_member_exp  ->  identifier IMPLY identifier . option_struct_member_exp   (rule 369)

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 566



state 400

    complexProposition  ->  DEFINE ID COLON prime_bool_exp .   (rule 25)

    $default	reduce using rule 25 (complexProposition)



state 401

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    poptional_projection  ->  COMMA complexProposition . poptional_projection   (rule 28)

    COMMA	shift, and go to state 211
    CHOP	shift, and go to state 116
    IFF 	shift, and go to state 117
    PROPIMPLY	shift, and go to state 118
    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 567



state 402

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR . PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    PROJECTION	shift, and go to state 568



state 403

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 160)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 569
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 404

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 232)

    MUL 	shift, and go to state 570



state 405

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 211)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 571
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 406

    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 573
    MUL 	shift, and go to state 574



state 407

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 213)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 575
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 408

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 576
    MUL 	shift, and go to state 577



state 409

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 578
    MUL 	shift, and go to state 579



state 410

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 212)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 580
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 411

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 581
    MUL 	shift, and go to state 582



state 412

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 405
    MUL 	shift, and go to state 583



state 413

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 584



state 414

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 585



state 415

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)

    INTDECLARATION	shift, and go to state 586
    CHARDECLARATION	shift, and go to state 587



state 416

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 589



state 417

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 591



state 418

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)

    CLOSE_PAR	shift, and go to state 592



state 419

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)

    CLOSE_PAR	shift, and go to state 593



state 420

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 594
    MUL 	shift, and go to state 595



state 421

    member_in_exp  ->  OPEN_PAR ari_exp CLOSE_PAR .   (rule 176)

    $default	reduce using rule 176 (member_in_exp)



state 422

    address_exp  ->  OPEN_PAR address_exp CLOSE_PAR .   (rule 210)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 375)

    IMPLY	shift, and go to state 504

    IMPLY	[reduce using rule 210 (address_exp)]
    $default	reduce using rule 210 (address_exp)



state 423

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    INTDECLARATION	shift, and go to state 596
    CHARDECLARATION	shift, and go to state 597
    FLOATDECLARATION	shift, and go to state 598
    OPEN_PAR	shift, and go to state 423
    UNSIGNED	shift, and go to state 599
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    ID  	shift, and go to state 174

    array	go to state 424
    point_exp	go to state 425
    address_exp	go to state 426
    identifier	go to state 427
    struct_member_exp	go to state 428



state 424

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 146)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 202
    CLOSE_PAR	shift, and go to state 329
    IMPLY	shift, and go to state 204



state 425

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 156)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 205
    CLOSE_PAR	shift, and go to state 330
    IMPLY	shift, and go to state 206



state 426

    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 210)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)

    CLOSE_PAR	shift, and go to state 422



state 427

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 317)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 363)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 366)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 373)
    struct_member_exp  ->  identifier . DOT function   (rule 376)
    struct_member_exp  ->  identifier . IMPLY function   (rule 377)

    DOT 	shift, and go to state 207
    CLOSE_PAR	shift, and go to state 332
    IMPLY	shift, and go to state 208



state 428

    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 379)

    CLOSE_PAR	shift, and go to state 336



state 429

    ari_exp  ->  ari_exp ari_operator simple_ari_exp .   (rule 159)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 166)

    INTER_OR	shift, and go to state 240
    CON 	shift, and go to state 241
    ADDRESS	shift, and go to state 242
    LST 	shift, and go to state 249
    RST 	shift, and go to state 250
    MUL 	shift, and go to state 251
    DIV 	shift, and go to state 252
    MOD 	shift, and go to state 253

    INTER_OR	[reduce using rule 159 (ari_exp)]
    CON 	[reduce using rule 159 (ari_exp)]
    ADDRESS	[reduce using rule 159 (ari_exp)]
    LST 	[reduce using rule 159 (ari_exp)]
    RST 	[reduce using rule 159 (ari_exp)]
    MUL 	[reduce using rule 159 (ari_exp)]
    DIV 	[reduce using rule 159 (ari_exp)]
    MOD 	[reduce using rule 159 (ari_exp)]
    $default	reduce using rule 159 (ari_exp)

    bi_operator	go to state 254



state 430

    simple_ari_exp  ->  simple_ari_exp bi_operator member_in_exp .   (rule 166)

    $default	reduce using rule 166 (simple_ari_exp)



state 431

    ari_exp  ->  simple_ari_exp relation_operator ari_exp .   (rule 158)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ADD 	[reduce using rule 158 (ari_exp)]
    SUB 	[reduce using rule 158 (ari_exp)]
    $default	reduce using rule 158 (ari_exp)

    ari_operator	go to state 239



state 432

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR . OPEN_BPAR case_par CLOSE_BPAR   (rule 342)

    OPEN_BPAR	shift, and go to state 600



state 433

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    prime_bool_exp  ->  POINTERNULL NE ari_exp .   (rule 251)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 251 (prime_bool_exp)

    ari_operator	go to state 239



state 434

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    prime_bool_exp  ->  POINTERNULL EQ ari_exp .   (rule 250)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 250 (prime_bool_exp)

    ari_operator	go to state 239



state 435

    bool_exp  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 239)

    $default	reduce using rule 239 (bool_exp)



state 436

    prime_bool_exp  ->  ari_exp NE POINTERNULL .   (rule 249)

    $default	reduce using rule 249 (prime_bool_exp)



state 437

    prime_bool_exp  ->  ari_exp NE strliteral .   (rule 245)

    $default	reduce using rule 245 (prime_bool_exp)



state 438

    prime_bool_exp  ->  ari_exp NE charliteral .   (rule 253)

    $default	reduce using rule 253 (prime_bool_exp)



state 439

    prime_bool_exp  ->  ari_exp EQ POINTERNULL .   (rule 248)

    $default	reduce using rule 248 (prime_bool_exp)



state 440

    prime_bool_exp  ->  ari_exp EQ strliteral .   (rule 244)

    $default	reduce using rule 244 (prime_bool_exp)



state 441

    prime_bool_exp  ->  ari_exp EQ charliteral .   (rule 252)

    $default	reduce using rule 252 (prime_bool_exp)



state 442

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    prime_bool_exp  ->  ari_exp relation_operator ari_exp .   (rule 240)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 240 (prime_bool_exp)

    ari_operator	go to state 239



state 443

    if_statement  ->  IF bool_exp THEN statement_bpar . option_else_statement   (rule 348)

    ELSE	shift, and go to state 601

    $default	reduce using rule 350 (option_else_statement)

    option_else_statement	go to state 602



state 444

    bool_exp  ->  bool_exp . AND bool_exp   (rule 237)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 238)
    bool_exp  ->  bool_exp OR bool_exp .   (rule 238)

    AND 	shift, and go to state 273

    $default	reduce using rule 238 (bool_exp)



state 445

    bool_exp  ->  bool_exp . AND bool_exp   (rule 237)
    bool_exp  ->  bool_exp AND bool_exp .   (rule 237)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 238)


    $default	reduce using rule 237 (bool_exp)



state 446

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    prime_bool_exp  ->  strliteral NE ari_exp .   (rule 247)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 247 (prime_bool_exp)

    ari_operator	go to state 239



state 447

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    prime_bool_exp  ->  strliteral EQ ari_exp .   (rule 246)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 246 (prime_bool_exp)

    ari_operator	go to state 239



state 448

    statement  ->  AWAIT OPEN_PAR bool_exp CLOSE_PAR .   (rule 44)

    $default	reduce using rule 44 (statement)



state 449

    option_function_parameter_list  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 286)

    MUL 	shift, and go to state 603



state 450

    option_function_parameter_list  ->  ID . identifier inner_option_define_identifier   (rule 270)
    option_function_parameter_list  ->  ID . MUL identifier inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  ID . MUL MUL identifier inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  ID . identifier ARRAY inner_option_define_identifier   (rule 273)
    option_function_parameter_list  ->  ID . inner_option_define_identifier   (rule 277)
    option_function_parameter_list  ->  ID . MUL inner_option_define_identifier   (rule 278)
    option_function_parameter_list  ->  ID . MUL MUL inner_option_define_identifier   (rule 279)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 604
    ID  	shift, and go to state 141

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 605
    identifier	go to state 606



state 451

    option_function_parameter_list  ->  STRUCT_TYPE . identifier inner_option_define_identifier   (rule 266)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 267)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL identifier inner_option_define_identifier   (rule 268)
    option_function_parameter_list  ->  STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 269)
    option_function_parameter_list  ->  STRUCT_TYPE . inner_option_define_identifier   (rule 274)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL inner_option_define_identifier   (rule 275)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL inner_option_define_identifier   (rule 276)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 607
    ID  	shift, and go to state 141

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 608
    identifier	go to state 609



state 452

    option_function_parameter_list  ->  all_type_define . identifier inner_option_define_identifier   (rule 264)
    option_function_parameter_list  ->  all_type_define . inner_option_define_identifier   (rule 265)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY inner_option_define_identifier   (rule 280)
    option_function_parameter_list  ->  all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 282)
    option_function_parameter_list  ->  all_type_define . MUL identifier inner_option_define_identifier   (rule 283)
    option_function_parameter_list  ->  all_type_define . MUL inner_option_define_identifier   (rule 284)
    option_function_parameter_list  ->  all_type_define . MUL MUL identifier inner_option_define_identifier   (rule 285)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 610
    ID  	shift, and go to state 141

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 611
    identifier	go to state 612



state 453

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    CLOSE_PAR	shift, and go to state 613



state 454

    inner_option_define_identifier  ->  COMMA error .   (rule 304)

    $default	reduce using rule 304 (inner_option_define_identifier)



state 455

    inner_option_define_identifier  ->  COMMA OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 297)

    MUL 	shift, and go to state 614



state 456

    inner_option_define_identifier  ->  COMMA ID . identifier inner_option_define_identifier   (rule 290)
    inner_option_define_identifier  ->  COMMA ID . identifier ARRAY inner_option_define_identifier   (rule 293)

    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 615



state 457

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 292)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 294)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 616
    ID  	shift, and go to state 141

    identifier	go to state 617



state 458

    inner_option_define_identifier  ->  COMMA all_type_define . identifier inner_option_define_identifier   (rule 288)
    inner_option_define_identifier  ->  COMMA all_type_define . inner_option_define_identifier   (rule 289)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL inner_option_define_identifier   (rule 303)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 618
    ID  	shift, and go to state 141

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 619
    identifier	go to state 620



state 459

    statement  ->  EXIST identifier inner_option_define_identifier COLON . OPEN_BPAR statement CLOSE_BPAR   (rule 64)

    OPEN_BPAR	shift, and go to state 621



state 460

    option_frame_identifier  ->  COMMA . identifier option_frame_identifier   (rule 322)
    option_frame_identifier  ->  COMMA . error   (rule 324)

    error	shift, and go to state 622
    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 623



state 461

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier . CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    CLOSE_PAR	shift, and go to state 624



state 462

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 83)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 232)

    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 625
    ID  	shift, and go to state 190

    option_identifier_array_declaration	go to state 278
    identifier	go to state 192



state 463

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 115)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 626
    CHARDECLARATION	shift, and go to state 627
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 628
    OPEN_PAR	shift, and go to state 463
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 629
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEXT	shift, and go to state 179
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_left	go to state 464
    leftaddrshift	go to state 70
    array	go to state 158
    point_exp	go to state 159
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 162
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 164



state 464

    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 115)

    CLOSE_PAR	shift, and go to state 328



state 465

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 102)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 233)

    OPEN_PAR	shift, and go to state 140
    CLOSE_PAR	shift, and go to state 594
    MUL 	shift, and go to state 630
    ID  	shift, and go to state 190

    option_identifier_array_declaration	go to state 371
    identifier	go to state 192



state 466

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA . for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 334)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    $default	reduce using rule 339 (for_sta_condition)

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 631
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    for_sta_condition	go to state 632
    struct_member_exp	go to state 108



state 467

    for_statement  ->  FOR ari_exp TIMES DO . statement_bpar   (rule 333)

    error	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300

    statement_bpar	go to state 633



state 468

    bool_par  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 314)

    $default	reduce using rule 314 (bool_par)



state 469

    statement_bpar  ->  error CLOSE_BPAR .   (rule 313)

    $default	reduce using rule 313 (statement_bpar)



state 470

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement_bpar  ->  OPEN_BPAR statement . CLOSE_BPAR   (rule 312)

    CLOSE_BPAR	shift, and go to state 634
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196



state 471

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR . UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    UNTIL	shift, and go to state 635



state 472

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 136)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 137)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 194)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 412
    CHARDECLARATION	shift, and go to state 413
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 472
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 415
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 473
    rightaddrshift	go to state 308
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 474
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 475
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    strliteral	go to state 476
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 473

    ass_right  ->  OPEN_PAR ass_right . CLOSE_PAR   (rule 137)

    CLOSE_PAR	shift, and go to state 636



state 474

    ass_right  ->  ari_exp .   (rule 133)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 176)

    CLOSE_PAR	shift, and go to state 421
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    CLOSE_PAR	[reduce using rule 133 (ass_right)]
    $default	reduce using rule 133 (ass_right)

    ari_operator	go to state 239



state 475

    ass_right  ->  array_exp .   (rule 134)
    array_exp  ->  array_exp . CON array_exp   (rule 191)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 194)

    CLOSE_PAR	shift, and go to state 637
    CON 	shift, and go to state 488

    CLOSE_PAR	[reduce using rule 134 (ass_right)]
    $default	reduce using rule 134 (ass_right)



state 476

    ass_right  ->  strliteral .   (rule 135)
    ass_right  ->  OPEN_PAR strliteral . CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 136)

    CLOSE_PAR	shift, and go to state 638

    CLOSE_PAR	[reduce using rule 135 (ass_right)]
    $default	reduce using rule 135 (ass_right)



state 477

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 194)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 215
    CHARDECLARATION	shift, and go to state 216
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 218
    OPEN_PAR	shift, and go to state 639
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 220
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 640
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 478

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    option_struct_list_value  ->  OPEN_BPAR ari_exp . inner_option_list_value CLOSE_BPAR   (rule 198)

    COMMA	shift, and go to state 641
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 204 (inner_option_list_value)

    ari_operator	go to state 239
    inner_option_list_value	go to state 642



state 479

    array_exp  ->  array_exp . CON array_exp   (rule 191)
    option_struct_list_value  ->  OPEN_BPAR array_exp . inner_option_list_value CLOSE_BPAR   (rule 200)

    COMMA	shift, and go to state 641
    CON 	shift, and go to state 488

    $default	reduce using rule 204 (inner_option_list_value)

    inner_option_list_value	go to state 643



state 480

    option_struct_list_value  ->  OPEN_BPAR strliteral . inner_option_list_value CLOSE_BPAR   (rule 199)

    COMMA	shift, and go to state 641

    $default	reduce using rule 204 (inner_option_list_value)

    inner_option_list_value	go to state 644



state 481

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    option_list_value  ->  OPEN_MPAR ari_exp . inner_option_list_value CLOSE_MPAR   (rule 195)

    COMMA	shift, and go to state 641
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 204 (inner_option_list_value)

    ari_operator	go to state 239
    inner_option_list_value	go to state 645



state 482

    array_exp  ->  array_exp . CON array_exp   (rule 191)
    option_list_value  ->  OPEN_MPAR array_exp . inner_option_list_value CLOSE_MPAR   (rule 197)

    COMMA	shift, and go to state 641
    CON 	shift, and go to state 488

    $default	reduce using rule 204 (inner_option_list_value)

    inner_option_list_value	go to state 646



state 483

    option_list_value  ->  OPEN_MPAR strliteral . inner_option_list_value CLOSE_MPAR   (rule 196)

    COMMA	shift, and go to state 641

    $default	reduce using rule 204 (inner_option_list_value)

    inner_option_list_value	go to state 647



state 484

    rightaddrshift  ->  MUL OPEN_PAR . leftaddrshift CLOSE_PAR   (rule 139)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 154)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 155)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 648
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 345
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    type_define	go to state 346
    leftaddrshift	go to state 649
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 347
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    sign_type_define	go to state 348
    all_type_define	go to state 349
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 485

    option_output  ->  COMMA . ass_right option_output   (rule 354)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 650
    rightaddrshift	go to state 308
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 486

    output_statement  ->  DISPLAY OPEN_PAR ass_right CLOSE_PAR .   (rule 351)

    $default	reduce using rule 351 (output_statement)



state 487

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output . CLOSE_PAR   (rule 352)

    CLOSE_PAR	shift, and go to state 651



state 488

    array_exp  ->  array_exp CON . array_exp   (rule 191)

    OPEN_PAR	shift, and go to state 652
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305

    array_exp	go to state 653
    option_list_value	go to state 311
    option_struct_list_value	go to state 312



state 489

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 160)
    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 348)

    error	shift, and go to state 299
    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    OPEN_BPAR	shift, and go to state 300
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 569
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    statement_bpar	go to state 443
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 490

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 654
    MUL 	shift, and go to state 574



state 491

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 655
    MUL 	shift, and go to state 577



state 492

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 656
    MUL 	shift, and go to state 582



state 493

    type_define  ->  INTDECLARATION .   (rule 89)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 657

    MUL 	[reduce using rule 89 (type_define)]
    $default	reduce using rule 89 (type_define)



state 494

    type_define  ->  CHARDECLARATION .   (rule 91)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 658

    MUL 	[reduce using rule 91 (type_define)]
    $default	reduce using rule 91 (type_define)



state 495

    type_define  ->  INTDECLARATION .   (rule 89)
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)

    CLOSE_PAR	shift, and go to state 592

    $default	reduce using rule 89 (type_define)



state 496

    type_define  ->  CHARDECLARATION .   (rule 91)
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)

    CLOSE_PAR	shift, and go to state 593

    $default	reduce using rule 91 (type_define)



state 497

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 331)

    IMPLY	shift, and go to state 505

    $default	reduce using rule 331 (imply_pre)



state 498

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    point_exp  ->  MUL identifier .   (rule 150)

    CLOSE_PAR	shift, and go to state 659

    CLOSE_PAR	[reduce using rule 150 (point_exp)]
    $default	reduce using rule 150 (point_exp)



state 499

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 660
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 500

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)

    OPEN_PAR	shift, and go to state 661



state 501

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 331)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    STRUCT	shift, and go to state 214
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    INTDECLARATION	shift, and go to state 412
    CHARDECLARATION	shift, and go to state 413
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 501
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 415
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 154
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 265
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    prime_bool_exp	go to state 161
    identifier	go to state 227
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 502
    struct_member_exp	go to state 228



state 502

    imply_pre  ->  imply_pre . AND imply_pre   (rule 329)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 330)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 331)

    CLOSE_PAR	shift, and go to state 662
    OR  	shift, and go to state 334
    AND 	shift, and go to state 335



state 503

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 663
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 504

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . array option_struct_member_exp   (rule 375)

    OPEN_PAR	shift, and go to state 384
    ID  	shift, and go to state 174

    array	go to state 664
    identifier	go to state 665



state 505

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY . OPEN_MPAR statement CLOSE_MPAR   (rule 56)

    OPEN_MPAR	shift, and go to state 666



state 506

    imply_pre  ->  imply_pre . AND imply_pre   (rule 329)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 330)
    imply_pre  ->  imply_pre OR imply_pre .   (rule 330)

    AND 	shift, and go to state 335

    $default	reduce using rule 330 (imply_pre)



state 507

    imply_pre  ->  imply_pre . AND imply_pre   (rule 329)
    imply_pre  ->  imply_pre AND imply_pre .   (rule 329)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 330)


    $default	reduce using rule 329 (imply_pre)



state 508

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    option_projection  ->  COMMA statement . option_projection   (rule 326)

    COMMA	shift, and go to state 337
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196

    $default	reduce using rule 325 (option_projection)

    option_projection	go to state 667



state 509

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION . statement_bpar   (rule 59)

    error	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300

    statement_bpar	go to state 668



state 510

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR . PROJECTION statement_bpar   (rule 58)

    PROJECTION	shift, and go to state 669



state 511

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 60)

    CLOSE_PAR	shift, and go to state 670



state 512

    function  ->  EXTERN ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 71)

    CLOSE_PAR	shift, and go to state 671



state 513

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)

    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 672



state 514

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    identifier  ->  ID .   (rule 316)

    OPEN_MPAR	shift, and go to state 673

    $default	reduce using rule 316 (identifier)



state 515

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)

    CLOSE_PAR	shift, and go to state 500



state 516

    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 260)

    $default	reduce using rule 260 (sign_type_define)



state 517

    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 261)

    $default	reduce using rule 261 (sign_type_define)



state 518

    point_exp  ->  MUL OPEN_PAR ari_exp CLOSE_PAR .   (rule 155)

    $default	reduce using rule 155 (point_exp)



state 519

    point_exp  ->  MUL OPEN_PAR all_type_define MUL . CLOSE_PAR ari_exp   (rule 154)

    CLOSE_PAR	shift, and go to state 674



state 520

    type_define  ->  INTDECLARATION .   (rule 89)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    MUL 	shift, and go to state 675

    MUL 	[reduce using rule 89 (type_define)]
    $default	reduce using rule 89 (type_define)



state 521

    type_define  ->  CHARDECLARATION .   (rule 91)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    MUL 	shift, and go to state 676

    MUL 	[reduce using rule 91 (type_define)]
    $default	reduce using rule 91 (type_define)



state 522

    type_define  ->  FLOATDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    MUL 	shift, and go to state 677

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 523

    sign_declaration  ->  UNSIGNED . declaration   (rule 77)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 678
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 679
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 170
    STRUCT_TYPE	shift, and go to state 60

    declaration	go to state 171
    type_define	go to state 67



state 524

    statement  ->  NEXT OPEN_PAR statement CLOSE_PAR .   (rule 41)

    $default	reduce using rule 41 (statement)



state 525

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 115)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    INTDECLARATION	shift, and go to state 680
    CHARDECLARATION	shift, and go to state 681
    FLOATDECLARATION	shift, and go to state 682
    OPEN_PAR	shift, and go to state 525
    UNSIGNED	shift, and go to state 683
    ADDRESS	shift, and go to state 90
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 179
    ID  	shift, and go to state 174

    ass_left	go to state 464
    leftaddrshift	go to state 70
    array	go to state 526
    point_exp	go to state 353
    address_exp	go to state 426
    identifier	go to state 355
    struct_member_exp	go to state 356



state 526

    ass_left  ->  array .   (rule 113)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 146)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 202
    CLOSE_PAR	shift, and go to state 329
    IMPLY	shift, and go to state 204

    CLOSE_PAR	[reduce using rule 113 (ass_left)]
    $default	reduce using rule 113 (ass_left)



state 527

    statement  ->  LENGTH OPEN_PAR ari_exp CLOSE_PAR .   (rule 49)

    $default	reduce using rule 49 (statement)



state 528

    option_input  ->  COMMA . identifier option_input   (rule 361)
    option_input  ->  COMMA . array option_input   (rule 362)

    OPEN_PAR	shift, and go to state 384
    ID  	shift, and go to state 174

    array	go to state 684
    identifier	go to state 685



state 529

    input_statement  ->  REQUEST OPEN_PAR array CLOSE_PAR .   (rule 357)

    $default	reduce using rule 357 (input_statement)



state 530

    input_statement  ->  REQUEST OPEN_PAR array option_input . CLOSE_PAR   (rule 358)

    CLOSE_PAR	shift, and go to state 686



state 531

    input_statement  ->  REQUEST OPEN_PAR identifier CLOSE_PAR .   (rule 355)

    $default	reduce using rule 355 (input_statement)



state 532

    input_statement  ->  REQUEST OPEN_PAR identifier option_input . CLOSE_PAR   (rule 356)

    CLOSE_PAR	shift, and go to state 687



state 533

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 359)

    $default	reduce using rule 359 (input_statement)



state 534

    statement  ->  FINAL OPEN_PAR statement CLOSE_PAR .   (rule 54)

    $default	reduce using rule 54 (statement)



state 535

    statement  ->  KEEP OPEN_PAR statement CLOSE_PAR .   (rule 42)

    $default	reduce using rule 42 (statement)



state 536

    statement  ->  ALWAYS OPEN_PAR statement CLOSE_PAR .   (rule 43)

    $default	reduce using rule 43 (statement)



state 537

    option_function_identifier  ->  ADDRESS error .   (rule 308)

    $default	reduce using rule 308 (option_function_identifier)



state 538

    inner_option_function_identifier  ->  COMMA . ass_right inner_option_function_identifier   (rule 309)
    inner_option_function_identifier  ->  COMMA . error   (rule 311)

    error	shift, and go to state 688
    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    ass_right	go to state 689
    rightaddrshift	go to state 308
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 539

    option_function_identifier  ->  ass_right inner_option_function_identifier .   (rule 305)

    $default	reduce using rule 305 (option_function_identifier)



state 540

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 70)

    $default	reduce using rule 70 (function)



state 541

    option_ari_exp  ->  COMMA . ari_exp option_ari_exp   (rule 147)
    option_ari_exp  ->  COMMA . error   (rule 148)

    error	shift, and go to state 690
    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 691
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 542

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 140)

    CLOSE_MPAR	shift, and go to state 692



state 543

    option_identifier_array_declaration  ->  ID ARRAY ASS_P . array_exp inner_option_identifier_array_declaration   (rule 98)
    option_identifier_array_declaration  ->  ID ARRAY ASS_P . strliteral inner_option_identifier_array_declaration   (rule 99)

    OPEN_PAR	shift, and go to state 652
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    STRLITERAL	shift, and go to state 129

    array_exp	go to state 693
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    strliteral	go to state 694



state 544

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 96)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 101)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 695
    ari_operator	go to state 239



state 545

    inner_option_identifier_array_declaration  ->  COMMA error .   (rule 104)

    $default	reduce using rule 104 (inner_option_identifier_array_declaration)



state 546

    inner_option_identifier_array_declaration  ->  COMMA option_identifier_array_declaration .   (rule 103)

    $default	reduce using rule 103 (inner_option_identifier_array_declaration)



state 547

    option_identifier_array_declaration  ->  identifier ASS_P ass_right . inner_option_identifier_array_declaration   (rule 97)

    COMMA	shift, and go to state 374

    COMMA	[reduce using rule 105 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 105 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 696



state 548

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR .   (rule 73)

    $default	reduce using rule 73 (struct_define_statement)



state 549

    option_struct_declaration  ->  sign_declaration AND . option_struct_declaration   (rule 67)

    STRUCT	shift, and go to state 168
    UNION	shift, and go to state 169
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 170
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    STRUCT_TYPE	shift, and go to state 60

    option_struct_declaration	go to state 697
    sign_declaration	go to state 382
    declaration	go to state 66
    type_define	go to state 67



state 550

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)

    INTDECLARATION	shift, and go to state 596
    CHARDECLARATION	shift, and go to state 597
    FLOATDECLARATION	shift, and go to state 598
    OPEN_PAR	shift, and go to state 550
    UNSIGNED	shift, and go to state 599
    ID  	shift, and go to state 174

    array	go to state 551
    identifier	go to state 282



state 551

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 146)

    CLOSE_PAR	shift, and go to state 329



state 552

    option_struct_member_exp  ->  DOT . identifier option_struct_member_exp   (rule 381)
    option_struct_member_exp  ->  DOT . array option_struct_member_exp   (rule 382)
    option_struct_member_exp  ->  DOT . function   (rule 385)

    OPEN_PAR	shift, and go to state 384
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59

    function	go to state 698
    array	go to state 699
    identifier	go to state 700



state 553

    option_struct_member_exp  ->  IMPLY . identifier option_struct_member_exp   (rule 383)
    option_struct_member_exp  ->  IMPLY . array option_struct_member_exp   (rule 384)
    option_struct_member_exp  ->  IMPLY . function   (rule 386)

    OPEN_PAR	shift, and go to state 384
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 59

    function	go to state 701
    array	go to state 702
    identifier	go to state 703



state 554

    struct_member_exp  ->  array DOT array option_struct_member_exp .   (rule 367)

    $default	reduce using rule 367 (struct_member_exp)



state 555

    struct_member_exp  ->  array DOT identifier option_struct_member_exp .   (rule 364)

    $default	reduce using rule 364 (struct_member_exp)



state 556

    function  ->  array OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 72)

    $default	reduce using rule 72 (function)



state 557

    struct_member_exp  ->  array IMPLY array option_struct_member_exp .   (rule 374)

    $default	reduce using rule 374 (struct_member_exp)



state 558

    struct_member_exp  ->  array IMPLY identifier option_struct_member_exp .   (rule 370)

    $default	reduce using rule 370 (struct_member_exp)



state 559

    struct_member_exp  ->  point_exp DOT array option_struct_member_exp .   (rule 368)

    $default	reduce using rule 368 (struct_member_exp)



state 560

    struct_member_exp  ->  point_exp DOT identifier option_struct_member_exp .   (rule 365)

    $default	reduce using rule 365 (struct_member_exp)



state 561

    struct_member_exp  ->  point_exp IMPLY array option_struct_member_exp .   (rule 378)

    $default	reduce using rule 378 (struct_member_exp)



state 562

    struct_member_exp  ->  point_exp IMPLY identifier option_struct_member_exp .   (rule 372)

    $default	reduce using rule 372 (struct_member_exp)



state 563

    struct_member_exp  ->  identifier DOT array option_struct_member_exp .   (rule 366)

    $default	reduce using rule 366 (struct_member_exp)



state 564

    struct_member_exp  ->  identifier DOT identifier option_struct_member_exp .   (rule 363)

    $default	reduce using rule 363 (struct_member_exp)



state 565

    struct_member_exp  ->  identifier IMPLY array option_struct_member_exp .   (rule 373)

    $default	reduce using rule 373 (struct_member_exp)



state 566

    struct_member_exp  ->  identifier IMPLY identifier option_struct_member_exp .   (rule 369)

    $default	reduce using rule 369 (struct_member_exp)



state 567

    poptional_projection  ->  COMMA complexProposition poptional_projection .   (rule 28)

    $default	reduce using rule 28 (poptional_projection)



state 568

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION . OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    OPEN_BPAR	shift, and go to state 704



state 569

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    ari_exp  ->  IF bool_exp THEN ari_exp . option_exp_else_statement   (rule 160)

    ELSE	shift, and go to state 705
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ELSE	[reduce using rule 164 (option_exp_else_statement)]
    ADD 	[reduce using rule 164 (option_exp_else_statement)]
    SUB 	[reduce using rule 164 (option_exp_else_statement)]
    $default	reduce using rule 164 (option_exp_else_statement)

    option_exp_else_statement	go to state 706
    ari_operator	go to state 239



state 570

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 707
    MUL 	shift, and go to state 708



state 571

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 211)

    $default	reduce using rule 211 (type_cast)



state 572

    type_cast_alg_exp  ->  simple_ari_exp .   (rule 161)
    type_cast_alg_exp  ->  simple_ari_exp . ari_operator simple_ari_exp   (rule 162)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 166)

    INTER_OR	shift, and go to state 240
    CON 	shift, and go to state 241
    ADDRESS	shift, and go to state 242
    LST 	shift, and go to state 249
    RST 	shift, and go to state 250
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238
    MUL 	shift, and go to state 251
    DIV 	shift, and go to state 252
    MOD 	shift, and go to state 253

    INTER_OR	[reduce using rule 161 (type_cast_alg_exp)]
    CON 	[reduce using rule 161 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 161 (type_cast_alg_exp)]
    LST 	[reduce using rule 161 (type_cast_alg_exp)]
    RST 	[reduce using rule 161 (type_cast_alg_exp)]
    ADD 	[reduce using rule 161 (type_cast_alg_exp)]
    SUB 	[reduce using rule 161 (type_cast_alg_exp)]
    MUL 	[reduce using rule 161 (type_cast_alg_exp)]
    DIV 	[reduce using rule 161 (type_cast_alg_exp)]
    MOD 	[reduce using rule 161 (type_cast_alg_exp)]
    $default	reduce using rule 161 (type_cast_alg_exp)

    bi_operator	go to state 254
    ari_operator	go to state 709



state 573

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 218)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 711
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 574

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 712



state 575

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 213)

    $default	reduce using rule 213 (type_cast)



state 576

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 713
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 577

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 714



state 578

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 715
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 579

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 716



state 580

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 212)

    $default	reduce using rule 212 (type_cast)



state 581

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 717
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 582

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 718



state 583

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 719
    MUL 	shift, and go to state 574



state 584

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 720
    MUL 	shift, and go to state 577



state 585

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 721
    MUL 	shift, and go to state 582



state 586

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 657



state 587

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 722



state 588

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 216)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 723
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 589

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 724
    MUL 	shift, and go to state 725



state 590

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 217)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 726
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 591

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 727
    MUL 	shift, and go to state 728



state 592

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 214)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 729
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 593

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 215)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 730
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 594

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 231)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 731
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 595

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 732



state 596

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    MUL 	shift, and go to state 733



state 597

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    MUL 	shift, and go to state 734



state 598

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    MUL 	shift, and go to state 735



state 599

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    INTDECLARATION	shift, and go to state 736
    CHARDECLARATION	shift, and go to state 737



state 600

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR . case_par CLOSE_BPAR   (rule 342)

    CASE	shift, and go to state 738
    DEFAULT	shift, and go to state 739

    case_par	go to state 740



state 601

    option_else_statement  ->  ELSE . statement_bpar   (rule 349)

    error	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300

    statement_bpar	go to state 741



state 602

    if_statement  ->  IF bool_exp THEN statement_bpar option_else_statement .   (rule 348)

    $default	reduce using rule 348 (if_statement)



state 603

    option_function_parameter_list  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 286)

    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 742



state 604

    option_function_parameter_list  ->  ID MUL . identifier inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  ID MUL . MUL identifier inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  ID MUL . inner_option_define_identifier   (rule 278)
    option_function_parameter_list  ->  ID MUL . MUL inner_option_define_identifier   (rule 279)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 743
    ID  	shift, and go to state 141

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 744
    identifier	go to state 745



state 605

    option_function_parameter_list  ->  ID inner_option_define_identifier .   (rule 277)

    $default	reduce using rule 277 (option_function_parameter_list)



state 606

    option_function_parameter_list  ->  ID identifier . inner_option_define_identifier   (rule 270)
    option_function_parameter_list  ->  ID identifier . ARRAY inner_option_define_identifier   (rule 273)

    ARRAY	shift, and go to state 746
    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 747



state 607

    option_function_parameter_list  ->  STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 267)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL identifier inner_option_define_identifier   (rule 268)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . inner_option_define_identifier   (rule 275)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL inner_option_define_identifier   (rule 276)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 748
    ID  	shift, and go to state 141

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 749
    identifier	go to state 750



state 608

    option_function_parameter_list  ->  STRUCT_TYPE inner_option_define_identifier .   (rule 274)

    $default	reduce using rule 274 (option_function_parameter_list)



state 609

    option_function_parameter_list  ->  STRUCT_TYPE identifier . inner_option_define_identifier   (rule 266)
    option_function_parameter_list  ->  STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 269)

    ARRAY	shift, and go to state 751
    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 752



state 610

    option_function_parameter_list  ->  all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define MUL . identifier inner_option_define_identifier   (rule 283)
    option_function_parameter_list  ->  all_type_define MUL . inner_option_define_identifier   (rule 284)
    option_function_parameter_list  ->  all_type_define MUL . MUL identifier inner_option_define_identifier   (rule 285)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 140
    MUL 	shift, and go to state 753
    ID  	shift, and go to state 141

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 754
    identifier	go to state 755



state 611

    option_function_parameter_list  ->  all_type_define inner_option_define_identifier .   (rule 265)

    $default	reduce using rule 265 (option_function_parameter_list)



state 612

    option_function_parameter_list  ->  all_type_define identifier . inner_option_define_identifier   (rule 264)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY inner_option_define_identifier   (rule 280)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 282)

    ARRAY	shift, and go to state 756
    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 757



state 613

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    ASS_P	shift, and go to state 758



state 614

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 297)

    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 759



state 615

    inner_option_define_identifier  ->  COMMA ID identifier . inner_option_define_identifier   (rule 290)
    inner_option_define_identifier  ->  COMMA ID identifier . ARRAY inner_option_define_identifier   (rule 293)

    ARRAY	shift, and go to state 760
    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 761



state 616

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 292)

    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 762



state 617

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 294)

    ARRAY	shift, and go to state 763
    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 764



state 618

    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . inner_option_define_identifier   (rule 303)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 765
    identifier	go to state 766



state 619

    inner_option_define_identifier  ->  COMMA all_type_define inner_option_define_identifier .   (rule 289)

    $default	reduce using rule 289 (inner_option_define_identifier)



state 620

    inner_option_define_identifier  ->  COMMA all_type_define identifier . inner_option_define_identifier   (rule 288)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)

    ARRAY	shift, and go to state 767
    COMMA	shift, and go to state 283
    OPEN_MPAR	shift, and go to state 768

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 769



state 621

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR . statement CLOSE_BPAR   (rule 64)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 770
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 622

    option_frame_identifier  ->  COMMA error .   (rule 324)

    $default	reduce using rule 324 (option_frame_identifier)



state 623

    option_frame_identifier  ->  COMMA identifier . option_frame_identifier   (rule 322)

    COMMA	shift, and go to state 460

    $default	reduce using rule 323 (option_frame_identifier)

    option_frame_identifier	go to state 771



state 624

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR . AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    AND 	shift, and go to state 772



state 625

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 102)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 232)

    OPEN_PAR	shift, and go to state 140
    CLOSE_PAR	shift, and go to state 707
    MUL 	shift, and go to state 773
    ID  	shift, and go to state 190

    option_identifier_array_declaration	go to state 371
    identifier	go to state 192



state 626

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 405
    MUL 	shift, and go to state 490



state 627

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 491



state 628

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 410
    MUL 	shift, and go to state 492



state 629

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)

    INTDECLARATION	shift, and go to state 586
    CHARDECLARATION	shift, and go to state 774



state 630

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 102)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 233)

    OPEN_PAR	shift, and go to state 140
    CLOSE_PAR	shift, and go to state 732
    MUL 	shift, and go to state 189
    ID  	shift, and go to state 190

    option_identifier_array_declaration	go to state 371
    identifier	go to state 192



state 631

    bool_exp  ->  bool_exp . AND bool_exp   (rule 237)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 238)
    for_sta_condition  ->  bool_exp .   (rule 338)

    OR  	shift, and go to state 272
    AND 	shift, and go to state 273

    $default	reduce using rule 338 (for_sta_condition)



state 632

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition . COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 334)

    COMMA	shift, and go to state 775



state 633

    for_statement  ->  FOR ari_exp TIMES DO statement_bpar .   (rule 333)

    $default	reduce using rule 333 (for_statement)



state 634

    statement_bpar  ->  OPEN_BPAR statement CLOSE_BPAR .   (rule 312)

    $default	reduce using rule 312 (statement_bpar)



state 635

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL . OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    OPEN_PAR	shift, and go to state 776



state 636

    ass_right  ->  OPEN_PAR ass_right CLOSE_PAR .   (rule 137)

    $default	reduce using rule 137 (ass_right)



state 637

    array_exp  ->  OPEN_PAR array_exp CLOSE_PAR .   (rule 194)

    $default	reduce using rule 194 (array_exp)



state 638

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR . OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 136)

    OPEN_PAR	shift, and go to state 777



state 639

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 194)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 412
    CHARDECLARATION	shift, and go to state 413
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 639
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 415
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 640
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 640

    array_exp  ->  array_exp . CON array_exp   (rule 191)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 194)

    CLOSE_PAR	shift, and go to state 637
    CON 	shift, and go to state 488



state 641

    inner_option_list_value  ->  COMMA . ari_exp inner_option_list_value   (rule 201)
    inner_option_list_value  ->  COMMA . strliteral inner_option_list_value   (rule 202)
    inner_option_list_value  ->  COMMA . array_exp inner_option_list_value   (rule 203)
    inner_option_list_value  ->  COMMA . error   (rule 205)

    error	shift, and go to state 778
    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 477
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 779
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 780
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 781
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 642

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value . CLOSE_BPAR   (rule 198)

    CLOSE_BPAR	shift, and go to state 782



state 643

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value . CLOSE_BPAR   (rule 200)

    CLOSE_BPAR	shift, and go to state 783



state 644

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value . CLOSE_BPAR   (rule 199)

    CLOSE_BPAR	shift, and go to state 784



state 645

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value . CLOSE_MPAR   (rule 195)

    CLOSE_MPAR	shift, and go to state 785



state 646

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value . CLOSE_MPAR   (rule 197)

    CLOSE_MPAR	shift, and go to state 786



state 647

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value . CLOSE_MPAR   (rule 196)

    CLOSE_MPAR	shift, and go to state 787



state 648

    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 412
    CHARDECLARATION	shift, and go to state 413
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 788
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 415
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 649

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift . CLOSE_PAR   (rule 139)

    CLOSE_PAR	shift, and go to state 789



state 650

    option_output  ->  COMMA ass_right . option_output   (rule 354)

    COMMA	shift, and go to state 485

    $default	reduce using rule 353 (option_output)

    option_output	go to state 790



state 651

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR .   (rule 352)

    $default	reduce using rule 352 (output_statement)



state 652

    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 194)

    OPEN_PAR	shift, and go to state 652
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305

    array_exp	go to state 640
    option_list_value	go to state 311
    option_struct_list_value	go to state 312



state 653

    array_exp  ->  array_exp . CON array_exp   (rule 191)
    array_exp  ->  array_exp CON array_exp .   (rule 191)


    $default	reduce using rule 191 (array_exp)



state 654

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 218)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 791
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 792
    INTLITERAL	shift, and go to state 793
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 711
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 655

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 794
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 795
    INTLITERAL	shift, and go to state 796
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 713
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 656

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 797
    INTLITERAL	shift, and go to state 798
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 717
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 657

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 799
    MUL 	shift, and go to state 725



state 658

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 800
    MUL 	shift, and go to state 728



state 659

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)

    OPEN_PAR	shift, and go to state 801



state 660

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 140)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 802
    ari_operator	go to state 239



state 661

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 85)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 449
    UNSIGNED	shift, and go to state 345
    ID  	shift, and go to state 450
    STRUCT_TYPE	shift, and go to state 451

    $default	reduce using rule 287 (option_function_parameter_list)

    type_define	go to state 346
    sign_type_define	go to state 348
    all_type_define	go to state 452
    option_function_parameter_list	go to state 803



state 662

    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 331)

    $default	reduce using rule 331 (imply_pre)



state 663

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 153)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 804
    ari_operator	go to state 239



state 664

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array . option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 805



state 665

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier . option_struct_member_exp   (rule 371)

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 806



state 666

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR . statement CLOSE_MPAR   (rule 56)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 807
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 667

    option_projection  ->  COMMA statement option_projection .   (rule 326)

    $default	reduce using rule 326 (option_projection)



state 668

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar .   (rule 59)

    $default	reduce using rule 59 (statement)



state 669

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION . statement_bpar   (rule 58)

    error	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300

    statement_bpar	go to state 808



state 670

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 60)

    OPEN_BPAR	shift, and go to state 809



state 671

    function  ->  EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 71)

    $default	reduce using rule 71 (function)



state 672

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)

    CLOSE_PAR	shift, and go to state 659



state 673

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 810
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 674

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR . ari_exp   (rule 154)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 811
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 675

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    CLOSE_PAR	shift, and go to state 812



state 676

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    CLOSE_PAR	shift, and go to state 813



state 677

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    CLOSE_PAR	shift, and go to state 814



state 678

    type_define  ->  INTDECLARATION .   (rule 89)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    MUL 	shift, and go to state 815

    MUL 	[reduce using rule 89 (type_define)]
    $default	reduce using rule 89 (type_define)



state 679

    type_define  ->  CHARDECLARATION .   (rule 91)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    MUL 	shift, and go to state 816

    MUL 	[reduce using rule 91 (type_define)]
    $default	reduce using rule 91 (type_define)



state 680

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    MUL 	shift, and go to state 675



state 681

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    MUL 	shift, and go to state 676



state 682

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    MUL 	shift, and go to state 677



state 683

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    INTDECLARATION	shift, and go to state 736
    CHARDECLARATION	shift, and go to state 817



state 684

    option_input  ->  COMMA array . option_input   (rule 362)

    COMMA	shift, and go to state 528

    $default	reduce using rule 360 (option_input)

    option_input	go to state 818



state 685

    option_input  ->  COMMA identifier . option_input   (rule 361)

    COMMA	shift, and go to state 528

    $default	reduce using rule 360 (option_input)

    option_input	go to state 819



state 686

    input_statement  ->  REQUEST OPEN_PAR array option_input CLOSE_PAR .   (rule 358)

    $default	reduce using rule 358 (input_statement)



state 687

    input_statement  ->  REQUEST OPEN_PAR identifier option_input CLOSE_PAR .   (rule 356)

    $default	reduce using rule 356 (input_statement)



state 688

    inner_option_function_identifier  ->  COMMA error .   (rule 311)

    $default	reduce using rule 311 (inner_option_function_identifier)



state 689

    inner_option_function_identifier  ->  COMMA ass_right . inner_option_function_identifier   (rule 309)

    COMMA	shift, and go to state 538

    $default	reduce using rule 310 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 820



state 690

    option_ari_exp  ->  COMMA error .   (rule 148)

    $default	reduce using rule 148 (option_ari_exp)



state 691

    option_ari_exp  ->  COMMA ari_exp . option_ari_exp   (rule 147)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 821
    ari_operator	go to state 239



state 692

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 140)

    $default	reduce using rule 140 (array)



state 693

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp . inner_option_identifier_array_declaration   (rule 98)
    array_exp  ->  array_exp . CON array_exp   (rule 191)

    COMMA	shift, and go to state 374
    CON 	shift, and go to state 488

    COMMA	[reduce using rule 105 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 105 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 822



state 694

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral . inner_option_identifier_array_declaration   (rule 99)

    COMMA	shift, and go to state 374

    COMMA	[reduce using rule 105 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 105 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 823



state 695

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR inner_option_identifier_array_declaration   (rule 96)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 101)

    CLOSE_MPAR	shift, and go to state 824



state 696

    option_identifier_array_declaration  ->  identifier ASS_P ass_right inner_option_identifier_array_declaration .   (rule 97)

    $default	reduce using rule 97 (option_identifier_array_declaration)



state 697

    option_struct_declaration  ->  sign_declaration AND option_struct_declaration .   (rule 67)

    $default	reduce using rule 67 (option_struct_declaration)



state 698

    option_struct_member_exp  ->  DOT function .   (rule 385)

    $default	reduce using rule 385 (option_struct_member_exp)



state 699

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    option_struct_member_exp  ->  DOT array . option_struct_member_exp   (rule 382)

    DOT 	shift, and go to state 552
    OPEN_PAR	shift, and go to state 203
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 825



state 700

    option_struct_member_exp  ->  DOT identifier . option_struct_member_exp   (rule 381)

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 826



state 701

    option_struct_member_exp  ->  IMPLY function .   (rule 386)

    $default	reduce using rule 386 (option_struct_member_exp)



state 702

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    option_struct_member_exp  ->  IMPLY array . option_struct_member_exp   (rule 384)

    DOT 	shift, and go to state 552
    OPEN_PAR	shift, and go to state 203
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 827



state 703

    option_struct_member_exp  ->  IMPLY identifier . option_struct_member_exp   (rule 383)

    DOT 	shift, and go to state 552
    IMPLY	shift, and go to state 553

    DOT 	[reduce using rule 380 (option_struct_member_exp)]
    IMPLY	[reduce using rule 380 (option_struct_member_exp)]
    $default	reduce using rule 380 (option_struct_member_exp)

    option_struct_member_exp	go to state 828



state 704

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR . complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 829



state 705

    option_exp_else_statement  ->  ELSE . ari_exp   (rule 163)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 830
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 706

    ari_exp  ->  IF bool_exp THEN ari_exp option_exp_else_statement .   (rule 160)

    $default	reduce using rule 160 (ari_exp)



state 707

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 230)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 831
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 708

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 832



state 709

    type_cast_alg_exp  ->  simple_ari_exp ari_operator . simple_ari_exp   (rule 162)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    simple_ari_exp	go to state 833
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 710

    casted_element  ->  type_cast_alg_exp .   (rule 234)

    $default	reduce using rule 234 (casted_element)



state 711

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 218)

    $default	reduce using rule 218 (type_cast)



state 712

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 834
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 713

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 221)

    $default	reduce using rule 221 (type_cast)



state 714

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 835
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 715

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element .   (rule 223)

    $default	reduce using rule 223 (type_cast)



state 716

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 229)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 836
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 717

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element .   (rule 220)

    $default	reduce using rule 220 (type_cast)



state 718

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 837
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 719

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 218)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 792
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 711
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 720

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 795
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 713
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 721

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 797
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 717
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 722

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 838
    MUL 	shift, and go to state 728



state 723

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 216)

    $default	reduce using rule 216 (type_cast)



state 724

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 839
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 725

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 840



state 726

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 217)

    $default	reduce using rule 217 (type_cast)



state 727

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 841
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 728

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 842



state 729

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 214)

    $default	reduce using rule 214 (type_cast)



state 730

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 215)

    $default	reduce using rule 215 (type_cast)



state 731

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 231)

    $default	reduce using rule 231 (type_cast)



state 732

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 843
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 733

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    CLOSE_PAR	shift, and go to state 844



state 734

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    CLOSE_PAR	shift, and go to state 845



state 735

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    CLOSE_PAR	shift, and go to state 846



state 736

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    MUL 	shift, and go to state 815



state 737

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    MUL 	shift, and go to state 847



state 738

    case_par  ->  CASE . member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 343)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    member_in_exp	go to state 848
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 739

    case_par  ->  DEFAULT . COLON OPEN_PAR statement CLOSE_PAR   (rule 344)

    COLON	shift, and go to state 849



state 740

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par . CLOSE_BPAR   (rule 342)

    CLOSE_BPAR	shift, and go to state 850



state 741

    option_else_statement  ->  ELSE statement_bpar .   (rule 349)

    $default	reduce using rule 349 (option_else_statement)



state 742

    option_function_parameter_list  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 286)

    CLOSE_PAR	shift, and go to state 851



state 743

    option_function_parameter_list  ->  ID MUL MUL . identifier inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  ID MUL MUL . inner_option_define_identifier   (rule 279)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 852
    identifier	go to state 853



state 744

    option_function_parameter_list  ->  ID MUL inner_option_define_identifier .   (rule 278)

    $default	reduce using rule 278 (option_function_parameter_list)



state 745

    option_function_parameter_list  ->  ID MUL identifier . inner_option_define_identifier   (rule 271)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 854



state 746

    option_function_parameter_list  ->  ID identifier ARRAY . inner_option_define_identifier   (rule 273)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 855



state 747

    option_function_parameter_list  ->  ID identifier inner_option_define_identifier .   (rule 270)

    $default	reduce using rule 270 (option_function_parameter_list)



state 748

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . identifier inner_option_define_identifier   (rule 268)
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . inner_option_define_identifier   (rule 276)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 856
    identifier	go to state 857



state 749

    option_function_parameter_list  ->  STRUCT_TYPE MUL inner_option_define_identifier .   (rule 275)

    $default	reduce using rule 275 (option_function_parameter_list)



state 750

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 267)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 858



state 751

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 269)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 859



state 752

    option_function_parameter_list  ->  STRUCT_TYPE identifier inner_option_define_identifier .   (rule 266)

    $default	reduce using rule 266 (option_function_parameter_list)



state 753

    option_function_parameter_list  ->  all_type_define MUL MUL . identifier inner_option_define_identifier   (rule 285)

    OPEN_PAR	shift, and go to state 140
    ID  	shift, and go to state 141

    identifier	go to state 860



state 754

    option_function_parameter_list  ->  all_type_define MUL inner_option_define_identifier .   (rule 284)

    $default	reduce using rule 284 (option_function_parameter_list)



state 755

    option_function_parameter_list  ->  all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define MUL identifier . inner_option_define_identifier   (rule 283)

    ARRAY	shift, and go to state 861
    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 862



state 756

    option_function_parameter_list  ->  all_type_define identifier ARRAY . inner_option_define_identifier   (rule 280)
    option_function_parameter_list  ->  all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 282)

    COMMA	shift, and go to state 283
    OPEN_MPAR	shift, and go to state 863

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 864



state 757

    option_function_parameter_list  ->  all_type_define identifier inner_option_define_identifier .   (rule 264)

    $default	reduce using rule 264 (option_function_parameter_list)



state 758

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    OPEN_BPAR	shift, and go to state 865



state 759

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 297)

    CLOSE_PAR	shift, and go to state 866



state 760

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY . inner_option_define_identifier   (rule 293)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 867



state 761

    inner_option_define_identifier  ->  COMMA ID identifier inner_option_define_identifier .   (rule 290)

    $default	reduce using rule 290 (inner_option_define_identifier)



state 762

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 292)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 868



state 763

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 294)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 869



state 764

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier inner_option_define_identifier .   (rule 291)

    $default	reduce using rule 291 (inner_option_define_identifier)



state 765

    inner_option_define_identifier  ->  COMMA all_type_define MUL inner_option_define_identifier .   (rule 303)

    $default	reduce using rule 303 (inner_option_define_identifier)



state 766

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . inner_option_define_identifier   (rule 302)

    ARRAY	shift, and go to state 870
    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 871



state 767

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)

    COMMA	shift, and go to state 283
    OPEN_MPAR	shift, and go to state 872

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 873



state 768

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 874
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 769

    inner_option_define_identifier  ->  COMMA all_type_define identifier inner_option_define_identifier .   (rule 288)

    $default	reduce using rule 288 (inner_option_define_identifier)



state 770

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement . CLOSE_BPAR   (rule 64)

    CLOSE_BPAR	shift, and go to state 875
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196



state 771

    option_frame_identifier  ->  COMMA identifier option_frame_identifier .   (rule 322)

    $default	reduce using rule 322 (option_frame_identifier)



state 772

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND . OPEN_PAR statement CLOSE_PAR   (rule 57)

    OPEN_PAR	shift, and go to state 876



state 773

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 102)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 232)

    OPEN_PAR	shift, and go to state 140
    CLOSE_PAR	shift, and go to state 832
    MUL 	shift, and go to state 189
    ID  	shift, and go to state 190

    option_identifier_array_declaration	go to state 371
    identifier	go to state 192



state 774

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 658



state 775

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA . for_sta_control CLOSE_PAR statement_bpar   (rule 334)

    OPEN_PAR	shift, and go to state 357
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 179
    ID  	shift, and go to state 174

    $default	reduce using rule 341 (for_sta_control)

    ass_statement	go to state 877
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 181
    point_exp	go to state 72
    identifier	go to state 73
    for_sta_control	go to state 878
    struct_member_exp	go to state 81



state 776

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR . bool_exp CLOSE_PAR   (rule 45)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 124
    MY_TRUE	shift, and go to state 125
    MY_FALSE	shift, and go to state 126
    OPEN_PAR	shift, and go to state 127
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    NEGATION	shift, and go to state 128
    ID  	shift, and go to state 59
    STRLITERAL	shift, and go to state 129
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 130
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 879
    prime_bool_exp	go to state 132
    identifier	go to state 104
    strliteral	go to state 133
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 777

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR . type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 136)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45

    type_define	go to state 880



state 778

    inner_option_list_value  ->  COMMA error .   (rule 205)

    $default	reduce using rule 205 (inner_option_list_value)



state 779

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    inner_option_list_value  ->  COMMA ari_exp . inner_option_list_value   (rule 201)

    COMMA	shift, and go to state 641
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 204 (inner_option_list_value)

    ari_operator	go to state 239
    inner_option_list_value	go to state 881



state 780

    array_exp  ->  array_exp . CON array_exp   (rule 191)
    inner_option_list_value  ->  COMMA array_exp . inner_option_list_value   (rule 203)

    COMMA	shift, and go to state 641
    CON 	shift, and go to state 488

    $default	reduce using rule 204 (inner_option_list_value)

    inner_option_list_value	go to state 882



state 781

    inner_option_list_value  ->  COMMA strliteral . inner_option_list_value   (rule 202)

    COMMA	shift, and go to state 641

    $default	reduce using rule 204 (inner_option_list_value)

    inner_option_list_value	go to state 883



state 782

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR .   (rule 198)

    $default	reduce using rule 198 (option_struct_list_value)



state 783

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR .   (rule 200)

    $default	reduce using rule 200 (option_struct_list_value)



state 784

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR .   (rule 199)

    $default	reduce using rule 199 (option_struct_list_value)



state 785

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR .   (rule 195)

    $default	reduce using rule 195 (option_list_value)



state 786

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR .   (rule 197)

    $default	reduce using rule 197 (option_list_value)



state 787

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR .   (rule 196)

    $default	reduce using rule 196 (option_list_value)



state 788

    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 626
    CHARDECLARATION	shift, and go to state 627
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 628
    OPEN_PAR	shift, and go to state 219
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 629
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 789

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift CLOSE_PAR .   (rule 139)

    $default	reduce using rule 139 (rightaddrshift)



state 790

    option_output  ->  COMMA ass_right option_output .   (rule 354)

    $default	reduce using rule 354 (option_output)



state 791

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 215
    CHARDECLARATION	shift, and go to state 216
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 218
    OPEN_PAR	shift, and go to state 884
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 220
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 792

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    identifier  ->  ID .   (rule 316)

    OPEN_PAR	shift, and go to state 187
    CLOSE_PAR	shift, and go to state 885
    OPEN_MPAR	shift, and go to state 188

    CLOSE_PAR	[reduce using rule 316 (identifier)]
    $default	reduce using rule 316 (identifier)



state 793

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 886

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)



state 794

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 215
    CHARDECLARATION	shift, and go to state 216
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 218
    OPEN_PAR	shift, and go to state 887
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 220
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 795

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    identifier  ->  ID .   (rule 316)

    OPEN_PAR	shift, and go to state 187
    CLOSE_PAR	shift, and go to state 888
    OPEN_MPAR	shift, and go to state 188

    CLOSE_PAR	[reduce using rule 316 (identifier)]
    $default	reduce using rule 316 (identifier)



state 796

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 889

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)



state 797

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    identifier  ->  ID .   (rule 316)

    OPEN_PAR	shift, and go to state 187
    CLOSE_PAR	shift, and go to state 890
    OPEN_MPAR	shift, and go to state 188

    CLOSE_PAR	[reduce using rule 316 (identifier)]
    $default	reduce using rule 316 (identifier)



state 798

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 891

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)



state 799

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 892
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 839
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 800

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 893
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 894
    INTLITERAL	shift, and go to state 895
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 841
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 801

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 86)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 449
    UNSIGNED	shift, and go to state 345
    ID  	shift, and go to state 450
    STRUCT_TYPE	shift, and go to state 451

    $default	reduce using rule 287 (option_function_parameter_list)

    type_define	go to state 346
    sign_type_define	go to state 348
    all_type_define	go to state 452
    option_function_parameter_list	go to state 896



state 802

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 140)

    CLOSE_MPAR	shift, and go to state 897



state 803

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 85)

    CLOSE_PAR	shift, and go to state 898



state 804

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 153)

    CLOSE_MPAR	shift, and go to state 899



state 805

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp .   (rule 375)

    $default	reduce using rule 375 (struct_member_exp)



state 806

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp .   (rule 371)

    $default	reduce using rule 371 (struct_member_exp)



state 807

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement . CLOSE_MPAR   (rule 56)

    CLOSE_MPAR	shift, and go to state 900
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196



state 808

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar .   (rule 58)

    $default	reduce using rule 58 (statement)



state 809

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 60)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 901
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 810

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 902
    ari_operator	go to state 239



state 811

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp .   (rule 154)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ADD 	[reduce using rule 154 (point_exp)]
    SUB 	[reduce using rule 154 (point_exp)]
    $default	reduce using rule 154 (point_exp)

    ari_operator	go to state 239



state 812

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    OPEN_PAR	shift, and go to state 903
    ID  	shift, and go to state 904
    INTLITERAL	shift, and go to state 905



state 813

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    OPEN_PAR	shift, and go to state 906
    ID  	shift, and go to state 907
    INTLITERAL	shift, and go to state 908



state 814

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    ID  	shift, and go to state 909
    INTLITERAL	shift, and go to state 910



state 815

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    CLOSE_PAR	shift, and go to state 911



state 816

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    CLOSE_PAR	shift, and go to state 912



state 817

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    MUL 	shift, and go to state 816



state 818

    option_input  ->  COMMA array option_input .   (rule 362)

    $default	reduce using rule 362 (option_input)



state 819

    option_input  ->  COMMA identifier option_input .   (rule 361)

    $default	reduce using rule 361 (option_input)



state 820

    inner_option_function_identifier  ->  COMMA ass_right inner_option_function_identifier .   (rule 309)

    $default	reduce using rule 309 (inner_option_function_identifier)



state 821

    option_ari_exp  ->  COMMA ari_exp option_ari_exp .   (rule 147)

    $default	reduce using rule 147 (option_ari_exp)



state 822

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration .   (rule 98)

    $default	reduce using rule 98 (option_identifier_array_declaration)



state 823

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration .   (rule 99)

    $default	reduce using rule 99 (option_identifier_array_declaration)



state 824

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . inner_option_identifier_array_declaration   (rule 96)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P array_exp inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P strliteral inner_option_identifier_array_declaration   (rule 101)

    COMMA	shift, and go to state 374
    ASS_P	shift, and go to state 913

    COMMA	[reduce using rule 105 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 105 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 914



state 825

    option_struct_member_exp  ->  DOT array option_struct_member_exp .   (rule 382)

    $default	reduce using rule 382 (option_struct_member_exp)



state 826

    option_struct_member_exp  ->  DOT identifier option_struct_member_exp .   (rule 381)

    $default	reduce using rule 381 (option_struct_member_exp)



state 827

    option_struct_member_exp  ->  IMPLY array option_struct_member_exp .   (rule 384)

    $default	reduce using rule 384 (option_struct_member_exp)



state 828

    option_struct_member_exp  ->  IMPLY identifier option_struct_member_exp .   (rule 383)

    $default	reduce using rule 383 (option_struct_member_exp)



state 829

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition . CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CLOSE_BPAR	shift, and go to state 915
    CHOP	shift, and go to state 116
    IFF 	shift, and go to state 117
    PROPIMPLY	shift, and go to state 118
    OR  	shift, and go to state 119
    AND 	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121



state 830

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    option_exp_else_statement  ->  ELSE ari_exp .   (rule 163)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ADD 	[reduce using rule 163 (option_exp_else_statement)]
    SUB 	[reduce using rule 163 (option_exp_else_statement)]
    $default	reduce using rule 163 (option_exp_else_statement)

    ari_operator	go to state 239



state 831

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 230)

    $default	reduce using rule 230 (type_cast)



state 832

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 916
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 833

    type_cast_alg_exp  ->  simple_ari_exp ari_operator simple_ari_exp .   (rule 162)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 166)

    INTER_OR	shift, and go to state 240
    CON 	shift, and go to state 241
    ADDRESS	shift, and go to state 242
    LST 	shift, and go to state 249
    RST 	shift, and go to state 250
    MUL 	shift, and go to state 251
    DIV 	shift, and go to state 252
    MOD 	shift, and go to state 253

    INTER_OR	[reduce using rule 162 (type_cast_alg_exp)]
    CON 	[reduce using rule 162 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 162 (type_cast_alg_exp)]
    LST 	[reduce using rule 162 (type_cast_alg_exp)]
    RST 	[reduce using rule 162 (type_cast_alg_exp)]
    MUL 	[reduce using rule 162 (type_cast_alg_exp)]
    DIV 	[reduce using rule 162 (type_cast_alg_exp)]
    MOD 	[reduce using rule 162 (type_cast_alg_exp)]
    $default	reduce using rule 162 (type_cast_alg_exp)

    bi_operator	go to state 254



state 834

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 224)

    $default	reduce using rule 224 (type_cast)



state 835

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 227)

    $default	reduce using rule 227 (type_cast)



state 836

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 229)

    $default	reduce using rule 229 (type_cast)



state 837

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 226)

    $default	reduce using rule 226 (type_cast)



state 838

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 894
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 841
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 839

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 219)

    $default	reduce using rule 219 (type_cast)



state 840

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 917
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 841

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 222)

    $default	reduce using rule 222 (type_cast)



state 842

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 918
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 843

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 233)

    $default	reduce using rule 233 (type_cast)



state 844

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    ID  	shift, and go to state 904



state 845

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    ID  	shift, and go to state 907



state 846

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    ID  	shift, and go to state 909



state 847

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    CLOSE_PAR	shift, and go to state 919



state 848

    case_par  ->  CASE member_in_exp . COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 343)

    COLON	shift, and go to state 920



state 849

    case_par  ->  DEFAULT COLON . OPEN_PAR statement CLOSE_PAR   (rule 344)

    OPEN_PAR	shift, and go to state 921



state 850

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR .   (rule 342)

    $default	reduce using rule 342 (switch_statement)



state 851

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 286)

    OPEN_PAR	shift, and go to state 922



state 852

    option_function_parameter_list  ->  ID MUL MUL inner_option_define_identifier .   (rule 279)

    $default	reduce using rule 279 (option_function_parameter_list)



state 853

    option_function_parameter_list  ->  ID MUL MUL identifier . inner_option_define_identifier   (rule 272)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 923



state 854

    option_function_parameter_list  ->  ID MUL identifier inner_option_define_identifier .   (rule 271)

    $default	reduce using rule 271 (option_function_parameter_list)



state 855

    option_function_parameter_list  ->  ID identifier ARRAY inner_option_define_identifier .   (rule 273)

    $default	reduce using rule 273 (option_function_parameter_list)



state 856

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL inner_option_define_identifier .   (rule 276)

    $default	reduce using rule 276 (option_function_parameter_list)



state 857

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier . inner_option_define_identifier   (rule 268)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 924



state 858

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 267)

    $default	reduce using rule 267 (option_function_parameter_list)



state 859

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 269)

    $default	reduce using rule 269 (option_function_parameter_list)



state 860

    option_function_parameter_list  ->  all_type_define MUL MUL identifier . inner_option_define_identifier   (rule 285)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 925



state 861

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 281)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 926



state 862

    option_function_parameter_list  ->  all_type_define MUL identifier inner_option_define_identifier .   (rule 283)

    $default	reduce using rule 283 (option_function_parameter_list)



state 863

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 282)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 927
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 864

    option_function_parameter_list  ->  all_type_define identifier ARRAY inner_option_define_identifier .   (rule 280)

    $default	reduce using rule 280 (option_function_parameter_list)



state 865

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 61)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    $default	reduce using rule 69 (empty_statement)

    statement	go to state 928
    empty_statement	go to state 929
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 866

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 297)

    OPEN_PAR	shift, and go to state 930



state 867

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY inner_option_define_identifier .   (rule 293)

    $default	reduce using rule 293 (inner_option_define_identifier)



state 868

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 292)

    $default	reduce using rule 292 (inner_option_define_identifier)



state 869

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 294)

    $default	reduce using rule 294 (inner_option_define_identifier)



state 870

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 296)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 931



state 871

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier inner_option_define_identifier .   (rule 302)

    $default	reduce using rule 302 (inner_option_define_identifier)



state 872

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 932
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 873

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY inner_option_define_identifier .   (rule 295)

    $default	reduce using rule 295 (inner_option_define_identifier)



state 874

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)

    COMMA	shift, and go to state 933
    CLOSE_MPAR	shift, and go to state 934
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ari_operator	go to state 239



state 875

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR .   (rule 64)

    $default	reduce using rule 64 (statement)



state 876

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR . statement CLOSE_PAR   (rule 57)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 935
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 877

    for_sta_control  ->  ass_statement .   (rule 340)

    $default	reduce using rule 340 (for_sta_control)



state 878

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control . CLOSE_PAR statement_bpar   (rule 334)

    CLOSE_PAR	shift, and go to state 936



state 879

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp . CLOSE_PAR   (rule 45)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 237)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 238)

    CLOSE_PAR	shift, and go to state 937
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273



state 880

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 136)

    CLOSE_PAR	shift, and go to state 938



state 881

    inner_option_list_value  ->  COMMA ari_exp inner_option_list_value .   (rule 201)

    $default	reduce using rule 201 (inner_option_list_value)



state 882

    inner_option_list_value  ->  COMMA array_exp inner_option_list_value .   (rule 203)

    $default	reduce using rule 203 (inner_option_list_value)



state 883

    inner_option_list_value  ->  COMMA strliteral inner_option_list_value .   (rule 202)

    $default	reduce using rule 202 (inner_option_list_value)



state 884

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 939
    CHARDECLARATION	shift, and go to state 940
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 219
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 941
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 885

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    OPEN_MPAR	shift, and go to state 942



state 886

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    OPEN_MPAR	shift, and go to state 943



state 887

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 944
    CHARDECLARATION	shift, and go to state 945
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 219
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 946
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 888

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    OPEN_MPAR	shift, and go to state 947



state 889

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)

    OPEN_MPAR	shift, and go to state 948



state 890

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    OPEN_MPAR	shift, and go to state 949



state 891

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    OPEN_MPAR	shift, and go to state 950



state 892

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    identifier  ->  ID .   (rule 316)

    OPEN_PAR	shift, and go to state 187
    CLOSE_PAR	shift, and go to state 951
    OPEN_MPAR	shift, and go to state 188

    CLOSE_PAR	[reduce using rule 316 (identifier)]
    $default	reduce using rule 316 (identifier)



state 893

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 215
    CHARDECLARATION	shift, and go to state 216
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 218
    OPEN_PAR	shift, and go to state 952
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 220
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 894

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    identifier  ->  ID .   (rule 316)

    OPEN_PAR	shift, and go to state 187
    CLOSE_PAR	shift, and go to state 953
    OPEN_MPAR	shift, and go to state 188

    CLOSE_PAR	[reduce using rule 316 (identifier)]
    $default	reduce using rule 316 (identifier)



state 895

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 954

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)



state 896

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 86)

    CLOSE_PAR	shift, and go to state 955



state 897

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 140)

    CLOSE_PAR	shift, and go to state 956

    CLOSE_PAR	[reduce using rule 140 (array)]
    $default	reduce using rule 140 (array)



state 898

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 85)

    $default	reduce using rule 85 (declaration)



state 899

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 153)

    $default	reduce using rule 153 (point_exp)



state 900

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR .   (rule 56)

    $default	reduce using rule 56 (statement)



state 901

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 60)

    CLOSE_BPAR	shift, and go to state 957
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196



state 902

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)

    CLOSE_MPAR	shift, and go to state 958



state 903

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    OPEN_PAR	shift, and go to state 959



state 904

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    CLOSE_PAR	shift, and go to state 885



state 905

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    CLOSE_PAR	shift, and go to state 886



state 906

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    OPEN_PAR	shift, and go to state 960



state 907

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    CLOSE_PAR	shift, and go to state 888



state 908

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)

    CLOSE_PAR	shift, and go to state 889



state 909

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    CLOSE_PAR	shift, and go to state 890



state 910

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    CLOSE_PAR	shift, and go to state 891



state 911

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    ID  	shift, and go to state 961



state 912

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    OPEN_PAR	shift, and go to state 962
    ID  	shift, and go to state 963
    INTLITERAL	shift, and go to state 964



state 913

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . array_exp inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . strliteral inner_option_identifier_array_declaration   (rule 101)

    OPEN_PAR	shift, and go to state 652
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    STRLITERAL	shift, and go to state 129

    array_exp	go to state 965
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    strliteral	go to state 966



state 914

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration .   (rule 96)

    $default	reduce using rule 96 (option_identifier_array_declaration)



state 915

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR .   (rule 23)

    $default	reduce using rule 23 (complexProposition)



state 916

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 232)

    $default	reduce using rule 232 (type_cast)



state 917

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 225)

    $default	reduce using rule 225 (type_cast)



state 918

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 228)

    $default	reduce using rule 228 (type_cast)



state 919

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    ID  	shift, and go to state 963



state 920

    case_par  ->  CASE member_in_exp COLON . OPEN_PAR statement CLOSE_PAR init_case_par   (rule 343)

    OPEN_PAR	shift, and go to state 967



state 921

    case_par  ->  DEFAULT COLON OPEN_PAR . statement CLOSE_PAR   (rule 344)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 968
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 922

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 286)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 449
    UNSIGNED	shift, and go to state 345
    ID  	shift, and go to state 450
    STRUCT_TYPE	shift, and go to state 451

    $default	reduce using rule 287 (option_function_parameter_list)

    type_define	go to state 346
    sign_type_define	go to state 348
    all_type_define	go to state 452
    option_function_parameter_list	go to state 969



state 923

    option_function_parameter_list  ->  ID MUL MUL identifier inner_option_define_identifier .   (rule 272)

    $default	reduce using rule 272 (option_function_parameter_list)



state 924

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier inner_option_define_identifier .   (rule 268)

    $default	reduce using rule 268 (option_function_parameter_list)



state 925

    option_function_parameter_list  ->  all_type_define MUL MUL identifier inner_option_define_identifier .   (rule 285)

    $default	reduce using rule 285 (option_function_parameter_list)



state 926

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 281)

    $default	reduce using rule 281 (option_function_parameter_list)



state 927

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 282)

    CLOSE_MPAR	shift, and go to state 970
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ari_operator	go to state 239



state 928

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    empty_statement  ->  statement .   (rule 68)

    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196

    $default	reduce using rule 68 (empty_statement)



state 929

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 61)

    CLOSE_BPAR	shift, and go to state 971



state 930

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 297)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 449
    UNSIGNED	shift, and go to state 345
    ID  	shift, and go to state 450
    STRUCT_TYPE	shift, and go to state 451

    $default	reduce using rule 287 (option_function_parameter_list)

    type_define	go to state 346
    sign_type_define	go to state 348
    all_type_define	go to state 452
    option_function_parameter_list	go to state 972



state 931

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 296)

    $default	reduce using rule 296 (inner_option_define_identifier)



state 932

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 301)

    CLOSE_MPAR	shift, and go to state 973
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ari_operator	go to state 239



state 933

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 974
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 934

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 299)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 975



state 935

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement . CLOSE_PAR   (rule 57)

    CLOSE_PAR	shift, and go to state 976
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196



state 936

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR . statement_bpar   (rule 334)

    error	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300

    statement_bpar	go to state 977



state 937

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR .   (rule 45)

    $default	reduce using rule 45 (statement)



state 938

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 136)

    OPEN_PAR	shift, and go to state 978



state 939

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 405
    MUL 	shift, and go to state 979



state 940

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 980



state 941

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)

    INTDECLARATION	shift, and go to state 586
    CHARDECLARATION	shift, and go to state 981



state 942

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 982
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 943

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 983
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 944

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 405
    MUL 	shift, and go to state 984



state 945

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 985



state 946

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)

    INTDECLARATION	shift, and go to state 586
    CHARDECLARATION	shift, and go to state 986



state 947

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 987
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 948

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 118)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 988
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 949

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 989
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 950

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 990
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 951

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    OPEN_MPAR	shift, and go to state 991



state 952

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 210)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 317)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 379)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    STRUCT	shift, and go to state 214
    INTDECLARATION	shift, and go to state 992
    CHARDECLARATION	shift, and go to state 993
    VOIDDECLARATION	shift, and go to state 217
    FLOATDECLARATION	shift, and go to state 414
    OPEN_PAR	shift, and go to state 219
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 994
    SIGNED	shift, and go to state 221
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 222
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 953

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    OPEN_MPAR	shift, and go to state 995



state 954

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    OPEN_MPAR	shift, and go to state 996



state 955

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 86)

    $default	reduce using rule 86 (declaration)



state 956

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)

    OPEN_PAR	shift, and go to state 997



state 957

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 60)

    $default	reduce using rule 60 (statement)



state 958

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)

    CLOSE_PAR	shift, and go to state 956



state 959

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    INTDECLARATION	shift, and go to state 998
    CHARDECLARATION	shift, and go to state 999
    UNSIGNED	shift, and go to state 1000



state 960

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    INTDECLARATION	shift, and go to state 1001
    CHARDECLARATION	shift, and go to state 1002
    UNSIGNED	shift, and go to state 1003



state 961

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    CLOSE_PAR	shift, and go to state 951



state 962

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    OPEN_PAR	shift, and go to state 1004



state 963

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    CLOSE_PAR	shift, and go to state 953



state 964

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    CLOSE_PAR	shift, and go to state 954



state 965

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp . inner_option_identifier_array_declaration   (rule 100)
    array_exp  ->  array_exp . CON array_exp   (rule 191)

    COMMA	shift, and go to state 374
    CON 	shift, and go to state 488

    COMMA	[reduce using rule 105 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 105 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1005



state 966

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral . inner_option_identifier_array_declaration   (rule 101)

    COMMA	shift, and go to state 374

    COMMA	[reduce using rule 105 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 105 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1006



state 967

    case_par  ->  CASE member_in_exp COLON OPEN_PAR . statement CLOSE_PAR init_case_par   (rule 343)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    FUNCTION	shift, and go to state 48
    EXTERN	shift, and go to state 49
    UNSIGNED	shift, and go to state 50
    SIGNED	shift, and go to state 51
    MUL 	shift, and go to state 52
    NEXT	shift, and go to state 53
    LENGTH	shift, and go to state 54
    REQUEST	shift, and go to state 55
    FINAL	shift, and go to state 56
    KEEP	shift, and go to state 57
    ALWAYS	shift, and go to state 58
    ID  	shift, and go to state 59
    STRUCT_TYPE	shift, and go to state 60

    statement	go to state 1007
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    identifier	go to state 73
    while_statement	go to state 74
    for_statement	go to state 75
    extend_for_statement	go to state 76
    switch_statement	go to state 77
    if_statement	go to state 78
    output_statement	go to state 79
    input_statement	go to state 80
    struct_member_exp	go to state 81



state 968

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    case_par  ->  DEFAULT COLON OPEN_PAR statement . CLOSE_PAR   (rule 344)

    CLOSE_PAR	shift, and go to state 1008
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196



state 969

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 286)

    CLOSE_PAR	shift, and go to state 1009



state 970

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 282)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1010



state 971

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 61)

    $default	reduce using rule 61 (statement)



state 972

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 297)

    CLOSE_PAR	shift, and go to state 1011



state 973

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 301)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1012



state 974

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 300)

    CLOSE_MPAR	shift, and go to state 1013
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ari_operator	go to state 239



state 975

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 299)

    $default	reduce using rule 299 (inner_option_define_identifier)



state 976

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR .   (rule 57)

    $default	reduce using rule 57 (statement)



state 977

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar .   (rule 334)

    $default	reduce using rule 334 (extend_for_statement)



state 978

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR function   (rule 136)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 449
    UNSIGNED	shift, and go to state 345
    ID  	shift, and go to state 450
    STRUCT_TYPE	shift, and go to state 451

    $default	reduce using rule 287 (option_function_parameter_list)

    type_define	go to state 346
    sign_type_define	go to state 348
    all_type_define	go to state 452
    option_function_parameter_list	go to state 1014



state 979

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 1015
    MUL 	shift, and go to state 574



state 980

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 1016
    MUL 	shift, and go to state 577



state 981

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 1017



state 982

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 141)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1018
    ari_operator	go to state 239



state 983

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 120)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1019
    ari_operator	go to state 239



state 984

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 1020
    MUL 	shift, and go to state 574



state 985

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 1021
    MUL 	shift, and go to state 577



state 986

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 1022



state 987

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 144)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1023
    ari_operator	go to state 239



state 988

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 118)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1024
    ari_operator	go to state 239



state 989

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 143)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1025
    ari_operator	go to state 239



state 990

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 121)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1026
    ari_operator	go to state 239



state 991

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1027
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 992

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 405
    MUL 	shift, and go to state 1028



state 993

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 1029



state 994

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)

    INTDECLARATION	shift, and go to state 586
    CHARDECLARATION	shift, and go to state 1030



state 995

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1031
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 996

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1032
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 997

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 88)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 449
    UNSIGNED	shift, and go to state 345
    ID  	shift, and go to state 450
    STRUCT_TYPE	shift, and go to state 451

    $default	reduce using rule 287 (option_function_parameter_list)

    type_define	go to state 346
    sign_type_define	go to state 348
    all_type_define	go to state 452
    option_function_parameter_list	go to state 1033



state 998

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    MUL 	shift, and go to state 1034



state 999

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    MUL 	shift, and go to state 1035



state 1000

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CHARDECLARATION	shift, and go to state 1036



state 1001

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    MUL 	shift, and go to state 1037



state 1002

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    MUL 	shift, and go to state 1038



state 1003

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CHARDECLARATION	shift, and go to state 1039



state 1004

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    INTDECLARATION	shift, and go to state 1040
    CHARDECLARATION	shift, and go to state 1041
    UNSIGNED	shift, and go to state 1042



state 1005

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration .   (rule 100)

    $default	reduce using rule 100 (option_identifier_array_declaration)



state 1006

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration .   (rule 101)

    $default	reduce using rule 101 (option_identifier_array_declaration)



state 1007

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement . CLOSE_PAR init_case_par   (rule 343)

    CLOSE_PAR	shift, and go to state 1043
    CHOP	shift, and go to state 193
    OR  	shift, and go to state 194
    PARALLEL	shift, and go to state 195
    AND 	shift, and go to state 196



state 1008

    case_par  ->  DEFAULT COLON OPEN_PAR statement CLOSE_PAR .   (rule 344)

    $default	reduce using rule 344 (case_par)



state 1009

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 286)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1044



state 1010

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 282)

    $default	reduce using rule 282 (option_function_parameter_list)



state 1011

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 297)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1045



state 1012

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 301)

    $default	reduce using rule 301 (inner_option_define_identifier)



state 1013

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 300)

    COMMA	shift, and go to state 283

    $default	reduce using rule 298 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1046



state 1014

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR function   (rule 136)

    CLOSE_PAR	shift, and go to state 1047



state 1015

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 218)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 792
    INTLITERAL	shift, and go to state 1048
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 711
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1016

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 795
    INTLITERAL	shift, and go to state 1049
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 713
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1017

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 1050
    MUL 	shift, and go to state 728



state 1018

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 141)

    CLOSE_MPAR	shift, and go to state 1051



state 1019

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 120)

    CLOSE_MPAR	shift, and go to state 1052



state 1020

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 218)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 792
    INTLITERAL	shift, and go to state 1053
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 711
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1021

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 795
    INTLITERAL	shift, and go to state 1054
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 713
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1022

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 1055
    MUL 	shift, and go to state 728



state 1023

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 144)

    CLOSE_MPAR	shift, and go to state 1056



state 1024

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 118)

    CLOSE_MPAR	shift, and go to state 1057



state 1025

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 143)

    CLOSE_MPAR	shift, and go to state 1058



state 1026

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 121)

    CLOSE_MPAR	shift, and go to state 1059



state 1027

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 142)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1060
    ari_operator	go to state 239



state 1028

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 1061
    MUL 	shift, and go to state 574



state 1029

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 1062
    MUL 	shift, and go to state 577



state 1030

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 590
    MUL 	shift, and go to state 1063



state 1031

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 145)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1064
    ari_operator	go to state 239



state 1032

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 119)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1065
    ari_operator	go to state 239



state 1033

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 87)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P array_exp   (rule 88)

    CLOSE_PAR	shift, and go to state 1066



state 1034

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1067



state 1035

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1068



state 1036

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    MUL 	shift, and go to state 1069



state 1037

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1070



state 1038

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CLOSE_PAR	shift, and go to state 1071



state 1039

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    MUL 	shift, and go to state 1072



state 1040

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    MUL 	shift, and go to state 1073



state 1041

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    MUL 	shift, and go to state 1074



state 1042

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CHARDECLARATION	shift, and go to state 1075



state 1043

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR . init_case_par   (rule 343)

    CASE	shift, and go to state 738
    BREAK	shift, and go to state 1076
    DEFAULT	shift, and go to state 739

    $default	reduce using rule 347 (init_case_par)

    case_par	go to state 1077
    init_case_par	go to state 1078



state 1044

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 286)

    $default	reduce using rule 286 (option_function_parameter_list)



state 1045

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 297)

    $default	reduce using rule 297 (inner_option_define_identifier)



state 1046

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 300)

    $default	reduce using rule 300 (inner_option_define_identifier)



state 1047

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . function   (rule 136)

    OPEN_PAR	shift, and go to state 1079
    EXTERN	shift, and go to state 49
    ID  	shift, and go to state 1080

    function	go to state 1081
    array	go to state 1082



state 1048

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 1083

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)



state 1049

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 1084

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)



state 1050

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 894
    INTLITERAL	shift, and go to state 1085
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 841
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1051

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 141)

    $default	reduce using rule 141 (array)



state 1052

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 120)

    $default	reduce using rule 120 (leftaddrshift)



state 1053

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 1086

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)



state 1054

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 1087

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)



state 1055

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 894
    INTLITERAL	shift, and go to state 1088
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 841
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1056

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 144)

    $default	reduce using rule 144 (array)



state 1057

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 118)

    $default	reduce using rule 118 (leftaddrshift)



state 1058

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 143)

    $default	reduce using rule 143 (array)



state 1059

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 121)

    $default	reduce using rule 121 (leftaddrshift)



state 1060

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 142)

    CLOSE_MPAR	shift, and go to state 1089



state 1061

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 218)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 792
    INTLITERAL	shift, and go to state 1090
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 711
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1062

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 795
    INTLITERAL	shift, and go to state 1091
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 713
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1063

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 1092
    MUL 	shift, and go to state 728



state 1064

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 145)

    CLOSE_MPAR	shift, and go to state 1093



state 1065

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 119)

    CLOSE_MPAR	shift, and go to state 1094



state 1066

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 87)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P array_exp   (rule 88)

    ASS_P	shift, and go to state 1095

    $default	reduce using rule 87 (declaration)



state 1067

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    INTLITERAL	shift, and go to state 1096



state 1068

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    INTLITERAL	shift, and go to state 1097



state 1069

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1098



state 1070

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    INTLITERAL	shift, and go to state 1099



state 1071

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    INTLITERAL	shift, and go to state 1100



state 1072

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 1101



state 1073

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1102



state 1074

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1103



state 1075

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    MUL 	shift, and go to state 1104



state 1076

    init_case_par  ->  BREAK . case_par   (rule 345)

    CASE	shift, and go to state 738
    DEFAULT	shift, and go to state 739

    case_par	go to state 1105



state 1077

    init_case_par  ->  case_par .   (rule 346)

    $default	reduce using rule 346 (init_case_par)



state 1078

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par .   (rule 343)

    $default	reduce using rule 343 (case_par)



state 1079

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)

    OPEN_PAR	shift, and go to state 1106
    ID  	shift, and go to state 1107

    array	go to state 551



state 1080

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    OPEN_PAR	shift, and go to state 187
    OPEN_MPAR	shift, and go to state 188



state 1081

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function .   (rule 136)

    $default	reduce using rule 136 (ass_right)



state 1082

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)

    OPEN_PAR	shift, and go to state 203



state 1083

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1108



state 1084

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1109



state 1085

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 1110

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)



state 1086

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1111



state 1087

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CLOSE_PAR	shift, and go to state 1112



state 1088

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 1113

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)



state 1089

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 142)

    $default	reduce using rule 142 (array)



state 1090

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 1114

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)



state 1091

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 1115

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)



state 1092

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 894
    INTLITERAL	shift, and go to state 1116
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 572
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 841
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1093

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 145)

    $default	reduce using rule 145 (array)



state 1094

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 119)

    $default	reduce using rule 119 (leftaddrshift)



state 1095

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . array_exp   (rule 88)

    OPEN_PAR	shift, and go to state 652
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305

    array_exp	go to state 1117
    option_list_value	go to state 311
    option_struct_list_value	go to state 312



state 1096

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1083



state 1097

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1084



state 1098

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    INTLITERAL	shift, and go to state 1118



state 1099

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1086



state 1100

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CLOSE_PAR	shift, and go to state 1087



state 1101

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    INTLITERAL	shift, and go to state 1119



state 1102

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    INTLITERAL	shift, and go to state 1120



state 1103

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    INTLITERAL	shift, and go to state 1121



state 1104

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1122



state 1105

    init_case_par  ->  BREAK case_par .   (rule 345)

    $default	reduce using rule 345 (init_case_par)



state 1106

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 146)

    INTDECLARATION	shift, and go to state 596
    CHARDECLARATION	shift, and go to state 597
    FLOATDECLARATION	shift, and go to state 598
    OPEN_PAR	shift, and go to state 1106
    UNSIGNED	shift, and go to state 599
    ID  	shift, and go to state 1107

    array	go to state 551



state 1107

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    OPEN_MPAR	shift, and go to state 188



state 1108

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    OPEN_MPAR	shift, and go to state 1123



state 1109

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    OPEN_MPAR	shift, and go to state 1124



state 1110

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1125



state 1111

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    OPEN_MPAR	shift, and go to state 1126



state 1112

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    OPEN_MPAR	shift, and go to state 1127



state 1113

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 1128



state 1114

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1129



state 1115

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1130



state 1116

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    intliteral  ->  INTLITERAL .   (rule 319)

    CLOSE_PAR	shift, and go to state 1131

    CLOSE_PAR	[reduce using rule 319 (intliteral)]
    $default	reduce using rule 319 (intliteral)



state 1117

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp .   (rule 88)
    array_exp  ->  array_exp . CON array_exp   (rule 191)

    CON 	shift, and go to state 488

    $default	reduce using rule 88 (declaration)



state 1118

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1110



state 1119

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 1113



state 1120

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1114



state 1121

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1115



state 1122

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    INTLITERAL	shift, and go to state 1132



state 1123

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1133
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1124

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1134
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1125

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    OPEN_MPAR	shift, and go to state 1135



state 1126

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1136
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1127

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1137
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1128

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    OPEN_MPAR	shift, and go to state 1138



state 1129

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    OPEN_MPAR	shift, and go to state 1139



state 1130

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    OPEN_MPAR	shift, and go to state 1140



state 1131

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1141



state 1132

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1131



state 1133

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 130)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1142
    ari_operator	go to state 239



state 1134

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 128)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1143
    ari_operator	go to state 239



state 1135

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1144
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1136

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 124)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1145
    ari_operator	go to state 239



state 1137

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 122)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1146
    ari_operator	go to state 239



state 1138

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1147
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1139

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1148
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1140

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1149
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1141

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    OPEN_MPAR	shift, and go to state 1150



state 1142

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 130)

    CLOSE_MPAR	shift, and go to state 1151



state 1143

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 128)

    CLOSE_MPAR	shift, and go to state 1152



state 1144

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 129)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1153
    ari_operator	go to state 239



state 1145

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 124)

    CLOSE_MPAR	shift, and go to state 1154



state 1146

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 122)

    CLOSE_MPAR	shift, and go to state 1155



state 1147

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 123)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1156
    ari_operator	go to state 239



state 1148

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 127)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1157
    ari_operator	go to state 239



state 1149

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 125)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1158
    ari_operator	go to state 239



state 1150

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    IF  	shift, and go to state 87
    POINTERNULL	shift, and go to state 88
    OPEN_PAR	shift, and go to state 89
    EXTERN	shift, and go to state 49
    ADDRESS	shift, and go to state 90
    SUB 	shift, and go to state 91
    MUL 	shift, and go to state 52
    BNE 	shift, and go to state 92
    ID  	shift, and go to state 59
    INTLITERAL	shift, and go to state 93
    FLOATLITERAL	shift, and go to state 94
    CHARLITERAL	shift, and go to state 95

    function	go to state 96
    array	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1159
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1151

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 130)

    $default	reduce using rule 130 (leftaddrshift)



state 1152

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 128)

    $default	reduce using rule 128 (leftaddrshift)



state 1153

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 129)

    CLOSE_MPAR	shift, and go to state 1160



state 1154

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 124)

    $default	reduce using rule 124 (leftaddrshift)



state 1155

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 122)

    $default	reduce using rule 122 (leftaddrshift)



state 1156

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 123)

    CLOSE_MPAR	shift, and go to state 1161



state 1157

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 127)

    CLOSE_MPAR	shift, and go to state 1162



state 1158

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 125)

    CLOSE_MPAR	shift, and go to state 1163



state 1159

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 126)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 541
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1164
    ari_operator	go to state 239



state 1160

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 129)

    $default	reduce using rule 129 (leftaddrshift)



state 1161

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 123)

    $default	reduce using rule 123 (leftaddrshift)



state 1162

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 127)

    $default	reduce using rule 127 (leftaddrshift)



state 1163

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 125)

    $default	reduce using rule 125 (leftaddrshift)



state 1164

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 126)

    CLOSE_MPAR	shift, and go to state 1165



state 1165

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 126)

    $default	reduce using rule 126 (leftaddrshift)



state 1166

    $   	go to state 1167



state 1167

    $   	go to state 1168



state 1168

    $default	accept
