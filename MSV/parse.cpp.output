Useless nonterminals:

   option_array_declaration
   inner_option_array_declaration


Terminals which are not used:

   POINTERDECLARATION
   LISTDECLARATION
   FUNCTION
   OVER
   CYLINDER
   OVEREP
   NON_DETERMINED
   SEND
   RECEIVE
   PROCESS
   CHANNEL
   PUT
   GET
   ERROR_TOKEN
   STRFUNCHEAD
   STRFUNCTAIL
   STRFUNCCAT
   STRFUNCCMP
   STRFUNCCPY
   STRFUNCLEN
   PREFIX


Useless rules:

#112   option_array_declaration :	 ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#113   inner_option_array_declaration :	 COMMA ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#114   inner_option_array_declaration :	;
#115   inner_option_array_declaration :	 COMMA error;


Conflict in state 87 between rule 13 and token CHOP resolved as reduce.
Conflict in state 87 between rule 13 and token IFF resolved as reduce.
Conflict in state 87 between rule 13 and token PROPIMPLY resolved as reduce.
Conflict in state 87 between rule 13 and token OR resolved as reduce.
Conflict in state 87 between rule 13 and token AND resolved as reduce.
Conflict in state 87 between rule 13 and token CHOPSTAR resolved as an error.
Conflict in state 88 between rule 22 and token CHOP resolved as reduce.
Conflict in state 88 between rule 22 and token IFF resolved as reduce.
Conflict in state 88 between rule 22 and token PROPIMPLY resolved as reduce.
Conflict in state 88 between rule 22 and token OR resolved as reduce.
Conflict in state 88 between rule 22 and token AND resolved as reduce.
Conflict in state 88 between rule 22 and token CHOPSTAR resolved as an error.
Conflict in state 111 between rule 21 and token CHOP resolved as reduce.
Conflict in state 111 between rule 21 and token IFF resolved as reduce.
Conflict in state 111 between rule 21 and token PROPIMPLY resolved as reduce.
Conflict in state 111 between rule 21 and token OR resolved as reduce.
Conflict in state 111 between rule 21 and token AND resolved as reduce.
Conflict in state 111 between rule 21 and token CHOPSTAR resolved as an error.
Conflict in state 112 between rule 10 and token CHOP resolved as reduce.
Conflict in state 112 between rule 10 and token IFF resolved as reduce.
Conflict in state 112 between rule 10 and token PROPIMPLY resolved as reduce.
Conflict in state 112 between rule 10 and token OR resolved as reduce.
Conflict in state 112 between rule 10 and token AND resolved as reduce.
Conflict in state 112 between rule 10 and token CHOPSTAR resolved as an error.
Conflict in state 113 between rule 9 and token CHOP resolved as reduce.
Conflict in state 113 between rule 9 and token IFF resolved as reduce.
Conflict in state 113 between rule 9 and token PROPIMPLY resolved as reduce.
Conflict in state 113 between rule 9 and token OR resolved as reduce.
Conflict in state 113 between rule 9 and token AND resolved as reduce.
Conflict in state 113 between rule 9 and token CHOPSTAR resolved as an error.
Conflict in state 114 between rule 20 and token CHOP resolved as reduce.
Conflict in state 114 between rule 20 and token IFF resolved as reduce.
Conflict in state 114 between rule 20 and token PROPIMPLY resolved as reduce.
Conflict in state 114 between rule 20 and token OR resolved as reduce.
Conflict in state 114 between rule 20 and token AND resolved as reduce.
Conflict in state 114 between rule 20 and token CHOPSTAR resolved as an error.
Conflict in state 115 between rule 12 and token CHOP resolved as reduce.
Conflict in state 115 between rule 12 and token IFF resolved as reduce.
Conflict in state 115 between rule 12 and token PROPIMPLY resolved as reduce.
Conflict in state 115 between rule 12 and token OR resolved as reduce.
Conflict in state 115 between rule 12 and token AND resolved as reduce.
Conflict in state 115 between rule 12 and token CHOPSTAR resolved as an error.
Conflict in state 116 between rule 11 and token CHOP resolved as reduce.
Conflict in state 116 between rule 11 and token IFF resolved as reduce.
Conflict in state 116 between rule 11 and token PROPIMPLY resolved as reduce.
Conflict in state 116 between rule 11 and token OR resolved as reduce.
Conflict in state 116 between rule 11 and token AND resolved as reduce.
Conflict in state 116 between rule 11 and token CHOPSTAR resolved as an error.
Conflict in state 236 between rule 213 and token IMPLY resolved as reduce.
Conflict in state 239 between rule 212 and token IMPLY resolved as reduce.
Conflict in state 262 between rule 8 and token CHOP resolved as reduce.
Conflict in state 262 between rule 8 and token IFF resolved as shift.
Conflict in state 262 between rule 8 and token PROPIMPLY resolved as shift.
Conflict in state 262 between rule 8 and token OR resolved as shift.
Conflict in state 262 between rule 8 and token AND resolved as shift.
Conflict in state 262 between rule 8 and token CHOPSTAR resolved as shift.
Conflict in state 263 between rule 6 and token CHOP resolved as reduce.
Conflict in state 263 between rule 6 and token IFF resolved as reduce.
Conflict in state 263 between rule 6 and token PROPIMPLY resolved as reduce.
Conflict in state 263 between rule 6 and token OR resolved as shift.
Conflict in state 263 between rule 6 and token AND resolved as shift.
Conflict in state 263 between rule 6 and token CHOPSTAR resolved as shift.
Conflict in state 264 between rule 7 and token CHOP resolved as reduce.
Conflict in state 264 between rule 7 and token IFF resolved as reduce.
Conflict in state 264 between rule 7 and token PROPIMPLY resolved as reduce.
Conflict in state 264 between rule 7 and token OR resolved as shift.
Conflict in state 264 between rule 7 and token AND resolved as shift.
Conflict in state 264 between rule 7 and token CHOPSTAR resolved as shift.
Conflict in state 265 between rule 5 and token CHOP resolved as reduce.
Conflict in state 265 between rule 5 and token IFF resolved as reduce.
Conflict in state 265 between rule 5 and token PROPIMPLY resolved as reduce.
Conflict in state 265 between rule 5 and token OR resolved as reduce.
Conflict in state 265 between rule 5 and token AND resolved as shift.
Conflict in state 265 between rule 5 and token CHOPSTAR resolved as shift.
Conflict in state 266 between rule 4 and token CHOP resolved as reduce.
Conflict in state 266 between rule 4 and token IFF resolved as reduce.
Conflict in state 266 between rule 4 and token PROPIMPLY resolved as reduce.
Conflict in state 266 between rule 4 and token OR resolved as reduce.
Conflict in state 266 between rule 4 and token AND resolved as reduce.
Conflict in state 266 between rule 4 and token CHOPSTAR resolved as shift.
Conflict in state 273 between rule 242 and token OR resolved as reduce.
Conflict in state 273 between rule 242 and token AND resolved as reduce.
Conflict in state 334 between rule 337 and token OR resolved as reduce.
Conflict in state 334 between rule 337 and token AND resolved as reduce.
Conflict in state 384 between rule 32 and token CHOP resolved as reduce.
Conflict in state 384 between rule 32 and token OR resolved as shift.
Conflict in state 384 between rule 32 and token PARALLEL resolved as shift.
Conflict in state 384 between rule 32 and token AND resolved as shift.
Conflict in state 385 between rule 31 and token CHOP resolved as reduce.
Conflict in state 385 between rule 31 and token OR resolved as reduce.
Conflict in state 385 between rule 31 and token PARALLEL resolved as reduce.
Conflict in state 385 between rule 31 and token AND resolved as shift.
Conflict in state 386 between rule 55 and token CHOP resolved as reduce.
Conflict in state 386 between rule 55 and token OR resolved as reduce.
Conflict in state 386 between rule 55 and token PARALLEL resolved as reduce.
Conflict in state 386 between rule 55 and token AND resolved as shift.
Conflict in state 387 between rule 30 and token CHOP resolved as reduce.
Conflict in state 387 between rule 30 and token OR resolved as reduce.
Conflict in state 387 between rule 30 and token PARALLEL resolved as reduce.
Conflict in state 387 between rule 30 and token AND resolved as reduce.
Conflict in state 455 between rule 244 and token OR resolved as reduce.
Conflict in state 455 between rule 244 and token AND resolved as shift.
Conflict in state 456 between rule 243 and token OR resolved as reduce.
Conflict in state 456 between rule 243 and token AND resolved as reduce.
Conflict in state 521 between rule 339 and token OR resolved as reduce.
Conflict in state 521 between rule 339 and token AND resolved as shift.
Conflict in state 522 between rule 338 and token OR resolved as reduce.
Conflict in state 522 between rule 338 and token AND resolved as reduce.
Conflict in state 674 between rule 197 and token CON resolved as reduce.
State 67 contains 2 shift/reduce conflicts.
State 99 contains 2 shift/reduce conflicts.
State 100 contains 2 shift/reduce conflicts.
State 102 contains 14 shift/reduce conflicts.
State 106 contains 2 shift/reduce conflicts.
State 126 contains 2 shift/reduce conflicts.
State 158 contains 3 reduce/reduce conflicts.
State 160 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 161 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 162 contains 1 shift/reduce conflict.
State 164 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 166 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 167 contains 1 shift/reduce conflict.
State 171 contains 2 reduce/reduce conflicts.
State 172 contains 2 reduce/reduce conflicts.
State 196 contains 1 shift/reduce conflict.
State 229 contains 1 shift/reduce conflict.
State 230 contains 1 shift/reduce conflict.
State 232 contains 1 shift/reduce conflict.
State 233 contains 1 shift/reduce conflict.
State 234 contains 1 shift/reduce conflict.
State 236 contains 1 shift/reduce conflict.
State 239 contains 1 shift/reduce conflict.
State 271 contains 1 shift/reduce conflict.
State 274 contains 2 shift/reduce conflicts.
State 275 contains 2 shift/reduce conflicts.
State 295 contains 1 shift/reduce conflict.
State 296 contains 1 shift/reduce conflict.
State 297 contains 1 shift/reduce conflict.
State 298 contains 1 shift/reduce conflict.
State 315 contains 1 shift/reduce conflict.
State 324 contains 1 shift/reduce conflict.
State 325 contains 1 shift/reduce conflict.
State 326 contains 1 shift/reduce conflict.
State 332 contains 1 shift/reduce conflict.
State 359 contains 1 shift/reduce conflict.
State 360 contains 1 shift/reduce conflict.
State 362 contains 1 shift/reduce conflict.
State 363 contains 1 shift/reduce conflict.
State 367 contains 1 shift/reduce conflict.
State 368 contains 1 shift/reduce conflict.
State 393 contains 2 shift/reduce conflicts.
State 394 contains 2 shift/reduce conflicts.
State 396 contains 2 shift/reduce conflicts.
State 397 contains 2 shift/reduce conflicts.
State 398 contains 2 shift/reduce conflicts.
State 399 contains 2 shift/reduce conflicts.
State 400 contains 2 shift/reduce conflicts.
State 401 contains 2 shift/reduce conflicts.
State 406 contains 2 shift/reduce conflicts.
State 407 contains 2 shift/reduce conflicts.
State 409 contains 2 shift/reduce conflicts.
State 410 contains 2 shift/reduce conflicts.
State 433 contains 1 shift/reduce conflict.
State 440 contains 8 shift/reduce conflicts.
State 442 contains 2 shift/reduce conflicts.
State 488 contains 1 shift/reduce conflict.
State 489 contains 1 shift/reduce conflict.
State 490 contains 1 shift/reduce conflict.
State 508 contains 1 shift/reduce conflict and 2 reduce/reduce conflicts.
State 509 contains 1 shift/reduce conflict and 2 reduce/reduce conflicts.
State 513 contains 1 shift/reduce conflict.
State 534 contains 1 shift/reduce conflict.
State 535 contains 1 shift/reduce conflict.
State 536 contains 1 shift/reduce conflict.
State 540 contains 1 shift/reduce conflict.
State 562 contains 1 shift/reduce conflict.
State 587 contains 3 shift/reduce conflicts.
State 590 contains 10 shift/reduce conflicts.
State 686 contains 2 shift/reduce conflicts.
State 687 contains 2 shift/reduce conflicts.
State 699 contains 1 shift/reduce conflict and 2 reduce/reduce conflicts.
State 700 contains 1 shift/reduce conflict and 2 reduce/reduce conflicts.
State 716 contains 1 shift/reduce conflict.
State 717 contains 1 shift/reduce conflict.
State 722 contains 2 shift/reduce conflicts.
State 723 contains 2 shift/reduce conflicts.
State 725 contains 2 shift/reduce conflicts.
State 726 contains 2 shift/reduce conflicts.
State 823 contains 1 shift/reduce conflict.
State 824 contains 1 shift/reduce conflict.
State 826 contains 1 shift/reduce conflict.
State 827 contains 1 shift/reduce conflict.
State 828 contains 1 shift/reduce conflict.
State 829 contains 1 shift/reduce conflict.
State 841 contains 2 shift/reduce conflicts.
State 850 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 856 contains 1 shift/reduce conflict.
State 865 contains 2 shift/reduce conflicts.
State 868 contains 8 shift/reduce conflicts.
State 931 contains 1 shift/reduce conflict.
State 933 contains 1 shift/reduce conflict.
State 934 contains 1 shift/reduce conflict.
State 936 contains 1 shift/reduce conflict.
State 1012 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 1013 contains 1 shift/reduce conflict.
State 1014 contains 1 shift/reduce conflict.
State 1113 contains 1 shift/reduce conflict.
State 1114 contains 1 shift/reduce conflict.
State 1118 contains 1 shift/reduce conflict.
State 1119 contains 1 shift/reduce conflict.
State 1150 contains 1 shift/reduce conflict.
State 1153 contains 1 shift/reduce conflict.
State 1155 contains 1 shift/reduce conflict.
State 1156 contains 1 shift/reduce conflict.
State 1181 contains 1 shift/reduce conflict.

Grammar
rule 1    program -> gComplexProposition statement
rule 2    gComplexProposition -> PBEGIN complexProposition PEND
rule 3    gComplexProposition ->		/* empty */
rule 4    complexProposition -> complexProposition AND complexProposition
rule 5    complexProposition -> complexProposition OR complexProposition
rule 6    complexProposition -> complexProposition IFF complexProposition
rule 7    complexProposition -> complexProposition PROPIMPLY complexProposition
rule 8    complexProposition -> complexProposition CHOP complexProposition
rule 9    complexProposition -> ALWAYS complexProposition
rule 10   complexProposition -> KEEP complexProposition
rule 11   complexProposition -> SOMETIMES complexProposition
rule 12   complexProposition -> W_NEXT complexProposition
rule 13   complexProposition -> NEXT complexProposition
rule 14   complexProposition -> SKIP
rule 15   complexProposition -> MY_TRUE
rule 16   complexProposition -> MY_FALSE
rule 17   complexProposition -> LENGTH ari_exp
rule 18   complexProposition -> EMPTY
rule 19   complexProposition -> MORE
rule 20   complexProposition -> HALT complexProposition
rule 21   complexProposition -> FINAL complexProposition
rule 22   complexProposition -> NEGATION complexProposition
rule 23   complexProposition -> OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR
rule 24   complexProposition -> ID
rule 25   complexProposition -> DEFINE ID COLON prime_bool_exp
rule 26   complexProposition -> complexProposition CHOPSTAR
rule 27   complexProposition -> OPEN_PAR complexProposition CLOSE_PAR
rule 28   poptional_projection -> COMMA complexProposition poptional_projection
rule 29   poptional_projection ->		/* empty */
rule 30   statement -> statement AND statement
rule 31   statement -> statement OR statement
rule 32   statement -> statement CHOP statement
rule 33   statement -> ass_statement
rule 34   statement -> sign_declaration
rule 35   statement -> switch_statement
rule 36   statement -> RETURN ID
rule 37   statement -> if_statement
rule 38   statement -> while_statement
rule 39   statement -> for_statement
rule 40   statement -> extend_for_statement
rule 41   statement -> NEXT OPEN_PAR statement CLOSE_PAR
rule 42   statement -> KEEP OPEN_PAR statement CLOSE_PAR
rule 43   statement -> ALWAYS OPEN_PAR statement CLOSE_PAR
rule 44   statement -> AWAIT OPEN_PAR bool_exp CLOSE_PAR
rule 45   statement -> REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR
rule 46   statement -> SKIP
rule 47   statement -> EMPTY
rule 48   statement -> MORE
rule 49   statement -> LENGTH OPEN_PAR ari_exp CLOSE_PAR
rule 50   statement -> input_statement
rule 51   statement -> output_statement
rule 52   statement -> TRUE
rule 53   statement -> FALSE
rule 54   statement -> FINAL OPEN_PAR statement CLOSE_PAR
rule 55   statement -> statement PARALLEL statement
rule 56   statement -> OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR
rule 57   statement -> FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR
rule 58   statement -> OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar
rule 59   statement -> OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar
rule 60   statement -> DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR
rule 61   statement -> struct_define_statement
rule 62   statement -> function_define
rule 63   statement -> function
rule 64   statement -> EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR
rule 65   statement -> OPEN_PAR statement CLOSE_PAR
rule 66   option_struct_declaration -> sign_declaration
rule 67   option_struct_declaration -> sign_declaration AND option_struct_declaration
rule 68   empty_statement -> statement
rule 69   empty_statement ->		/* empty */
rule 70   function_define -> all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 71   function_define -> all_type_define MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 72   function_define -> all_type_define MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 73   function_define -> STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 74   function_define -> STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 75   function_define -> STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 76   function -> ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 77   function -> EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 78   function -> array OPEN_PAR option_function_identifier CLOSE_PAR
rule 79   struct_define_statement -> struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR
rule 80   struct_identifier -> STRUCT ID
rule 81   struct_identifier -> UNION ID
rule 82   sign_declaration -> SIGNED declaration
rule 83   sign_declaration -> UNSIGNED declaration
rule 84   sign_declaration -> declaration
rule 85   declaration -> type_define option_identifier_array_declaration
rule 86   declaration -> STRUCT_TYPE option_identifier_array_declaration
rule 87   declaration -> STRUCT ID option_identifier_array_declaration
rule 88   declaration -> UNION ID option_identifier_array_declaration
rule 89   declaration -> STRUCT STRUCT_TYPE option_identifier_array_declaration
rule 90   declaration -> UNION STRUCT_TYPE option_identifier_array_declaration
rule 91   declaration -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 92   declaration -> OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 93   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 94   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp
rule 95   type_define -> INTDECLARATION
rule 96   type_define -> FLOATDECLARATION
rule 97   type_define -> CHARDECLARATION
rule 98   type_define -> STRDECLARATION
rule 99   type_define -> VOIDDECLARATION
rule 100  type_define -> FILEDECLARATION
rule 101  option_identifier_array_declaration -> identifier inner_option_identifier_array_declaration
rule 102  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration
rule 103  option_identifier_array_declaration -> identifier ASS_P ass_right inner_option_identifier_array_declaration
rule 104  option_identifier_array_declaration -> ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration
rule 105  option_identifier_array_declaration -> ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration
rule 106  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration
rule 107  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration
rule 108  option_identifier_array_declaration -> MUL option_identifier_array_declaration
rule 109  inner_option_identifier_array_declaration -> COMMA option_identifier_array_declaration
rule 110  inner_option_identifier_array_declaration -> COMMA error
rule 111  inner_option_identifier_array_declaration ->		/* empty */
rule 116  ass_statement -> ass_left assign_operator ass_right
rule 117  ass_left -> identifier
rule 118  ass_left -> struct_member_exp
rule 119  ass_left -> array
rule 120  ass_left -> point_exp
rule 121  ass_left -> OPEN_PAR ass_left CLOSE_PAR
rule 122  ass_left -> NEXT ass_left
rule 123  ass_left -> leftaddrshift
rule 124  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 125  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 126  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 127  leftaddrshift -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 128  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 129  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 130  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 131  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 132  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 133  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 134  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 135  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 136  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 137  assign_operator -> ASS_P
rule 138  assign_operator -> ASS_N
rule 139  ass_right -> ari_exp
rule 140  ass_right -> array_exp
rule 141  ass_right -> strliteral
rule 142  ass_right -> OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function
rule 143  ass_right -> OPEN_PAR ass_right CLOSE_PAR
rule 144  ass_right -> rightaddrshift
rule 145  rightaddrshift -> MUL OPEN_PAR leftaddrshift CLOSE_PAR
rule 146  array -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 147  array -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 148  array -> OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 149  array -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 150  array -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 151  array -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 152  array -> OPEN_PAR array CLOSE_PAR
rule 153  option_ari_exp -> COMMA ari_exp option_ari_exp
rule 154  option_ari_exp -> COMMA error
rule 155  option_ari_exp ->		/* empty */
rule 156  point_exp -> MUL identifier
rule 157  point_exp -> MUL point_exp
rule 158  point_exp -> MUL array
rule 159  point_exp -> OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 160  point_exp -> MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp
rule 161  point_exp -> MUL OPEN_PAR ari_exp CLOSE_PAR
rule 162  point_exp -> OPEN_PAR point_exp CLOSE_PAR
rule 163  ari_exp -> simple_ari_exp
rule 164  ari_exp -> simple_ari_exp relation_operator ari_exp
rule 165  ari_exp -> ari_exp ari_operator simple_ari_exp
rule 166  ari_exp -> IF bool_exp THEN ari_exp option_exp_else_statement
rule 167  type_cast_alg_exp -> simple_ari_exp
rule 168  type_cast_alg_exp -> simple_ari_exp ari_operator simple_ari_exp
rule 169  option_exp_else_statement -> ELSE ari_exp
rule 170  option_exp_else_statement ->		/* empty */
rule 171  simple_ari_exp -> member_in_exp
rule 172  simple_ari_exp -> simple_ari_exp bi_operator member_in_exp
rule 173  member_in_exp -> intliteral
rule 174  member_in_exp -> SUB member_in_exp
rule 175  member_in_exp -> BNE member_in_exp
rule 176  member_in_exp -> POINTERNULL
rule 177  member_in_exp -> floatliteral
rule 178  member_in_exp -> identifier
rule 179  member_in_exp -> array
rule 180  member_in_exp -> point_exp
rule 181  member_in_exp -> function
rule 182  member_in_exp -> OPEN_PAR ari_exp CLOSE_PAR
rule 183  member_in_exp -> charliteral
rule 184  member_in_exp -> address_exp
rule 185  member_in_exp -> type_cast
rule 186  member_in_exp -> struct_member_exp
rule 187  bi_operator -> MUL
rule 188  bi_operator -> DIV
rule 189  bi_operator -> MOD
rule 190  bi_operator -> LST
rule 191  bi_operator -> RST
rule 192  bi_operator -> ADDRESS
rule 193  bi_operator -> INTER_OR
rule 194  bi_operator -> CON
rule 195  ari_operator -> ADD
rule 196  ari_operator -> SUB
rule 197  array_exp -> array_exp CON array_exp
rule 198  array_exp -> option_list_value
rule 199  array_exp -> option_struct_list_value
rule 200  array_exp -> OPEN_PAR array_exp CLOSE_PAR
rule 201  option_list_value -> OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR
rule 202  option_list_value -> OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR
rule 203  option_list_value -> OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR
rule 204  option_struct_list_value -> OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR
rule 205  option_struct_list_value -> OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR
rule 206  option_struct_list_value -> OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR
rule 207  inner_option_list_value -> COMMA ari_exp inner_option_list_value
rule 208  inner_option_list_value -> COMMA strliteral inner_option_list_value
rule 209  inner_option_list_value -> COMMA array_exp inner_option_list_value
rule 210  inner_option_list_value ->		/* empty */
rule 211  inner_option_list_value -> COMMA error
rule 212  address_exp -> ADDRESS identifier
rule 213  address_exp -> ADDRESS array
rule 214  address_exp -> ADDRESS struct_member_exp
rule 215  address_exp -> ADDRESS address_exp
rule 216  address_exp -> OPEN_PAR address_exp CLOSE_PAR
rule 217  type_cast -> OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 218  type_cast -> OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp
rule 219  type_cast -> OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 220  type_cast -> OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 221  type_cast -> OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 222  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 223  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 224  type_cast -> OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element
rule 225  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element
rule 226  type_cast -> OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element
rule 227  type_cast -> OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element
rule 228  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element
rule 229  type_cast -> OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element
rule 230  type_cast -> OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 231  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 232  type_cast -> OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element
rule 233  type_cast -> OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 234  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 235  type_cast -> OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element
rule 236  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 237  type_cast -> OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 238  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 239  type_cast -> OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 240  casted_element -> type_cast_alg_exp
rule 241  bool_exp -> prime_bool_exp
rule 242  bool_exp -> NEGATION bool_exp
rule 243  bool_exp -> bool_exp AND bool_exp
rule 244  bool_exp -> bool_exp OR bool_exp
rule 245  bool_exp -> OPEN_PAR bool_exp CLOSE_PAR
rule 246  prime_bool_exp -> ari_exp relation_operator ari_exp
rule 247  prime_bool_exp -> MY_TRUE
rule 248  prime_bool_exp -> MY_FALSE
rule 249  prime_bool_exp -> ari_exp
rule 250  prime_bool_exp -> ari_exp EQ strliteral
rule 251  prime_bool_exp -> ari_exp NE strliteral
rule 252  prime_bool_exp -> strliteral EQ ari_exp
rule 253  prime_bool_exp -> strliteral NE ari_exp
rule 254  prime_bool_exp -> ari_exp EQ POINTERNULL
rule 255  prime_bool_exp -> ari_exp NE POINTERNULL
rule 256  prime_bool_exp -> POINTERNULL EQ ari_exp
rule 257  prime_bool_exp -> POINTERNULL NE ari_exp
rule 258  prime_bool_exp -> ari_exp EQ charliteral
rule 259  prime_bool_exp -> ari_exp NE charliteral
rule 260  relation_operator -> GE
rule 261  relation_operator -> LE
rule 262  relation_operator -> NE
rule 263  relation_operator -> GT
rule 264  relation_operator -> LT
rule 265  relation_operator -> EQ
rule 266  sign_type_define -> UNSIGNED INTDECLARATION
rule 267  sign_type_define -> UNSIGNED CHARDECLARATION
rule 268  all_type_define -> sign_type_define
rule 269  all_type_define -> type_define
rule 270  option_function_parameter_list -> all_type_define identifier inner_option_define_identifier
rule 271  option_function_parameter_list -> all_type_define inner_option_define_identifier
rule 272  option_function_parameter_list -> STRUCT_TYPE identifier inner_option_define_identifier
rule 273  option_function_parameter_list -> STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 274  option_function_parameter_list -> STRUCT_TYPE MUL MUL identifier inner_option_define_identifier
rule 275  option_function_parameter_list -> STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 276  option_function_parameter_list -> ID identifier inner_option_define_identifier
rule 277  option_function_parameter_list -> ID MUL identifier inner_option_define_identifier
rule 278  option_function_parameter_list -> ID MUL MUL identifier inner_option_define_identifier
rule 279  option_function_parameter_list -> ID identifier ARRAY inner_option_define_identifier
rule 280  option_function_parameter_list -> STRUCT_TYPE inner_option_define_identifier
rule 281  option_function_parameter_list -> STRUCT_TYPE MUL inner_option_define_identifier
rule 282  option_function_parameter_list -> STRUCT_TYPE MUL MUL inner_option_define_identifier
rule 283  option_function_parameter_list -> ID inner_option_define_identifier
rule 284  option_function_parameter_list -> ID MUL inner_option_define_identifier
rule 285  option_function_parameter_list -> ID MUL MUL inner_option_define_identifier
rule 286  option_function_parameter_list -> all_type_define identifier ARRAY inner_option_define_identifier
rule 287  option_function_parameter_list -> all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 288  option_function_parameter_list -> all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 289  option_function_parameter_list -> all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 290  option_function_parameter_list -> all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 291  option_function_parameter_list -> all_type_define MUL identifier inner_option_define_identifier
rule 292  option_function_parameter_list -> all_type_define MUL inner_option_define_identifier
rule 293  option_function_parameter_list -> all_type_define MUL MUL identifier inner_option_define_identifier
rule 294  option_function_parameter_list -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 295  option_function_parameter_list ->		/* empty */
rule 296  inner_option_define_identifier -> COMMA all_type_define identifier inner_option_define_identifier
rule 297  inner_option_define_identifier -> COMMA all_type_define inner_option_define_identifier
rule 298  inner_option_define_identifier -> COMMA ID identifier inner_option_define_identifier
rule 299  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier inner_option_define_identifier
rule 300  inner_option_define_identifier -> COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 301  inner_option_define_identifier -> COMMA ID identifier ARRAY inner_option_define_identifier
rule 302  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 303  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY inner_option_define_identifier
rule 304  inner_option_define_identifier -> COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 305  inner_option_define_identifier -> COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 306  inner_option_define_identifier ->		/* empty */
rule 307  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 308  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 309  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 310  inner_option_define_identifier -> COMMA all_type_define MUL identifier inner_option_define_identifier
rule 311  inner_option_define_identifier -> COMMA all_type_define MUL inner_option_define_identifier
rule 312  inner_option_define_identifier -> COMMA error
rule 313  option_function_identifier -> ass_right inner_option_function_identifier
rule 314  option_function_identifier -> ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 315  option_function_identifier ->		/* empty */
rule 316  option_function_identifier -> ADDRESS error
rule 317  inner_option_function_identifier -> COMMA ass_right inner_option_function_identifier
rule 318  inner_option_function_identifier -> COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 319  inner_option_function_identifier ->		/* empty */
rule 320  inner_option_function_identifier -> COMMA error
rule 321  statement_bpar -> OPEN_BPAR statement CLOSE_BPAR
rule 322  statement_bpar -> error CLOSE_BPAR
rule 323  bool_par -> OPEN_PAR bool_exp CLOSE_PAR
rule 324  bool_par -> error CLOSE_PAR
rule 325  identifier -> ID
rule 326  identifier -> OPEN_PAR identifier CLOSE_PAR
rule 327  strliteral -> STRLITERAL
rule 328  intliteral -> INTLITERAL
rule 329  charliteral -> CHARLITERAL
rule 330  floatliteral -> FLOATLITERAL
rule 331  option_frame_identifier -> COMMA identifier option_frame_identifier
rule 332  option_frame_identifier ->		/* empty */
rule 333  option_frame_identifier -> COMMA error
rule 334  option_projection ->		/* empty */
rule 335  option_projection -> COMMA statement option_projection
rule 336  imply_pre -> prime_bool_exp
rule 337  imply_pre -> NEGATION imply_pre
rule 338  imply_pre -> imply_pre AND imply_pre
rule 339  imply_pre -> imply_pre OR imply_pre
rule 340  imply_pre -> OPEN_PAR imply_pre CLOSE_PAR
rule 341  while_statement -> WHILE bool_par statement_bpar
rule 342  for_statement -> FOR ari_exp TIMES DO statement_bpar
rule 343  extend_for_statement -> FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar
rule 344  for_sta_init -> ass_statement
rule 345  for_sta_init -> declaration
rule 346  for_sta_init ->		/* empty */
rule 347  for_sta_condition -> bool_exp
rule 348  for_sta_condition ->		/* empty */
rule 349  for_sta_control -> ass_statement
rule 350  for_sta_control ->		/* empty */
rule 351  switch_statement -> SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR
rule 352  case_par -> CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par
rule 353  case_par -> DEFAULT COLON OPEN_PAR statement CLOSE_PAR
rule 354  init_case_par -> BREAK case_par
rule 355  init_case_par -> case_par
rule 356  init_case_par ->		/* empty */
rule 357  if_statement -> IF bool_exp THEN statement_bpar option_else_statement
rule 358  option_else_statement -> ELSE statement_bpar
rule 359  option_else_statement ->		/* empty */
rule 360  output_statement -> DISPLAY OPEN_PAR ass_right CLOSE_PAR
rule 361  output_statement -> DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR
rule 362  option_output ->		/* empty */
rule 363  option_output -> COMMA ass_right option_output
rule 364  input_statement -> REQUEST OPEN_PAR identifier CLOSE_PAR
rule 365  input_statement -> REQUEST OPEN_PAR identifier option_input CLOSE_PAR
rule 366  input_statement -> REQUEST OPEN_PAR array CLOSE_PAR
rule 367  input_statement -> REQUEST OPEN_PAR array option_input CLOSE_PAR
rule 368  input_statement -> REQUEST OPEN_PAR struct_member_exp CLOSE_PAR
rule 369  option_input ->		/* empty */
rule 370  option_input -> COMMA identifier option_input
rule 371  option_input -> COMMA array option_input
rule 372  struct_member_exp -> identifier DOT identifier option_struct_member_exp
rule 373  struct_member_exp -> array DOT identifier option_struct_member_exp
rule 374  struct_member_exp -> point_exp DOT identifier option_struct_member_exp
rule 375  struct_member_exp -> identifier DOT array option_struct_member_exp
rule 376  struct_member_exp -> array DOT array option_struct_member_exp
rule 377  struct_member_exp -> point_exp DOT array option_struct_member_exp
rule 378  struct_member_exp -> identifier IMPLY identifier option_struct_member_exp
rule 379  struct_member_exp -> array IMPLY identifier option_struct_member_exp
rule 380  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp
rule 381  struct_member_exp -> point_exp IMPLY identifier option_struct_member_exp
rule 382  struct_member_exp -> identifier IMPLY array option_struct_member_exp
rule 383  struct_member_exp -> array IMPLY array option_struct_member_exp
rule 384  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp
rule 385  struct_member_exp -> identifier DOT function
rule 386  struct_member_exp -> identifier IMPLY function
rule 387  struct_member_exp -> point_exp IMPLY array option_struct_member_exp
rule 388  struct_member_exp -> OPEN_PAR struct_member_exp CLOSE_PAR
rule 389  option_struct_member_exp ->		/* empty */
rule 390  option_struct_member_exp -> DOT identifier option_struct_member_exp
rule 391  option_struct_member_exp -> DOT array option_struct_member_exp
rule 392  option_struct_member_exp -> IMPLY identifier option_struct_member_exp
rule 393  option_struct_member_exp -> IMPLY array option_struct_member_exp
rule 394  option_struct_member_exp -> DOT function
rule 395  option_struct_member_exp -> IMPLY function

Terminals, with rules where they appear

$ (-1)
error (256) 110 115 154 211 312 316 320 322 324 333
SWITCH (258) 351
CASE (259) 352
BREAK (260) 354
DEFAULT (261) 353
RETURN (262) 36
IF (263) 166 357
ELSE (264) 169 358
EMPTY (265) 18 47
AWAIT (266) 44
PROJECTION (267) 23 58 59
PBEGIN (268) 2
PEND (269) 2
POINTERNULL (270) 176 254 255 256 257
ARRAY (271) 104 105 275 279 286 287 290 301 302 303 304 309
STRUCT (272) 73 74 75 80 87 89 236 238
DOT (273) 372 373 374 375 376 377 385 390 391 394
UNION (274) 81 88 90
FILEDECLARATION (275) 100
MORE (276) 19 48
DEFINE (277) 25 60
MY_TRUE (278) 15 247
MY_FALSE (279) 16 248
EXIST (280) 64
FRAME (281) 57
FOR (282) 342 343
WHILE (283) 341
DO (284) 342
TRUE (285) 52
FALSE (286) 53
REPEAT (287) 45
UNTIL (288) 45
DISPLAY (289) 360 361
SKIP (290) 14 46
THEN (291) 166 357
COMMA (292) 28 109 110 113 115 153 154 207 208 209 211 289 296 297
    298 299 300 301 302 303 304 305 307 308 309 310 311 312 317 318
    320 331 333 335 343 363 370 371
COLON (293) 25 64 352 353
INTDECLARATION (294) 95 126 130 133 134 135 136 147 148 217 220 222
    224 225 230 231 266
STRDECLARATION (295) 98
POINTERDECLARATION (296)
CHARDECLARATION (297) 97 124 125 128 129 130 131 132 133 134 135 150
    151 219 221 223 227 228 233 234 267
VOIDDECLARATION (298) 99 229 235
FLOATDECLARATION (299) 96 127 149 218 226 232
LISTDECLARATION (300)
OPEN_PAR (301) 27 41 42 43 44 45 49 54 56 57 60 65 70 71 72 73 74 75
    76 77 78 91 92 93 94 121 124 125 126 127 128 129 130 131 132 133
    134 135 136 142 143 145 147 148 149 150 151 152 159 160 161 162
    182 200 216 217 218 219 220 221 222 223 224 225 226 227 228 229
    230 231 232 233 234 235 236 237 238 239 245 294 305 314 318 323
    326 340 343 351 352 353 360 361 364 365 366 367 368 380 384 388
CLOSE_PAR (302) 27 41 42 43 44 45 49 54 56 57 60 65 70 71 72 73 74
    75 76 77 78 91 92 93 94 121 124 125 126 127 128 129 130 131 132
    133 134 135 136 142 143 145 147 148 149 150 151 152 159 160 161
    162 182 200 216 217 218 219 220 221 222 223 224 225 226 227 228
    229 230 231 232 233 234 235 236 237 238 239 245 294 305 314 318
    323 324 326 340 343 351 352 353 360 361 364 365 366 367 368 380
    384 388
TIMES (303) 342
OPEN_BPAR (304) 23 45 58 59 60 64 70 71 72 73 74 75 79 204 205 206
    321 351
CLOSE_BPAR (305) 23 45 58 59 60 64 70 71 72 73 74 75 79 204 205 206
    321 322 351
OPEN_MPAR (306) 56 93 94 102 106 107 112 113 124 125 126 127 128 129
    130 131 132 133 134 135 136 146 147 148 149 150 151 159 201 202
    203 288 289 290 307 308 309
CLOSE_MPAR (307) 56 93 94 102 106 107 112 113 124 125 126 127 128 129
    130 131 132 133 134 135 136 146 147 148 149 150 151 159 201 202
    203 288 289 290 307 308 309
FUNCTION (308)
OVER (309)
CYLINDER (310)
OVEREP (311)
INTER_OR (312) 193
NON_DETERMINED (313)
SEND (314)
RECEIVE (315)
PROCESS (316)
CHANNEL (317)
PUT (318)
GET (319)
ERROR_TOKEN (320)
STRFUNCHEAD (321)
STRFUNCTAIL (322)
STRFUNCCAT (323)
STRFUNCCMP (324)
STRFUNCCPY (325)
STRFUNCLEN (326)
EXTERN (327) 77
UNSIGNED (328) 83 125 129 131 132 133 135 148 151 222 223 225 228 231
    234 266 267
SIGNED (329) 82 220 221
CHOP (330) 8 32
IMPLY (331) 56 378 379 380 381 382 383 384 386 387 392 393 395
IFF (332) 6
PROPIMPLY (333) 7
OR (334) 5 31 244 339
PARALLEL (335) 55
AND (336) 4 30 57 67 243 338
ASS_P (337) 60 94 103 104 105 106 107 137
ASS_N (338) 138
CON (339) 194 197
ADDRESS (340) 192 212 213 214 215 316
NE (341) 251 253 255 257 259 262
EQ (342) 250 252 254 256 258 265
GE (343) 260
LE (344) 261
GT (345) 263
LT (346) 264
LST (347) 190
RST (348) 191
ADD (349) 195
SUB (350) 174 196
MUL (351) 71 72 74 75 91 92 93 94 108 124 125 126 127 128 129 130 131
    132 133 134 135 136 145 147 148 149 150 151 156 157 158 160 161
    187 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238
    239 273 274 277 278 281 282 284 285 287 291 292 293 294 300 304
    305 310 311
DIV (352) 188
MOD (353) 189
BNE (354) 175
CHOPSTAR (355) 26
NEXT (356) 13 41 122
NEGATION (357) 22 242 337
LENGTH (358) 17 49
REQUEST (359) 364 365 366 367 368
FINAL (360) 21 54
KEEP (361) 10 42
ALWAYS (362) 9 43
HALT (363) 20
W_NEXT (364) 12
PREFIX (365)
SOMETIMES (366) 11
ID (367) 24 25 36 60 70 71 72 73 74 75 76 77 80 81 87 88 93 94 102
    104 105 106 107 112 113 146 147 148 149 150 151 276 277 278 279
    283 284 285 298 301 314 318 325
STRLITERAL (368) 327
STRUCT_TYPE (369) 73 74 75 86 89 90 236 237 238 239 272 273 274 275
    280 281 282 299 300 302
INTLITERAL (370) 124 125 126 127 128 129 130 131 132 133 134 135 136
    328
FLOATLITERAL (371) 330
CHARLITERAL (372) 329

Nonterminals, with rules where they appear

program (118)
    on left: 1
gComplexProposition (119)
    on left: 2 3, on right: 1
complexProposition (120)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27, on right: 2 4 5 6 7 8 9 10 11 12 13 20 21 22 23 26
    27 28
poptional_projection (121)
    on left: 28 29, on right: 23 28
statement (122)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65,
    on right: 1 30 31 32 41 42 43 45 54 55 56 57 58 59 64 65 68 70
    71 72 73 74 75 321 335 352 353
option_struct_declaration (123)
    on left: 66 67, on right: 67 79
empty_statement (124)
    on left: 68 69, on right: 60
function_define (125)
    on left: 70 71 72 73 74 75, on right: 62
function (126)
    on left: 76 77 78, on right: 63 142 181 385 386 394 395
struct_define_statement (127)
    on left: 79, on right: 61
struct_identifier (128)
    on left: 80 81, on right: 79
sign_declaration (129)
    on left: 82 83 84, on right: 34 66 67
declaration (130)
    on left: 85 86 87 88 89 90 91 92 93 94, on right: 82 83 84 345
type_define (131)
    on left: 95 96 97 98 99 100, on right: 85 142 269
option_identifier_array_declaration (132)
    on left: 101 102 103 104 105 106 107 108, on right: 85 86 87 88
    89 90 108 109
inner_option_identifier_array_declaration (133)
    on left: 109 110 111, on right: 101 102 103 104 105 106 107
ass_statement (134)
    on left: 116, on right: 33 344 349
ass_left (135)
    on left: 117 118 119 120 121 122 123, on right: 116 121 122
leftaddrshift (136)
    on left: 124 125 126 127 128 129 130 131 132 133 134 135 136,
    on right: 123 145
assign_operator (137)
    on left: 137 138, on right: 116
ass_right (138)
    on left: 139 140 141 142 143 144, on right: 103 116 143 313 317
    360 361 363
rightaddrshift (139)
    on left: 145, on right: 144
array (140)
    on left: 146 147 148 149 150 151 152, on right: 78 119 152 158
    179 213 366 367 371 373 375 376 377 379 382 383 384 387 391 393
option_ari_exp (141)
    on left: 153 154 155, on right: 93 94 102 106 107 112 113 124 125
    126 127 128 129 130 131 132 133 134 135 136 146 147 148 149 150
    151 153 159
point_exp (142)
    on left: 156 157 158 159 160 161 162, on right: 120 157 159 162
    180 374 377 381 387
ari_exp (143)
    on left: 163 164 165 166, on right: 17 49 93 94 102 106 107 112
    113 124 125 126 127 128 129 130 131 132 133 134 135 136 139 146
    147 148 149 150 151 153 159 160 161 164 165 166 169 182 201 204
    207 246 249 250 251 252 253 254 255 256 257 258 259 288 289 290
    307 308 309 342
type_cast_alg_exp (144)
    on left: 167 168, on right: 217 218 219 220 221 222 223 240
option_exp_else_statement (145)
    on left: 169 170, on right: 166
simple_ari_exp (146)
    on left: 171 172, on right: 163 164 165 167 168 172
member_in_exp (147)
    on left: 173 174 175 176 177 178 179 180 181 182 183 184 185 186
   , on right: 171 172 174 175 351 352
bi_operator (148)
    on left: 187 188 189 190 191 192 193 194, on right: 172
ari_operator (149)
    on left: 195 196, on right: 165 168
array_exp (150)
    on left: 197 198 199 200, on right: 94 104 106 140 197 200 203
    206 209
option_list_value (151)
    on left: 201 202 203, on right: 198
option_struct_list_value (152)
    on left: 204 205 206, on right: 199
inner_option_list_value (153)
    on left: 207 208 209 210 211, on right: 201 202 203 204 205 206
    207 208 209
address_exp (154)
    on left: 212 213 214 215 216, on right: 184 215 216 380 384
type_cast (155)
    on left: 217 218 219 220 221 222 223 224 225 226 227 228 229 230
    231 232 233 234 235 236 237 238 239, on right: 185
casted_element (156)
    on left: 240, on right: 224 225 226 227 228 229 230 231 232 233
    234 235 236 237 238 239
bool_exp (157)
    on left: 241 242 243 244 245, on right: 44 45 166 242 243 244 245
    323 347 357
prime_bool_exp (158)
    on left: 246 247 248 249 250 251 252 253 254 255 256 257 258 259
   , on right: 25 241 336
relation_operator (159)
    on left: 260 261 262 263 264 265, on right: 164 246
sign_type_define (160)
    on left: 266 267, on right: 268
all_type_define (161)
    on left: 268 269, on right: 70 71 72 160 270 271 286 287 288 289
    290 291 292 293 296 297 303 304 307 308 309 310 311
option_function_parameter_list (162)
    on left: 270 271 272 273 274 275 276 277 278 279 280 281 282 283
    284 285 286 287 288 289 290 291 292 293 294 295,
    on right: 60 70 71 72 73 74 75 91 92 93 94 142 294 305
inner_option_define_identifier (163)
    on left: 296 297 298 299 300 301 302 303 304 305 306 307 308 309
    310 311 312, on right: 64 270 271 272 273 274 275 276 277 278 279
    280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 296
    297 298 299 300 301 302 303 304 305 307 308 309 310 311
option_function_identifier (164)
    on left: 313 314 315 316, on right: 76 77 78 314 318
inner_option_function_identifier (165)
    on left: 317 318 319 320, on right: 313 314 317 318
statement_bpar (166)
    on left: 321 322, on right: 58 59 341 342 343 357 358
bool_par (167)
    on left: 323 324, on right: 341
identifier (168)
    on left: 325 326, on right: 57 64 91 92 101 103 117 156 178 212
    270 272 273 274 275 276 277 278 279 286 287 288 289 290 291 293
    294 296 298 299 300 301 302 303 304 305 307 308 309 310 326 331
    364 365 370 372 373 374 375 378 379 380 381 382 385 386 390 392
strliteral (169)
    on left: 327, on right: 105 107 141 142 202 205 208 250 251 252
    253
intliteral (170)
    on left: 328, on right: 173
charliteral (171)
    on left: 329, on right: 183 258 259
floatliteral (172)
    on left: 330, on right: 177
option_frame_identifier (173)
    on left: 331 332 333, on right: 57 331
option_projection (174)
    on left: 334 335, on right: 58 335
imply_pre (175)
    on left: 336 337 338 339 340, on right: 56 337 338 339 340
while_statement (176)
    on left: 341, on right: 38
for_statement (177)
    on left: 342, on right: 39
extend_for_statement (178)
    on left: 343, on right: 40
for_sta_init (179)
    on left: 344 345 346, on right: 343
for_sta_condition (180)
    on left: 347 348, on right: 343
for_sta_control (181)
    on left: 349 350, on right: 343
switch_statement (182)
    on left: 351, on right: 35
case_par (183)
    on left: 352 353, on right: 351 354 355
init_case_par (184)
    on left: 354 355 356, on right: 352
if_statement (185)
    on left: 357, on right: 37
option_else_statement (186)
    on left: 358 359, on right: 357
output_statement (187)
    on left: 360 361, on right: 51
option_output (188)
    on left: 362 363, on right: 361 363
input_statement (189)
    on left: 364 365 366 367 368, on right: 50
option_input (190)
    on left: 369 370 371, on right: 365 367 370 371
struct_member_exp (191)
    on left: 372 373 374 375 376 377 378 379 380 381 382 383 384 385
    386 387 388, on right: 118 186 214 368 388
option_struct_member_exp (192)
    on left: 389 390 391 392 393 394 395, on right: 372 373 374 375
    376 377 378 379 380 381 382 383 384 387 390 391 392 393


state 0

    PBEGIN	shift, and go to state 1

    $default	reduce using rule 3 (gComplexProposition)

    program	go to state 1231
    gComplexProposition	go to state 2



state 1

    gComplexProposition  ->  PBEGIN . complexProposition PEND   (rule 2)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 21



state 2

    program  ->  gComplexProposition . statement   (rule 1)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 60
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 3

    complexProposition  ->  EMPTY .   (rule 18)

    $default	reduce using rule 18 (complexProposition)



state 4

    complexProposition  ->  MORE .   (rule 19)

    $default	reduce using rule 19 (complexProposition)



state 5

    complexProposition  ->  DEFINE . ID COLON prime_bool_exp   (rule 25)

    ID  	shift, and go to state 84



state 6

    complexProposition  ->  MY_TRUE .   (rule 15)

    $default	reduce using rule 15 (complexProposition)



state 7

    complexProposition  ->  MY_FALSE .   (rule 16)

    $default	reduce using rule 16 (complexProposition)



state 8

    complexProposition  ->  SKIP .   (rule 14)

    $default	reduce using rule 14 (complexProposition)



state 9

    complexProposition  ->  OPEN_PAR . complexProposition CLOSE_PAR   (rule 27)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 85



state 10

    complexProposition  ->  OPEN_BPAR . complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 86



state 11

    complexProposition  ->  NEXT . complexProposition   (rule 13)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 87



state 12

    complexProposition  ->  NEGATION . complexProposition   (rule 22)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 88



state 13

    complexProposition  ->  LENGTH . ari_exp   (rule 17)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 101
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 14

    complexProposition  ->  FINAL . complexProposition   (rule 21)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 111



state 15

    complexProposition  ->  KEEP . complexProposition   (rule 10)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 112



state 16

    complexProposition  ->  ALWAYS . complexProposition   (rule 9)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 113



state 17

    complexProposition  ->  HALT . complexProposition   (rule 20)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 114



state 18

    complexProposition  ->  W_NEXT . complexProposition   (rule 12)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 115



state 19

    complexProposition  ->  SOMETIMES . complexProposition   (rule 11)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 116



state 20

    complexProposition  ->  ID .   (rule 24)

    $default	reduce using rule 24 (complexProposition)



state 21

    gComplexProposition  ->  PBEGIN complexProposition . PEND   (rule 2)
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    PEND	shift, and go to state 117
    CHOP	shift, and go to state 118
    IFF 	shift, and go to state 119
    PROPIMPLY	shift, and go to state 120
    OR  	shift, and go to state 121
    AND 	shift, and go to state 122
    CHOPSTAR	shift, and go to state 123



state 22

    switch_statement  ->  SWITCH . OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 351)

    OPEN_PAR	shift, and go to state 124



state 23

    statement  ->  RETURN . ID   (rule 36)

    ID  	shift, and go to state 125



state 24

    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 357)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 129
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 130
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    bool_exp	go to state 133
    prime_bool_exp	go to state 134
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 25

    statement  ->  EMPTY .   (rule 47)

    $default	reduce using rule 47 (statement)



state 26

    statement  ->  AWAIT . OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

    OPEN_PAR	shift, and go to state 136



state 27

    function_define  ->  STRUCT . STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)
    function_define  ->  STRUCT . STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)
    function_define  ->  STRUCT . STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)
    struct_identifier  ->  STRUCT . ID   (rule 80)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 87)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 89)

    ID  	shift, and go to state 137
    STRUCT_TYPE	shift, and go to state 138



state 28

    struct_identifier  ->  UNION . ID   (rule 81)
    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 88)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 90)

    ID  	shift, and go to state 139
    STRUCT_TYPE	shift, and go to state 140



state 29

    type_define  ->  FILEDECLARATION .   (rule 100)

    $default	reduce using rule 100 (type_define)



state 30

    statement  ->  MORE .   (rule 48)

    $default	reduce using rule 48 (statement)



state 31

    statement  ->  DEFINE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    ID  	shift, and go to state 141



state 32

    statement  ->  EXIST . identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 64)

    OPEN_PAR	shift, and go to state 142
    ID  	shift, and go to state 143

    identifier	go to state 144



state 33

    statement  ->  FRAME . OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    OPEN_PAR	shift, and go to state 145



state 34

    for_statement  ->  FOR . ari_exp TIMES DO statement_bpar   (rule 342)
    extend_for_statement  ->  FOR . OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 343)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 146
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 147
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 35

    while_statement  ->  WHILE . bool_par statement_bpar   (rule 341)

    error	shift, and go to state 148
    OPEN_PAR	shift, and go to state 149

    bool_par	go to state 150



state 36

    statement  ->  TRUE .   (rule 52)

    $default	reduce using rule 52 (statement)



state 37

    statement  ->  FALSE .   (rule 53)

    $default	reduce using rule 53 (statement)



state 38

    statement  ->  REPEAT . OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    OPEN_BPAR	shift, and go to state 151



state 39

    output_statement  ->  DISPLAY . OPEN_PAR ass_right CLOSE_PAR   (rule 360)
    output_statement  ->  DISPLAY . OPEN_PAR ass_right option_output CLOSE_PAR   (rule 361)

    OPEN_PAR	shift, and go to state 152



state 40

    statement  ->  SKIP .   (rule 46)

    $default	reduce using rule 46 (statement)



state 41

    type_define  ->  INTDECLARATION .   (rule 95)

    $default	reduce using rule 95 (type_define)



state 42

    type_define  ->  STRDECLARATION .   (rule 98)

    $default	reduce using rule 98 (type_define)



state 43

    type_define  ->  CHARDECLARATION .   (rule 97)

    $default	reduce using rule 97 (type_define)



state 44

    type_define  ->  VOIDDECLARATION .   (rule 99)

    $default	reduce using rule 99 (type_define)



state 45

    type_define  ->  FLOATDECLARATION .   (rule 96)

    $default	reduce using rule 96 (type_define)



state 46

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 65)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 153
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 126
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 154
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 155
    BNE 	shift, and go to state 94
    NEXT	shift, and go to state 52
    NEGATION	shift, and go to state 156
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    STRUCT_TYPE	shift, and go to state 59
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    statement	go to state 157
    function_define	go to state 61
    function	go to state 158
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 159
    leftaddrshift	go to state 70
    array	go to state 160
    point_exp	go to state 161
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 162
    type_cast	go to state 105
    prime_bool_exp	go to state 163
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 164
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    imply_pre	go to state 165
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 166



state 47

    statement  ->  OPEN_BPAR . statement option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 58)
    statement  ->  OPEN_BPAR . statement CLOSE_BPAR PROJECTION statement_bpar   (rule 59)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 167
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 48

    function  ->  EXTERN . ID OPEN_PAR option_function_identifier CLOSE_PAR   (rule 77)

    ID  	shift, and go to state 168



state 49

    sign_declaration  ->  UNSIGNED . declaration   (rule 83)
    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 266)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 267)

    STRUCT	shift, and go to state 169
    UNION	shift, and go to state 170
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 171
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 172
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 173
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 174
    type_define	go to state 175



state 50

    sign_declaration  ->  SIGNED . declaration   (rule 82)

    STRUCT	shift, and go to state 169
    UNION	shift, and go to state 170
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 173
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 176
    type_define	go to state 175



state 51

    point_exp  ->  MUL . identifier   (rule 156)
    point_exp  ->  MUL . point_exp   (rule 157)
    point_exp  ->  MUL . array   (rule 158)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 160)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 161)

    OPEN_PAR	shift, and go to state 177
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 178

    array	go to state 179
    point_exp	go to state 180
    identifier	go to state 181



state 52

    statement  ->  NEXT . OPEN_PAR statement CLOSE_PAR   (rule 41)
    ass_left  ->  NEXT . ass_left   (rule 122)

    OPEN_PAR	shift, and go to state 182
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 183
    ID  	shift, and go to state 178

    ass_left	go to state 184
    leftaddrshift	go to state 70
    array	go to state 185
    point_exp	go to state 72
    identifier	go to state 75
    struct_member_exp	go to state 83



state 53

    statement  ->  LENGTH . OPEN_PAR ari_exp CLOSE_PAR   (rule 49)

    OPEN_PAR	shift, and go to state 186



state 54

    input_statement  ->  REQUEST . OPEN_PAR identifier CLOSE_PAR   (rule 364)
    input_statement  ->  REQUEST . OPEN_PAR identifier option_input CLOSE_PAR   (rule 365)
    input_statement  ->  REQUEST . OPEN_PAR array CLOSE_PAR   (rule 366)
    input_statement  ->  REQUEST . OPEN_PAR array option_input CLOSE_PAR   (rule 367)
    input_statement  ->  REQUEST . OPEN_PAR struct_member_exp CLOSE_PAR   (rule 368)

    OPEN_PAR	shift, and go to state 187



state 55

    statement  ->  FINAL . OPEN_PAR statement CLOSE_PAR   (rule 54)

    OPEN_PAR	shift, and go to state 188



state 56

    statement  ->  KEEP . OPEN_PAR statement CLOSE_PAR   (rule 42)

    OPEN_PAR	shift, and go to state 189



state 57

    statement  ->  ALWAYS . OPEN_PAR statement CLOSE_PAR   (rule 43)

    OPEN_PAR	shift, and go to state 190



state 58

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    identifier  ->  ID .   (rule 325)

    OPEN_PAR	shift, and go to state 191
    OPEN_MPAR	shift, and go to state 192

    $default	reduce using rule 325 (identifier)



state 59

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 86)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 195
    identifier	go to state 196



state 60

    program  ->  gComplexProposition statement .   (rule 1)
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200

    $default	reduce using rule 1 (program)



state 61

    statement  ->  function_define .   (rule 62)

    $default	reduce using rule 62 (statement)



state 62

    statement  ->  function .   (rule 63)

    $default	reduce using rule 63 (statement)



state 63

    statement  ->  struct_define_statement .   (rule 61)

    $default	reduce using rule 61 (statement)



state 64

    struct_define_statement  ->  struct_identifier . OPEN_BPAR option_struct_declaration CLOSE_BPAR   (rule 79)

    OPEN_BPAR	shift, and go to state 201



state 65

    statement  ->  sign_declaration .   (rule 34)

    $default	reduce using rule 34 (statement)



state 66

    sign_declaration  ->  declaration .   (rule 84)

    $default	reduce using rule 84 (sign_declaration)



state 67

    declaration  ->  type_define . option_identifier_array_declaration   (rule 85)
    all_type_define  ->  type_define .   (rule 269)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 194

    MUL 	[reduce using rule 269 (all_type_define)]
    ID  	[reduce using rule 269 (all_type_define)]
    $default	reduce using rule 269 (all_type_define)

    option_identifier_array_declaration	go to state 202
    identifier	go to state 196



state 68

    statement  ->  ass_statement .   (rule 33)

    $default	reduce using rule 33 (statement)



state 69

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 116)

    ASS_P	shift, and go to state 203
    ASS_N	shift, and go to state 204

    assign_operator	go to state 205



state 70

    ass_left  ->  leftaddrshift .   (rule 123)

    $default	reduce using rule 123 (ass_left)



state 71

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    ass_left  ->  array .   (rule 119)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 383)

    DOT 	shift, and go to state 206
    OPEN_PAR	shift, and go to state 207
    IMPLY	shift, and go to state 208

    $default	reduce using rule 119 (ass_left)



state 72

    ass_left  ->  point_exp .   (rule 120)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 381)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 387)

    DOT 	shift, and go to state 209
    IMPLY	shift, and go to state 210

    $default	reduce using rule 120 (ass_left)



state 73

    all_type_define  ->  sign_type_define .   (rule 268)

    $default	reduce using rule 268 (all_type_define)



state 74

    function_define  ->  all_type_define . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 70)
    function_define  ->  all_type_define . MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 71)
    function_define  ->  all_type_define . MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    MUL 	shift, and go to state 211
    ID  	shift, and go to state 212



state 75

    ass_left  ->  identifier .   (rule 117)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 382)
    struct_member_exp  ->  identifier . DOT function   (rule 385)
    struct_member_exp  ->  identifier . IMPLY function   (rule 386)

    DOT 	shift, and go to state 213
    IMPLY	shift, and go to state 214

    $default	reduce using rule 117 (ass_left)



state 76

    statement  ->  while_statement .   (rule 38)

    $default	reduce using rule 38 (statement)



state 77

    statement  ->  for_statement .   (rule 39)

    $default	reduce using rule 39 (statement)



state 78

    statement  ->  extend_for_statement .   (rule 40)

    $default	reduce using rule 40 (statement)



state 79

    statement  ->  switch_statement .   (rule 35)

    $default	reduce using rule 35 (statement)



state 80

    statement  ->  if_statement .   (rule 37)

    $default	reduce using rule 37 (statement)



state 81

    statement  ->  output_statement .   (rule 51)

    $default	reduce using rule 51 (statement)



state 82

    statement  ->  input_statement .   (rule 50)

    $default	reduce using rule 50 (statement)



state 83

    ass_left  ->  struct_member_exp .   (rule 118)

    $default	reduce using rule 118 (ass_left)



state 84

    complexProposition  ->  DEFINE ID . COLON prime_bool_exp   (rule 25)

    COLON	shift, and go to state 215



state 85

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    complexProposition  ->  OPEN_PAR complexProposition . CLOSE_PAR   (rule 27)

    CLOSE_PAR	shift, and go to state 216
    CHOP	shift, and go to state 118
    IFF 	shift, and go to state 119
    PROPIMPLY	shift, and go to state 120
    OR  	shift, and go to state 121
    AND 	shift, and go to state 122
    CHOPSTAR	shift, and go to state 123



state 86

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition . poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    COMMA	shift, and go to state 217
    CHOP	shift, and go to state 118
    IFF 	shift, and go to state 119
    PROPIMPLY	shift, and go to state 120
    OR  	shift, and go to state 121
    AND 	shift, and go to state 122
    CHOPSTAR	shift, and go to state 123

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 218



state 87

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEXT complexProposition .   (rule 13)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 13 (complexProposition)



state 88

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEGATION complexProposition .   (rule 22)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 22 (complexProposition)



state 89

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 166)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 129
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 130
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    bool_exp	go to state 219
    prime_bool_exp	go to state 134
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 90

    member_in_exp  ->  POINTERNULL .   (rule 176)

    $default	reduce using rule 176 (member_in_exp)



state 91

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 221
    CHARDECLARATION	shift, and go to state 222
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 224
    OPEN_PAR	shift, and go to state 225
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 226
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234



state 92

    address_exp  ->  ADDRESS . identifier   (rule 212)
    address_exp  ->  ADDRESS . array   (rule 213)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 214)
    address_exp  ->  ADDRESS . address_exp   (rule 215)

    OPEN_PAR	shift, and go to state 235
    ADDRESS	shift, and go to state 92
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 178

    array	go to state 236
    point_exp	go to state 237
    address_exp	go to state 238
    identifier	go to state 239
    struct_member_exp	go to state 240



state 93

    member_in_exp  ->  SUB . member_in_exp   (rule 174)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    member_in_exp	go to state 241
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 94

    member_in_exp  ->  BNE . member_in_exp   (rule 175)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    member_in_exp	go to state 242
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 95

    intliteral  ->  INTLITERAL .   (rule 328)

    $default	reduce using rule 328 (intliteral)



state 96

    floatliteral  ->  FLOATLITERAL .   (rule 330)

    $default	reduce using rule 330 (floatliteral)



state 97

    charliteral  ->  CHARLITERAL .   (rule 329)

    $default	reduce using rule 329 (charliteral)



state 98

    member_in_exp  ->  function .   (rule 181)

    $default	reduce using rule 181 (member_in_exp)



state 99

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    member_in_exp  ->  array .   (rule 179)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 383)

    DOT 	shift, and go to state 206
    OPEN_PAR	shift, and go to state 207
    IMPLY	shift, and go to state 208

    DOT 	[reduce using rule 179 (member_in_exp)]
    IMPLY	[reduce using rule 179 (member_in_exp)]
    $default	reduce using rule 179 (member_in_exp)



state 100

    member_in_exp  ->  point_exp .   (rule 180)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 381)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 387)

    DOT 	shift, and go to state 209
    IMPLY	shift, and go to state 210

    DOT 	[reduce using rule 180 (member_in_exp)]
    IMPLY	[reduce using rule 180 (member_in_exp)]
    $default	reduce using rule 180 (member_in_exp)



state 101

    complexProposition  ->  LENGTH ari_exp .   (rule 17)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 17 (complexProposition)

    ari_operator	go to state 245



state 102

    ari_exp  ->  simple_ari_exp .   (rule 163)
    ari_exp  ->  simple_ari_exp . relation_operator ari_exp   (rule 164)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 172)

    INTER_OR	shift, and go to state 246
    CON 	shift, and go to state 247
    ADDRESS	shift, and go to state 248
    NE  	shift, and go to state 249
    EQ  	shift, and go to state 250
    GE  	shift, and go to state 251
    LE  	shift, and go to state 252
    GT  	shift, and go to state 253
    LT  	shift, and go to state 254
    LST 	shift, and go to state 255
    RST 	shift, and go to state 256
    MUL 	shift, and go to state 257
    DIV 	shift, and go to state 258
    MOD 	shift, and go to state 259

    INTER_OR	[reduce using rule 163 (ari_exp)]
    CON 	[reduce using rule 163 (ari_exp)]
    ADDRESS	[reduce using rule 163 (ari_exp)]
    NE  	[reduce using rule 163 (ari_exp)]
    EQ  	[reduce using rule 163 (ari_exp)]
    GE  	[reduce using rule 163 (ari_exp)]
    LE  	[reduce using rule 163 (ari_exp)]
    GT  	[reduce using rule 163 (ari_exp)]
    LT  	[reduce using rule 163 (ari_exp)]
    LST 	[reduce using rule 163 (ari_exp)]
    RST 	[reduce using rule 163 (ari_exp)]
    MUL 	[reduce using rule 163 (ari_exp)]
    DIV 	[reduce using rule 163 (ari_exp)]
    MOD 	[reduce using rule 163 (ari_exp)]
    $default	reduce using rule 163 (ari_exp)

    bi_operator	go to state 260
    relation_operator	go to state 261



state 103

    simple_ari_exp  ->  member_in_exp .   (rule 171)

    $default	reduce using rule 171 (simple_ari_exp)



state 104

    member_in_exp  ->  address_exp .   (rule 184)

    $default	reduce using rule 184 (member_in_exp)



state 105

    member_in_exp  ->  type_cast .   (rule 185)

    $default	reduce using rule 185 (member_in_exp)



state 106

    member_in_exp  ->  identifier .   (rule 178)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 382)
    struct_member_exp  ->  identifier . DOT function   (rule 385)
    struct_member_exp  ->  identifier . IMPLY function   (rule 386)

    DOT 	shift, and go to state 213
    IMPLY	shift, and go to state 214

    DOT 	[reduce using rule 178 (member_in_exp)]
    IMPLY	[reduce using rule 178 (member_in_exp)]
    $default	reduce using rule 178 (member_in_exp)



state 107

    member_in_exp  ->  intliteral .   (rule 173)

    $default	reduce using rule 173 (member_in_exp)



state 108

    member_in_exp  ->  charliteral .   (rule 183)

    $default	reduce using rule 183 (member_in_exp)



state 109

    member_in_exp  ->  floatliteral .   (rule 177)

    $default	reduce using rule 177 (member_in_exp)



state 110

    member_in_exp  ->  struct_member_exp .   (rule 186)

    $default	reduce using rule 186 (member_in_exp)



state 111

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  FINAL complexProposition .   (rule 21)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 21 (complexProposition)



state 112

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  KEEP complexProposition .   (rule 10)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 10 (complexProposition)



state 113

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  ALWAYS complexProposition .   (rule 9)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 9 (complexProposition)



state 114

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  HALT complexProposition .   (rule 20)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 20 (complexProposition)



state 115

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  W_NEXT complexProposition .   (rule 12)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 12 (complexProposition)



state 116

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  SOMETIMES complexProposition .   (rule 11)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 11 (complexProposition)



state 117

    gComplexProposition  ->  PBEGIN complexProposition PEND .   (rule 2)

    $default	reduce using rule 2 (gComplexProposition)



state 118

    complexProposition  ->  complexProposition CHOP . complexProposition   (rule 8)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 262



state 119

    complexProposition  ->  complexProposition IFF . complexProposition   (rule 6)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 263



state 120

    complexProposition  ->  complexProposition PROPIMPLY . complexProposition   (rule 7)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 264



state 121

    complexProposition  ->  complexProposition OR . complexProposition   (rule 5)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 265



state 122

    complexProposition  ->  complexProposition AND . complexProposition   (rule 4)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 266



state 123

    complexProposition  ->  complexProposition CHOPSTAR .   (rule 26)

    $default	reduce using rule 26 (complexProposition)



state 124

    switch_statement  ->  SWITCH OPEN_PAR . member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 351)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    member_in_exp	go to state 267
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 125

    statement  ->  RETURN ID .   (rule 36)

    $default	reduce using rule 36 (statement)



state 126

    member_in_exp  ->  POINTERNULL .   (rule 176)
    prime_bool_exp  ->  POINTERNULL . EQ ari_exp   (rule 256)
    prime_bool_exp  ->  POINTERNULL . NE ari_exp   (rule 257)

    NE  	shift, and go to state 268
    EQ  	shift, and go to state 269

    NE  	[reduce using rule 176 (member_in_exp)]
    EQ  	[reduce using rule 176 (member_in_exp)]
    $default	reduce using rule 176 (member_in_exp)



state 127

    prime_bool_exp  ->  MY_TRUE .   (rule 247)

    $default	reduce using rule 247 (prime_bool_exp)



state 128

    prime_bool_exp  ->  MY_FALSE .   (rule 248)

    $default	reduce using rule 248 (prime_bool_exp)



state 129

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    STRUCT	shift, and go to state 220
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    INTDECLARATION	shift, and go to state 221
    CHARDECLARATION	shift, and go to state 222
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 224
    OPEN_PAR	shift, and go to state 270
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 226
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 130
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 271
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    bool_exp	go to state 272
    prime_bool_exp	go to state 134
    identifier	go to state 233
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234



state 130

    bool_exp  ->  NEGATION . bool_exp   (rule 242)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 129
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 130
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    bool_exp	go to state 273
    prime_bool_exp	go to state 134
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 131

    strliteral  ->  STRLITERAL .   (rule 327)

    $default	reduce using rule 327 (strliteral)



state 132

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 246)
    prime_bool_exp  ->  ari_exp .   (rule 249)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 250)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 251)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 254)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 255)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 258)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 259)

    NE  	shift, and go to state 274
    EQ  	shift, and go to state 275
    GE  	shift, and go to state 251
    LE  	shift, and go to state 252
    GT  	shift, and go to state 253
    LT  	shift, and go to state 254
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 249 (prime_bool_exp)

    ari_operator	go to state 245
    relation_operator	go to state 276



state 133

    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 357)

    THEN	shift, and go to state 277
    OR  	shift, and go to state 278
    AND 	shift, and go to state 279



state 134

    bool_exp  ->  prime_bool_exp .   (rule 241)

    $default	reduce using rule 241 (bool_exp)



state 135

    prime_bool_exp  ->  strliteral . EQ ari_exp   (rule 252)
    prime_bool_exp  ->  strliteral . NE ari_exp   (rule 253)

    NE  	shift, and go to state 280
    EQ  	shift, and go to state 281



state 136

    statement  ->  AWAIT OPEN_PAR . bool_exp CLOSE_PAR   (rule 44)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 129
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 130
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    bool_exp	go to state 282
    prime_bool_exp	go to state 134
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 137

    struct_identifier  ->  STRUCT ID .   (rule 80)
    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 87)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 194

    $default	reduce using rule 80 (struct_identifier)

    option_identifier_array_declaration	go to state 283
    identifier	go to state 196



state 138

    function_define  ->  STRUCT STRUCT_TYPE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)
    function_define  ->  STRUCT STRUCT_TYPE . MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)
    function_define  ->  STRUCT STRUCT_TYPE . MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)
    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 89)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 284
    ID  	shift, and go to state 285

    option_identifier_array_declaration	go to state 286
    identifier	go to state 196



state 139

    struct_identifier  ->  UNION ID .   (rule 81)
    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 88)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 194

    $default	reduce using rule 81 (struct_identifier)

    option_identifier_array_declaration	go to state 287
    identifier	go to state 196



state 140

    declaration  ->  UNION STRUCT_TYPE . option_identifier_array_declaration   (rule 90)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 288
    identifier	go to state 196



state 141

    statement  ->  DEFINE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    OPEN_PAR	shift, and go to state 289



state 142

    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)

    OPEN_PAR	shift, and go to state 142
    ID  	shift, and go to state 143

    identifier	go to state 290



state 143

    identifier  ->  ID .   (rule 325)

    $default	reduce using rule 325 (identifier)



state 144

    statement  ->  EXIST identifier . inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 64)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 292



state 145

    statement  ->  FRAME OPEN_PAR . identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    OPEN_PAR	shift, and go to state 142
    ID  	shift, and go to state 143

    identifier	go to state 293



state 146

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    extend_for_statement  ->  FOR OPEN_PAR . for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 343)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 294
    UNION	shift, and go to state 170
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 295
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 296
    VOIDDECLARATION	shift, and go to state 297
    FLOATDECLARATION	shift, and go to state 298
    OPEN_PAR	shift, and go to state 299
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 226
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEXT	shift, and go to state 183
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 300
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    $default	reduce using rule 346 (for_sta_init)

    function	go to state 98
    declaration	go to state 301
    type_define	go to state 175
    ass_statement	go to state 302
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 160
    point_exp	go to state 161
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 164
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    for_sta_init	go to state 303
    struct_member_exp	go to state 166



state 147

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    for_statement  ->  FOR ari_exp . TIMES DO statement_bpar   (rule 342)

    TIMES	shift, and go to state 304
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    ari_operator	go to state 245



state 148

    bool_par  ->  error . CLOSE_PAR   (rule 324)

    CLOSE_PAR	shift, and go to state 305



state 149

    bool_par  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 323)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 129
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 130
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    bool_exp	go to state 306
    prime_bool_exp	go to state 134
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 150

    while_statement  ->  WHILE bool_par . statement_bpar   (rule 341)

    error	shift, and go to state 307
    OPEN_BPAR	shift, and go to state 308

    statement_bpar	go to state 309



state 151

    statement  ->  REPEAT OPEN_BPAR . statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 310
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 152

    output_statement  ->  DISPLAY OPEN_PAR . ass_right CLOSE_PAR   (rule 360)
    output_statement  ->  DISPLAY OPEN_PAR . ass_right option_output CLOSE_PAR   (rule 361)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 311
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 314
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    ass_right	go to state 315
    rightaddrshift	go to state 316
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 317
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 318
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    strliteral	go to state 321
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 153

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 166)
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 357)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 129
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 130
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    bool_exp	go to state 322
    prime_bool_exp	go to state 134
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 154

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 65)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 340)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 153
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 126
    STRUCT	shift, and go to state 323
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 324
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 325
    VOIDDECLARATION	shift, and go to state 297
    FLOATDECLARATION	shift, and go to state 326
    OPEN_PAR	shift, and go to state 154
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 327
    SIGNED	shift, and go to state 328
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 155
    BNE 	shift, and go to state 94
    NEXT	shift, and go to state 52
    NEGATION	shift, and go to state 156
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    STRUCT_TYPE	shift, and go to state 300
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    statement	go to state 157
    function_define	go to state 61
    function	go to state 158
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 159
    leftaddrshift	go to state 70
    array	go to state 160
    point_exp	go to state 161
    ari_exp	go to state 271
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    prime_bool_exp	go to state 163
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 164
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    imply_pre	go to state 329
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 166



state 155

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    point_exp  ->  MUL . identifier   (rule 156)
    point_exp  ->  MUL . point_exp   (rule 157)
    point_exp  ->  MUL . array   (rule 158)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 160)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 161)

    OPEN_PAR	shift, and go to state 177
    MUL 	shift, and go to state 330
    ID  	shift, and go to state 331

    array	go to state 179
    point_exp	go to state 180
    identifier	go to state 332



state 156

    imply_pre  ->  NEGATION . imply_pre   (rule 337)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 333
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 156
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    prime_bool_exp	go to state 163
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    imply_pre	go to state 334
    struct_member_exp	go to state 110



state 157

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_PAR statement . CLOSE_PAR   (rule 65)

    CLOSE_PAR	shift, and go to state 335
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200



state 158

    statement  ->  function .   (rule 63)
    member_in_exp  ->  function .   (rule 181)

    CLOSE_PAR	reduce using rule 63 (statement)
    CLOSE_PAR	[reduce using rule 181 (member_in_exp)]
    CHOP	reduce using rule 63 (statement)
    OR  	reduce using rule 63 (statement)
    OR  	[reduce using rule 181 (member_in_exp)]
    PARALLEL	reduce using rule 63 (statement)
    AND 	reduce using rule 63 (statement)
    AND 	[reduce using rule 181 (member_in_exp)]
    $default	reduce using rule 181 (member_in_exp)



state 159

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 116)
    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 121)

    CLOSE_PAR	shift, and go to state 336
    ASS_P	shift, and go to state 203
    ASS_N	shift, and go to state 204

    assign_operator	go to state 205



state 160

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    ass_left  ->  array .   (rule 119)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 152)
    member_in_exp  ->  array .   (rule 179)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 383)

    DOT 	shift, and go to state 206
    OPEN_PAR	shift, and go to state 207
    CLOSE_PAR	shift, and go to state 337
    IMPLY	shift, and go to state 208

    CLOSE_PAR	[reduce using rule 119 (ass_left)]
    CLOSE_PAR	[reduce using rule 179 (member_in_exp)]
    ASS_P	reduce using rule 119 (ass_left)
    ASS_N	reduce using rule 119 (ass_left)
    $default	reduce using rule 179 (member_in_exp)



state 161

    ass_left  ->  point_exp .   (rule 120)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 162)
    member_in_exp  ->  point_exp .   (rule 180)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 381)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 387)

    DOT 	shift, and go to state 209
    CLOSE_PAR	shift, and go to state 338
    IMPLY	shift, and go to state 210

    CLOSE_PAR	[reduce using rule 120 (ass_left)]
    CLOSE_PAR	[reduce using rule 180 (member_in_exp)]
    ASS_P	reduce using rule 120 (ass_left)
    ASS_N	reduce using rule 120 (ass_left)
    $default	reduce using rule 180 (member_in_exp)



state 162

    member_in_exp  ->  address_exp .   (rule 184)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)

    CLOSE_PAR	shift, and go to state 339

    CLOSE_PAR	[reduce using rule 184 (member_in_exp)]
    $default	reduce using rule 184 (member_in_exp)



state 163

    imply_pre  ->  prime_bool_exp .   (rule 336)

    $default	reduce using rule 336 (imply_pre)



state 164

    ass_left  ->  identifier .   (rule 117)
    member_in_exp  ->  identifier .   (rule 178)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 326)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 382)
    struct_member_exp  ->  identifier . DOT function   (rule 385)
    struct_member_exp  ->  identifier . IMPLY function   (rule 386)

    DOT 	shift, and go to state 213
    CLOSE_PAR	shift, and go to state 340
    IMPLY	shift, and go to state 214

    CLOSE_PAR	[reduce using rule 117 (ass_left)]
    CLOSE_PAR	[reduce using rule 178 (member_in_exp)]
    ASS_P	reduce using rule 117 (ass_left)
    ASS_N	reduce using rule 117 (ass_left)
    $default	reduce using rule 178 (member_in_exp)



state 165

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 338)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 339)

    CLOSE_PAR	shift, and go to state 341
    OR  	shift, and go to state 342
    AND 	shift, and go to state 343



state 166

    ass_left  ->  struct_member_exp .   (rule 118)
    member_in_exp  ->  struct_member_exp .   (rule 186)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 388)

    CLOSE_PAR	shift, and go to state 344

    CLOSE_PAR	[reduce using rule 118 (ass_left)]
    CLOSE_PAR	[reduce using rule 186 (member_in_exp)]
    ASS_P	reduce using rule 118 (ass_left)
    ASS_N	reduce using rule 118 (ass_left)
    $default	reduce using rule 186 (member_in_exp)



state 167

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_BPAR statement . option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 58)
    statement  ->  OPEN_BPAR statement . CLOSE_BPAR PROJECTION statement_bpar   (rule 59)

    COMMA	shift, and go to state 345
    CLOSE_BPAR	shift, and go to state 346
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200

    CLOSE_BPAR	[reduce using rule 334 (option_projection)]
    $default	reduce using rule 334 (option_projection)

    option_projection	go to state 347



state 168

    function  ->  EXTERN ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 77)

    OPEN_PAR	shift, and go to state 348



state 169

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 87)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 89)

    ID  	shift, and go to state 349
    STRUCT_TYPE	shift, and go to state 350



state 170

    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 88)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 90)

    ID  	shift, and go to state 351
    STRUCT_TYPE	shift, and go to state 140



state 171

    type_define  ->  INTDECLARATION .   (rule 95)
    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 266)

    MUL 	reduce using rule 95 (type_define)
    MUL 	[reduce using rule 266 (sign_type_define)]
    ID  	reduce using rule 95 (type_define)
    ID  	[reduce using rule 266 (sign_type_define)]
    $default	reduce using rule 95 (type_define)



state 172

    type_define  ->  CHARDECLARATION .   (rule 97)
    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 267)

    MUL 	reduce using rule 97 (type_define)
    MUL 	[reduce using rule 267 (sign_type_define)]
    ID  	reduce using rule 97 (type_define)
    ID  	[reduce using rule 267 (sign_type_define)]
    $default	reduce using rule 97 (type_define)



state 173

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)

    MUL 	shift, and go to state 352



state 174

    sign_declaration  ->  UNSIGNED declaration .   (rule 83)

    $default	reduce using rule 83 (sign_declaration)



state 175

    declaration  ->  type_define . option_identifier_array_declaration   (rule 85)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 202
    identifier	go to state 196



state 176

    sign_declaration  ->  SIGNED declaration .   (rule 82)

    $default	reduce using rule 82 (sign_declaration)



state 177

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 160)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 161)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 225
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 353
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    type_define	go to state 354
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 355
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    sign_type_define	go to state 73
    all_type_define	go to state 356
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 178

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    identifier  ->  ID .   (rule 325)

    OPEN_MPAR	shift, and go to state 192

    $default	reduce using rule 325 (identifier)



state 179

    point_exp  ->  MUL array .   (rule 158)

    $default	reduce using rule 158 (point_exp)



state 180

    point_exp  ->  MUL point_exp .   (rule 157)

    $default	reduce using rule 157 (point_exp)



state 181

    point_exp  ->  MUL identifier .   (rule 156)

    $default	reduce using rule 156 (point_exp)



state 182

    statement  ->  NEXT OPEN_PAR . statement CLOSE_PAR   (rule 41)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 357
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    ADDRESS	shift, and go to state 92
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 358
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 159
    leftaddrshift	go to state 70
    array	go to state 359
    point_exp	go to state 360
    address_exp	go to state 361
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 362
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 363



state 183

    ass_left  ->  NEXT . ass_left   (rule 122)

    OPEN_PAR	shift, and go to state 364
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 183
    ID  	shift, and go to state 178

    ass_left	go to state 184
    leftaddrshift	go to state 70
    array	go to state 185
    point_exp	go to state 72
    identifier	go to state 75
    struct_member_exp	go to state 83



state 184

    ass_left  ->  NEXT ass_left .   (rule 122)

    $default	reduce using rule 122 (ass_left)



state 185

    ass_left  ->  array .   (rule 119)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 383)

    DOT 	shift, and go to state 206
    IMPLY	shift, and go to state 208

    $default	reduce using rule 119 (ass_left)



state 186

    statement  ->  LENGTH OPEN_PAR . ari_exp CLOSE_PAR   (rule 49)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 365
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 187

    input_statement  ->  REQUEST OPEN_PAR . identifier CLOSE_PAR   (rule 364)
    input_statement  ->  REQUEST OPEN_PAR . identifier option_input CLOSE_PAR   (rule 365)
    input_statement  ->  REQUEST OPEN_PAR . array CLOSE_PAR   (rule 366)
    input_statement  ->  REQUEST OPEN_PAR . array option_input CLOSE_PAR   (rule 367)
    input_statement  ->  REQUEST OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 368)

    OPEN_PAR	shift, and go to state 366
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 178

    array	go to state 367
    point_exp	go to state 237
    identifier	go to state 368
    struct_member_exp	go to state 369



state 188

    statement  ->  FINAL OPEN_PAR . statement CLOSE_PAR   (rule 54)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 370
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 189

    statement  ->  KEEP OPEN_PAR . statement CLOSE_PAR   (rule 42)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 371
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 190

    statement  ->  ALWAYS OPEN_PAR . statement CLOSE_PAR   (rule 43)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 372
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 191

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 76)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 311
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 373
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 314
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 374
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    $default	reduce using rule 315 (option_function_identifier)

    function	go to state 98
    ass_right	go to state 375
    rightaddrshift	go to state 316
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 317
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 318
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 104
    type_cast	go to state 105
    option_function_identifier	go to state 376
    identifier	go to state 106
    strliteral	go to state 321
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 192

    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 377
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 193

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 108)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 378
    identifier	go to state 196



state 194

    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 105)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 106)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 107)
    identifier  ->  ID .   (rule 325)

    ARRAY	shift, and go to state 379
    OPEN_MPAR	shift, and go to state 380

    $default	reduce using rule 325 (identifier)



state 195

    declaration  ->  STRUCT_TYPE option_identifier_array_declaration .   (rule 86)

    $default	reduce using rule 86 (declaration)



state 196

    option_identifier_array_declaration  ->  identifier . inner_option_identifier_array_declaration   (rule 101)
    option_identifier_array_declaration  ->  identifier . ASS_P ass_right inner_option_identifier_array_declaration   (rule 103)

    COMMA	shift, and go to state 381
    ASS_P	shift, and go to state 382

    COMMA	[reduce using rule 111 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 111 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 383



state 197

    statement  ->  statement CHOP . statement   (rule 32)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 384
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 198

    statement  ->  statement OR . statement   (rule 31)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 385
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 199

    statement  ->  statement PARALLEL . statement   (rule 55)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 386
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 200

    statement  ->  statement AND . statement   (rule 30)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 387
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 201

    struct_define_statement  ->  struct_identifier OPEN_BPAR . option_struct_declaration CLOSE_BPAR   (rule 79)

    STRUCT	shift, and go to state 169
    UNION	shift, and go to state 170
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 173
    UNSIGNED	shift, and go to state 388
    SIGNED	shift, and go to state 50
    STRUCT_TYPE	shift, and go to state 59

    option_struct_declaration	go to state 389
    sign_declaration	go to state 390
    declaration	go to state 66
    type_define	go to state 175



state 202

    declaration  ->  type_define option_identifier_array_declaration .   (rule 85)

    $default	reduce using rule 85 (declaration)



state 203

    assign_operator  ->  ASS_P .   (rule 137)

    $default	reduce using rule 137 (assign_operator)



state 204

    assign_operator  ->  ASS_N .   (rule 138)

    $default	reduce using rule 138 (assign_operator)



state 205

    ass_statement  ->  ass_left assign_operator . ass_right   (rule 116)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 311
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 314
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    ass_right	go to state 391
    rightaddrshift	go to state 316
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 317
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 318
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    strliteral	go to state 321
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 206

    struct_member_exp  ->  array DOT . identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array DOT . array option_struct_member_exp   (rule 376)

    OPEN_PAR	shift, and go to state 392
    ID  	shift, and go to state 178

    array	go to state 393
    identifier	go to state 394



state 207

    function  ->  array OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 78)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 311
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 373
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 314
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 374
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    $default	reduce using rule 315 (option_function_identifier)

    function	go to state 98
    ass_right	go to state 375
    rightaddrshift	go to state 316
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 317
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 318
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 104
    type_cast	go to state 105
    option_function_identifier	go to state 395
    identifier	go to state 106
    strliteral	go to state 321
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 208

    struct_member_exp  ->  array IMPLY . identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  array IMPLY . array option_struct_member_exp   (rule 383)

    OPEN_PAR	shift, and go to state 392
    ID  	shift, and go to state 178

    array	go to state 396
    identifier	go to state 397



state 209

    struct_member_exp  ->  point_exp DOT . identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp DOT . array option_struct_member_exp   (rule 377)

    OPEN_PAR	shift, and go to state 392
    ID  	shift, and go to state 178

    array	go to state 398
    identifier	go to state 399



state 210

    struct_member_exp  ->  point_exp IMPLY . identifier option_struct_member_exp   (rule 381)
    struct_member_exp  ->  point_exp IMPLY . array option_struct_member_exp   (rule 387)

    OPEN_PAR	shift, and go to state 392
    ID  	shift, and go to state 178

    array	go to state 400
    identifier	go to state 401



state 211

    function_define  ->  all_type_define MUL . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 71)
    function_define  ->  all_type_define MUL . MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    MUL 	shift, and go to state 402
    ID  	shift, and go to state 403



state 212

    function_define  ->  all_type_define ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    OPEN_PAR	shift, and go to state 404



state 213

    struct_member_exp  ->  identifier DOT . identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  identifier DOT . array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier DOT . function   (rule 385)

    OPEN_PAR	shift, and go to state 392
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 58

    function	go to state 405
    array	go to state 406
    identifier	go to state 407



state 214

    struct_member_exp  ->  identifier IMPLY . identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  identifier IMPLY . array option_struct_member_exp   (rule 382)
    struct_member_exp  ->  identifier IMPLY . function   (rule 386)

    OPEN_PAR	shift, and go to state 392
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 58

    function	go to state 408
    array	go to state 409
    identifier	go to state 410



state 215

    complexProposition  ->  DEFINE ID COLON . prime_bool_exp   (rule 25)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    prime_bool_exp	go to state 411
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 216

    complexProposition  ->  OPEN_PAR complexProposition CLOSE_PAR .   (rule 27)

    $default	reduce using rule 27 (complexProposition)



state 217

    poptional_projection  ->  COMMA . complexProposition poptional_projection   (rule 28)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 412



state 218

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection . CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    CLOSE_BPAR	shift, and go to state 413



state 219

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 166)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)

    THEN	shift, and go to state 414
    OR  	shift, and go to state 278
    AND 	shift, and go to state 279



state 220

    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)

    STRUCT_TYPE	shift, and go to state 415



state 221

    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 416
    MUL 	shift, and go to state 417



state 222

    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 418
    MUL 	shift, and go to state 419



state 223

    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 235)

    MUL 	shift, and go to state 420



state 224

    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 421
    MUL 	shift, and go to state 422



state 225

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 423
    CHARDECLARATION	shift, and go to state 424
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 425
    OPEN_PAR	shift, and go to state 225
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 426
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234



state 226

    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)

    INTDECLARATION	shift, and go to state 427
    CHARDECLARATION	shift, and go to state 428



state 227

    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)

    INTDECLARATION	shift, and go to state 429
    CHARDECLARATION	shift, and go to state 430



state 228

    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 239)

    MUL 	shift, and go to state 431



state 229

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 152)
    member_in_exp  ->  array .   (rule 179)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 383)

    DOT 	shift, and go to state 206
    OPEN_PAR	shift, and go to state 207
    CLOSE_PAR	shift, and go to state 337
    IMPLY	shift, and go to state 208

    CLOSE_PAR	[reduce using rule 179 (member_in_exp)]
    $default	reduce using rule 179 (member_in_exp)



state 230

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 162)
    member_in_exp  ->  point_exp .   (rule 180)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 381)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 387)

    DOT 	shift, and go to state 209
    CLOSE_PAR	shift, and go to state 338
    IMPLY	shift, and go to state 210

    CLOSE_PAR	[reduce using rule 180 (member_in_exp)]
    $default	reduce using rule 180 (member_in_exp)



state 231

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 182)

    CLOSE_PAR	shift, and go to state 432
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    ari_operator	go to state 245



state 232

    member_in_exp  ->  address_exp .   (rule 184)
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 216)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)

    CLOSE_PAR	shift, and go to state 433

    CLOSE_PAR	[reduce using rule 184 (member_in_exp)]
    $default	reduce using rule 184 (member_in_exp)



state 233

    member_in_exp  ->  identifier .   (rule 178)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 326)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 382)
    struct_member_exp  ->  identifier . DOT function   (rule 385)
    struct_member_exp  ->  identifier . IMPLY function   (rule 386)

    DOT 	shift, and go to state 213
    CLOSE_PAR	shift, and go to state 340
    IMPLY	shift, and go to state 214

    CLOSE_PAR	[reduce using rule 178 (member_in_exp)]
    $default	reduce using rule 178 (member_in_exp)



state 234

    member_in_exp  ->  struct_member_exp .   (rule 186)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 388)

    CLOSE_PAR	shift, and go to state 344

    CLOSE_PAR	[reduce using rule 186 (member_in_exp)]
    $default	reduce using rule 186 (member_in_exp)



state 235

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    OPEN_PAR	shift, and go to state 434
    ADDRESS	shift, and go to state 92
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 178

    array	go to state 435
    point_exp	go to state 436
    address_exp	go to state 437
    identifier	go to state 438
    struct_member_exp	go to state 439



state 236

    address_exp  ->  ADDRESS array .   (rule 213)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 383)

    DOT 	shift, and go to state 206

    DOT 	[reduce using rule 213 (address_exp)]
    $default	reduce using rule 213 (address_exp)



state 237

    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 381)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 387)

    DOT 	shift, and go to state 209
    IMPLY	shift, and go to state 210



state 238

    address_exp  ->  ADDRESS address_exp .   (rule 215)

    $default	reduce using rule 215 (address_exp)



state 239

    address_exp  ->  ADDRESS identifier .   (rule 212)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 382)
    struct_member_exp  ->  identifier . DOT function   (rule 385)
    struct_member_exp  ->  identifier . IMPLY function   (rule 386)

    DOT 	shift, and go to state 213

    DOT 	[reduce using rule 212 (address_exp)]
    $default	reduce using rule 212 (address_exp)



state 240

    address_exp  ->  ADDRESS struct_member_exp .   (rule 214)

    $default	reduce using rule 214 (address_exp)



state 241

    member_in_exp  ->  SUB member_in_exp .   (rule 174)

    $default	reduce using rule 174 (member_in_exp)



state 242

    member_in_exp  ->  BNE member_in_exp .   (rule 175)

    $default	reduce using rule 175 (member_in_exp)



state 243

    ari_operator  ->  ADD .   (rule 195)

    $default	reduce using rule 195 (ari_operator)



state 244

    ari_operator  ->  SUB .   (rule 196)

    $default	reduce using rule 196 (ari_operator)



state 245

    ari_exp  ->  ari_exp ari_operator . simple_ari_exp   (rule 165)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    simple_ari_exp	go to state 440
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 246

    bi_operator  ->  INTER_OR .   (rule 193)

    $default	reduce using rule 193 (bi_operator)



state 247

    bi_operator  ->  CON .   (rule 194)

    $default	reduce using rule 194 (bi_operator)



state 248

    bi_operator  ->  ADDRESS .   (rule 192)

    $default	reduce using rule 192 (bi_operator)



state 249

    relation_operator  ->  NE .   (rule 262)

    $default	reduce using rule 262 (relation_operator)



state 250

    relation_operator  ->  EQ .   (rule 265)

    $default	reduce using rule 265 (relation_operator)



state 251

    relation_operator  ->  GE .   (rule 260)

    $default	reduce using rule 260 (relation_operator)



state 252

    relation_operator  ->  LE .   (rule 261)

    $default	reduce using rule 261 (relation_operator)



state 253

    relation_operator  ->  GT .   (rule 263)

    $default	reduce using rule 263 (relation_operator)



state 254

    relation_operator  ->  LT .   (rule 264)

    $default	reduce using rule 264 (relation_operator)



state 255

    bi_operator  ->  LST .   (rule 190)

    $default	reduce using rule 190 (bi_operator)



state 256

    bi_operator  ->  RST .   (rule 191)

    $default	reduce using rule 191 (bi_operator)



state 257

    bi_operator  ->  MUL .   (rule 187)

    $default	reduce using rule 187 (bi_operator)



state 258

    bi_operator  ->  DIV .   (rule 188)

    $default	reduce using rule 188 (bi_operator)



state 259

    bi_operator  ->  MOD .   (rule 189)

    $default	reduce using rule 189 (bi_operator)



state 260

    simple_ari_exp  ->  simple_ari_exp bi_operator . member_in_exp   (rule 172)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    member_in_exp	go to state 441
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 261

    ari_exp  ->  simple_ari_exp relation_operator . ari_exp   (rule 164)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 442
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 262

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition CHOP complexProposition .   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    IFF 	shift, and go to state 119
    PROPIMPLY	shift, and go to state 120
    OR  	shift, and go to state 121
    AND 	shift, and go to state 122
    CHOPSTAR	shift, and go to state 123

    $default	reduce using rule 8 (complexProposition)



state 263

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition IFF complexProposition .   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 121
    AND 	shift, and go to state 122
    CHOPSTAR	shift, and go to state 123

    $default	reduce using rule 6 (complexProposition)



state 264

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition PROPIMPLY complexProposition .   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 121
    AND 	shift, and go to state 122
    CHOPSTAR	shift, and go to state 123

    $default	reduce using rule 7 (complexProposition)



state 265

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition OR complexProposition .   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    AND 	shift, and go to state 122
    CHOPSTAR	shift, and go to state 123

    $default	reduce using rule 5 (complexProposition)



state 266

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition AND complexProposition .   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CHOPSTAR	shift, and go to state 123

    $default	reduce using rule 4 (complexProposition)



state 267

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp . CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 351)

    CLOSE_PAR	shift, and go to state 443



state 268

    prime_bool_exp  ->  POINTERNULL NE . ari_exp   (rule 257)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 444
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 269

    prime_bool_exp  ->  POINTERNULL EQ . ari_exp   (rule 256)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 445
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 270

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 245)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    STRUCT	shift, and go to state 220
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    INTDECLARATION	shift, and go to state 423
    CHARDECLARATION	shift, and go to state 424
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 425
    OPEN_PAR	shift, and go to state 270
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 426
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 130
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 271
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    bool_exp	go to state 272
    prime_bool_exp	go to state 134
    identifier	go to state 233
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234



state 271

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 182)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 246)
    prime_bool_exp  ->  ari_exp .   (rule 249)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 250)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 251)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 254)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 255)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 258)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 259)

    CLOSE_PAR	shift, and go to state 432
    NE  	shift, and go to state 274
    EQ  	shift, and go to state 275
    GE  	shift, and go to state 251
    LE  	shift, and go to state 252
    GT  	shift, and go to state 253
    LT  	shift, and go to state 254
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    CLOSE_PAR	[reduce using rule 249 (prime_bool_exp)]
    $default	reduce using rule 249 (prime_bool_exp)

    ari_operator	go to state 245
    relation_operator	go to state 276



state 272

    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)
    bool_exp  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 245)

    CLOSE_PAR	shift, and go to state 446
    OR  	shift, and go to state 278
    AND 	shift, and go to state 279



state 273

    bool_exp  ->  NEGATION bool_exp .   (rule 242)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)


    $default	reduce using rule 242 (bool_exp)



state 274

    prime_bool_exp  ->  ari_exp NE . strliteral   (rule 251)
    prime_bool_exp  ->  ari_exp NE . POINTERNULL   (rule 255)
    prime_bool_exp  ->  ari_exp NE . charliteral   (rule 259)
    relation_operator  ->  NE .   (rule 262)

    POINTERNULL	shift, and go to state 447
    STRLITERAL	shift, and go to state 131
    CHARLITERAL	shift, and go to state 97

    POINTERNULL	[reduce using rule 262 (relation_operator)]
    CHARLITERAL	[reduce using rule 262 (relation_operator)]
    $default	reduce using rule 262 (relation_operator)

    strliteral	go to state 448
    charliteral	go to state 449



state 275

    prime_bool_exp  ->  ari_exp EQ . strliteral   (rule 250)
    prime_bool_exp  ->  ari_exp EQ . POINTERNULL   (rule 254)
    prime_bool_exp  ->  ari_exp EQ . charliteral   (rule 258)
    relation_operator  ->  EQ .   (rule 265)

    POINTERNULL	shift, and go to state 450
    STRLITERAL	shift, and go to state 131
    CHARLITERAL	shift, and go to state 97

    POINTERNULL	[reduce using rule 265 (relation_operator)]
    CHARLITERAL	[reduce using rule 265 (relation_operator)]
    $default	reduce using rule 265 (relation_operator)

    strliteral	go to state 451
    charliteral	go to state 452



state 276

    prime_bool_exp  ->  ari_exp relation_operator . ari_exp   (rule 246)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 453
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 277

    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 357)

    error	shift, and go to state 307
    OPEN_BPAR	shift, and go to state 308

    statement_bpar	go to state 454



state 278

    bool_exp  ->  bool_exp OR . bool_exp   (rule 244)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 129
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 130
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    bool_exp	go to state 455
    prime_bool_exp	go to state 134
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 279

    bool_exp  ->  bool_exp AND . bool_exp   (rule 243)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 129
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 130
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    bool_exp	go to state 456
    prime_bool_exp	go to state 134
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 280

    prime_bool_exp  ->  strliteral NE . ari_exp   (rule 253)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 457
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 281

    prime_bool_exp  ->  strliteral EQ . ari_exp   (rule 252)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 458
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 282

    statement  ->  AWAIT OPEN_PAR bool_exp . CLOSE_PAR   (rule 44)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)

    CLOSE_PAR	shift, and go to state 459
    OR  	shift, and go to state 278
    AND 	shift, and go to state 279



state 283

    declaration  ->  STRUCT ID option_identifier_array_declaration .   (rule 87)

    $default	reduce using rule 87 (declaration)



state 284

    function_define  ->  STRUCT STRUCT_TYPE MUL . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)
    function_define  ->  STRUCT STRUCT_TYPE MUL . MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 108)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 460
    ID  	shift, and go to state 461

    option_identifier_array_declaration	go to state 378
    identifier	go to state 196



state 285

    function_define  ->  STRUCT STRUCT_TYPE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 105)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 106)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 107)
    identifier  ->  ID .   (rule 325)

    ARRAY	shift, and go to state 379
    OPEN_PAR	shift, and go to state 462
    OPEN_MPAR	shift, and go to state 380

    $default	reduce using rule 325 (identifier)



state 286

    declaration  ->  STRUCT STRUCT_TYPE option_identifier_array_declaration .   (rule 89)

    $default	reduce using rule 89 (declaration)



state 287

    declaration  ->  UNION ID option_identifier_array_declaration .   (rule 88)

    $default	reduce using rule 88 (declaration)



state 288

    declaration  ->  UNION STRUCT_TYPE option_identifier_array_declaration .   (rule 90)

    $default	reduce using rule 90 (declaration)



state 289

    statement  ->  DEFINE ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 463
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 464
    STRUCT_TYPE	shift, and go to state 465

    $default	reduce using rule 295 (option_function_parameter_list)

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 466
    option_function_parameter_list	go to state 467



state 290

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 326)

    CLOSE_PAR	shift, and go to state 340



state 291

    inner_option_define_identifier  ->  COMMA . all_type_define identifier inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA . all_type_define inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA . ID identifier inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE MUL identifier inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA . ID identifier ARRAY inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier ARRAY inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier ARRAY inner_option_define_identifier   (rule 304)
    inner_option_define_identifier  ->  COMMA . OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 305)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 307)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 308)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 309)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier inner_option_define_identifier   (rule 310)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL inner_option_define_identifier   (rule 311)
    inner_option_define_identifier  ->  COMMA . error   (rule 312)

    error	shift, and go to state 468
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 469
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 470
    STRUCT_TYPE	shift, and go to state 471

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 472



state 292

    statement  ->  EXIST identifier inner_option_define_identifier . COLON OPEN_BPAR statement CLOSE_BPAR   (rule 64)

    COLON	shift, and go to state 473



state 293

    statement  ->  FRAME OPEN_PAR identifier . option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    COMMA	shift, and go to state 474

    $default	reduce using rule 332 (option_frame_identifier)

    option_frame_identifier	go to state 475



state 294

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 87)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 89)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)

    ID  	shift, and go to state 349
    STRUCT_TYPE	shift, and go to state 476



state 295

    type_define  ->  INTDECLARATION .   (rule 95)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 416
    MUL 	shift, and go to state 417

    MUL 	[reduce using rule 95 (type_define)]
    $default	reduce using rule 95 (type_define)



state 296

    type_define  ->  CHARDECLARATION .   (rule 97)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 418
    MUL 	shift, and go to state 419

    MUL 	[reduce using rule 97 (type_define)]
    $default	reduce using rule 97 (type_define)



state 297

    type_define  ->  VOIDDECLARATION .   (rule 99)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 235)

    MUL 	shift, and go to state 420

    MUL 	[reduce using rule 99 (type_define)]
    $default	reduce using rule 99 (type_define)



state 298

    type_define  ->  FLOATDECLARATION .   (rule 96)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 421
    MUL 	shift, and go to state 422

    MUL 	[reduce using rule 96 (type_define)]
    $default	reduce using rule 96 (type_define)



state 299

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 423
    CHARDECLARATION	shift, and go to state 424
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 425
    OPEN_PAR	shift, and go to state 477
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 426
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 155
    BNE 	shift, and go to state 94
    NEXT	shift, and go to state 183
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    ass_left	go to state 478
    leftaddrshift	go to state 70
    array	go to state 160
    point_exp	go to state 161
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 164
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 166



state 300

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 86)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 239)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 479
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 195
    identifier	go to state 196



state 301

    for_sta_init  ->  declaration .   (rule 345)

    $default	reduce using rule 345 (for_sta_init)



state 302

    for_sta_init  ->  ass_statement .   (rule 344)

    $default	reduce using rule 344 (for_sta_init)



state 303

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init . COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 343)

    COMMA	shift, and go to state 480



state 304

    for_statement  ->  FOR ari_exp TIMES . DO statement_bpar   (rule 342)

    DO  	shift, and go to state 481



state 305

    bool_par  ->  error CLOSE_PAR .   (rule 324)

    $default	reduce using rule 324 (bool_par)



state 306

    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)
    bool_par  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 323)

    CLOSE_PAR	shift, and go to state 482
    OR  	shift, and go to state 278
    AND 	shift, and go to state 279



state 307

    statement_bpar  ->  error . CLOSE_BPAR   (rule 322)

    CLOSE_BPAR	shift, and go to state 483



state 308

    statement_bpar  ->  OPEN_BPAR . statement CLOSE_BPAR   (rule 321)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 484
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 309

    while_statement  ->  WHILE bool_par statement_bpar .   (rule 341)

    $default	reduce using rule 341 (while_statement)



state 310

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  REPEAT OPEN_BPAR statement . CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_BPAR	shift, and go to state 485
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200



state 311

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 142)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 200)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 221
    CHARDECLARATION	shift, and go to state 222
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 224
    OPEN_PAR	shift, and go to state 486
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 226
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 314
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    ass_right	go to state 487
    rightaddrshift	go to state 316
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 488
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 489
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    strliteral	go to state 490
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234



state 312

    option_struct_list_value  ->  OPEN_BPAR . ari_exp inner_option_list_value CLOSE_BPAR   (rule 204)
    option_struct_list_value  ->  OPEN_BPAR . strliteral inner_option_list_value CLOSE_BPAR   (rule 205)
    option_struct_list_value  ->  OPEN_BPAR . array_exp inner_option_list_value CLOSE_BPAR   (rule 206)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 491
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 492
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 493
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    strliteral	go to state 494
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 313

    option_list_value  ->  OPEN_MPAR . ari_exp inner_option_list_value CLOSE_MPAR   (rule 201)
    option_list_value  ->  OPEN_MPAR . strliteral inner_option_list_value CLOSE_MPAR   (rule 202)
    option_list_value  ->  OPEN_MPAR . array_exp inner_option_list_value CLOSE_MPAR   (rule 203)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 491
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 495
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 496
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    strliteral	go to state 497
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 314

    rightaddrshift  ->  MUL . OPEN_PAR leftaddrshift CLOSE_PAR   (rule 145)
    point_exp  ->  MUL . identifier   (rule 156)
    point_exp  ->  MUL . point_exp   (rule 157)
    point_exp  ->  MUL . array   (rule 158)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 160)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 161)

    OPEN_PAR	shift, and go to state 498
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 178

    array	go to state 179
    point_exp	go to state 180
    identifier	go to state 181



state 315

    output_statement  ->  DISPLAY OPEN_PAR ass_right . CLOSE_PAR   (rule 360)
    output_statement  ->  DISPLAY OPEN_PAR ass_right . option_output CLOSE_PAR   (rule 361)

    COMMA	shift, and go to state 499
    CLOSE_PAR	shift, and go to state 500

    CLOSE_PAR	[reduce using rule 362 (option_output)]
    $default	reduce using rule 362 (option_output)

    option_output	go to state 501



state 316

    ass_right  ->  rightaddrshift .   (rule 144)

    $default	reduce using rule 144 (ass_right)



state 317

    ass_right  ->  ari_exp .   (rule 139)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 139 (ass_right)

    ari_operator	go to state 245



state 318

    ass_right  ->  array_exp .   (rule 140)
    array_exp  ->  array_exp . CON array_exp   (rule 197)

    CON 	shift, and go to state 502

    $default	reduce using rule 140 (ass_right)



state 319

    array_exp  ->  option_list_value .   (rule 198)

    $default	reduce using rule 198 (array_exp)



state 320

    array_exp  ->  option_struct_list_value .   (rule 199)

    $default	reduce using rule 199 (array_exp)



state 321

    ass_right  ->  strliteral .   (rule 141)

    $default	reduce using rule 141 (ass_right)



state 322

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 166)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 357)

    THEN	shift, and go to state 503
    OR  	shift, and go to state 278
    AND 	shift, and go to state 279



state 323

    function_define  ->  STRUCT . STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)
    function_define  ->  STRUCT . STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)
    function_define  ->  STRUCT . STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)
    struct_identifier  ->  STRUCT . ID   (rule 80)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 87)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 89)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)

    ID  	shift, and go to state 137
    STRUCT_TYPE	shift, and go to state 504



state 324

    type_define  ->  INTDECLARATION .   (rule 95)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 416
    MUL 	shift, and go to state 505

    MUL 	[reduce using rule 95 (type_define)]
    $default	reduce using rule 95 (type_define)



state 325

    type_define  ->  CHARDECLARATION .   (rule 97)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 418
    MUL 	shift, and go to state 506

    MUL 	[reduce using rule 97 (type_define)]
    $default	reduce using rule 97 (type_define)



state 326

    type_define  ->  FLOATDECLARATION .   (rule 96)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 421
    MUL 	shift, and go to state 507

    MUL 	[reduce using rule 96 (type_define)]
    $default	reduce using rule 96 (type_define)



state 327

    sign_declaration  ->  UNSIGNED . declaration   (rule 83)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 266)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 267)

    STRUCT	shift, and go to state 169
    UNION	shift, and go to state 170
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 508
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 509
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 173
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 174
    type_define	go to state 175



state 328

    sign_declaration  ->  SIGNED . declaration   (rule 82)
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)

    STRUCT	shift, and go to state 169
    UNION	shift, and go to state 170
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 510
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 511
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 173
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 176
    type_define	go to state 175



state 329

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 338)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 339)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 340)

    CLOSE_PAR	shift, and go to state 512
    OR  	shift, and go to state 342
    AND 	shift, and go to state 343



state 330

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    point_exp  ->  MUL . identifier   (rule 156)
    point_exp  ->  MUL . point_exp   (rule 157)
    point_exp  ->  MUL . array   (rule 158)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 160)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 161)

    OPEN_PAR	shift, and go to state 177
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 178

    array	go to state 179
    point_exp	go to state 180
    identifier	go to state 513



state 331

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    identifier  ->  ID .   (rule 325)

    OPEN_MPAR	shift, and go to state 514

    $default	reduce using rule 325 (identifier)



state 332

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    point_exp  ->  MUL identifier .   (rule 156)

    CLOSE_PAR	shift, and go to state 515

    CLOSE_PAR	[reduce using rule 156 (point_exp)]
    $default	reduce using rule 156 (point_exp)



state 333

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 340)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    STRUCT	shift, and go to state 220
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    INTDECLARATION	shift, and go to state 221
    CHARDECLARATION	shift, and go to state 222
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 224
    OPEN_PAR	shift, and go to state 516
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 226
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 156
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 271
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    prime_bool_exp	go to state 163
    identifier	go to state 233
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    imply_pre	go to state 517
    struct_member_exp	go to state 234



state 334

    imply_pre  ->  NEGATION imply_pre .   (rule 337)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 338)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 339)


    $default	reduce using rule 337 (imply_pre)



state 335

    statement  ->  OPEN_PAR statement CLOSE_PAR .   (rule 65)

    $default	reduce using rule 65 (statement)



state 336

    ass_left  ->  OPEN_PAR ass_left CLOSE_PAR .   (rule 121)

    $default	reduce using rule 121 (ass_left)



state 337

    array  ->  OPEN_PAR array CLOSE_PAR .   (rule 152)

    $default	reduce using rule 152 (array)



state 338

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR .   (rule 162)

    OPEN_MPAR	shift, and go to state 518

    $default	reduce using rule 162 (point_exp)



state 339

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 384)

    IMPLY	shift, and go to state 519



state 340

    identifier  ->  OPEN_PAR identifier CLOSE_PAR .   (rule 326)

    $default	reduce using rule 326 (identifier)



state 341

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)

    IMPLY	shift, and go to state 520



state 342

    imply_pre  ->  imply_pre OR . imply_pre   (rule 339)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 333
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 156
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    prime_bool_exp	go to state 163
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    imply_pre	go to state 521
    struct_member_exp	go to state 110



state 343

    imply_pre  ->  imply_pre AND . imply_pre   (rule 338)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 333
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 156
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    prime_bool_exp	go to state 163
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    imply_pre	go to state 522
    struct_member_exp	go to state 110



state 344

    struct_member_exp  ->  OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 388)

    $default	reduce using rule 388 (struct_member_exp)



state 345

    option_projection  ->  COMMA . statement option_projection   (rule 335)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 523
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 346

    statement  ->  OPEN_BPAR statement CLOSE_BPAR . PROJECTION statement_bpar   (rule 59)

    PROJECTION	shift, and go to state 524



state 347

    statement  ->  OPEN_BPAR statement option_projection . CLOSE_BPAR PROJECTION statement_bpar   (rule 58)

    CLOSE_BPAR	shift, and go to state 525



state 348

    function  ->  EXTERN ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 77)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 311
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 373
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 314
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 374
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    $default	reduce using rule 315 (option_function_identifier)

    function	go to state 98
    ass_right	go to state 375
    rightaddrshift	go to state 316
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 317
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 318
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 104
    type_cast	go to state 105
    option_function_identifier	go to state 526
    identifier	go to state 106
    strliteral	go to state 321
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 349

    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 87)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 283
    identifier	go to state 196



state 350

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 89)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 286
    identifier	go to state 196



state 351

    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 88)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 287
    identifier	go to state 196



state 352

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 527
    ID  	shift, and go to state 528

    identifier	go to state 529



state 353

    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 266)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 267)

    INTDECLARATION	shift, and go to state 530
    CHARDECLARATION	shift, and go to state 531



state 354

    all_type_define  ->  type_define .   (rule 269)

    $default	reduce using rule 269 (all_type_define)



state 355

    point_exp  ->  MUL OPEN_PAR ari_exp . CLOSE_PAR   (rule 161)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    CLOSE_PAR	shift, and go to state 532
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    ari_operator	go to state 245



state 356

    point_exp  ->  MUL OPEN_PAR all_type_define . MUL CLOSE_PAR ari_exp   (rule 160)

    MUL 	shift, and go to state 533



state 357

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 65)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 153
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    POINTERNULL	shift, and go to state 126
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 534
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 535
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 536
    OPEN_PAR	shift, and go to state 154
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 537
    SIGNED	shift, and go to state 50
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 155
    BNE 	shift, and go to state 94
    NEXT	shift, and go to state 52
    NEGATION	shift, and go to state 156
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    STRUCT_TYPE	shift, and go to state 59
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    statement	go to state 157
    function_define	go to state 61
    function	go to state 158
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 159
    leftaddrshift	go to state 70
    array	go to state 160
    point_exp	go to state 161
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    prime_bool_exp	go to state 163
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 164
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    imply_pre	go to state 165
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 166



state 358

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  NEXT OPEN_PAR statement . CLOSE_PAR   (rule 41)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 538
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200



state 359

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    ass_left  ->  array .   (rule 119)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 152)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 383)

    DOT 	shift, and go to state 206
    OPEN_PAR	shift, and go to state 207
    CLOSE_PAR	shift, and go to state 337
    IMPLY	shift, and go to state 208

    CLOSE_PAR	[reduce using rule 119 (ass_left)]
    $default	reduce using rule 119 (ass_left)



state 360

    ass_left  ->  point_exp .   (rule 120)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 162)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 381)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 387)

    DOT 	shift, and go to state 209
    CLOSE_PAR	shift, and go to state 338
    IMPLY	shift, and go to state 210

    CLOSE_PAR	[reduce using rule 120 (ass_left)]
    $default	reduce using rule 120 (ass_left)



state 361

    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)

    CLOSE_PAR	shift, and go to state 339



state 362

    ass_left  ->  identifier .   (rule 117)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 326)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 382)
    struct_member_exp  ->  identifier . DOT function   (rule 385)
    struct_member_exp  ->  identifier . IMPLY function   (rule 386)

    DOT 	shift, and go to state 213
    CLOSE_PAR	shift, and go to state 340
    IMPLY	shift, and go to state 214

    CLOSE_PAR	[reduce using rule 117 (ass_left)]
    $default	reduce using rule 117 (ass_left)



state 363

    ass_left  ->  struct_member_exp .   (rule 118)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 388)

    CLOSE_PAR	shift, and go to state 344

    CLOSE_PAR	[reduce using rule 118 (ass_left)]
    $default	reduce using rule 118 (ass_left)



state 364

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    OPEN_PAR	shift, and go to state 539
    ADDRESS	shift, and go to state 92
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 183
    ID  	shift, and go to state 178

    ass_left	go to state 478
    leftaddrshift	go to state 70
    array	go to state 540
    point_exp	go to state 360
    address_exp	go to state 361
    identifier	go to state 362
    struct_member_exp	go to state 363



state 365

    statement  ->  LENGTH OPEN_PAR ari_exp . CLOSE_PAR   (rule 49)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    CLOSE_PAR	shift, and go to state 541
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    ari_operator	go to state 245



state 366

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    OPEN_PAR	shift, and go to state 434
    ADDRESS	shift, and go to state 92
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 178

    array	go to state 435
    point_exp	go to state 436
    address_exp	go to state 361
    identifier	go to state 438
    struct_member_exp	go to state 439



state 367

    input_statement  ->  REQUEST OPEN_PAR array . CLOSE_PAR   (rule 366)
    input_statement  ->  REQUEST OPEN_PAR array . option_input CLOSE_PAR   (rule 367)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 383)

    DOT 	shift, and go to state 206
    COMMA	shift, and go to state 542
    CLOSE_PAR	shift, and go to state 543
    IMPLY	shift, and go to state 208

    CLOSE_PAR	[reduce using rule 369 (option_input)]
    $default	reduce using rule 369 (option_input)

    option_input	go to state 544



state 368

    input_statement  ->  REQUEST OPEN_PAR identifier . CLOSE_PAR   (rule 364)
    input_statement  ->  REQUEST OPEN_PAR identifier . option_input CLOSE_PAR   (rule 365)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 382)
    struct_member_exp  ->  identifier . DOT function   (rule 385)
    struct_member_exp  ->  identifier . IMPLY function   (rule 386)

    DOT 	shift, and go to state 213
    COMMA	shift, and go to state 542
    CLOSE_PAR	shift, and go to state 545
    IMPLY	shift, and go to state 214

    CLOSE_PAR	[reduce using rule 369 (option_input)]
    $default	reduce using rule 369 (option_input)

    option_input	go to state 546



state 369

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 368)

    CLOSE_PAR	shift, and go to state 547



state 370

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  FINAL OPEN_PAR statement . CLOSE_PAR   (rule 54)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 548
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200



state 371

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  KEEP OPEN_PAR statement . CLOSE_PAR   (rule 42)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 549
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200



state 372

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  ALWAYS OPEN_PAR statement . CLOSE_PAR   (rule 43)
    statement  ->  statement . PARALLEL statement   (rule 55)

    CLOSE_PAR	shift, and go to state 550
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200



state 373

    address_exp  ->  ADDRESS . identifier   (rule 212)
    address_exp  ->  ADDRESS . array   (rule 213)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 214)
    address_exp  ->  ADDRESS . address_exp   (rule 215)
    option_function_identifier  ->  ADDRESS . error   (rule 316)

    error	shift, and go to state 551
    OPEN_PAR	shift, and go to state 235
    ADDRESS	shift, and go to state 92
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 178

    array	go to state 236
    point_exp	go to state 237
    address_exp	go to state 238
    identifier	go to state 239
    struct_member_exp	go to state 240



state 374

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    option_function_identifier  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 314)
    identifier  ->  ID .   (rule 325)

    OPEN_PAR	shift, and go to state 552
    OPEN_MPAR	shift, and go to state 192

    $default	reduce using rule 325 (identifier)



state 375

    option_function_identifier  ->  ass_right . inner_option_function_identifier   (rule 313)

    COMMA	shift, and go to state 553

    $default	reduce using rule 319 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 554



state 376

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 76)

    CLOSE_PAR	shift, and go to state 555



state 377

    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 146)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 557
    ari_operator	go to state 245



state 378

    option_identifier_array_declaration  ->  MUL option_identifier_array_declaration .   (rule 108)

    $default	reduce using rule 108 (option_identifier_array_declaration)



state 379

    option_identifier_array_declaration  ->  ID ARRAY . ASS_P array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID ARRAY . ASS_P strliteral inner_option_identifier_array_declaration   (rule 105)

    ASS_P	shift, and go to state 558



state 380

    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 106)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 107)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 559
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 381

    inner_option_identifier_array_declaration  ->  COMMA . option_identifier_array_declaration   (rule 109)
    inner_option_identifier_array_declaration  ->  COMMA . error   (rule 110)

    error	shift, and go to state 560
    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 561
    identifier	go to state 196



state 382

    option_identifier_array_declaration  ->  identifier ASS_P . ass_right inner_option_identifier_array_declaration   (rule 103)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 311
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 314
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    ass_right	go to state 562
    rightaddrshift	go to state 316
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 317
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 318
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    strliteral	go to state 321
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 383

    option_identifier_array_declaration  ->  identifier inner_option_identifier_array_declaration .   (rule 101)

    $default	reduce using rule 101 (option_identifier_array_declaration)



state 384

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement CHOP statement .   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)

    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200

    $default	reduce using rule 32 (statement)



state 385

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement OR statement .   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)

    AND 	shift, and go to state 200

    $default	reduce using rule 31 (statement)



state 386

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  statement PARALLEL statement .   (rule 55)

    AND 	shift, and go to state 200

    $default	reduce using rule 55 (statement)



state 387

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement AND statement .   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)


    $default	reduce using rule 30 (statement)



state 388

    sign_declaration  ->  UNSIGNED . declaration   (rule 83)

    STRUCT	shift, and go to state 169
    UNION	shift, and go to state 170
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 173
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 174
    type_define	go to state 175



state 389

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration . CLOSE_BPAR   (rule 79)

    CLOSE_BPAR	shift, and go to state 563



state 390

    option_struct_declaration  ->  sign_declaration .   (rule 66)
    option_struct_declaration  ->  sign_declaration . AND option_struct_declaration   (rule 67)

    AND 	shift, and go to state 564

    $default	reduce using rule 66 (option_struct_declaration)



state 391

    ass_statement  ->  ass_left assign_operator ass_right .   (rule 116)

    $default	reduce using rule 116 (ass_statement)



state 392

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)

    OPEN_PAR	shift, and go to state 565
    ID  	shift, and go to state 178

    array	go to state 566
    identifier	go to state 290



state 393

    struct_member_exp  ->  array DOT array . option_struct_member_exp   (rule 376)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 569



state 394

    struct_member_exp  ->  array DOT identifier . option_struct_member_exp   (rule 373)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 570



state 395

    function  ->  array OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 78)

    CLOSE_PAR	shift, and go to state 571



state 396

    struct_member_exp  ->  array IMPLY array . option_struct_member_exp   (rule 383)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 572



state 397

    struct_member_exp  ->  array IMPLY identifier . option_struct_member_exp   (rule 379)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 573



state 398

    struct_member_exp  ->  point_exp DOT array . option_struct_member_exp   (rule 377)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 574



state 399

    struct_member_exp  ->  point_exp DOT identifier . option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 575



state 400

    struct_member_exp  ->  point_exp IMPLY array . option_struct_member_exp   (rule 387)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 576



state 401

    struct_member_exp  ->  point_exp IMPLY identifier . option_struct_member_exp   (rule 381)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 577



state 402

    function_define  ->  all_type_define MUL MUL . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    ID  	shift, and go to state 578



state 403

    function_define  ->  all_type_define MUL ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 71)

    OPEN_PAR	shift, and go to state 579



state 404

    function_define  ->  all_type_define ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 463
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 464
    STRUCT_TYPE	shift, and go to state 465

    $default	reduce using rule 295 (option_function_parameter_list)

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 466
    option_function_parameter_list	go to state 580



state 405

    struct_member_exp  ->  identifier DOT function .   (rule 385)

    $default	reduce using rule 385 (struct_member_exp)



state 406

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    struct_member_exp  ->  identifier DOT array . option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 567
    OPEN_PAR	shift, and go to state 207
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 581



state 407

    struct_member_exp  ->  identifier DOT identifier . option_struct_member_exp   (rule 372)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 582



state 408

    struct_member_exp  ->  identifier IMPLY function .   (rule 386)

    $default	reduce using rule 386 (struct_member_exp)



state 409

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    struct_member_exp  ->  identifier IMPLY array . option_struct_member_exp   (rule 382)

    DOT 	shift, and go to state 567
    OPEN_PAR	shift, and go to state 207
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 583



state 410

    struct_member_exp  ->  identifier IMPLY identifier . option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 584



state 411

    complexProposition  ->  DEFINE ID COLON prime_bool_exp .   (rule 25)

    $default	reduce using rule 25 (complexProposition)



state 412

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    poptional_projection  ->  COMMA complexProposition . poptional_projection   (rule 28)

    COMMA	shift, and go to state 217
    CHOP	shift, and go to state 118
    IFF 	shift, and go to state 119
    PROPIMPLY	shift, and go to state 120
    OR  	shift, and go to state 121
    AND 	shift, and go to state 122
    CHOPSTAR	shift, and go to state 123

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 585



state 413

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR . PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    PROJECTION	shift, and go to state 586



state 414

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 166)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 587
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 415

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 238)

    MUL 	shift, and go to state 588



state 416

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 217)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 589
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 417

    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 591
    MUL 	shift, and go to state 592



state 418

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 219)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 593
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 419

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 594
    MUL 	shift, and go to state 595



state 420

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 235)

    CLOSE_PAR	shift, and go to state 596
    MUL 	shift, and go to state 597



state 421

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 218)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 598
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 422

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 599
    MUL 	shift, and go to state 600



state 423

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 416
    MUL 	shift, and go to state 601



state 424

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 418
    MUL 	shift, and go to state 602



state 425

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 421
    MUL 	shift, and go to state 603



state 426

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)

    INTDECLARATION	shift, and go to state 604
    CHARDECLARATION	shift, and go to state 605



state 427

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 606
    MUL 	shift, and go to state 607



state 428

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 608
    MUL 	shift, and go to state 609



state 429

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 220)

    CLOSE_PAR	shift, and go to state 610



state 430

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 221)

    CLOSE_PAR	shift, and go to state 611



state 431

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 612
    MUL 	shift, and go to state 613



state 432

    member_in_exp  ->  OPEN_PAR ari_exp CLOSE_PAR .   (rule 182)

    $default	reduce using rule 182 (member_in_exp)



state 433

    address_exp  ->  OPEN_PAR address_exp CLOSE_PAR .   (rule 216)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 384)

    IMPLY	shift, and go to state 519

    IMPLY	[reduce using rule 216 (address_exp)]
    $default	reduce using rule 216 (address_exp)



state 434

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    INTDECLARATION	shift, and go to state 614
    CHARDECLARATION	shift, and go to state 615
    FLOATDECLARATION	shift, and go to state 616
    OPEN_PAR	shift, and go to state 434
    UNSIGNED	shift, and go to state 617
    ADDRESS	shift, and go to state 92
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 178

    array	go to state 435
    point_exp	go to state 436
    address_exp	go to state 437
    identifier	go to state 438
    struct_member_exp	go to state 439



state 435

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 152)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 383)

    DOT 	shift, and go to state 206
    CLOSE_PAR	shift, and go to state 337
    IMPLY	shift, and go to state 208



state 436

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 162)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 381)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 387)

    DOT 	shift, and go to state 209
    CLOSE_PAR	shift, and go to state 338
    IMPLY	shift, and go to state 210



state 437

    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 216)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)

    CLOSE_PAR	shift, and go to state 433



state 438

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 326)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 378)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 382)
    struct_member_exp  ->  identifier . DOT function   (rule 385)
    struct_member_exp  ->  identifier . IMPLY function   (rule 386)

    DOT 	shift, and go to state 213
    CLOSE_PAR	shift, and go to state 340
    IMPLY	shift, and go to state 214



state 439

    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 388)

    CLOSE_PAR	shift, and go to state 344



state 440

    ari_exp  ->  ari_exp ari_operator simple_ari_exp .   (rule 165)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 172)

    INTER_OR	shift, and go to state 246
    CON 	shift, and go to state 247
    ADDRESS	shift, and go to state 248
    LST 	shift, and go to state 255
    RST 	shift, and go to state 256
    MUL 	shift, and go to state 257
    DIV 	shift, and go to state 258
    MOD 	shift, and go to state 259

    INTER_OR	[reduce using rule 165 (ari_exp)]
    CON 	[reduce using rule 165 (ari_exp)]
    ADDRESS	[reduce using rule 165 (ari_exp)]
    LST 	[reduce using rule 165 (ari_exp)]
    RST 	[reduce using rule 165 (ari_exp)]
    MUL 	[reduce using rule 165 (ari_exp)]
    DIV 	[reduce using rule 165 (ari_exp)]
    MOD 	[reduce using rule 165 (ari_exp)]
    $default	reduce using rule 165 (ari_exp)

    bi_operator	go to state 260



state 441

    simple_ari_exp  ->  simple_ari_exp bi_operator member_in_exp .   (rule 172)

    $default	reduce using rule 172 (simple_ari_exp)



state 442

    ari_exp  ->  simple_ari_exp relation_operator ari_exp .   (rule 164)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    ADD 	[reduce using rule 164 (ari_exp)]
    SUB 	[reduce using rule 164 (ari_exp)]
    $default	reduce using rule 164 (ari_exp)

    ari_operator	go to state 245



state 443

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR . OPEN_BPAR case_par CLOSE_BPAR   (rule 351)

    OPEN_BPAR	shift, and go to state 618



state 444

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    prime_bool_exp  ->  POINTERNULL NE ari_exp .   (rule 257)

    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 257 (prime_bool_exp)

    ari_operator	go to state 245



state 445

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    prime_bool_exp  ->  POINTERNULL EQ ari_exp .   (rule 256)

    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 256 (prime_bool_exp)

    ari_operator	go to state 245



state 446

    bool_exp  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 245)

    $default	reduce using rule 245 (bool_exp)



state 447

    prime_bool_exp  ->  ari_exp NE POINTERNULL .   (rule 255)

    $default	reduce using rule 255 (prime_bool_exp)



state 448

    prime_bool_exp  ->  ari_exp NE strliteral .   (rule 251)

    $default	reduce using rule 251 (prime_bool_exp)



state 449

    prime_bool_exp  ->  ari_exp NE charliteral .   (rule 259)

    $default	reduce using rule 259 (prime_bool_exp)



state 450

    prime_bool_exp  ->  ari_exp EQ POINTERNULL .   (rule 254)

    $default	reduce using rule 254 (prime_bool_exp)



state 451

    prime_bool_exp  ->  ari_exp EQ strliteral .   (rule 250)

    $default	reduce using rule 250 (prime_bool_exp)



state 452

    prime_bool_exp  ->  ari_exp EQ charliteral .   (rule 258)

    $default	reduce using rule 258 (prime_bool_exp)



state 453

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    prime_bool_exp  ->  ari_exp relation_operator ari_exp .   (rule 246)

    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 246 (prime_bool_exp)

    ari_operator	go to state 245



state 454

    if_statement  ->  IF bool_exp THEN statement_bpar . option_else_statement   (rule 357)

    ELSE	shift, and go to state 619

    $default	reduce using rule 359 (option_else_statement)

    option_else_statement	go to state 620



state 455

    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)
    bool_exp  ->  bool_exp OR bool_exp .   (rule 244)

    AND 	shift, and go to state 279

    $default	reduce using rule 244 (bool_exp)



state 456

    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp AND bool_exp .   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)


    $default	reduce using rule 243 (bool_exp)



state 457

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    prime_bool_exp  ->  strliteral NE ari_exp .   (rule 253)

    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 253 (prime_bool_exp)

    ari_operator	go to state 245



state 458

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    prime_bool_exp  ->  strliteral EQ ari_exp .   (rule 252)

    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 252 (prime_bool_exp)

    ari_operator	go to state 245



state 459

    statement  ->  AWAIT OPEN_PAR bool_exp CLOSE_PAR .   (rule 44)

    $default	reduce using rule 44 (statement)



state 460

    function_define  ->  STRUCT STRUCT_TYPE MUL MUL . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 108)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 621

    option_identifier_array_declaration	go to state 378
    identifier	go to state 196



state 461

    function_define  ->  STRUCT STRUCT_TYPE MUL ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 105)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 106)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 107)
    identifier  ->  ID .   (rule 325)

    ARRAY	shift, and go to state 379
    OPEN_PAR	shift, and go to state 622
    OPEN_MPAR	shift, and go to state 380

    $default	reduce using rule 325 (identifier)



state 462

    function_define  ->  STRUCT STRUCT_TYPE ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 463
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 464
    STRUCT_TYPE	shift, and go to state 465

    $default	reduce using rule 295 (option_function_parameter_list)

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 466
    option_function_parameter_list	go to state 623



state 463

    option_function_parameter_list  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 294)

    MUL 	shift, and go to state 624



state 464

    option_function_parameter_list  ->  ID . identifier inner_option_define_identifier   (rule 276)
    option_function_parameter_list  ->  ID . MUL identifier inner_option_define_identifier   (rule 277)
    option_function_parameter_list  ->  ID . MUL MUL identifier inner_option_define_identifier   (rule 278)
    option_function_parameter_list  ->  ID . identifier ARRAY inner_option_define_identifier   (rule 279)
    option_function_parameter_list  ->  ID . inner_option_define_identifier   (rule 283)
    option_function_parameter_list  ->  ID . MUL inner_option_define_identifier   (rule 284)
    option_function_parameter_list  ->  ID . MUL MUL inner_option_define_identifier   (rule 285)

    COMMA	shift, and go to state 291
    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 625
    ID  	shift, and go to state 143

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 626
    identifier	go to state 627



state 465

    option_function_parameter_list  ->  STRUCT_TYPE . identifier inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 273)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL identifier inner_option_define_identifier   (rule 274)
    option_function_parameter_list  ->  STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 275)
    option_function_parameter_list  ->  STRUCT_TYPE . inner_option_define_identifier   (rule 280)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL inner_option_define_identifier   (rule 282)

    COMMA	shift, and go to state 291
    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 628
    ID  	shift, and go to state 143

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 629
    identifier	go to state 630



state 466

    option_function_parameter_list  ->  all_type_define . identifier inner_option_define_identifier   (rule 270)
    option_function_parameter_list  ->  all_type_define . inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY inner_option_define_identifier   (rule 286)
    option_function_parameter_list  ->  all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 287)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 288)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 289)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 290)
    option_function_parameter_list  ->  all_type_define . MUL identifier inner_option_define_identifier   (rule 291)
    option_function_parameter_list  ->  all_type_define . MUL inner_option_define_identifier   (rule 292)
    option_function_parameter_list  ->  all_type_define . MUL MUL identifier inner_option_define_identifier   (rule 293)

    COMMA	shift, and go to state 291
    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 631
    ID  	shift, and go to state 143

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 632
    identifier	go to state 633



state 467

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    CLOSE_PAR	shift, and go to state 634



state 468

    inner_option_define_identifier  ->  COMMA error .   (rule 312)

    $default	reduce using rule 312 (inner_option_define_identifier)



state 469

    inner_option_define_identifier  ->  COMMA OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 305)

    MUL 	shift, and go to state 635



state 470

    inner_option_define_identifier  ->  COMMA ID . identifier inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA ID . identifier ARRAY inner_option_define_identifier   (rule 301)

    OPEN_PAR	shift, and go to state 142
    ID  	shift, and go to state 143

    identifier	go to state 636



state 471

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 302)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 637
    ID  	shift, and go to state 143

    identifier	go to state 638



state 472

    inner_option_define_identifier  ->  COMMA all_type_define . identifier inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA all_type_define . inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 304)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 307)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 308)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 309)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier inner_option_define_identifier   (rule 310)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL inner_option_define_identifier   (rule 311)

    COMMA	shift, and go to state 291
    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 639
    ID  	shift, and go to state 143

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 640
    identifier	go to state 641



state 473

    statement  ->  EXIST identifier inner_option_define_identifier COLON . OPEN_BPAR statement CLOSE_BPAR   (rule 64)

    OPEN_BPAR	shift, and go to state 642



state 474

    option_frame_identifier  ->  COMMA . identifier option_frame_identifier   (rule 331)
    option_frame_identifier  ->  COMMA . error   (rule 333)

    error	shift, and go to state 643
    OPEN_PAR	shift, and go to state 142
    ID  	shift, and go to state 143

    identifier	go to state 644



state 475

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier . CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    CLOSE_PAR	shift, and go to state 645



state 476

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 89)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 238)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 646
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 286
    identifier	go to state 196



state 477

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 647
    CHARDECLARATION	shift, and go to state 648
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 649
    OPEN_PAR	shift, and go to state 477
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 650
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEXT	shift, and go to state 183
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    ass_left	go to state 478
    leftaddrshift	go to state 70
    array	go to state 160
    point_exp	go to state 161
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 164
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 166



state 478

    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 121)

    CLOSE_PAR	shift, and go to state 336



state 479

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 108)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 239)

    OPEN_PAR	shift, and go to state 142
    CLOSE_PAR	shift, and go to state 612
    MUL 	shift, and go to state 651
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 378
    identifier	go to state 196



state 480

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA . for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 343)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 129
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 130
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    $default	reduce using rule 348 (for_sta_condition)

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    bool_exp	go to state 652
    prime_bool_exp	go to state 134
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    for_sta_condition	go to state 653
    struct_member_exp	go to state 110



state 481

    for_statement  ->  FOR ari_exp TIMES DO . statement_bpar   (rule 342)

    error	shift, and go to state 307
    OPEN_BPAR	shift, and go to state 308

    statement_bpar	go to state 654



state 482

    bool_par  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 323)

    $default	reduce using rule 323 (bool_par)



state 483

    statement_bpar  ->  error CLOSE_BPAR .   (rule 322)

    $default	reduce using rule 322 (statement_bpar)



state 484

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement_bpar  ->  OPEN_BPAR statement . CLOSE_BPAR   (rule 321)

    CLOSE_BPAR	shift, and go to state 655
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200



state 485

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR . UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    UNTIL	shift, and go to state 656



state 486

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 142)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 200)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 423
    CHARDECLARATION	shift, and go to state 424
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 425
    OPEN_PAR	shift, and go to state 486
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 426
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 314
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    ass_right	go to state 487
    rightaddrshift	go to state 316
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 488
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 489
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    strliteral	go to state 490
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234



state 487

    ass_right  ->  OPEN_PAR ass_right . CLOSE_PAR   (rule 143)

    CLOSE_PAR	shift, and go to state 657



state 488

    ass_right  ->  ari_exp .   (rule 139)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 182)

    CLOSE_PAR	shift, and go to state 432
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    CLOSE_PAR	[reduce using rule 139 (ass_right)]
    $default	reduce using rule 139 (ass_right)

    ari_operator	go to state 245



state 489

    ass_right  ->  array_exp .   (rule 140)
    array_exp  ->  array_exp . CON array_exp   (rule 197)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 200)

    CLOSE_PAR	shift, and go to state 658
    CON 	shift, and go to state 502

    CLOSE_PAR	[reduce using rule 140 (ass_right)]
    $default	reduce using rule 140 (ass_right)



state 490

    ass_right  ->  strliteral .   (rule 141)
    ass_right  ->  OPEN_PAR strliteral . CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 142)

    CLOSE_PAR	shift, and go to state 659

    CLOSE_PAR	[reduce using rule 141 (ass_right)]
    $default	reduce using rule 141 (ass_right)



state 491

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 200)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 221
    CHARDECLARATION	shift, and go to state 222
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 224
    OPEN_PAR	shift, and go to state 660
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 226
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 661
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234



state 492

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    option_struct_list_value  ->  OPEN_BPAR ari_exp . inner_option_list_value CLOSE_BPAR   (rule 204)

    COMMA	shift, and go to state 662
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 210 (inner_option_list_value)

    ari_operator	go to state 245
    inner_option_list_value	go to state 663



state 493

    array_exp  ->  array_exp . CON array_exp   (rule 197)
    option_struct_list_value  ->  OPEN_BPAR array_exp . inner_option_list_value CLOSE_BPAR   (rule 206)

    COMMA	shift, and go to state 662
    CON 	shift, and go to state 502

    $default	reduce using rule 210 (inner_option_list_value)

    inner_option_list_value	go to state 664



state 494

    option_struct_list_value  ->  OPEN_BPAR strliteral . inner_option_list_value CLOSE_BPAR   (rule 205)

    COMMA	shift, and go to state 662

    $default	reduce using rule 210 (inner_option_list_value)

    inner_option_list_value	go to state 665



state 495

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    option_list_value  ->  OPEN_MPAR ari_exp . inner_option_list_value CLOSE_MPAR   (rule 201)

    COMMA	shift, and go to state 662
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 210 (inner_option_list_value)

    ari_operator	go to state 245
    inner_option_list_value	go to state 666



state 496

    array_exp  ->  array_exp . CON array_exp   (rule 197)
    option_list_value  ->  OPEN_MPAR array_exp . inner_option_list_value CLOSE_MPAR   (rule 203)

    COMMA	shift, and go to state 662
    CON 	shift, and go to state 502

    $default	reduce using rule 210 (inner_option_list_value)

    inner_option_list_value	go to state 667



state 497

    option_list_value  ->  OPEN_MPAR strliteral . inner_option_list_value CLOSE_MPAR   (rule 202)

    COMMA	shift, and go to state 662

    $default	reduce using rule 210 (inner_option_list_value)

    inner_option_list_value	go to state 668



state 498

    rightaddrshift  ->  MUL OPEN_PAR . leftaddrshift CLOSE_PAR   (rule 145)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 160)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 161)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 669
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 353
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    type_define	go to state 354
    leftaddrshift	go to state 670
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 355
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    sign_type_define	go to state 73
    all_type_define	go to state 356
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 499

    option_output  ->  COMMA . ass_right option_output   (rule 363)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 311
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 314
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    ass_right	go to state 671
    rightaddrshift	go to state 316
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 317
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 318
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    strliteral	go to state 321
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 500

    output_statement  ->  DISPLAY OPEN_PAR ass_right CLOSE_PAR .   (rule 360)

    $default	reduce using rule 360 (output_statement)



state 501

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output . CLOSE_PAR   (rule 361)

    CLOSE_PAR	shift, and go to state 672



state 502

    array_exp  ->  array_exp CON . array_exp   (rule 197)

    OPEN_PAR	shift, and go to state 673
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313

    array_exp	go to state 674
    option_list_value	go to state 319
    option_struct_list_value	go to state 320



state 503

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 166)
    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 357)

    error	shift, and go to state 307
    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    OPEN_BPAR	shift, and go to state 308
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 587
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    statement_bpar	go to state 454
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 504

    function_define  ->  STRUCT STRUCT_TYPE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)
    function_define  ->  STRUCT STRUCT_TYPE . MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)
    function_define  ->  STRUCT STRUCT_TYPE . MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)
    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 89)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 238)

    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 675
    ID  	shift, and go to state 285

    option_identifier_array_declaration	go to state 286
    identifier	go to state 196



state 505

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 676
    MUL 	shift, and go to state 592



state 506

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 677
    MUL 	shift, and go to state 595



state 507

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 678
    MUL 	shift, and go to state 600



state 508

    type_define  ->  INTDECLARATION .   (rule 95)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 231)
    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 266)

    CLOSE_PAR	shift, and go to state 606
    MUL 	shift, and go to state 679

    MUL 	[reduce using rule 95 (type_define)]
    MUL 	[reduce using rule 266 (sign_type_define)]
    ID  	reduce using rule 95 (type_define)
    ID  	[reduce using rule 266 (sign_type_define)]
    $default	reduce using rule 95 (type_define)



state 509

    type_define  ->  CHARDECLARATION .   (rule 97)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 234)
    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 267)

    CLOSE_PAR	shift, and go to state 608
    MUL 	shift, and go to state 680

    MUL 	[reduce using rule 97 (type_define)]
    MUL 	[reduce using rule 267 (sign_type_define)]
    ID  	reduce using rule 97 (type_define)
    ID  	[reduce using rule 267 (sign_type_define)]
    $default	reduce using rule 97 (type_define)



state 510

    type_define  ->  INTDECLARATION .   (rule 95)
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 220)

    CLOSE_PAR	shift, and go to state 610

    $default	reduce using rule 95 (type_define)



state 511

    type_define  ->  CHARDECLARATION .   (rule 97)
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 221)

    CLOSE_PAR	shift, and go to state 611

    $default	reduce using rule 97 (type_define)



state 512

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 56)
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 340)

    IMPLY	shift, and go to state 520

    $default	reduce using rule 340 (imply_pre)



state 513

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)
    point_exp  ->  MUL identifier .   (rule 156)

    CLOSE_PAR	shift, and go to state 681

    CLOSE_PAR	[reduce using rule 156 (point_exp)]
    $default	reduce using rule 156 (point_exp)



state 514

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 682
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 515

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)

    OPEN_PAR	shift, and go to state 683



state 516

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 340)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    STRUCT	shift, and go to state 220
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    INTDECLARATION	shift, and go to state 423
    CHARDECLARATION	shift, and go to state 424
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 425
    OPEN_PAR	shift, and go to state 516
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 426
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 156
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 271
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    prime_bool_exp	go to state 163
    identifier	go to state 233
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    imply_pre	go to state 517
    struct_member_exp	go to state 234



state 517

    imply_pre  ->  imply_pre . AND imply_pre   (rule 338)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 339)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 340)

    CLOSE_PAR	shift, and go to state 684
    OR  	shift, and go to state 342
    AND 	shift, and go to state 343



state 518

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 159)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 685
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 519

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . array option_struct_member_exp   (rule 384)

    OPEN_PAR	shift, and go to state 392
    ID  	shift, and go to state 178

    array	go to state 686
    identifier	go to state 687



state 520

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY . OPEN_MPAR statement CLOSE_MPAR   (rule 56)

    OPEN_MPAR	shift, and go to state 688



state 521

    imply_pre  ->  imply_pre . AND imply_pre   (rule 338)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 339)
    imply_pre  ->  imply_pre OR imply_pre .   (rule 339)

    AND 	shift, and go to state 343

    $default	reduce using rule 339 (imply_pre)



state 522

    imply_pre  ->  imply_pre . AND imply_pre   (rule 338)
    imply_pre  ->  imply_pre AND imply_pre .   (rule 338)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 339)


    $default	reduce using rule 338 (imply_pre)



state 523

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    option_projection  ->  COMMA statement . option_projection   (rule 335)

    COMMA	shift, and go to state 345
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200

    $default	reduce using rule 334 (option_projection)

    option_projection	go to state 689



state 524

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION . statement_bpar   (rule 59)

    error	shift, and go to state 307
    OPEN_BPAR	shift, and go to state 308

    statement_bpar	go to state 690



state 525

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR . PROJECTION statement_bpar   (rule 58)

    PROJECTION	shift, and go to state 691



state 526

    function  ->  EXTERN ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 77)

    CLOSE_PAR	shift, and go to state 692



state 527

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)

    OPEN_PAR	shift, and go to state 142
    ID  	shift, and go to state 143

    identifier	go to state 693



state 528

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    identifier  ->  ID .   (rule 325)

    OPEN_MPAR	shift, and go to state 694

    $default	reduce using rule 325 (identifier)



state 529

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)

    CLOSE_PAR	shift, and go to state 515



state 530

    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 266)

    $default	reduce using rule 266 (sign_type_define)



state 531

    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 267)

    $default	reduce using rule 267 (sign_type_define)



state 532

    point_exp  ->  MUL OPEN_PAR ari_exp CLOSE_PAR .   (rule 161)

    $default	reduce using rule 161 (point_exp)



state 533

    point_exp  ->  MUL OPEN_PAR all_type_define MUL . CLOSE_PAR ari_exp   (rule 160)

    CLOSE_PAR	shift, and go to state 695



state 534

    type_define  ->  INTDECLARATION .   (rule 95)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    MUL 	shift, and go to state 696

    MUL 	[reduce using rule 95 (type_define)]
    $default	reduce using rule 95 (type_define)



state 535

    type_define  ->  CHARDECLARATION .   (rule 97)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    MUL 	shift, and go to state 697

    MUL 	[reduce using rule 97 (type_define)]
    $default	reduce using rule 97 (type_define)



state 536

    type_define  ->  FLOATDECLARATION .   (rule 96)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    MUL 	shift, and go to state 698

    MUL 	[reduce using rule 96 (type_define)]
    $default	reduce using rule 96 (type_define)



state 537

    sign_declaration  ->  UNSIGNED . declaration   (rule 83)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 266)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 267)

    STRUCT	shift, and go to state 169
    UNION	shift, and go to state 170
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 699
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 700
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 173
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 174
    type_define	go to state 175



state 538

    statement  ->  NEXT OPEN_PAR statement CLOSE_PAR .   (rule 41)

    $default	reduce using rule 41 (statement)



state 539

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    INTDECLARATION	shift, and go to state 701
    CHARDECLARATION	shift, and go to state 702
    FLOATDECLARATION	shift, and go to state 703
    OPEN_PAR	shift, and go to state 539
    UNSIGNED	shift, and go to state 704
    ADDRESS	shift, and go to state 92
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 183
    ID  	shift, and go to state 178

    ass_left	go to state 478
    leftaddrshift	go to state 70
    array	go to state 540
    point_exp	go to state 360
    address_exp	go to state 437
    identifier	go to state 362
    struct_member_exp	go to state 363



state 540

    ass_left  ->  array .   (rule 119)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 152)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 376)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 379)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 383)

    DOT 	shift, and go to state 206
    CLOSE_PAR	shift, and go to state 337
    IMPLY	shift, and go to state 208

    CLOSE_PAR	[reduce using rule 119 (ass_left)]
    $default	reduce using rule 119 (ass_left)



state 541

    statement  ->  LENGTH OPEN_PAR ari_exp CLOSE_PAR .   (rule 49)

    $default	reduce using rule 49 (statement)



state 542

    option_input  ->  COMMA . identifier option_input   (rule 370)
    option_input  ->  COMMA . array option_input   (rule 371)

    OPEN_PAR	shift, and go to state 392
    ID  	shift, and go to state 178

    array	go to state 705
    identifier	go to state 706



state 543

    input_statement  ->  REQUEST OPEN_PAR array CLOSE_PAR .   (rule 366)

    $default	reduce using rule 366 (input_statement)



state 544

    input_statement  ->  REQUEST OPEN_PAR array option_input . CLOSE_PAR   (rule 367)

    CLOSE_PAR	shift, and go to state 707



state 545

    input_statement  ->  REQUEST OPEN_PAR identifier CLOSE_PAR .   (rule 364)

    $default	reduce using rule 364 (input_statement)



state 546

    input_statement  ->  REQUEST OPEN_PAR identifier option_input . CLOSE_PAR   (rule 365)

    CLOSE_PAR	shift, and go to state 708



state 547

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 368)

    $default	reduce using rule 368 (input_statement)



state 548

    statement  ->  FINAL OPEN_PAR statement CLOSE_PAR .   (rule 54)

    $default	reduce using rule 54 (statement)



state 549

    statement  ->  KEEP OPEN_PAR statement CLOSE_PAR .   (rule 42)

    $default	reduce using rule 42 (statement)



state 550

    statement  ->  ALWAYS OPEN_PAR statement CLOSE_PAR .   (rule 43)

    $default	reduce using rule 43 (statement)



state 551

    option_function_identifier  ->  ADDRESS error .   (rule 316)

    $default	reduce using rule 316 (option_function_identifier)



state 552

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 76)
    option_function_identifier  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 314)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 311
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 373
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 314
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 374
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    $default	reduce using rule 315 (option_function_identifier)

    function	go to state 98
    ass_right	go to state 375
    rightaddrshift	go to state 316
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 317
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 318
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 104
    type_cast	go to state 105
    option_function_identifier	go to state 709
    identifier	go to state 106
    strliteral	go to state 321
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 553

    inner_option_function_identifier  ->  COMMA . ass_right inner_option_function_identifier   (rule 317)
    inner_option_function_identifier  ->  COMMA . ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 318)
    inner_option_function_identifier  ->  COMMA . error   (rule 320)

    error	shift, and go to state 710
    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 311
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 314
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 711
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    ass_right	go to state 712
    rightaddrshift	go to state 316
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 317
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 318
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    strliteral	go to state 321
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 554

    option_function_identifier  ->  ass_right inner_option_function_identifier .   (rule 313)

    $default	reduce using rule 313 (option_function_identifier)



state 555

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 76)

    $default	reduce using rule 76 (function)



state 556

    option_ari_exp  ->  COMMA . ari_exp option_ari_exp   (rule 153)
    option_ari_exp  ->  COMMA . error   (rule 154)

    error	shift, and go to state 713
    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 714
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 557

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 146)

    CLOSE_MPAR	shift, and go to state 715



state 558

    option_identifier_array_declaration  ->  ID ARRAY ASS_P . array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID ARRAY ASS_P . strliteral inner_option_identifier_array_declaration   (rule 105)

    OPEN_PAR	shift, and go to state 673
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    STRLITERAL	shift, and go to state 131

    array_exp	go to state 716
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    strliteral	go to state 717



state 559

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 106)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 107)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 718
    ari_operator	go to state 245



state 560

    inner_option_identifier_array_declaration  ->  COMMA error .   (rule 110)

    $default	reduce using rule 110 (inner_option_identifier_array_declaration)



state 561

    inner_option_identifier_array_declaration  ->  COMMA option_identifier_array_declaration .   (rule 109)

    $default	reduce using rule 109 (inner_option_identifier_array_declaration)



state 562

    option_identifier_array_declaration  ->  identifier ASS_P ass_right . inner_option_identifier_array_declaration   (rule 103)

    COMMA	shift, and go to state 381

    COMMA	[reduce using rule 111 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 111 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 719



state 563

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR .   (rule 79)

    $default	reduce using rule 79 (struct_define_statement)



state 564

    option_struct_declaration  ->  sign_declaration AND . option_struct_declaration   (rule 67)

    STRUCT	shift, and go to state 169
    UNION	shift, and go to state 170
    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 173
    UNSIGNED	shift, and go to state 388
    SIGNED	shift, and go to state 50
    STRUCT_TYPE	shift, and go to state 59

    option_struct_declaration	go to state 720
    sign_declaration	go to state 390
    declaration	go to state 66
    type_define	go to state 175



state 565

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)

    INTDECLARATION	shift, and go to state 614
    CHARDECLARATION	shift, and go to state 615
    FLOATDECLARATION	shift, and go to state 616
    OPEN_PAR	shift, and go to state 565
    UNSIGNED	shift, and go to state 617
    ID  	shift, and go to state 178

    array	go to state 566
    identifier	go to state 290



state 566

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 152)

    CLOSE_PAR	shift, and go to state 337



state 567

    option_struct_member_exp  ->  DOT . identifier option_struct_member_exp   (rule 390)
    option_struct_member_exp  ->  DOT . array option_struct_member_exp   (rule 391)
    option_struct_member_exp  ->  DOT . function   (rule 394)

    OPEN_PAR	shift, and go to state 392
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 58

    function	go to state 721
    array	go to state 722
    identifier	go to state 723



state 568

    option_struct_member_exp  ->  IMPLY . identifier option_struct_member_exp   (rule 392)
    option_struct_member_exp  ->  IMPLY . array option_struct_member_exp   (rule 393)
    option_struct_member_exp  ->  IMPLY . function   (rule 395)

    OPEN_PAR	shift, and go to state 392
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 58

    function	go to state 724
    array	go to state 725
    identifier	go to state 726



state 569

    struct_member_exp  ->  array DOT array option_struct_member_exp .   (rule 376)

    $default	reduce using rule 376 (struct_member_exp)



state 570

    struct_member_exp  ->  array DOT identifier option_struct_member_exp .   (rule 373)

    $default	reduce using rule 373 (struct_member_exp)



state 571

    function  ->  array OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 78)

    $default	reduce using rule 78 (function)



state 572

    struct_member_exp  ->  array IMPLY array option_struct_member_exp .   (rule 383)

    $default	reduce using rule 383 (struct_member_exp)



state 573

    struct_member_exp  ->  array IMPLY identifier option_struct_member_exp .   (rule 379)

    $default	reduce using rule 379 (struct_member_exp)



state 574

    struct_member_exp  ->  point_exp DOT array option_struct_member_exp .   (rule 377)

    $default	reduce using rule 377 (struct_member_exp)



state 575

    struct_member_exp  ->  point_exp DOT identifier option_struct_member_exp .   (rule 374)

    $default	reduce using rule 374 (struct_member_exp)



state 576

    struct_member_exp  ->  point_exp IMPLY array option_struct_member_exp .   (rule 387)

    $default	reduce using rule 387 (struct_member_exp)



state 577

    struct_member_exp  ->  point_exp IMPLY identifier option_struct_member_exp .   (rule 381)

    $default	reduce using rule 381 (struct_member_exp)



state 578

    function_define  ->  all_type_define MUL MUL ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    OPEN_PAR	shift, and go to state 727



state 579

    function_define  ->  all_type_define MUL ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 71)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 463
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 464
    STRUCT_TYPE	shift, and go to state 465

    $default	reduce using rule 295 (option_function_parameter_list)

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 466
    option_function_parameter_list	go to state 728



state 580

    function_define  ->  all_type_define ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    CLOSE_PAR	shift, and go to state 729



state 581

    struct_member_exp  ->  identifier DOT array option_struct_member_exp .   (rule 375)

    $default	reduce using rule 375 (struct_member_exp)



state 582

    struct_member_exp  ->  identifier DOT identifier option_struct_member_exp .   (rule 372)

    $default	reduce using rule 372 (struct_member_exp)



state 583

    struct_member_exp  ->  identifier IMPLY array option_struct_member_exp .   (rule 382)

    $default	reduce using rule 382 (struct_member_exp)



state 584

    struct_member_exp  ->  identifier IMPLY identifier option_struct_member_exp .   (rule 378)

    $default	reduce using rule 378 (struct_member_exp)



state 585

    poptional_projection  ->  COMMA complexProposition poptional_projection .   (rule 28)

    $default	reduce using rule 28 (poptional_projection)



state 586

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION . OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    OPEN_BPAR	shift, and go to state 730



state 587

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    ari_exp  ->  IF bool_exp THEN ari_exp . option_exp_else_statement   (rule 166)

    ELSE	shift, and go to state 731
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    ELSE	[reduce using rule 170 (option_exp_else_statement)]
    ADD 	[reduce using rule 170 (option_exp_else_statement)]
    SUB 	[reduce using rule 170 (option_exp_else_statement)]
    $default	reduce using rule 170 (option_exp_else_statement)

    option_exp_else_statement	go to state 732
    ari_operator	go to state 245



state 588

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 733
    MUL 	shift, and go to state 734



state 589

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 217)

    $default	reduce using rule 217 (type_cast)



state 590

    type_cast_alg_exp  ->  simple_ari_exp .   (rule 167)
    type_cast_alg_exp  ->  simple_ari_exp . ari_operator simple_ari_exp   (rule 168)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 172)

    INTER_OR	shift, and go to state 246
    CON 	shift, and go to state 247
    ADDRESS	shift, and go to state 248
    LST 	shift, and go to state 255
    RST 	shift, and go to state 256
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244
    MUL 	shift, and go to state 257
    DIV 	shift, and go to state 258
    MOD 	shift, and go to state 259

    INTER_OR	[reduce using rule 167 (type_cast_alg_exp)]
    CON 	[reduce using rule 167 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 167 (type_cast_alg_exp)]
    LST 	[reduce using rule 167 (type_cast_alg_exp)]
    RST 	[reduce using rule 167 (type_cast_alg_exp)]
    ADD 	[reduce using rule 167 (type_cast_alg_exp)]
    SUB 	[reduce using rule 167 (type_cast_alg_exp)]
    MUL 	[reduce using rule 167 (type_cast_alg_exp)]
    DIV 	[reduce using rule 167 (type_cast_alg_exp)]
    MOD 	[reduce using rule 167 (type_cast_alg_exp)]
    $default	reduce using rule 167 (type_cast_alg_exp)

    bi_operator	go to state 260
    ari_operator	go to state 735



state 591

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 737
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 592

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 738



state 593

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 219)

    $default	reduce using rule 219 (type_cast)



state 594

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 739
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 595

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 740



state 596

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR . casted_element   (rule 229)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 741
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 597

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 235)

    CLOSE_PAR	shift, and go to state 742



state 598

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 218)

    $default	reduce using rule 218 (type_cast)



state 599

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 743
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 600

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 744



state 601

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 745
    MUL 	shift, and go to state 592



state 602

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 746
    MUL 	shift, and go to state 595



state 603

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 747
    MUL 	shift, and go to state 600



state 604

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 606
    MUL 	shift, and go to state 679



state 605

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 608
    MUL 	shift, and go to state 748



state 606

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 222)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 749
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 607

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 750
    MUL 	shift, and go to state 751



state 608

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 223)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 752
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 609

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 753
    MUL 	shift, and go to state 754



state 610

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 220)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 755
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 611

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 221)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 756
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 612

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 237)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 757
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 613

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 758



state 614

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    MUL 	shift, and go to state 759



state 615

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    MUL 	shift, and go to state 760



state 616

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    MUL 	shift, and go to state 761



state 617

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    INTDECLARATION	shift, and go to state 762
    CHARDECLARATION	shift, and go to state 763



state 618

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR . case_par CLOSE_BPAR   (rule 351)

    CASE	shift, and go to state 764
    DEFAULT	shift, and go to state 765

    case_par	go to state 766



state 619

    option_else_statement  ->  ELSE . statement_bpar   (rule 358)

    error	shift, and go to state 307
    OPEN_BPAR	shift, and go to state 308

    statement_bpar	go to state 767



state 620

    if_statement  ->  IF bool_exp THEN statement_bpar option_else_statement .   (rule 357)

    $default	reduce using rule 357 (if_statement)



state 621

    function_define  ->  STRUCT STRUCT_TYPE MUL MUL ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 105)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 106)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 107)
    identifier  ->  ID .   (rule 325)

    ARRAY	shift, and go to state 379
    OPEN_PAR	shift, and go to state 768
    OPEN_MPAR	shift, and go to state 380

    $default	reduce using rule 325 (identifier)



state 622

    function_define  ->  STRUCT STRUCT_TYPE MUL ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 463
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 464
    STRUCT_TYPE	shift, and go to state 465

    $default	reduce using rule 295 (option_function_parameter_list)

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 466
    option_function_parameter_list	go to state 769



state 623

    function_define  ->  STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 73)

    CLOSE_PAR	shift, and go to state 770



state 624

    option_function_parameter_list  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 294)

    OPEN_PAR	shift, and go to state 142
    ID  	shift, and go to state 143

    identifier	go to state 771



state 625

    option_function_parameter_list  ->  ID MUL . identifier inner_option_define_identifier   (rule 277)
    option_function_parameter_list  ->  ID MUL . MUL identifier inner_option_define_identifier   (rule 278)
    option_function_parameter_list  ->  ID MUL . inner_option_define_identifier   (rule 284)
    option_function_parameter_list  ->  ID MUL . MUL inner_option_define_identifier   (rule 285)

    COMMA	shift, and go to state 291
    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 772
    ID  	shift, and go to state 143

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 773
    identifier	go to state 774



state 626

    option_function_parameter_list  ->  ID inner_option_define_identifier .   (rule 283)

    $default	reduce using rule 283 (option_function_parameter_list)



state 627

    option_function_parameter_list  ->  ID identifier . inner_option_define_identifier   (rule 276)
    option_function_parameter_list  ->  ID identifier . ARRAY inner_option_define_identifier   (rule 279)

    ARRAY	shift, and go to state 775
    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 776



state 628

    option_function_parameter_list  ->  STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 273)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL identifier inner_option_define_identifier   (rule 274)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL inner_option_define_identifier   (rule 282)

    COMMA	shift, and go to state 291
    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 777
    ID  	shift, and go to state 143

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 778
    identifier	go to state 779



state 629

    option_function_parameter_list  ->  STRUCT_TYPE inner_option_define_identifier .   (rule 280)

    $default	reduce using rule 280 (option_function_parameter_list)



state 630

    option_function_parameter_list  ->  STRUCT_TYPE identifier . inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 275)

    ARRAY	shift, and go to state 780
    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 781



state 631

    option_function_parameter_list  ->  all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 287)
    option_function_parameter_list  ->  all_type_define MUL . identifier inner_option_define_identifier   (rule 291)
    option_function_parameter_list  ->  all_type_define MUL . inner_option_define_identifier   (rule 292)
    option_function_parameter_list  ->  all_type_define MUL . MUL identifier inner_option_define_identifier   (rule 293)

    COMMA	shift, and go to state 291
    OPEN_PAR	shift, and go to state 142
    MUL 	shift, and go to state 782
    ID  	shift, and go to state 143

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 783
    identifier	go to state 784



state 632

    option_function_parameter_list  ->  all_type_define inner_option_define_identifier .   (rule 271)

    $default	reduce using rule 271 (option_function_parameter_list)



state 633

    option_function_parameter_list  ->  all_type_define identifier . inner_option_define_identifier   (rule 270)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY inner_option_define_identifier   (rule 286)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 288)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 289)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 290)

    ARRAY	shift, and go to state 785
    COMMA	shift, and go to state 291
    OPEN_MPAR	shift, and go to state 786

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 787



state 634

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    ASS_P	shift, and go to state 788



state 635

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 305)

    OPEN_PAR	shift, and go to state 142
    ID  	shift, and go to state 143

    identifier	go to state 789



state 636

    inner_option_define_identifier  ->  COMMA ID identifier . inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA ID identifier . ARRAY inner_option_define_identifier   (rule 301)

    ARRAY	shift, and go to state 790
    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 791



state 637

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 300)

    OPEN_PAR	shift, and go to state 142
    ID  	shift, and go to state 143

    identifier	go to state 792



state 638

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . inner_option_define_identifier   (rule 299)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 302)

    ARRAY	shift, and go to state 793
    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 794



state 639

    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 304)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier inner_option_define_identifier   (rule 310)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . inner_option_define_identifier   (rule 311)

    COMMA	shift, and go to state 291
    OPEN_PAR	shift, and go to state 142
    ID  	shift, and go to state 143

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 795
    identifier	go to state 796



state 640

    inner_option_define_identifier  ->  COMMA all_type_define inner_option_define_identifier .   (rule 297)

    $default	reduce using rule 297 (inner_option_define_identifier)



state 641

    inner_option_define_identifier  ->  COMMA all_type_define identifier . inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 307)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 308)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 309)

    ARRAY	shift, and go to state 797
    COMMA	shift, and go to state 291
    OPEN_MPAR	shift, and go to state 798

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 799



state 642

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR . statement CLOSE_BPAR   (rule 64)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 800
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 643

    option_frame_identifier  ->  COMMA error .   (rule 333)

    $default	reduce using rule 333 (option_frame_identifier)



state 644

    option_frame_identifier  ->  COMMA identifier . option_frame_identifier   (rule 331)

    COMMA	shift, and go to state 474

    $default	reduce using rule 332 (option_frame_identifier)

    option_frame_identifier	go to state 801



state 645

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR . AND OPEN_PAR statement CLOSE_PAR   (rule 57)

    AND 	shift, and go to state 802



state 646

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 108)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 238)

    OPEN_PAR	shift, and go to state 142
    CLOSE_PAR	shift, and go to state 733
    MUL 	shift, and go to state 803
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 378
    identifier	go to state 196



state 647

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 416
    MUL 	shift, and go to state 505



state 648

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 418
    MUL 	shift, and go to state 506



state 649

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 421
    MUL 	shift, and go to state 507



state 650

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)

    INTDECLARATION	shift, and go to state 604
    CHARDECLARATION	shift, and go to state 804



state 651

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 108)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 239)

    OPEN_PAR	shift, and go to state 142
    CLOSE_PAR	shift, and go to state 758
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 378
    identifier	go to state 196



state 652

    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)
    for_sta_condition  ->  bool_exp .   (rule 347)

    OR  	shift, and go to state 278
    AND 	shift, and go to state 279

    $default	reduce using rule 347 (for_sta_condition)



state 653

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition . COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 343)

    COMMA	shift, and go to state 805



state 654

    for_statement  ->  FOR ari_exp TIMES DO statement_bpar .   (rule 342)

    $default	reduce using rule 342 (for_statement)



state 655

    statement_bpar  ->  OPEN_BPAR statement CLOSE_BPAR .   (rule 321)

    $default	reduce using rule 321 (statement_bpar)



state 656

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL . OPEN_PAR bool_exp CLOSE_PAR   (rule 45)

    OPEN_PAR	shift, and go to state 806



state 657

    ass_right  ->  OPEN_PAR ass_right CLOSE_PAR .   (rule 143)

    $default	reduce using rule 143 (ass_right)



state 658

    array_exp  ->  OPEN_PAR array_exp CLOSE_PAR .   (rule 200)

    $default	reduce using rule 200 (array_exp)



state 659

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR . OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 142)

    OPEN_PAR	shift, and go to state 807



state 660

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 200)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 423
    CHARDECLARATION	shift, and go to state 424
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 425
    OPEN_PAR	shift, and go to state 660
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 426
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 661
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234



state 661

    array_exp  ->  array_exp . CON array_exp   (rule 197)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 200)

    CLOSE_PAR	shift, and go to state 658
    CON 	shift, and go to state 502



state 662

    inner_option_list_value  ->  COMMA . ari_exp inner_option_list_value   (rule 207)
    inner_option_list_value  ->  COMMA . strliteral inner_option_list_value   (rule 208)
    inner_option_list_value  ->  COMMA . array_exp inner_option_list_value   (rule 209)
    inner_option_list_value  ->  COMMA . error   (rule 211)

    error	shift, and go to state 808
    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 491
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 809
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 810
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    strliteral	go to state 811
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 663

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value . CLOSE_BPAR   (rule 204)

    CLOSE_BPAR	shift, and go to state 812



state 664

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value . CLOSE_BPAR   (rule 206)

    CLOSE_BPAR	shift, and go to state 813



state 665

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value . CLOSE_BPAR   (rule 205)

    CLOSE_BPAR	shift, and go to state 814



state 666

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value . CLOSE_MPAR   (rule 201)

    CLOSE_MPAR	shift, and go to state 815



state 667

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value . CLOSE_MPAR   (rule 203)

    CLOSE_MPAR	shift, and go to state 816



state 668

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value . CLOSE_MPAR   (rule 202)

    CLOSE_MPAR	shift, and go to state 817



state 669

    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 423
    CHARDECLARATION	shift, and go to state 424
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 425
    OPEN_PAR	shift, and go to state 818
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 426
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234



state 670

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift . CLOSE_PAR   (rule 145)

    CLOSE_PAR	shift, and go to state 819



state 671

    option_output  ->  COMMA ass_right . option_output   (rule 363)

    COMMA	shift, and go to state 499

    $default	reduce using rule 362 (option_output)

    option_output	go to state 820



state 672

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR .   (rule 361)

    $default	reduce using rule 361 (output_statement)



state 673

    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 200)

    OPEN_PAR	shift, and go to state 673
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313

    array_exp	go to state 661
    option_list_value	go to state 319
    option_struct_list_value	go to state 320



state 674

    array_exp  ->  array_exp . CON array_exp   (rule 197)
    array_exp  ->  array_exp CON array_exp .   (rule 197)


    $default	reduce using rule 197 (array_exp)



state 675

    function_define  ->  STRUCT STRUCT_TYPE MUL . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)
    function_define  ->  STRUCT STRUCT_TYPE MUL . MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 108)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 238)

    OPEN_PAR	shift, and go to state 142
    CLOSE_PAR	shift, and go to state 733
    MUL 	shift, and go to state 821
    ID  	shift, and go to state 461

    option_identifier_array_declaration	go to state 378
    identifier	go to state 196



state 676

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 822
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 823
    INTLITERAL	shift, and go to state 824
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 737
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 677

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 825
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 826
    INTLITERAL	shift, and go to state 827
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 739
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 678

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 828
    INTLITERAL	shift, and go to state 829
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 743
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 679

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 830
    MUL 	shift, and go to state 751



state 680

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 831
    MUL 	shift, and go to state 754



state 681

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)

    OPEN_PAR	shift, and go to state 832



state 682

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 146)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 833
    ari_operator	go to state 245



state 683

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 91)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 463
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 464
    STRUCT_TYPE	shift, and go to state 465

    $default	reduce using rule 295 (option_function_parameter_list)

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 466
    option_function_parameter_list	go to state 834



state 684

    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 340)

    $default	reduce using rule 340 (imply_pre)



state 685

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 159)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 835
    ari_operator	go to state 245



state 686

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array . option_struct_member_exp   (rule 384)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 836



state 687

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier . option_struct_member_exp   (rule 380)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 837



state 688

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR . statement CLOSE_MPAR   (rule 56)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 838
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 689

    option_projection  ->  COMMA statement option_projection .   (rule 335)

    $default	reduce using rule 335 (option_projection)



state 690

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar .   (rule 59)

    $default	reduce using rule 59 (statement)



state 691

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION . statement_bpar   (rule 58)

    error	shift, and go to state 307
    OPEN_BPAR	shift, and go to state 308

    statement_bpar	go to state 839



state 692

    function  ->  EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 77)

    $default	reduce using rule 77 (function)



state 693

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 92)

    CLOSE_PAR	shift, and go to state 681



state 694

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 840
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 695

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR . ari_exp   (rule 160)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 841
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 696

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    CLOSE_PAR	shift, and go to state 842



state 697

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    CLOSE_PAR	shift, and go to state 843



state 698

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    CLOSE_PAR	shift, and go to state 844



state 699

    type_define  ->  INTDECLARATION .   (rule 95)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 266)

    MUL 	shift, and go to state 845

    MUL 	[reduce using rule 95 (type_define)]
    MUL 	[reduce using rule 266 (sign_type_define)]
    ID  	reduce using rule 95 (type_define)
    ID  	[reduce using rule 266 (sign_type_define)]
    $default	reduce using rule 95 (type_define)



state 700

    type_define  ->  CHARDECLARATION .   (rule 97)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 267)

    MUL 	shift, and go to state 846

    MUL 	[reduce using rule 97 (type_define)]
    MUL 	[reduce using rule 267 (sign_type_define)]
    ID  	reduce using rule 97 (type_define)
    ID  	[reduce using rule 267 (sign_type_define)]
    $default	reduce using rule 97 (type_define)



state 701

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    MUL 	shift, and go to state 696



state 702

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    MUL 	shift, and go to state 697



state 703

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    MUL 	shift, and go to state 698



state 704

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    INTDECLARATION	shift, and go to state 762
    CHARDECLARATION	shift, and go to state 847



state 705

    option_input  ->  COMMA array . option_input   (rule 371)

    COMMA	shift, and go to state 542

    $default	reduce using rule 369 (option_input)

    option_input	go to state 848



state 706

    option_input  ->  COMMA identifier . option_input   (rule 370)

    COMMA	shift, and go to state 542

    $default	reduce using rule 369 (option_input)

    option_input	go to state 849



state 707

    input_statement  ->  REQUEST OPEN_PAR array option_input CLOSE_PAR .   (rule 367)

    $default	reduce using rule 367 (input_statement)



state 708

    input_statement  ->  REQUEST OPEN_PAR identifier option_input CLOSE_PAR .   (rule 365)

    $default	reduce using rule 365 (input_statement)



state 709

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 76)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 314)

    CLOSE_PAR	shift, and go to state 850



state 710

    inner_option_function_identifier  ->  COMMA error .   (rule 320)

    $default	reduce using rule 320 (inner_option_function_identifier)



state 711

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    inner_option_function_identifier  ->  COMMA ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 318)
    identifier  ->  ID .   (rule 325)

    OPEN_PAR	shift, and go to state 851
    OPEN_MPAR	shift, and go to state 192

    $default	reduce using rule 325 (identifier)



state 712

    inner_option_function_identifier  ->  COMMA ass_right . inner_option_function_identifier   (rule 317)

    COMMA	shift, and go to state 553

    $default	reduce using rule 319 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 852



state 713

    option_ari_exp  ->  COMMA error .   (rule 154)

    $default	reduce using rule 154 (option_ari_exp)



state 714

    option_ari_exp  ->  COMMA ari_exp . option_ari_exp   (rule 153)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 853
    ari_operator	go to state 245



state 715

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 146)

    $default	reduce using rule 146 (array)



state 716

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp . inner_option_identifier_array_declaration   (rule 104)
    array_exp  ->  array_exp . CON array_exp   (rule 197)

    COMMA	shift, and go to state 381
    CON 	shift, and go to state 502

    COMMA	[reduce using rule 111 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 111 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 854



state 717

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral . inner_option_identifier_array_declaration   (rule 105)

    COMMA	shift, and go to state 381

    COMMA	[reduce using rule 111 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 111 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 855



state 718

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 106)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 107)

    CLOSE_MPAR	shift, and go to state 856



state 719

    option_identifier_array_declaration  ->  identifier ASS_P ass_right inner_option_identifier_array_declaration .   (rule 103)

    $default	reduce using rule 103 (option_identifier_array_declaration)



state 720

    option_struct_declaration  ->  sign_declaration AND option_struct_declaration .   (rule 67)

    $default	reduce using rule 67 (option_struct_declaration)



state 721

    option_struct_member_exp  ->  DOT function .   (rule 394)

    $default	reduce using rule 394 (option_struct_member_exp)



state 722

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    option_struct_member_exp  ->  DOT array . option_struct_member_exp   (rule 391)

    DOT 	shift, and go to state 567
    OPEN_PAR	shift, and go to state 207
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 857



state 723

    option_struct_member_exp  ->  DOT identifier . option_struct_member_exp   (rule 390)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 858



state 724

    option_struct_member_exp  ->  IMPLY function .   (rule 395)

    $default	reduce using rule 395 (option_struct_member_exp)



state 725

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)
    option_struct_member_exp  ->  IMPLY array . option_struct_member_exp   (rule 393)

    DOT 	shift, and go to state 567
    OPEN_PAR	shift, and go to state 207
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 859



state 726

    option_struct_member_exp  ->  IMPLY identifier . option_struct_member_exp   (rule 392)

    DOT 	shift, and go to state 567
    IMPLY	shift, and go to state 568

    DOT 	[reduce using rule 389 (option_struct_member_exp)]
    IMPLY	[reduce using rule 389 (option_struct_member_exp)]
    $default	reduce using rule 389 (option_struct_member_exp)

    option_struct_member_exp	go to state 860



state 727

    function_define  ->  all_type_define MUL MUL ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 463
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 464
    STRUCT_TYPE	shift, and go to state 465

    $default	reduce using rule 295 (option_function_parameter_list)

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 466
    option_function_parameter_list	go to state 861



state 728

    function_define  ->  all_type_define MUL ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 71)

    CLOSE_PAR	shift, and go to state 862



state 729

    function_define  ->  all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 70)

    OPEN_BPAR	shift, and go to state 863



state 730

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR . complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 864



state 731

    option_exp_else_statement  ->  ELSE . ari_exp   (rule 169)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 865
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 732

    ari_exp  ->  IF bool_exp THEN ari_exp option_exp_else_statement .   (rule 166)

    $default	reduce using rule 166 (ari_exp)



state 733

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 236)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 866
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 734

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 867



state 735

    type_cast_alg_exp  ->  simple_ari_exp ari_operator . simple_ari_exp   (rule 168)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    simple_ari_exp	go to state 868
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 736

    casted_element  ->  type_cast_alg_exp .   (rule 240)

    $default	reduce using rule 240 (casted_element)



state 737

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 224)

    $default	reduce using rule 224 (type_cast)



state 738

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 230)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 869
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 739

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 227)

    $default	reduce using rule 227 (type_cast)



state 740

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 870
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 741

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element .   (rule 229)

    $default	reduce using rule 229 (type_cast)



state 742

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 235)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 871
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 743

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element .   (rule 226)

    $default	reduce using rule 226 (type_cast)



state 744

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 872
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 745

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 823
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 737
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 746

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 826
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 739
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 747

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 828
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 743
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 748

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 873
    MUL 	shift, and go to state 754



state 749

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 222)

    $default	reduce using rule 222 (type_cast)



state 750

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 874
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 751

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 875



state 752

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 223)

    $default	reduce using rule 223 (type_cast)



state 753

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 876
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 754

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 877



state 755

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 220)

    $default	reduce using rule 220 (type_cast)



state 756

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 221)

    $default	reduce using rule 221 (type_cast)



state 757

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 237)

    $default	reduce using rule 237 (type_cast)



state 758

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 239)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 878
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 759

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    CLOSE_PAR	shift, and go to state 879



state 760

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    CLOSE_PAR	shift, and go to state 880



state 761

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    CLOSE_PAR	shift, and go to state 881



state 762

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    MUL 	shift, and go to state 845



state 763

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    MUL 	shift, and go to state 882



state 764

    case_par  ->  CASE . member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 352)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    member_in_exp	go to state 883
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 765

    case_par  ->  DEFAULT . COLON OPEN_PAR statement CLOSE_PAR   (rule 353)

    COLON	shift, and go to state 884



state 766

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par . CLOSE_BPAR   (rule 351)

    CLOSE_BPAR	shift, and go to state 885



state 767

    option_else_statement  ->  ELSE statement_bpar .   (rule 358)

    $default	reduce using rule 358 (option_else_statement)



state 768

    function_define  ->  STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 463
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 464
    STRUCT_TYPE	shift, and go to state 465

    $default	reduce using rule 295 (option_function_parameter_list)

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 466
    option_function_parameter_list	go to state 886



state 769

    function_define  ->  STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 74)

    CLOSE_PAR	shift, and go to state 887



state 770

    function_define  ->  STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 73)

    OPEN_BPAR	shift, and go to state 888



state 771

    option_function_parameter_list  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 294)

    CLOSE_PAR	shift, and go to state 889



state 772

    option_function_parameter_list  ->  ID MUL MUL . identifier inner_option_define_identifier   (rule 278)
    option_function_parameter_list  ->  ID MUL MUL . inner_option_define_identifier   (rule 285)

    COMMA	shift, and go to state 291
    OPEN_PAR	shift, and go to state 142
    ID  	shift, and go to state 143

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 890
    identifier	go to state 891



state 773

    option_function_parameter_list  ->  ID MUL inner_option_define_identifier .   (rule 284)

    $default	reduce using rule 284 (option_function_parameter_list)



state 774

    option_function_parameter_list  ->  ID MUL identifier . inner_option_define_identifier   (rule 277)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 892



state 775

    option_function_parameter_list  ->  ID identifier ARRAY . inner_option_define_identifier   (rule 279)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 893



state 776

    option_function_parameter_list  ->  ID identifier inner_option_define_identifier .   (rule 276)

    $default	reduce using rule 276 (option_function_parameter_list)



state 777

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . identifier inner_option_define_identifier   (rule 274)
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . inner_option_define_identifier   (rule 282)

    COMMA	shift, and go to state 291
    OPEN_PAR	shift, and go to state 142
    ID  	shift, and go to state 143

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 894
    identifier	go to state 895



state 778

    option_function_parameter_list  ->  STRUCT_TYPE MUL inner_option_define_identifier .   (rule 281)

    $default	reduce using rule 281 (option_function_parameter_list)



state 779

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 273)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 896



state 780

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 275)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 897



state 781

    option_function_parameter_list  ->  STRUCT_TYPE identifier inner_option_define_identifier .   (rule 272)

    $default	reduce using rule 272 (option_function_parameter_list)



state 782

    option_function_parameter_list  ->  all_type_define MUL MUL . identifier inner_option_define_identifier   (rule 293)

    OPEN_PAR	shift, and go to state 142
    ID  	shift, and go to state 143

    identifier	go to state 898



state 783

    option_function_parameter_list  ->  all_type_define MUL inner_option_define_identifier .   (rule 292)

    $default	reduce using rule 292 (option_function_parameter_list)



state 784

    option_function_parameter_list  ->  all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 287)
    option_function_parameter_list  ->  all_type_define MUL identifier . inner_option_define_identifier   (rule 291)

    ARRAY	shift, and go to state 899
    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 900



state 785

    option_function_parameter_list  ->  all_type_define identifier ARRAY . inner_option_define_identifier   (rule 286)
    option_function_parameter_list  ->  all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 290)

    COMMA	shift, and go to state 291
    OPEN_MPAR	shift, and go to state 901

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 902



state 786

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 288)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 289)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 903
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 787

    option_function_parameter_list  ->  all_type_define identifier inner_option_define_identifier .   (rule 270)

    $default	reduce using rule 270 (option_function_parameter_list)



state 788

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    OPEN_BPAR	shift, and go to state 904



state 789

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 305)

    CLOSE_PAR	shift, and go to state 905



state 790

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY . inner_option_define_identifier   (rule 301)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 906



state 791

    inner_option_define_identifier  ->  COMMA ID identifier inner_option_define_identifier .   (rule 298)

    $default	reduce using rule 298 (inner_option_define_identifier)



state 792

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 300)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 907



state 793

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 302)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 908



state 794

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier inner_option_define_identifier .   (rule 299)

    $default	reduce using rule 299 (inner_option_define_identifier)



state 795

    inner_option_define_identifier  ->  COMMA all_type_define MUL inner_option_define_identifier .   (rule 311)

    $default	reduce using rule 311 (inner_option_define_identifier)



state 796

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 304)
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . inner_option_define_identifier   (rule 310)

    ARRAY	shift, and go to state 909
    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 910



state 797

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 309)

    COMMA	shift, and go to state 291
    OPEN_MPAR	shift, and go to state 911

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 912



state 798

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 307)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 308)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 913
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 799

    inner_option_define_identifier  ->  COMMA all_type_define identifier inner_option_define_identifier .   (rule 296)

    $default	reduce using rule 296 (inner_option_define_identifier)



state 800

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement . CLOSE_BPAR   (rule 64)

    CLOSE_BPAR	shift, and go to state 914
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200



state 801

    option_frame_identifier  ->  COMMA identifier option_frame_identifier .   (rule 331)

    $default	reduce using rule 331 (option_frame_identifier)



state 802

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND . OPEN_PAR statement CLOSE_PAR   (rule 57)

    OPEN_PAR	shift, and go to state 915



state 803

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 108)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 238)

    OPEN_PAR	shift, and go to state 142
    CLOSE_PAR	shift, and go to state 867
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 378
    identifier	go to state 196



state 804

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 608
    MUL 	shift, and go to state 680



state 805

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA . for_sta_control CLOSE_PAR statement_bpar   (rule 343)

    OPEN_PAR	shift, and go to state 364
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 183
    ID  	shift, and go to state 178

    $default	reduce using rule 350 (for_sta_control)

    ass_statement	go to state 916
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 185
    point_exp	go to state 72
    identifier	go to state 75
    for_sta_control	go to state 917
    struct_member_exp	go to state 83



state 806

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR . bool_exp CLOSE_PAR   (rule 45)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 126
    MY_TRUE	shift, and go to state 127
    MY_FALSE	shift, and go to state 128
    OPEN_PAR	shift, and go to state 129
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    NEGATION	shift, and go to state 130
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 132
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    bool_exp	go to state 918
    prime_bool_exp	go to state 134
    identifier	go to state 106
    strliteral	go to state 135
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 807

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR . type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 142)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45

    type_define	go to state 919



state 808

    inner_option_list_value  ->  COMMA error .   (rule 211)

    $default	reduce using rule 211 (inner_option_list_value)



state 809

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    inner_option_list_value  ->  COMMA ari_exp . inner_option_list_value   (rule 207)

    COMMA	shift, and go to state 662
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 210 (inner_option_list_value)

    ari_operator	go to state 245
    inner_option_list_value	go to state 920



state 810

    array_exp  ->  array_exp . CON array_exp   (rule 197)
    inner_option_list_value  ->  COMMA array_exp . inner_option_list_value   (rule 209)

    COMMA	shift, and go to state 662
    CON 	shift, and go to state 502

    $default	reduce using rule 210 (inner_option_list_value)

    inner_option_list_value	go to state 921



state 811

    inner_option_list_value  ->  COMMA strliteral . inner_option_list_value   (rule 208)

    COMMA	shift, and go to state 662

    $default	reduce using rule 210 (inner_option_list_value)

    inner_option_list_value	go to state 922



state 812

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR .   (rule 204)

    $default	reduce using rule 204 (option_struct_list_value)



state 813

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR .   (rule 206)

    $default	reduce using rule 206 (option_struct_list_value)



state 814

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR .   (rule 205)

    $default	reduce using rule 205 (option_struct_list_value)



state 815

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR .   (rule 201)

    $default	reduce using rule 201 (option_list_value)



state 816

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR .   (rule 203)

    $default	reduce using rule 203 (option_list_value)



state 817

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR .   (rule 202)

    $default	reduce using rule 202 (option_list_value)



state 818

    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 647
    CHARDECLARATION	shift, and go to state 648
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 649
    OPEN_PAR	shift, and go to state 225
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 650
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234



state 819

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift CLOSE_PAR .   (rule 145)

    $default	reduce using rule 145 (rightaddrshift)



state 820

    option_output  ->  COMMA ass_right option_output .   (rule 363)

    $default	reduce using rule 363 (option_output)



state 821

    function_define  ->  STRUCT STRUCT_TYPE MUL MUL . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)
    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 108)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 238)

    OPEN_PAR	shift, and go to state 142
    CLOSE_PAR	shift, and go to state 867
    MUL 	shift, and go to state 193
    ID  	shift, and go to state 621

    option_identifier_array_declaration	go to state 378
    identifier	go to state 196



state 822

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 221
    CHARDECLARATION	shift, and go to state 222
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 224
    OPEN_PAR	shift, and go to state 923
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 226
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234



state 823

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    identifier  ->  ID .   (rule 325)

    OPEN_PAR	shift, and go to state 191
    CLOSE_PAR	shift, and go to state 924
    OPEN_MPAR	shift, and go to state 192

    CLOSE_PAR	[reduce using rule 325 (identifier)]
    $default	reduce using rule 325 (identifier)



state 824

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    intliteral  ->  INTLITERAL .   (rule 328)

    CLOSE_PAR	shift, and go to state 925

    CLOSE_PAR	[reduce using rule 328 (intliteral)]
    $default	reduce using rule 328 (intliteral)



state 825

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 221
    CHARDECLARATION	shift, and go to state 222
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 224
    OPEN_PAR	shift, and go to state 926
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 226
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234



state 826

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    identifier  ->  ID .   (rule 325)

    OPEN_PAR	shift, and go to state 191
    CLOSE_PAR	shift, and go to state 927
    OPEN_MPAR	shift, and go to state 192

    CLOSE_PAR	[reduce using rule 325 (identifier)]
    $default	reduce using rule 325 (identifier)



state 827

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    intliteral  ->  INTLITERAL .   (rule 328)

    CLOSE_PAR	shift, and go to state 928

    CLOSE_PAR	[reduce using rule 328 (intliteral)]
    $default	reduce using rule 328 (intliteral)



state 828

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    identifier  ->  ID .   (rule 325)

    OPEN_PAR	shift, and go to state 191
    CLOSE_PAR	shift, and go to state 929
    OPEN_MPAR	shift, and go to state 192

    CLOSE_PAR	[reduce using rule 325 (identifier)]
    $default	reduce using rule 325 (identifier)



state 829

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    intliteral  ->  INTLITERAL .   (rule 328)

    CLOSE_PAR	shift, and go to state 930

    CLOSE_PAR	[reduce using rule 328 (intliteral)]
    $default	reduce using rule 328 (intliteral)



state 830

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 931
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 874
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 831

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 932
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 933
    INTLITERAL	shift, and go to state 934
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 876
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 832

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 92)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 463
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 464
    STRUCT_TYPE	shift, and go to state 465

    $default	reduce using rule 295 (option_function_parameter_list)

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 466
    option_function_parameter_list	go to state 935



state 833

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 146)

    CLOSE_MPAR	shift, and go to state 936



state 834

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 91)

    CLOSE_PAR	shift, and go to state 937



state 835

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 159)

    CLOSE_MPAR	shift, and go to state 938



state 836

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp .   (rule 384)

    $default	reduce using rule 384 (struct_member_exp)



state 837

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp .   (rule 380)

    $default	reduce using rule 380 (struct_member_exp)



state 838

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement . CLOSE_MPAR   (rule 56)

    CLOSE_MPAR	shift, and go to state 939
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200



state 839

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar .   (rule 58)

    $default	reduce using rule 58 (statement)



state 840

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 940
    ari_operator	go to state 245



state 841

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp .   (rule 160)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    ADD 	[reduce using rule 160 (point_exp)]
    SUB 	[reduce using rule 160 (point_exp)]
    $default	reduce using rule 160 (point_exp)

    ari_operator	go to state 245



state 842

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    OPEN_PAR	shift, and go to state 941
    ID  	shift, and go to state 942
    INTLITERAL	shift, and go to state 943



state 843

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    OPEN_PAR	shift, and go to state 944
    ID  	shift, and go to state 945
    INTLITERAL	shift, and go to state 946



state 844

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    ID  	shift, and go to state 947
    INTLITERAL	shift, and go to state 948



state 845

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    CLOSE_PAR	shift, and go to state 949



state 846

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    CLOSE_PAR	shift, and go to state 950



state 847

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    MUL 	shift, and go to state 846



state 848

    option_input  ->  COMMA array option_input .   (rule 371)

    $default	reduce using rule 371 (option_input)



state 849

    option_input  ->  COMMA identifier option_input .   (rule 370)

    $default	reduce using rule 370 (option_input)



state 850

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 76)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 314)

    COMMA	shift, and go to state 553

    COMMA	[reduce using rule 76 (function)]
    CLOSE_PAR	reduce using rule 76 (function)
    CLOSE_PAR	[reduce using rule 319 (inner_option_function_identifier)]
    $default	reduce using rule 76 (function)

    inner_option_function_identifier	go to state 951



state 851

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 76)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 318)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 311
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 373
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 314
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 374
    STRLITERAL	shift, and go to state 131
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    $default	reduce using rule 315 (option_function_identifier)

    function	go to state 98
    ass_right	go to state 375
    rightaddrshift	go to state 316
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 317
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    array_exp	go to state 318
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    address_exp	go to state 104
    type_cast	go to state 105
    option_function_identifier	go to state 952
    identifier	go to state 106
    strliteral	go to state 321
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 852

    inner_option_function_identifier  ->  COMMA ass_right inner_option_function_identifier .   (rule 317)

    $default	reduce using rule 317 (inner_option_function_identifier)



state 853

    option_ari_exp  ->  COMMA ari_exp option_ari_exp .   (rule 153)

    $default	reduce using rule 153 (option_ari_exp)



state 854

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration .   (rule 104)

    $default	reduce using rule 104 (option_identifier_array_declaration)



state 855

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration .   (rule 105)

    $default	reduce using rule 105 (option_identifier_array_declaration)



state 856

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P array_exp inner_option_identifier_array_declaration   (rule 106)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P strliteral inner_option_identifier_array_declaration   (rule 107)

    COMMA	shift, and go to state 381
    ASS_P	shift, and go to state 953

    COMMA	[reduce using rule 111 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 111 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 954



state 857

    option_struct_member_exp  ->  DOT array option_struct_member_exp .   (rule 391)

    $default	reduce using rule 391 (option_struct_member_exp)



state 858

    option_struct_member_exp  ->  DOT identifier option_struct_member_exp .   (rule 390)

    $default	reduce using rule 390 (option_struct_member_exp)



state 859

    option_struct_member_exp  ->  IMPLY array option_struct_member_exp .   (rule 393)

    $default	reduce using rule 393 (option_struct_member_exp)



state 860

    option_struct_member_exp  ->  IMPLY identifier option_struct_member_exp .   (rule 392)

    $default	reduce using rule 392 (option_struct_member_exp)



state 861

    function_define  ->  all_type_define MUL MUL ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    CLOSE_PAR	shift, and go to state 955



state 862

    function_define  ->  all_type_define MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 71)

    OPEN_BPAR	shift, and go to state 956



state 863

    function_define  ->  all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 70)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 957
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 864

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition . CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CLOSE_BPAR	shift, and go to state 958
    CHOP	shift, and go to state 118
    IFF 	shift, and go to state 119
    PROPIMPLY	shift, and go to state 120
    OR  	shift, and go to state 121
    AND 	shift, and go to state 122
    CHOPSTAR	shift, and go to state 123



state 865

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    option_exp_else_statement  ->  ELSE ari_exp .   (rule 169)

    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    ADD 	[reduce using rule 169 (option_exp_else_statement)]
    SUB 	[reduce using rule 169 (option_exp_else_statement)]
    $default	reduce using rule 169 (option_exp_else_statement)

    ari_operator	go to state 245



state 866

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 236)

    $default	reduce using rule 236 (type_cast)



state 867

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 238)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 959
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 868

    type_cast_alg_exp  ->  simple_ari_exp ari_operator simple_ari_exp .   (rule 168)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 172)

    INTER_OR	shift, and go to state 246
    CON 	shift, and go to state 247
    ADDRESS	shift, and go to state 248
    LST 	shift, and go to state 255
    RST 	shift, and go to state 256
    MUL 	shift, and go to state 257
    DIV 	shift, and go to state 258
    MOD 	shift, and go to state 259

    INTER_OR	[reduce using rule 168 (type_cast_alg_exp)]
    CON 	[reduce using rule 168 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 168 (type_cast_alg_exp)]
    LST 	[reduce using rule 168 (type_cast_alg_exp)]
    RST 	[reduce using rule 168 (type_cast_alg_exp)]
    MUL 	[reduce using rule 168 (type_cast_alg_exp)]
    DIV 	[reduce using rule 168 (type_cast_alg_exp)]
    MOD 	[reduce using rule 168 (type_cast_alg_exp)]
    $default	reduce using rule 168 (type_cast_alg_exp)

    bi_operator	go to state 260



state 869

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 230)

    $default	reduce using rule 230 (type_cast)



state 870

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 233)

    $default	reduce using rule 233 (type_cast)



state 871

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 235)

    $default	reduce using rule 235 (type_cast)



state 872

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 232)

    $default	reduce using rule 232 (type_cast)



state 873

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 933
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 876
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 874

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 225)

    $default	reduce using rule 225 (type_cast)



state 875

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 231)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 960
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 876

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 228)

    $default	reduce using rule 228 (type_cast)



state 877

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 961
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 878

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 239)

    $default	reduce using rule 239 (type_cast)



state 879

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    ID  	shift, and go to state 942



state 880

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    ID  	shift, and go to state 945



state 881

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    ID  	shift, and go to state 947



state 882

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    CLOSE_PAR	shift, and go to state 962



state 883

    case_par  ->  CASE member_in_exp . COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 352)

    COLON	shift, and go to state 963



state 884

    case_par  ->  DEFAULT COLON . OPEN_PAR statement CLOSE_PAR   (rule 353)

    OPEN_PAR	shift, and go to state 964



state 885

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR .   (rule 351)

    $default	reduce using rule 351 (switch_statement)



state 886

    function_define  ->  STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 75)

    CLOSE_PAR	shift, and go to state 965



state 887

    function_define  ->  STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 74)

    OPEN_BPAR	shift, and go to state 966



state 888

    function_define  ->  STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 73)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 967
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 889

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 294)

    OPEN_PAR	shift, and go to state 968



state 890

    option_function_parameter_list  ->  ID MUL MUL inner_option_define_identifier .   (rule 285)

    $default	reduce using rule 285 (option_function_parameter_list)



state 891

    option_function_parameter_list  ->  ID MUL MUL identifier . inner_option_define_identifier   (rule 278)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 969



state 892

    option_function_parameter_list  ->  ID MUL identifier inner_option_define_identifier .   (rule 277)

    $default	reduce using rule 277 (option_function_parameter_list)



state 893

    option_function_parameter_list  ->  ID identifier ARRAY inner_option_define_identifier .   (rule 279)

    $default	reduce using rule 279 (option_function_parameter_list)



state 894

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL inner_option_define_identifier .   (rule 282)

    $default	reduce using rule 282 (option_function_parameter_list)



state 895

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier . inner_option_define_identifier   (rule 274)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 970



state 896

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 273)

    $default	reduce using rule 273 (option_function_parameter_list)



state 897

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 275)

    $default	reduce using rule 275 (option_function_parameter_list)



state 898

    option_function_parameter_list  ->  all_type_define MUL MUL identifier . inner_option_define_identifier   (rule 293)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 971



state 899

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 287)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 972



state 900

    option_function_parameter_list  ->  all_type_define MUL identifier inner_option_define_identifier .   (rule 291)

    $default	reduce using rule 291 (option_function_parameter_list)



state 901

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 290)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 973
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 902

    option_function_parameter_list  ->  all_type_define identifier ARRAY inner_option_define_identifier .   (rule 286)

    $default	reduce using rule 286 (option_function_parameter_list)



state 903

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 288)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 289)

    COMMA	shift, and go to state 974
    CLOSE_MPAR	shift, and go to state 975
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    ari_operator	go to state 245



state 904

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 60)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    $default	reduce using rule 69 (empty_statement)

    statement	go to state 976
    empty_statement	go to state 977
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 905

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 305)

    OPEN_PAR	shift, and go to state 978



state 906

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY inner_option_define_identifier .   (rule 301)

    $default	reduce using rule 301 (inner_option_define_identifier)



state 907

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 300)

    $default	reduce using rule 300 (inner_option_define_identifier)



state 908

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 302)

    $default	reduce using rule 302 (inner_option_define_identifier)



state 909

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 304)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 979



state 910

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier inner_option_define_identifier .   (rule 310)

    $default	reduce using rule 310 (inner_option_define_identifier)



state 911

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 309)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 980
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 912

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY inner_option_define_identifier .   (rule 303)

    $default	reduce using rule 303 (inner_option_define_identifier)



state 913

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 307)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 308)

    COMMA	shift, and go to state 981
    CLOSE_MPAR	shift, and go to state 982
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    ari_operator	go to state 245



state 914

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR .   (rule 64)

    $default	reduce using rule 64 (statement)



state 915

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR . statement CLOSE_PAR   (rule 57)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 983
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 916

    for_sta_control  ->  ass_statement .   (rule 349)

    $default	reduce using rule 349 (for_sta_control)



state 917

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control . CLOSE_PAR statement_bpar   (rule 343)

    CLOSE_PAR	shift, and go to state 984



state 918

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp . CLOSE_PAR   (rule 45)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 243)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 244)

    CLOSE_PAR	shift, and go to state 985
    OR  	shift, and go to state 278
    AND 	shift, and go to state 279



state 919

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 142)

    CLOSE_PAR	shift, and go to state 986



state 920

    inner_option_list_value  ->  COMMA ari_exp inner_option_list_value .   (rule 207)

    $default	reduce using rule 207 (inner_option_list_value)



state 921

    inner_option_list_value  ->  COMMA array_exp inner_option_list_value .   (rule 209)

    $default	reduce using rule 209 (inner_option_list_value)



state 922

    inner_option_list_value  ->  COMMA strliteral inner_option_list_value .   (rule 208)

    $default	reduce using rule 208 (inner_option_list_value)



state 923

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 987
    CHARDECLARATION	shift, and go to state 988
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 425
    OPEN_PAR	shift, and go to state 225
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 989
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234



state 924

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    OPEN_MPAR	shift, and go to state 990



state 925

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    OPEN_MPAR	shift, and go to state 991



state 926

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 992
    CHARDECLARATION	shift, and go to state 993
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 425
    OPEN_PAR	shift, and go to state 225
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 994
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234



state 927

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    OPEN_MPAR	shift, and go to state 995



state 928

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    OPEN_MPAR	shift, and go to state 996



state 929

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    OPEN_MPAR	shift, and go to state 997



state 930

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    OPEN_MPAR	shift, and go to state 998



state 931

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    identifier  ->  ID .   (rule 325)

    OPEN_PAR	shift, and go to state 191
    CLOSE_PAR	shift, and go to state 999
    OPEN_MPAR	shift, and go to state 192

    CLOSE_PAR	[reduce using rule 325 (identifier)]
    $default	reduce using rule 325 (identifier)



state 932

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 221
    CHARDECLARATION	shift, and go to state 222
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 224
    OPEN_PAR	shift, and go to state 1000
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 226
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234



state 933

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    identifier  ->  ID .   (rule 325)

    OPEN_PAR	shift, and go to state 191
    CLOSE_PAR	shift, and go to state 1001
    OPEN_MPAR	shift, and go to state 192

    CLOSE_PAR	[reduce using rule 325 (identifier)]
    $default	reduce using rule 325 (identifier)



state 934

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    intliteral  ->  INTLITERAL .   (rule 328)

    CLOSE_PAR	shift, and go to state 1002

    CLOSE_PAR	[reduce using rule 328 (intliteral)]
    $default	reduce using rule 328 (intliteral)



state 935

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 92)

    CLOSE_PAR	shift, and go to state 1003



state 936

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 146)

    CLOSE_PAR	shift, and go to state 1004

    CLOSE_PAR	[reduce using rule 146 (array)]
    $default	reduce using rule 146 (array)



state 937

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 91)

    $default	reduce using rule 91 (declaration)



state 938

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 159)

    $default	reduce using rule 159 (point_exp)



state 939

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR .   (rule 56)

    $default	reduce using rule 56 (statement)



state 940

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)

    CLOSE_MPAR	shift, and go to state 1005



state 941

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    OPEN_PAR	shift, and go to state 1006



state 942

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    CLOSE_PAR	shift, and go to state 924



state 943

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 925



state 944

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    OPEN_PAR	shift, and go to state 1007



state 945

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    CLOSE_PAR	shift, and go to state 927



state 946

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 928



state 947

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    CLOSE_PAR	shift, and go to state 929



state 948

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 930



state 949

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    ID  	shift, and go to state 1008



state 950

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    OPEN_PAR	shift, and go to state 1009
    ID  	shift, and go to state 1010
    INTLITERAL	shift, and go to state 1011



state 951

    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 314)

    $default	reduce using rule 314 (option_function_identifier)



state 952

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 76)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 318)

    CLOSE_PAR	shift, and go to state 1012



state 953

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . array_exp inner_option_identifier_array_declaration   (rule 106)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . strliteral inner_option_identifier_array_declaration   (rule 107)

    OPEN_PAR	shift, and go to state 673
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313
    STRLITERAL	shift, and go to state 131

    array_exp	go to state 1013
    option_list_value	go to state 319
    option_struct_list_value	go to state 320
    strliteral	go to state 1014



state 954

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration .   (rule 102)

    $default	reduce using rule 102 (option_identifier_array_declaration)



state 955

    function_define  ->  all_type_define MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 72)

    OPEN_BPAR	shift, and go to state 1015



state 956

    function_define  ->  all_type_define MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 71)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 1016
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 957

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    function_define  ->  all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 70)

    CLOSE_BPAR	shift, and go to state 1017
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200



state 958

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR .   (rule 23)

    $default	reduce using rule 23 (complexProposition)



state 959

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 238)

    $default	reduce using rule 238 (type_cast)



state 960

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 231)

    $default	reduce using rule 231 (type_cast)



state 961

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 234)

    $default	reduce using rule 234 (type_cast)



state 962

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    ID  	shift, and go to state 1010



state 963

    case_par  ->  CASE member_in_exp COLON . OPEN_PAR statement CLOSE_PAR init_case_par   (rule 352)

    OPEN_PAR	shift, and go to state 1018



state 964

    case_par  ->  DEFAULT COLON OPEN_PAR . statement CLOSE_PAR   (rule 353)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 1019
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 965

    function_define  ->  STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 75)

    OPEN_BPAR	shift, and go to state 1020



state 966

    function_define  ->  STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 74)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 1021
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 967

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    function_define  ->  STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 73)

    CLOSE_BPAR	shift, and go to state 1022
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200



state 968

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 294)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 463
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 464
    STRUCT_TYPE	shift, and go to state 465

    $default	reduce using rule 295 (option_function_parameter_list)

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 466
    option_function_parameter_list	go to state 1023



state 969

    option_function_parameter_list  ->  ID MUL MUL identifier inner_option_define_identifier .   (rule 278)

    $default	reduce using rule 278 (option_function_parameter_list)



state 970

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier inner_option_define_identifier .   (rule 274)

    $default	reduce using rule 274 (option_function_parameter_list)



state 971

    option_function_parameter_list  ->  all_type_define MUL MUL identifier inner_option_define_identifier .   (rule 293)

    $default	reduce using rule 293 (option_function_parameter_list)



state 972

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 287)

    $default	reduce using rule 287 (option_function_parameter_list)



state 973

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 290)

    CLOSE_MPAR	shift, and go to state 1024
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    ari_operator	go to state 245



state 974

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 289)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1025
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 975

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 288)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1026



state 976

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    empty_statement  ->  statement .   (rule 68)

    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200

    $default	reduce using rule 68 (empty_statement)



state 977

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 60)

    CLOSE_BPAR	shift, and go to state 1027



state 978

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 305)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 463
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 464
    STRUCT_TYPE	shift, and go to state 465

    $default	reduce using rule 295 (option_function_parameter_list)

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 466
    option_function_parameter_list	go to state 1028



state 979

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 304)

    $default	reduce using rule 304 (inner_option_define_identifier)



state 980

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 309)

    CLOSE_MPAR	shift, and go to state 1029
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    ari_operator	go to state 245



state 981

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 308)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1030
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 982

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 307)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1031



state 983

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement . CLOSE_PAR   (rule 57)

    CLOSE_PAR	shift, and go to state 1032
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200



state 984

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR . statement_bpar   (rule 343)

    error	shift, and go to state 307
    OPEN_BPAR	shift, and go to state 308

    statement_bpar	go to state 1033



state 985

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR .   (rule 45)

    $default	reduce using rule 45 (statement)



state 986

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 142)

    OPEN_PAR	shift, and go to state 1034



state 987

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 416
    MUL 	shift, and go to state 1035



state 988

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 418
    MUL 	shift, and go to state 1036



state 989

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)

    INTDECLARATION	shift, and go to state 604
    CHARDECLARATION	shift, and go to state 1037



state 990

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 147)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1038
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 991

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1039
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 992

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 416
    MUL 	shift, and go to state 1040



state 993

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 418
    MUL 	shift, and go to state 1041



state 994

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)

    INTDECLARATION	shift, and go to state 604
    CHARDECLARATION	shift, and go to state 1042



state 995

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 150)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1043
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 996

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1044
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 997

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 149)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1045
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 998

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1046
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 999

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    OPEN_MPAR	shift, and go to state 1047



state 1000

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 159)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 162)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 182)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 220)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 221)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 239)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 326)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 380)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 384)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    STRUCT	shift, and go to state 220
    INTDECLARATION	shift, and go to state 1048
    CHARDECLARATION	shift, and go to state 1049
    VOIDDECLARATION	shift, and go to state 223
    FLOATDECLARATION	shift, and go to state 425
    OPEN_PAR	shift, and go to state 225
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 1050
    SIGNED	shift, and go to state 227
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 228
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 229
    point_exp	go to state 230
    ari_exp	go to state 231
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 232
    type_cast	go to state 105
    identifier	go to state 233
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 234



state 1001

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    OPEN_MPAR	shift, and go to state 1051



state 1002

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    OPEN_MPAR	shift, and go to state 1052



state 1003

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 92)

    $default	reduce using rule 92 (declaration)



state 1004

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)

    OPEN_PAR	shift, and go to state 1053



state 1005

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)

    CLOSE_PAR	shift, and go to state 1004



state 1006

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    INTDECLARATION	shift, and go to state 1054
    CHARDECLARATION	shift, and go to state 1055
    UNSIGNED	shift, and go to state 1056



state 1007

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    INTDECLARATION	shift, and go to state 1057
    CHARDECLARATION	shift, and go to state 1058
    UNSIGNED	shift, and go to state 1059



state 1008

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    CLOSE_PAR	shift, and go to state 999



state 1009

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    OPEN_PAR	shift, and go to state 1060



state 1010

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    CLOSE_PAR	shift, and go to state 1001



state 1011

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1002



state 1012

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 76)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 318)

    COMMA	shift, and go to state 553

    COMMA	[reduce using rule 76 (function)]
    CLOSE_PAR	reduce using rule 76 (function)
    CLOSE_PAR	[reduce using rule 319 (inner_option_function_identifier)]
    $default	reduce using rule 76 (function)

    inner_option_function_identifier	go to state 1061



state 1013

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp . inner_option_identifier_array_declaration   (rule 106)
    array_exp  ->  array_exp . CON array_exp   (rule 197)

    COMMA	shift, and go to state 381
    CON 	shift, and go to state 502

    COMMA	[reduce using rule 111 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 111 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1062



state 1014

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral . inner_option_identifier_array_declaration   (rule 107)

    COMMA	shift, and go to state 381

    COMMA	[reduce using rule 111 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 111 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1063



state 1015

    function_define  ->  all_type_define MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 72)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 1064
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 1016

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    function_define  ->  all_type_define MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 71)

    CLOSE_BPAR	shift, and go to state 1065
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200



state 1017

    function_define  ->  all_type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 70)

    $default	reduce using rule 70 (function_define)



state 1018

    case_par  ->  CASE member_in_exp COLON OPEN_PAR . statement CLOSE_PAR init_case_par   (rule 352)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 1066
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 1019

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    case_par  ->  DEFAULT COLON OPEN_PAR statement . CLOSE_PAR   (rule 353)

    CLOSE_PAR	shift, and go to state 1067
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200



state 1020

    function_define  ->  STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 75)

    SWITCH	shift, and go to state 22
    RETURN	shift, and go to state 23
    IF  	shift, and go to state 24
    EMPTY	shift, and go to state 25
    AWAIT	shift, and go to state 26
    STRUCT	shift, and go to state 27
    UNION	shift, and go to state 28
    FILEDECLARATION	shift, and go to state 29
    MORE	shift, and go to state 30
    DEFINE	shift, and go to state 31
    EXIST	shift, and go to state 32
    FRAME	shift, and go to state 33
    FOR 	shift, and go to state 34
    WHILE	shift, and go to state 35
    TRUE	shift, and go to state 36
    FALSE	shift, and go to state 37
    REPEAT	shift, and go to state 38
    DISPLAY	shift, and go to state 39
    SKIP	shift, and go to state 40
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 46
    OPEN_BPAR	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 1068
    function_define	go to state 61
    function	go to state 62
    struct_define_statement	go to state 63
    struct_identifier	go to state 64
    sign_declaration	go to state 65
    declaration	go to state 66
    type_define	go to state 67
    ass_statement	go to state 68
    ass_left	go to state 69
    leftaddrshift	go to state 70
    array	go to state 71
    point_exp	go to state 72
    sign_type_define	go to state 73
    all_type_define	go to state 74
    identifier	go to state 75
    while_statement	go to state 76
    for_statement	go to state 77
    extend_for_statement	go to state 78
    switch_statement	go to state 79
    if_statement	go to state 80
    output_statement	go to state 81
    input_statement	go to state 82
    struct_member_exp	go to state 83



state 1021

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    function_define  ->  STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 74)

    CLOSE_BPAR	shift, and go to state 1069
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200



state 1022

    function_define  ->  STRUCT STRUCT_TYPE ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 73)

    $default	reduce using rule 73 (function_define)



state 1023

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 294)

    CLOSE_PAR	shift, and go to state 1070



state 1024

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 290)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1071



state 1025

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 289)

    CLOSE_MPAR	shift, and go to state 1072
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    ari_operator	go to state 245



state 1026

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 288)

    $default	reduce using rule 288 (option_function_parameter_list)



state 1027

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 60)

    $default	reduce using rule 60 (statement)



state 1028

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 305)

    CLOSE_PAR	shift, and go to state 1073



state 1029

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 309)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1074



state 1030

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 308)

    CLOSE_MPAR	shift, and go to state 1075
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    ari_operator	go to state 245



state 1031

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 307)

    $default	reduce using rule 307 (inner_option_define_identifier)



state 1032

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR .   (rule 57)

    $default	reduce using rule 57 (statement)



state 1033

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar .   (rule 343)

    $default	reduce using rule 343 (extend_for_statement)



state 1034

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR function   (rule 142)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 463
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 464
    STRUCT_TYPE	shift, and go to state 465

    $default	reduce using rule 295 (option_function_parameter_list)

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 466
    option_function_parameter_list	go to state 1076



state 1035

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 1077
    MUL 	shift, and go to state 592



state 1036

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 1078
    MUL 	shift, and go to state 595



state 1037

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 608
    MUL 	shift, and go to state 1079



state 1038

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 147)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1080
    ari_operator	go to state 245



state 1039

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 126)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1081
    ari_operator	go to state 245



state 1040

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 1082
    MUL 	shift, and go to state 592



state 1041

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 1083
    MUL 	shift, and go to state 595



state 1042

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 608
    MUL 	shift, and go to state 1084



state 1043

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 150)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1085
    ari_operator	go to state 245



state 1044

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 124)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1086
    ari_operator	go to state 245



state 1045

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 149)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1087
    ari_operator	go to state 245



state 1046

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 127)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1088
    ari_operator	go to state 245



state 1047

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 148)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1089
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 1048

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 416
    MUL 	shift, and go to state 1090



state 1049

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 219)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 418
    MUL 	shift, and go to state 1091



state 1050

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 222)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 234)

    INTDECLARATION	shift, and go to state 604
    CHARDECLARATION	shift, and go to state 1092



state 1051

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1093
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 1052

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1094
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 1053

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 94)

    FILEDECLARATION	shift, and go to state 29
    INTDECLARATION	shift, and go to state 41
    STRDECLARATION	shift, and go to state 42
    CHARDECLARATION	shift, and go to state 43
    VOIDDECLARATION	shift, and go to state 44
    FLOATDECLARATION	shift, and go to state 45
    OPEN_PAR	shift, and go to state 463
    UNSIGNED	shift, and go to state 353
    ID  	shift, and go to state 464
    STRUCT_TYPE	shift, and go to state 465

    $default	reduce using rule 295 (option_function_parameter_list)

    type_define	go to state 354
    sign_type_define	go to state 73
    all_type_define	go to state 466
    option_function_parameter_list	go to state 1095



state 1054

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    MUL 	shift, and go to state 1096



state 1055

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    MUL 	shift, and go to state 1097



state 1056

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    CHARDECLARATION	shift, and go to state 1098



state 1057

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    MUL 	shift, and go to state 1099



state 1058

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    MUL 	shift, and go to state 1100



state 1059

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CHARDECLARATION	shift, and go to state 1101



state 1060

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    INTDECLARATION	shift, and go to state 1102
    CHARDECLARATION	shift, and go to state 1103
    UNSIGNED	shift, and go to state 1104



state 1061

    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 318)

    $default	reduce using rule 318 (inner_option_function_identifier)



state 1062

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration .   (rule 106)

    $default	reduce using rule 106 (option_identifier_array_declaration)



state 1063

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration .   (rule 107)

    $default	reduce using rule 107 (option_identifier_array_declaration)



state 1064

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    function_define  ->  all_type_define MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 72)

    CLOSE_BPAR	shift, and go to state 1105
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200



state 1065

    function_define  ->  all_type_define MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 71)

    $default	reduce using rule 71 (function_define)



state 1066

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement . CLOSE_PAR init_case_par   (rule 352)

    CLOSE_PAR	shift, and go to state 1106
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200



state 1067

    case_par  ->  DEFAULT COLON OPEN_PAR statement CLOSE_PAR .   (rule 353)

    $default	reduce using rule 353 (case_par)



state 1068

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 55)
    function_define  ->  STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 75)

    CLOSE_BPAR	shift, and go to state 1107
    CHOP	shift, and go to state 197
    OR  	shift, and go to state 198
    PARALLEL	shift, and go to state 199
    AND 	shift, and go to state 200



state 1069

    function_define  ->  STRUCT STRUCT_TYPE MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 74)

    $default	reduce using rule 74 (function_define)



state 1070

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 294)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1108



state 1071

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 290)

    $default	reduce using rule 290 (option_function_parameter_list)



state 1072

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 289)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1109



state 1073

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 305)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1110



state 1074

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 309)

    $default	reduce using rule 309 (inner_option_define_identifier)



state 1075

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 308)

    COMMA	shift, and go to state 291

    $default	reduce using rule 306 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1111



state 1076

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR function   (rule 142)

    CLOSE_PAR	shift, and go to state 1112



state 1077

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 823
    INTLITERAL	shift, and go to state 1113
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 737
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 1078

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 826
    INTLITERAL	shift, and go to state 1114
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 739
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 1079

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 1115
    MUL 	shift, and go to state 754



state 1080

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 147)

    CLOSE_MPAR	shift, and go to state 1116



state 1081

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 126)

    CLOSE_MPAR	shift, and go to state 1117



state 1082

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 823
    INTLITERAL	shift, and go to state 1118
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 737
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 1083

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 826
    INTLITERAL	shift, and go to state 1119
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 739
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 1084

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 1120
    MUL 	shift, and go to state 754



state 1085

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 150)

    CLOSE_MPAR	shift, and go to state 1121



state 1086

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 124)

    CLOSE_MPAR	shift, and go to state 1122



state 1087

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 149)

    CLOSE_MPAR	shift, and go to state 1123



state 1088

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 127)

    CLOSE_MPAR	shift, and go to state 1124



state 1089

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 148)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1125
    ari_operator	go to state 245



state 1090

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 1126
    MUL 	shift, and go to state 592



state 1091

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 1127
    MUL 	shift, and go to state 595



state 1092

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 608
    MUL 	shift, and go to state 1128



state 1093

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 151)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1129
    ari_operator	go to state 245



state 1094

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 125)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1130
    ari_operator	go to state 245



state 1095

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P array_exp   (rule 94)

    CLOSE_PAR	shift, and go to state 1131



state 1096

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    CLOSE_PAR	shift, and go to state 1132



state 1097

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    CLOSE_PAR	shift, and go to state 1133



state 1098

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    MUL 	shift, and go to state 1134



state 1099

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1135



state 1100

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1136



state 1101

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    MUL 	shift, and go to state 1137



state 1102

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    MUL 	shift, and go to state 1138



state 1103

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    MUL 	shift, and go to state 1139



state 1104

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    CHARDECLARATION	shift, and go to state 1140



state 1105

    function_define  ->  all_type_define MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 72)

    $default	reduce using rule 72 (function_define)



state 1106

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR . init_case_par   (rule 352)

    CASE	shift, and go to state 764
    BREAK	shift, and go to state 1141
    DEFAULT	shift, and go to state 765

    $default	reduce using rule 356 (init_case_par)

    case_par	go to state 1142
    init_case_par	go to state 1143



state 1107

    function_define  ->  STRUCT STRUCT_TYPE MUL MUL ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 75)

    $default	reduce using rule 75 (function_define)



state 1108

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 294)

    $default	reduce using rule 294 (option_function_parameter_list)



state 1109

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 289)

    $default	reduce using rule 289 (option_function_parameter_list)



state 1110

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 305)

    $default	reduce using rule 305 (inner_option_define_identifier)



state 1111

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 308)

    $default	reduce using rule 308 (inner_option_define_identifier)



state 1112

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . function   (rule 142)

    OPEN_PAR	shift, and go to state 1144
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 1145

    function	go to state 1146
    array	go to state 1147



state 1113

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    intliteral  ->  INTLITERAL .   (rule 328)

    CLOSE_PAR	shift, and go to state 1148

    CLOSE_PAR	[reduce using rule 328 (intliteral)]
    $default	reduce using rule 328 (intliteral)



state 1114

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    intliteral  ->  INTLITERAL .   (rule 328)

    CLOSE_PAR	shift, and go to state 1149

    CLOSE_PAR	[reduce using rule 328 (intliteral)]
    $default	reduce using rule 328 (intliteral)



state 1115

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 933
    INTLITERAL	shift, and go to state 1150
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 876
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 1116

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 147)

    $default	reduce using rule 147 (array)



state 1117

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 126)

    $default	reduce using rule 126 (leftaddrshift)



state 1118

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    intliteral  ->  INTLITERAL .   (rule 328)

    CLOSE_PAR	shift, and go to state 1151

    CLOSE_PAR	[reduce using rule 328 (intliteral)]
    $default	reduce using rule 328 (intliteral)



state 1119

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    intliteral  ->  INTLITERAL .   (rule 328)

    CLOSE_PAR	shift, and go to state 1152

    CLOSE_PAR	[reduce using rule 328 (intliteral)]
    $default	reduce using rule 328 (intliteral)



state 1120

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 933
    INTLITERAL	shift, and go to state 1153
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 876
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 1121

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 150)

    $default	reduce using rule 150 (array)



state 1122

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 124)

    $default	reduce using rule 124 (leftaddrshift)



state 1123

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 149)

    $default	reduce using rule 149 (array)



state 1124

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 127)

    $default	reduce using rule 127 (leftaddrshift)



state 1125

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 148)

    CLOSE_MPAR	shift, and go to state 1154



state 1126

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 823
    INTLITERAL	shift, and go to state 1155
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 737
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 1127

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 826
    INTLITERAL	shift, and go to state 1156
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 739
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 1128

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 1157
    MUL 	shift, and go to state 754



state 1129

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 151)

    CLOSE_MPAR	shift, and go to state 1158



state 1130

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 125)

    CLOSE_MPAR	shift, and go to state 1159



state 1131

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 93)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P array_exp   (rule 94)

    ASS_P	shift, and go to state 1160

    $default	reduce using rule 93 (declaration)



state 1132

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    INTLITERAL	shift, and go to state 1161



state 1133

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    INTLITERAL	shift, and go to state 1162



state 1134

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    CLOSE_PAR	shift, and go to state 1163



state 1135

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    INTLITERAL	shift, and go to state 1164



state 1136

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    INTLITERAL	shift, and go to state 1165



state 1137

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1166



state 1138

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    CLOSE_PAR	shift, and go to state 1167



state 1139

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    CLOSE_PAR	shift, and go to state 1168



state 1140

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    MUL 	shift, and go to state 1169



state 1141

    init_case_par  ->  BREAK . case_par   (rule 354)

    CASE	shift, and go to state 764
    DEFAULT	shift, and go to state 765

    case_par	go to state 1170



state 1142

    init_case_par  ->  case_par .   (rule 355)

    $default	reduce using rule 355 (init_case_par)



state 1143

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par .   (rule 352)

    $default	reduce using rule 352 (case_par)



state 1144

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)

    OPEN_PAR	shift, and go to state 1171
    ID  	shift, and go to state 1172

    array	go to state 566



state 1145

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 76)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    OPEN_PAR	shift, and go to state 191
    OPEN_MPAR	shift, and go to state 192



state 1146

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function .   (rule 142)

    $default	reduce using rule 142 (ass_right)



state 1147

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 78)

    OPEN_PAR	shift, and go to state 207



state 1148

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    CLOSE_PAR	shift, and go to state 1173



state 1149

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    CLOSE_PAR	shift, and go to state 1174



state 1150

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    intliteral  ->  INTLITERAL .   (rule 328)

    CLOSE_PAR	shift, and go to state 1175

    CLOSE_PAR	[reduce using rule 328 (intliteral)]
    $default	reduce using rule 328 (intliteral)



state 1151

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1176



state 1152

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1177



state 1153

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    intliteral  ->  INTLITERAL .   (rule 328)

    CLOSE_PAR	shift, and go to state 1178

    CLOSE_PAR	[reduce using rule 328 (intliteral)]
    $default	reduce using rule 328 (intliteral)



state 1154

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 148)

    $default	reduce using rule 148 (array)



state 1155

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    intliteral  ->  INTLITERAL .   (rule 328)

    CLOSE_PAR	shift, and go to state 1179

    CLOSE_PAR	[reduce using rule 328 (intliteral)]
    $default	reduce using rule 328 (intliteral)



state 1156

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    intliteral  ->  INTLITERAL .   (rule 328)

    CLOSE_PAR	shift, and go to state 1180

    CLOSE_PAR	[reduce using rule 328 (intliteral)]
    $default	reduce using rule 328 (intliteral)



state 1157

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 933
    INTLITERAL	shift, and go to state 1181
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    type_cast_alg_exp	go to state 736
    simple_ari_exp	go to state 590
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    casted_element	go to state 876
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 1158

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 151)

    $default	reduce using rule 151 (array)



state 1159

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 125)

    $default	reduce using rule 125 (leftaddrshift)



state 1160

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . array_exp   (rule 94)

    OPEN_PAR	shift, and go to state 673
    OPEN_BPAR	shift, and go to state 312
    OPEN_MPAR	shift, and go to state 313

    array_exp	go to state 1182
    option_list_value	go to state 319
    option_struct_list_value	go to state 320



state 1161

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    CLOSE_PAR	shift, and go to state 1148



state 1162

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    CLOSE_PAR	shift, and go to state 1149



state 1163

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    INTLITERAL	shift, and go to state 1183



state 1164

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1151



state 1165

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1152



state 1166

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    INTLITERAL	shift, and go to state 1184



state 1167

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    INTLITERAL	shift, and go to state 1185



state 1168

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    INTLITERAL	shift, and go to state 1186



state 1169

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    CLOSE_PAR	shift, and go to state 1187



state 1170

    init_case_par  ->  BREAK case_par .   (rule 354)

    $default	reduce using rule 354 (init_case_par)



state 1171

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 147)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 149)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 152)

    INTDECLARATION	shift, and go to state 614
    CHARDECLARATION	shift, and go to state 615
    FLOATDECLARATION	shift, and go to state 616
    OPEN_PAR	shift, and go to state 1171
    UNSIGNED	shift, and go to state 617
    ID  	shift, and go to state 1172

    array	go to state 566



state 1172

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 146)

    OPEN_MPAR	shift, and go to state 192



state 1173

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    OPEN_MPAR	shift, and go to state 1188



state 1174

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    OPEN_MPAR	shift, and go to state 1189



state 1175

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    CLOSE_PAR	shift, and go to state 1190



state 1176

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    OPEN_MPAR	shift, and go to state 1191



state 1177

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    OPEN_MPAR	shift, and go to state 1192



state 1178

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1193



state 1179

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    CLOSE_PAR	shift, and go to state 1194



state 1180

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    CLOSE_PAR	shift, and go to state 1195



state 1181

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    intliteral  ->  INTLITERAL .   (rule 328)

    CLOSE_PAR	shift, and go to state 1196

    CLOSE_PAR	[reduce using rule 328 (intliteral)]
    $default	reduce using rule 328 (intliteral)



state 1182

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp .   (rule 94)
    array_exp  ->  array_exp . CON array_exp   (rule 197)

    CON 	shift, and go to state 502

    $default	reduce using rule 94 (declaration)



state 1183

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    CLOSE_PAR	shift, and go to state 1175



state 1184

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1178



state 1185

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    CLOSE_PAR	shift, and go to state 1179



state 1186

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    CLOSE_PAR	shift, and go to state 1180



state 1187

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    INTLITERAL	shift, and go to state 1197



state 1188

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1198
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 1189

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1199
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 1190

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    OPEN_MPAR	shift, and go to state 1200



state 1191

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1201
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 1192

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1202
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 1193

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    OPEN_MPAR	shift, and go to state 1203



state 1194

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    OPEN_MPAR	shift, and go to state 1204



state 1195

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    OPEN_MPAR	shift, and go to state 1205



state 1196

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    CLOSE_PAR	shift, and go to state 1206



state 1197

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    CLOSE_PAR	shift, and go to state 1196



state 1198

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 136)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1207
    ari_operator	go to state 245



state 1199

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 134)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1208
    ari_operator	go to state 245



state 1200

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1209
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 1201

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 130)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1210
    ari_operator	go to state 245



state 1202

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 128)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1211
    ari_operator	go to state 245



state 1203

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1212
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 1204

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1213
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 1205

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1214
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 1206

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    OPEN_MPAR	shift, and go to state 1215



state 1207

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 136)

    CLOSE_MPAR	shift, and go to state 1216



state 1208

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 134)

    CLOSE_MPAR	shift, and go to state 1217



state 1209

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 135)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1218
    ari_operator	go to state 245



state 1210

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 130)

    CLOSE_MPAR	shift, and go to state 1219



state 1211

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 128)

    CLOSE_MPAR	shift, and go to state 1220



state 1212

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 129)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1221
    ari_operator	go to state 245



state 1213

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 133)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1222
    ari_operator	go to state 245



state 1214

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 131)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1223
    ari_operator	go to state 245



state 1215

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    IF  	shift, and go to state 89
    POINTERNULL	shift, and go to state 90
    OPEN_PAR	shift, and go to state 91
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 92
    SUB 	shift, and go to state 93
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 94
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 95
    FLOATLITERAL	shift, and go to state 96
    CHARLITERAL	shift, and go to state 97

    function	go to state 98
    array	go to state 99
    point_exp	go to state 100
    ari_exp	go to state 1224
    simple_ari_exp	go to state 102
    member_in_exp	go to state 103
    address_exp	go to state 104
    type_cast	go to state 105
    identifier	go to state 106
    intliteral	go to state 107
    charliteral	go to state 108
    floatliteral	go to state 109
    struct_member_exp	go to state 110



state 1216

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 136)

    $default	reduce using rule 136 (leftaddrshift)



state 1217

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 134)

    $default	reduce using rule 134 (leftaddrshift)



state 1218

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 135)

    CLOSE_MPAR	shift, and go to state 1225



state 1219

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 130)

    $default	reduce using rule 130 (leftaddrshift)



state 1220

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 128)

    $default	reduce using rule 128 (leftaddrshift)



state 1221

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 129)

    CLOSE_MPAR	shift, and go to state 1226



state 1222

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 133)

    CLOSE_MPAR	shift, and go to state 1227



state 1223

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 131)

    CLOSE_MPAR	shift, and go to state 1228



state 1224

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 132)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 165)

    COMMA	shift, and go to state 556
    ADD 	shift, and go to state 243
    SUB 	shift, and go to state 244

    $default	reduce using rule 155 (option_ari_exp)

    option_ari_exp	go to state 1229
    ari_operator	go to state 245



state 1225

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 135)

    $default	reduce using rule 135 (leftaddrshift)



state 1226

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 129)

    $default	reduce using rule 129 (leftaddrshift)



state 1227

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 133)

    $default	reduce using rule 133 (leftaddrshift)



state 1228

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 131)

    $default	reduce using rule 131 (leftaddrshift)



state 1229

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 132)

    CLOSE_MPAR	shift, and go to state 1230



state 1230

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 132)

    $default	reduce using rule 132 (leftaddrshift)



state 1231

    $   	go to state 1232



state 1232

    $   	go to state 1233



state 1233

    $default	accept
