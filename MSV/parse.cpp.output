Useless nonterminals:

   option_array_declaration
   inner_option_array_declaration


Terminals which are not used:

   POINTERDECLARATION
   LISTDECLARATION
   OVER
   CYLINDER
   OVEREP
   NON_DETERMINED
   SEND
   RECEIVE
   PROCESS
   CHANNEL
   PUT
   GET
   ERROR_TOKEN
   STRFUNCHEAD
   STRFUNCTAIL
   STRFUNCCAT
   STRFUNCCMP
   STRFUNCCPY
   STRFUNCLEN
   PREFIX


Useless rules:

#105   option_array_declaration :	 ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#106   inner_option_array_declaration :	 COMMA ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#107   inner_option_array_declaration :	;
#108   inner_option_array_declaration :	 COMMA error;


Conflict in state 84 between rule 13 and token CHOP resolved as reduce.
Conflict in state 84 between rule 13 and token OR resolved as reduce.
Conflict in state 84 between rule 13 and token AND resolved as reduce.
Conflict in state 84 between rule 13 and token IFF resolved as reduce.
Conflict in state 84 between rule 13 and token PROPIMPLY resolved as reduce.
Conflict in state 84 between rule 13 and token CHOPSTAR resolved as an error.
Conflict in state 85 between rule 22 and token CHOP resolved as reduce.
Conflict in state 85 between rule 22 and token OR resolved as reduce.
Conflict in state 85 between rule 22 and token AND resolved as reduce.
Conflict in state 85 between rule 22 and token IFF resolved as reduce.
Conflict in state 85 between rule 22 and token PROPIMPLY resolved as reduce.
Conflict in state 85 between rule 22 and token CHOPSTAR resolved as an error.
Conflict in state 109 between rule 21 and token CHOP resolved as reduce.
Conflict in state 109 between rule 21 and token OR resolved as reduce.
Conflict in state 109 between rule 21 and token AND resolved as reduce.
Conflict in state 109 between rule 21 and token IFF resolved as reduce.
Conflict in state 109 between rule 21 and token PROPIMPLY resolved as reduce.
Conflict in state 109 between rule 21 and token CHOPSTAR resolved as an error.
Conflict in state 110 between rule 10 and token CHOP resolved as reduce.
Conflict in state 110 between rule 10 and token OR resolved as reduce.
Conflict in state 110 between rule 10 and token AND resolved as reduce.
Conflict in state 110 between rule 10 and token IFF resolved as reduce.
Conflict in state 110 between rule 10 and token PROPIMPLY resolved as reduce.
Conflict in state 110 between rule 10 and token CHOPSTAR resolved as an error.
Conflict in state 111 between rule 9 and token CHOP resolved as reduce.
Conflict in state 111 between rule 9 and token OR resolved as reduce.
Conflict in state 111 between rule 9 and token AND resolved as reduce.
Conflict in state 111 between rule 9 and token IFF resolved as reduce.
Conflict in state 111 between rule 9 and token PROPIMPLY resolved as reduce.
Conflict in state 111 between rule 9 and token CHOPSTAR resolved as an error.
Conflict in state 112 between rule 20 and token CHOP resolved as reduce.
Conflict in state 112 between rule 20 and token OR resolved as reduce.
Conflict in state 112 between rule 20 and token AND resolved as reduce.
Conflict in state 112 between rule 20 and token IFF resolved as reduce.
Conflict in state 112 between rule 20 and token PROPIMPLY resolved as reduce.
Conflict in state 112 between rule 20 and token CHOPSTAR resolved as an error.
Conflict in state 113 between rule 12 and token CHOP resolved as reduce.
Conflict in state 113 between rule 12 and token OR resolved as reduce.
Conflict in state 113 between rule 12 and token AND resolved as reduce.
Conflict in state 113 between rule 12 and token IFF resolved as reduce.
Conflict in state 113 between rule 12 and token PROPIMPLY resolved as reduce.
Conflict in state 113 between rule 12 and token CHOPSTAR resolved as an error.
Conflict in state 114 between rule 11 and token CHOP resolved as reduce.
Conflict in state 114 between rule 11 and token OR resolved as reduce.
Conflict in state 114 between rule 11 and token AND resolved as reduce.
Conflict in state 114 between rule 11 and token IFF resolved as reduce.
Conflict in state 114 between rule 11 and token PROPIMPLY resolved as reduce.
Conflict in state 114 between rule 11 and token CHOPSTAR resolved as an error.
<<<<<<< HEAD
Conflict in state 229 between rule 208 and token IMPLY resolved as shift.
Conflict in state 232 between rule 207 and token IMPLY resolved as shift.
Conflict in state 255 between rule 8 and token CHOP resolved as reduce.
Conflict in state 255 between rule 8 and token OR resolved as shift.
Conflict in state 255 between rule 8 and token AND resolved as shift.
Conflict in state 255 between rule 8 and token IFF resolved as shift.
Conflict in state 255 between rule 8 and token PROPIMPLY resolved as shift.
Conflict in state 255 between rule 8 and token CHOPSTAR resolved as shift.
Conflict in state 256 between rule 5 and token CHOP resolved as reduce.
Conflict in state 256 between rule 5 and token OR resolved as reduce.
Conflict in state 256 between rule 5 and token AND resolved as shift.
Conflict in state 256 between rule 5 and token IFF resolved as shift.
Conflict in state 256 between rule 5 and token PROPIMPLY resolved as shift.
Conflict in state 256 between rule 5 and token CHOPSTAR resolved as shift.
Conflict in state 257 between rule 4 and token CHOP resolved as reduce.
Conflict in state 257 between rule 4 and token OR resolved as reduce.
Conflict in state 257 between rule 4 and token AND resolved as reduce.
Conflict in state 257 between rule 4 and token IFF resolved as shift.
Conflict in state 257 between rule 4 and token PROPIMPLY resolved as shift.
Conflict in state 257 between rule 4 and token CHOPSTAR resolved as shift.
Conflict in state 258 between rule 6 and token CHOP resolved as reduce.
Conflict in state 258 between rule 6 and token OR resolved as reduce.
Conflict in state 258 between rule 6 and token AND resolved as reduce.
Conflict in state 258 between rule 6 and token IFF resolved as reduce.
Conflict in state 258 between rule 6 and token PROPIMPLY resolved as reduce.
Conflict in state 258 between rule 6 and token CHOPSTAR resolved as shift.
Conflict in state 259 between rule 7 and token CHOP resolved as reduce.
Conflict in state 259 between rule 7 and token OR resolved as reduce.
Conflict in state 259 between rule 7 and token AND resolved as reduce.
Conflict in state 259 between rule 7 and token IFF resolved as reduce.
Conflict in state 259 between rule 7 and token PROPIMPLY resolved as reduce.
Conflict in state 259 between rule 7 and token CHOPSTAR resolved as shift.
Conflict in state 266 between rule 236 and token OR resolved as reduce.
Conflict in state 266 between rule 236 and token AND resolved as reduce.
Conflict in state 326 between rule 329 and token OR resolved as reduce.
Conflict in state 326 between rule 329 and token AND resolved as reduce.
Conflict in state 378 between rule 32 and token CHOP resolved as reduce.
Conflict in state 378 between rule 32 and token OR resolved as shift.
Conflict in state 378 between rule 32 and token PARALLEL resolved as shift.
Conflict in state 378 between rule 32 and token AND resolved as shift.
Conflict in state 379 between rule 31 and token CHOP resolved as reduce.
Conflict in state 379 between rule 31 and token OR resolved as reduce.
Conflict in state 379 between rule 31 and token PARALLEL resolved as reduce.
Conflict in state 379 between rule 31 and token AND resolved as shift.
Conflict in state 380 between rule 54 and token CHOP resolved as reduce.
Conflict in state 380 between rule 54 and token OR resolved as reduce.
Conflict in state 380 between rule 54 and token PARALLEL resolved as reduce.
Conflict in state 380 between rule 54 and token AND resolved as shift.
Conflict in state 381 between rule 30 and token CHOP resolved as reduce.
Conflict in state 381 between rule 30 and token OR resolved as reduce.
Conflict in state 381 between rule 30 and token PARALLEL resolved as reduce.
Conflict in state 381 between rule 30 and token AND resolved as reduce.
Conflict in state 444 between rule 238 and token OR resolved as reduce.
Conflict in state 444 between rule 238 and token AND resolved as shift.
Conflict in state 445 between rule 237 and token OR resolved as reduce.
Conflict in state 445 between rule 237 and token AND resolved as reduce.
Conflict in state 510 between rule 331 and token OR resolved as reduce.
Conflict in state 510 between rule 331 and token AND resolved as shift.
Conflict in state 511 between rule 330 and token OR resolved as reduce.
Conflict in state 511 between rule 330 and token AND resolved as reduce.
Conflict in state 652 between rule 191 and token CON resolved as reduce.
=======
Conflict in state 230 between rule 208 and token IMPLY resolved as reduce.
Conflict in state 233 between rule 207 and token IMPLY resolved as reduce.
Conflict in state 256 between rule 8 and token CHOP resolved as reduce.
Conflict in state 256 between rule 8 and token IFF resolved as shift.
Conflict in state 256 between rule 8 and token PROPIMPLY resolved as shift.
Conflict in state 256 between rule 8 and token OR resolved as shift.
Conflict in state 256 between rule 8 and token AND resolved as shift.
Conflict in state 256 between rule 8 and token CHOPSTAR resolved as shift.
Conflict in state 257 between rule 6 and token CHOP resolved as reduce.
Conflict in state 257 between rule 6 and token IFF resolved as reduce.
Conflict in state 257 between rule 6 and token PROPIMPLY resolved as reduce.
Conflict in state 257 between rule 6 and token OR resolved as shift.
Conflict in state 257 between rule 6 and token AND resolved as shift.
Conflict in state 257 between rule 6 and token CHOPSTAR resolved as shift.
Conflict in state 258 between rule 7 and token CHOP resolved as reduce.
Conflict in state 258 between rule 7 and token IFF resolved as reduce.
Conflict in state 258 between rule 7 and token PROPIMPLY resolved as reduce.
Conflict in state 258 between rule 7 and token OR resolved as shift.
Conflict in state 258 between rule 7 and token AND resolved as shift.
Conflict in state 258 between rule 7 and token CHOPSTAR resolved as shift.
Conflict in state 259 between rule 5 and token CHOP resolved as reduce.
Conflict in state 259 between rule 5 and token IFF resolved as reduce.
Conflict in state 259 between rule 5 and token PROPIMPLY resolved as reduce.
Conflict in state 259 between rule 5 and token OR resolved as reduce.
Conflict in state 259 between rule 5 and token AND resolved as shift.
Conflict in state 259 between rule 5 and token CHOPSTAR resolved as shift.
Conflict in state 260 between rule 4 and token CHOP resolved as reduce.
Conflict in state 260 between rule 4 and token IFF resolved as reduce.
Conflict in state 260 between rule 4 and token PROPIMPLY resolved as reduce.
Conflict in state 260 between rule 4 and token OR resolved as reduce.
Conflict in state 260 between rule 4 and token AND resolved as reduce.
Conflict in state 260 between rule 4 and token CHOPSTAR resolved as shift.
Conflict in state 267 between rule 237 and token OR resolved as reduce.
Conflict in state 267 between rule 237 and token AND resolved as reduce.
Conflict in state 327 between rule 330 and token OR resolved as reduce.
Conflict in state 327 between rule 330 and token AND resolved as reduce.
Conflict in state 379 between rule 32 and token CHOP resolved as reduce.
Conflict in state 379 between rule 32 and token OR resolved as shift.
Conflict in state 379 between rule 32 and token PARALLEL resolved as shift.
Conflict in state 379 between rule 32 and token AND resolved as shift.
Conflict in state 380 between rule 31 and token CHOP resolved as reduce.
Conflict in state 380 between rule 31 and token OR resolved as reduce.
Conflict in state 380 between rule 31 and token PARALLEL resolved as reduce.
Conflict in state 380 between rule 31 and token AND resolved as shift.
Conflict in state 381 between rule 54 and token CHOP resolved as reduce.
Conflict in state 381 between rule 54 and token OR resolved as reduce.
Conflict in state 381 between rule 54 and token PARALLEL resolved as reduce.
Conflict in state 381 between rule 54 and token AND resolved as shift.
Conflict in state 382 between rule 30 and token CHOP resolved as reduce.
Conflict in state 382 between rule 30 and token OR resolved as reduce.
Conflict in state 382 between rule 30 and token PARALLEL resolved as reduce.
Conflict in state 382 between rule 30 and token AND resolved as reduce.
Conflict in state 446 between rule 239 and token OR resolved as reduce.
Conflict in state 446 between rule 239 and token AND resolved as shift.
Conflict in state 447 between rule 238 and token OR resolved as reduce.
Conflict in state 447 between rule 238 and token AND resolved as reduce.
Conflict in state 512 between rule 332 and token OR resolved as reduce.
Conflict in state 512 between rule 332 and token AND resolved as shift.
Conflict in state 513 between rule 331 and token OR resolved as reduce.
Conflict in state 513 between rule 331 and token AND resolved as reduce.
Conflict in state 654 between rule 192 and token CON resolved as reduce.
>>>>>>> 9ebb173a31c1cef6348212635bf5307c2530de39
State 96 contains 2 shift/reduce conflicts.
State 98 contains 2 shift/reduce conflicts.
State 100 contains 14 shift/reduce conflicts.
State 104 contains 2 shift/reduce conflicts.
State 123 contains 2 shift/reduce conflicts.
State 155 contains 3 reduce/reduce conflicts.
State 157 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 158 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 159 contains 1 shift/reduce conflict.
State 161 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 163 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 164 contains 1 shift/reduce conflict.
State 191 contains 1 shift/reduce conflict.
State 222 contains 1 shift/reduce conflict.
State 223 contains 1 shift/reduce conflict.
State 224 contains 1 shift/reduce conflict.
State 226 contains 1 shift/reduce conflict.
State 227 contains 1 shift/reduce conflict.
State 228 contains 1 shift/reduce conflict.
State 230 contains 1 shift/reduce conflict.
State 233 contains 1 shift/reduce conflict.
State 265 contains 1 shift/reduce conflict.
State 268 contains 2 shift/reduce conflicts.
State 269 contains 2 shift/reduce conflicts.
State 287 contains 1 shift/reduce conflict.
State 288 contains 1 shift/reduce conflict.
State 289 contains 1 shift/reduce conflict.
State 290 contains 1 shift/reduce conflict.
State 307 contains 1 shift/reduce conflict.
State 316 contains 1 shift/reduce conflict.
State 317 contains 1 shift/reduce conflict.
State 318 contains 1 shift/reduce conflict.
State 325 contains 1 shift/reduce conflict.
State 353 contains 1 shift/reduce conflict.
State 354 contains 1 shift/reduce conflict.
State 356 contains 1 shift/reduce conflict.
State 357 contains 1 shift/reduce conflict.
State 361 contains 1 shift/reduce conflict.
State 362 contains 1 shift/reduce conflict.
State 387 contains 2 shift/reduce conflicts.
State 388 contains 2 shift/reduce conflicts.
State 390 contains 2 shift/reduce conflicts.
State 391 contains 2 shift/reduce conflicts.
State 392 contains 2 shift/reduce conflicts.
State 393 contains 2 shift/reduce conflicts.
State 394 contains 2 shift/reduce conflicts.
State 395 contains 2 shift/reduce conflicts.
State 397 contains 2 shift/reduce conflicts.
State 398 contains 2 shift/reduce conflicts.
State 400 contains 2 shift/reduce conflicts.
State 401 contains 2 shift/reduce conflicts.
State 425 contains 1 shift/reduce conflict.
State 431 contains 8 shift/reduce conflicts.
State 433 contains 2 shift/reduce conflicts.
State 476 contains 1 shift/reduce conflict.
State 477 contains 1 shift/reduce conflict.
State 478 contains 1 shift/reduce conflict.
State 495 contains 1 shift/reduce conflict.
State 496 contains 1 shift/reduce conflict.
State 497 contains 1 shift/reduce conflict.
State 499 contains 1 shift/reduce conflict.
State 500 contains 1 shift/reduce conflict.
State 504 contains 1 shift/reduce conflict.
State 526 contains 1 shift/reduce conflict.
State 527 contains 1 shift/reduce conflict.
State 528 contains 1 shift/reduce conflict.
State 532 contains 1 shift/reduce conflict.
State 553 contains 1 shift/reduce conflict.
State 574 contains 3 shift/reduce conflicts.
State 577 contains 10 shift/reduce conflicts.
State 661 contains 1 shift/reduce conflict.
State 662 contains 1 shift/reduce conflict.
State 669 contains 2 shift/reduce conflicts.
State 670 contains 2 shift/reduce conflicts.
State 683 contains 1 shift/reduce conflict.
State 697 contains 1 shift/reduce conflict.
State 698 contains 1 shift/reduce conflict.
State 703 contains 2 shift/reduce conflicts.
State 704 contains 2 shift/reduce conflicts.
State 706 contains 2 shift/reduce conflicts.
State 707 contains 2 shift/reduce conflicts.
State 792 contains 1 shift/reduce conflict.
State 794 contains 1 shift/reduce conflict.
State 795 contains 1 shift/reduce conflict.
State 811 contains 2 shift/reduce conflicts.
State 823 contains 1 shift/reduce conflict.
State 829 contains 2 shift/reduce conflicts.
State 832 contains 8 shift/reduce conflicts.
State 837 contains 1 shift/reduce conflict.
State 838 contains 1 shift/reduce conflict.
State 839 contains 1 shift/reduce conflict.
State 890 contains 1 shift/reduce conflict.
State 892 contains 1 shift/reduce conflict.
State 911 contains 1 shift/reduce conflict.
State 912 contains 1 shift/reduce conflict.
State 953 contains 1 shift/reduce conflict.
State 954 contains 1 shift/reduce conflict.
State 1041 contains 1 shift/reduce conflict.
State 1042 contains 1 shift/reduce conflict.
State 1045 contains 1 shift/reduce conflict.
State 1046 contains 1 shift/reduce conflict.
State 1078 contains 1 shift/reduce conflict.
State 1081 contains 1 shift/reduce conflict.
State 1082 contains 1 shift/reduce conflict.
State 1083 contains 1 shift/reduce conflict.
State 1108 contains 1 shift/reduce conflict.

Grammar
rule 1    program -> gComplexProposition statement
rule 2    gComplexProposition -> PBEGIN complexProposition PEND
rule 3    gComplexProposition ->		/* empty */
rule 4    complexProposition -> complexProposition AND complexProposition
rule 5    complexProposition -> complexProposition OR complexProposition
rule 6    complexProposition -> complexProposition IFF complexProposition
rule 7    complexProposition -> complexProposition PROPIMPLY complexProposition
rule 8    complexProposition -> complexProposition CHOP complexProposition
rule 9    complexProposition -> ALWAYS complexProposition
rule 10   complexProposition -> KEEP complexProposition
rule 11   complexProposition -> SOMETIMES complexProposition
rule 12   complexProposition -> W_NEXT complexProposition
rule 13   complexProposition -> NEXT complexProposition
rule 14   complexProposition -> SKIP
rule 15   complexProposition -> MY_TRUE
rule 16   complexProposition -> MY_FALSE
rule 17   complexProposition -> LENGTH ari_exp
rule 18   complexProposition -> EMPTY
rule 19   complexProposition -> MORE
rule 20   complexProposition -> HALT complexProposition
rule 21   complexProposition -> FINAL complexProposition
rule 22   complexProposition -> NEGATION complexProposition
rule 23   complexProposition -> OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR
rule 24   complexProposition -> ID
rule 25   complexProposition -> DEFINE ID COLON prime_bool_exp
rule 26   complexProposition -> complexProposition CHOPSTAR
rule 27   complexProposition -> OPEN_PAR complexProposition CLOSE_PAR
rule 28   poptional_projection -> COMMA complexProposition poptional_projection
rule 29   poptional_projection ->		/* empty */
rule 30   statement -> statement AND statement
rule 31   statement -> statement OR statement
rule 32   statement -> statement CHOP statement
rule 33   statement -> ass_statement
rule 34   statement -> sign_declaration
rule 35   statement -> switch_statement
rule 36   statement -> if_statement
rule 37   statement -> while_statement
rule 38   statement -> for_statement
rule 39   statement -> extend_for_statement
rule 40   statement -> NEXT OPEN_PAR statement CLOSE_PAR
rule 41   statement -> KEEP OPEN_PAR statement CLOSE_PAR
rule 42   statement -> ALWAYS OPEN_PAR statement CLOSE_PAR
rule 43   statement -> AWAIT OPEN_PAR bool_exp CLOSE_PAR
rule 44   statement -> REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR
rule 45   statement -> SKIP
rule 46   statement -> EMPTY
rule 47   statement -> MORE
rule 48   statement -> LENGTH OPEN_PAR ari_exp CLOSE_PAR
rule 49   statement -> input_statement
rule 50   statement -> output_statement
rule 51   statement -> TRUE
rule 52   statement -> FALSE
rule 53   statement -> FINAL OPEN_PAR statement CLOSE_PAR
rule 54   statement -> statement PARALLEL statement
rule 55   statement -> OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR
rule 56   statement -> FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR
rule 57   statement -> OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar
rule 58   statement -> OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar
rule 59   statement -> FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 60   statement -> DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR
rule 61   statement -> struct_define_statement
rule 62   statement -> function
rule 63   statement -> EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR
rule 64   statement -> OPEN_PAR statement CLOSE_PAR
rule 65   option_struct_declaration -> sign_declaration
rule 66   option_struct_declaration -> sign_declaration AND option_struct_declaration
rule 67   empty_statement -> statement
rule 68   empty_statement ->		/* empty */
rule 69   function -> ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 70   function -> EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 71   function -> array OPEN_PAR option_function_identifier CLOSE_PAR
rule 72   struct_define_statement -> struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR
rule 73   struct_identifier -> STRUCT ID
rule 74   struct_identifier -> UNION ID
rule 75   sign_declaration -> SIGNED declaration
rule 76   sign_declaration -> UNSIGNED declaration
rule 77   sign_declaration -> declaration
rule 78   declaration -> type_define option_identifier_array_declaration
rule 79   declaration -> STRUCT_TYPE option_identifier_array_declaration
rule 80   declaration -> STRUCT ID option_identifier_array_declaration
rule 81   declaration -> UNION ID option_identifier_array_declaration
rule 82   declaration -> STRUCT STRUCT_TYPE option_identifier_array_declaration
rule 83   declaration -> UNION STRUCT_TYPE option_identifier_array_declaration
rule 84   declaration -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 85   declaration -> OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 86   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 87   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp
rule 88   type_define -> INTDECLARATION
rule 89   type_define -> FLOATDECLARATION
rule 90   type_define -> CHARDECLARATION
rule 91   type_define -> STRDECLARATION
rule 92   type_define -> VOIDDECLARATION
rule 93   type_define -> FILEDECLARATION
rule 94   option_identifier_array_declaration -> identifier inner_option_identifier_array_declaration
rule 95   option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration
rule 96   option_identifier_array_declaration -> identifier ASS_P ass_right inner_option_identifier_array_declaration
rule 97   option_identifier_array_declaration -> ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration
rule 98   option_identifier_array_declaration -> ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration
rule 99   option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration
rule 100  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration
rule 101  option_identifier_array_declaration -> MUL option_identifier_array_declaration
rule 102  inner_option_identifier_array_declaration -> COMMA option_identifier_array_declaration
rule 103  inner_option_identifier_array_declaration -> COMMA error
rule 104  inner_option_identifier_array_declaration ->		/* empty */
rule 109  ass_statement -> ass_left assign_operator ass_right
rule 110  ass_left -> identifier
rule 111  ass_left -> struct_member_exp
rule 112  ass_left -> array
rule 113  ass_left -> point_exp
rule 114  ass_left -> OPEN_PAR ass_left CLOSE_PAR
rule 115  ass_left -> NEXT ass_left
rule 116  ass_left -> leftaddrshift
rule 117  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 118  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 119  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 120  leftaddrshift -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 121  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 122  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 123  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 124  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 125  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 126  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 127  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 128  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 129  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 130  assign_operator -> ASS_P
rule 131  assign_operator -> ASS_N
rule 132  ass_right -> ari_exp
rule 133  ass_right -> array_exp
rule 134  ass_right -> strliteral
rule 135  ass_right -> OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function
rule 136  ass_right -> OPEN_PAR ass_right CLOSE_PAR
rule 137  ass_right -> rightaddrshift
rule 138  rightaddrshift -> MUL OPEN_PAR leftaddrshift CLOSE_PAR
rule 139  array -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 140  array -> OPEN_PAR array CLOSE_PAR
rule 141  array_cast_exp -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
<<<<<<< HEAD
rule 142  array_cast_exp -> OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 143  array_cast_exp -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 144  array_cast_exp -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 145  array_cast_exp -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 146  option_ari_exp -> COMMA ari_exp option_ari_exp
rule 147  option_ari_exp -> COMMA error
rule 148  option_ari_exp ->		/* empty */
rule 149  point_exp -> MUL identifier
rule 150  point_exp -> MUL point_exp
rule 151  point_exp -> MUL array
rule 152  point_exp -> OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 153  point_exp -> MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp
rule 154  point_exp -> MUL OPEN_PAR ari_exp CLOSE_PAR
rule 155  point_exp -> OPEN_PAR point_exp CLOSE_PAR
rule 156  ari_exp -> simple_ari_exp
rule 157  ari_exp -> simple_ari_exp relation_operator ari_exp
rule 158  ari_exp -> ari_exp ari_operator simple_ari_exp
rule 159  ari_exp -> IF bool_exp THEN ari_exp option_exp_else_statement
rule 160  type_cast_alg_exp -> simple_ari_exp
rule 161  type_cast_alg_exp -> simple_ari_exp ari_operator simple_ari_exp
rule 162  option_exp_else_statement -> ELSE ari_exp
rule 163  option_exp_else_statement ->		/* empty */
rule 164  simple_ari_exp -> member_in_exp
rule 165  simple_ari_exp -> simple_ari_exp bi_operator member_in_exp
rule 166  member_in_exp -> intliteral
rule 167  member_in_exp -> SUB member_in_exp
rule 168  member_in_exp -> BNE member_in_exp
rule 169  member_in_exp -> POINTERNULL
rule 170  member_in_exp -> floatliteral
rule 171  member_in_exp -> identifier
rule 172  member_in_exp -> array
rule 173  member_in_exp -> point_exp
rule 174  member_in_exp -> function
rule 175  member_in_exp -> OPEN_PAR ari_exp CLOSE_PAR
rule 176  member_in_exp -> charliteral
rule 177  member_in_exp -> address_exp
rule 178  member_in_exp -> type_cast
rule 179  member_in_exp -> struct_member_exp
rule 180  member_in_exp -> array_cast_exp
rule 181  bi_operator -> MUL
rule 182  bi_operator -> DIV
rule 183  bi_operator -> MOD
rule 184  bi_operator -> LST
rule 185  bi_operator -> RST
rule 186  bi_operator -> ADDRESS
rule 187  bi_operator -> INTER_OR
rule 188  bi_operator -> CON
rule 189  ari_operator -> ADD
rule 190  ari_operator -> SUB
rule 191  array_exp -> array_exp CON array_exp
rule 192  array_exp -> option_list_value
rule 193  array_exp -> option_struct_list_value
rule 194  array_exp -> OPEN_PAR array_exp CLOSE_PAR
rule 195  option_list_value -> OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR
rule 196  option_list_value -> OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR
rule 197  option_list_value -> OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR
rule 198  option_struct_list_value -> OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR
rule 199  option_struct_list_value -> OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR
rule 200  option_struct_list_value -> OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR
rule 201  inner_option_list_value -> COMMA ari_exp inner_option_list_value
rule 202  inner_option_list_value -> COMMA strliteral inner_option_list_value
rule 203  inner_option_list_value -> COMMA array_exp inner_option_list_value
rule 204  inner_option_list_value ->		/* empty */
rule 205  inner_option_list_value -> COMMA error
rule 206  address_exp -> ADDRESS struct_member_exp
rule 207  address_exp -> ADDRESS identifier
rule 208  address_exp -> ADDRESS array
rule 209  address_exp -> ADDRESS address_exp
rule 210  address_exp -> OPEN_PAR address_exp CLOSE_PAR
rule 211  type_cast -> OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 212  type_cast -> OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp
rule 213  type_cast -> OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 214  type_cast -> OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 215  type_cast -> OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 216  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 217  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 218  type_cast -> OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element
rule 219  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element
rule 220  type_cast -> OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element
rule 221  type_cast -> OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element
rule 222  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element
rule 223  type_cast -> OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element
rule 224  type_cast -> OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 225  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 226  type_cast -> OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element
rule 227  type_cast -> OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 228  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 229  type_cast -> OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element
rule 230  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 231  type_cast -> OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 232  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 233  type_cast -> OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 234  casted_element -> type_cast_alg_exp
rule 235  bool_exp -> prime_bool_exp
rule 236  bool_exp -> NEGATION bool_exp
rule 237  bool_exp -> bool_exp AND bool_exp
rule 238  bool_exp -> bool_exp OR bool_exp
rule 239  bool_exp -> OPEN_PAR bool_exp CLOSE_PAR
rule 240  prime_bool_exp -> ari_exp relation_operator ari_exp
rule 241  prime_bool_exp -> MY_TRUE
rule 242  prime_bool_exp -> MY_FALSE
rule 243  prime_bool_exp -> ari_exp
rule 244  prime_bool_exp -> ari_exp EQ strliteral
rule 245  prime_bool_exp -> ari_exp NE strliteral
rule 246  prime_bool_exp -> strliteral EQ ari_exp
rule 247  prime_bool_exp -> strliteral NE ari_exp
rule 248  prime_bool_exp -> ari_exp EQ POINTERNULL
rule 249  prime_bool_exp -> ari_exp NE POINTERNULL
rule 250  prime_bool_exp -> POINTERNULL EQ ari_exp
rule 251  prime_bool_exp -> POINTERNULL NE ari_exp
rule 252  prime_bool_exp -> ari_exp EQ charliteral
rule 253  prime_bool_exp -> ari_exp NE charliteral
rule 254  relation_operator -> GE
rule 255  relation_operator -> LE
rule 256  relation_operator -> NE
rule 257  relation_operator -> GT
rule 258  relation_operator -> LT
rule 259  relation_operator -> EQ
rule 260  sign_type_define -> UNSIGNED INTDECLARATION
rule 261  sign_type_define -> UNSIGNED CHARDECLARATION
rule 262  all_type_define -> sign_type_define
rule 263  all_type_define -> type_define
rule 264  option_function_parameter_list -> all_type_define identifier inner_option_define_identifier
rule 265  option_function_parameter_list -> all_type_define inner_option_define_identifier
rule 266  option_function_parameter_list -> STRUCT_TYPE identifier inner_option_define_identifier
rule 267  option_function_parameter_list -> STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 268  option_function_parameter_list -> STRUCT_TYPE MUL MUL identifier inner_option_define_identifier
rule 269  option_function_parameter_list -> STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 270  option_function_parameter_list -> ID identifier inner_option_define_identifier
rule 271  option_function_parameter_list -> ID MUL identifier inner_option_define_identifier
rule 272  option_function_parameter_list -> ID MUL MUL identifier inner_option_define_identifier
rule 273  option_function_parameter_list -> ID identifier ARRAY inner_option_define_identifier
rule 274  option_function_parameter_list -> STRUCT_TYPE inner_option_define_identifier
rule 275  option_function_parameter_list -> STRUCT_TYPE MUL inner_option_define_identifier
rule 276  option_function_parameter_list -> STRUCT_TYPE MUL MUL inner_option_define_identifier
rule 277  option_function_parameter_list -> ID inner_option_define_identifier
rule 278  option_function_parameter_list -> ID MUL inner_option_define_identifier
rule 279  option_function_parameter_list -> ID MUL MUL inner_option_define_identifier
rule 280  option_function_parameter_list -> all_type_define identifier ARRAY inner_option_define_identifier
rule 281  option_function_parameter_list -> all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 282  option_function_parameter_list -> all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 283  option_function_parameter_list -> all_type_define MUL identifier inner_option_define_identifier
rule 284  option_function_parameter_list -> all_type_define MUL inner_option_define_identifier
rule 285  option_function_parameter_list -> all_type_define MUL MUL identifier inner_option_define_identifier
rule 286  option_function_parameter_list -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 287  option_function_parameter_list ->		/* empty */
rule 288  inner_option_define_identifier -> COMMA all_type_define identifier inner_option_define_identifier
rule 289  inner_option_define_identifier -> COMMA all_type_define inner_option_define_identifier
rule 290  inner_option_define_identifier -> COMMA ID identifier inner_option_define_identifier
rule 291  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier inner_option_define_identifier
rule 292  inner_option_define_identifier -> COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 293  inner_option_define_identifier -> COMMA ID identifier ARRAY inner_option_define_identifier
rule 294  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 295  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY inner_option_define_identifier
rule 296  inner_option_define_identifier -> COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 297  inner_option_define_identifier -> COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 298  inner_option_define_identifier ->		/* empty */
rule 299  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 300  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 301  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 302  inner_option_define_identifier -> COMMA all_type_define MUL identifier inner_option_define_identifier
rule 303  inner_option_define_identifier -> COMMA all_type_define MUL inner_option_define_identifier
rule 304  inner_option_define_identifier -> COMMA error
rule 305  option_function_identifier -> ass_right inner_option_function_identifier
rule 306  option_function_identifier -> all_type_define
rule 307  option_function_identifier -> STRUCT_TYPE
rule 308  option_function_identifier ->		/* empty */
rule 309  option_function_identifier -> ADDRESS error
rule 310  inner_option_function_identifier -> COMMA ass_right inner_option_function_identifier
rule 311  inner_option_function_identifier ->		/* empty */
rule 312  inner_option_function_identifier -> COMMA error
rule 313  statement_bpar -> OPEN_BPAR statement CLOSE_BPAR
rule 314  statement_bpar -> error CLOSE_BPAR
rule 315  bool_par -> OPEN_PAR bool_exp CLOSE_PAR
rule 316  bool_par -> error CLOSE_PAR
rule 317  identifier -> ID
rule 318  identifier -> OPEN_PAR identifier CLOSE_PAR
rule 319  strliteral -> STRLITERAL
rule 320  intliteral -> INTLITERAL
rule 321  charliteral -> CHARLITERAL
rule 322  floatliteral -> FLOATLITERAL
rule 323  option_frame_identifier -> COMMA identifier option_frame_identifier
rule 324  option_frame_identifier ->		/* empty */
rule 325  option_frame_identifier -> COMMA error
rule 326  option_projection ->		/* empty */
rule 327  option_projection -> COMMA statement option_projection
rule 328  imply_pre -> prime_bool_exp
rule 329  imply_pre -> NEGATION imply_pre
rule 330  imply_pre -> imply_pre AND imply_pre
rule 331  imply_pre -> imply_pre OR imply_pre
rule 332  imply_pre -> OPEN_PAR imply_pre CLOSE_PAR
rule 333  while_statement -> WHILE bool_par statement_bpar
rule 334  for_statement -> FOR ari_exp TIMES DO statement_bpar
rule 335  extend_for_statement -> FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar
rule 336  for_sta_init -> ass_statement
rule 337  for_sta_init -> declaration
rule 338  for_sta_init ->		/* empty */
rule 339  for_sta_condition -> bool_exp
rule 340  for_sta_condition ->		/* empty */
rule 341  for_sta_control -> ass_statement
rule 342  for_sta_control ->		/* empty */
rule 343  switch_statement -> SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR
rule 344  case_par -> CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par
rule 345  case_par -> DEFAULT COLON OPEN_PAR statement CLOSE_PAR
rule 346  init_case_par -> BREAK case_par
rule 347  init_case_par -> case_par
rule 348  init_case_par ->		/* empty */
rule 349  if_statement -> IF bool_exp THEN statement_bpar option_else_statement
rule 350  option_else_statement -> ELSE statement_bpar
rule 351  option_else_statement ->		/* empty */
rule 352  output_statement -> DISPLAY OPEN_PAR ass_right CLOSE_PAR
rule 353  output_statement -> DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR
rule 354  option_output ->		/* empty */
rule 355  option_output -> COMMA ass_right option_output
rule 356  input_statement -> REQUEST OPEN_PAR identifier CLOSE_PAR
rule 357  input_statement -> REQUEST OPEN_PAR identifier option_input CLOSE_PAR
rule 358  input_statement -> REQUEST OPEN_PAR array CLOSE_PAR
rule 359  input_statement -> REQUEST OPEN_PAR array option_input CLOSE_PAR
rule 360  input_statement -> REQUEST OPEN_PAR struct_member_exp CLOSE_PAR
rule 361  option_input ->		/* empty */
rule 362  option_input -> COMMA identifier option_input
rule 363  option_input -> COMMA array option_input
rule 364  struct_member_exp -> identifier DOT identifier option_struct_member_exp
rule 365  struct_member_exp -> array DOT identifier option_struct_member_exp
rule 366  struct_member_exp -> point_exp DOT identifier option_struct_member_exp
rule 367  struct_member_exp -> identifier DOT array option_struct_member_exp
rule 368  struct_member_exp -> array DOT array option_struct_member_exp
rule 369  struct_member_exp -> point_exp DOT array option_struct_member_exp
rule 370  struct_member_exp -> identifier IMPLY identifier option_struct_member_exp
rule 371  struct_member_exp -> array IMPLY identifier option_struct_member_exp
rule 372  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp
rule 373  struct_member_exp -> point_exp IMPLY identifier option_struct_member_exp
rule 374  struct_member_exp -> identifier IMPLY array option_struct_member_exp
rule 375  struct_member_exp -> array IMPLY array option_struct_member_exp
rule 376  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp
rule 377  struct_member_exp -> identifier DOT function
rule 378  struct_member_exp -> identifier IMPLY function
rule 379  struct_member_exp -> point_exp IMPLY array option_struct_member_exp
rule 380  struct_member_exp -> OPEN_PAR struct_member_exp CLOSE_PAR
rule 381  option_struct_member_exp ->		/* empty */
rule 382  option_struct_member_exp -> DOT identifier option_struct_member_exp
rule 383  option_struct_member_exp -> DOT array option_struct_member_exp
rule 384  option_struct_member_exp -> IMPLY identifier option_struct_member_exp
rule 385  option_struct_member_exp -> IMPLY array option_struct_member_exp
rule 386  option_struct_member_exp -> DOT function
rule 387  option_struct_member_exp -> IMPLY function
=======
rule 142  array_cast_exp -> OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 143  array_cast_exp -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 144  array_cast_exp -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 145  array_cast_exp -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 146  array_cast_exp -> OPEN_PAR array_cast_exp CLOSE_PAR
rule 147  option_ari_exp -> COMMA ari_exp option_ari_exp
rule 148  option_ari_exp -> COMMA error
rule 149  option_ari_exp ->		/* empty */
rule 150  point_exp -> MUL identifier
rule 151  point_exp -> MUL point_exp
rule 152  point_exp -> MUL array
rule 153  point_exp -> OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 154  point_exp -> MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp
rule 155  point_exp -> MUL OPEN_PAR ari_exp CLOSE_PAR
rule 156  point_exp -> OPEN_PAR point_exp CLOSE_PAR
rule 157  ari_exp -> simple_ari_exp
rule 158  ari_exp -> simple_ari_exp relation_operator ari_exp
rule 159  ari_exp -> ari_exp ari_operator simple_ari_exp
rule 160  ari_exp -> IF bool_exp THEN ari_exp option_exp_else_statement
rule 161  type_cast_alg_exp -> simple_ari_exp
rule 162  type_cast_alg_exp -> simple_ari_exp ari_operator simple_ari_exp
rule 163  option_exp_else_statement -> ELSE ari_exp
rule 164  option_exp_else_statement ->		/* empty */
rule 165  simple_ari_exp -> member_in_exp
rule 166  simple_ari_exp -> simple_ari_exp bi_operator member_in_exp
rule 167  member_in_exp -> intliteral
rule 168  member_in_exp -> SUB member_in_exp
rule 169  member_in_exp -> BNE member_in_exp
rule 170  member_in_exp -> POINTERNULL
rule 171  member_in_exp -> floatliteral
rule 172  member_in_exp -> identifier
rule 173  member_in_exp -> array
rule 174  member_in_exp -> point_exp
rule 175  member_in_exp -> function
rule 176  member_in_exp -> OPEN_PAR ari_exp CLOSE_PAR
rule 177  member_in_exp -> charliteral
rule 178  member_in_exp -> address_exp
rule 179  member_in_exp -> type_cast
rule 180  member_in_exp -> struct_member_exp
rule 181  member_in_exp -> array_cast_exp
rule 182  bi_operator -> MUL
rule 183  bi_operator -> DIV
rule 184  bi_operator -> MOD
rule 185  bi_operator -> LST
rule 186  bi_operator -> RST
rule 187  bi_operator -> ADDRESS
rule 188  bi_operator -> INTER_OR
rule 189  bi_operator -> CON
rule 190  ari_operator -> ADD
rule 191  ari_operator -> SUB
rule 192  array_exp -> array_exp CON array_exp
rule 193  array_exp -> option_list_value
rule 194  array_exp -> option_struct_list_value
rule 195  array_exp -> OPEN_PAR array_exp CLOSE_PAR
rule 196  option_list_value -> OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR
rule 197  option_list_value -> OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR
rule 198  option_list_value -> OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR
rule 199  option_struct_list_value -> OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR
rule 200  option_struct_list_value -> OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR
rule 201  option_struct_list_value -> OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR
rule 202  inner_option_list_value -> COMMA ari_exp inner_option_list_value
rule 203  inner_option_list_value -> COMMA strliteral inner_option_list_value
rule 204  inner_option_list_value -> COMMA array_exp inner_option_list_value
rule 205  inner_option_list_value ->		/* empty */
rule 206  inner_option_list_value -> COMMA error
rule 207  address_exp -> ADDRESS identifier
rule 208  address_exp -> ADDRESS array
rule 209  address_exp -> ADDRESS struct_member_exp
rule 210  address_exp -> ADDRESS address_exp
rule 211  address_exp -> OPEN_PAR address_exp CLOSE_PAR
rule 212  type_cast -> OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 213  type_cast -> OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp
rule 214  type_cast -> OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 215  type_cast -> OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 216  type_cast -> OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 217  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 218  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 219  type_cast -> OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element
rule 220  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element
rule 221  type_cast -> OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element
rule 222  type_cast -> OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element
rule 223  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element
rule 224  type_cast -> OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element
rule 225  type_cast -> OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 226  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 227  type_cast -> OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element
rule 228  type_cast -> OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 229  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 230  type_cast -> OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element
rule 231  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 232  type_cast -> OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 233  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 234  type_cast -> OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 235  casted_element -> type_cast_alg_exp
rule 236  bool_exp -> prime_bool_exp
rule 237  bool_exp -> NEGATION bool_exp
rule 238  bool_exp -> bool_exp AND bool_exp
rule 239  bool_exp -> bool_exp OR bool_exp
rule 240  bool_exp -> OPEN_PAR bool_exp CLOSE_PAR
rule 241  prime_bool_exp -> ari_exp relation_operator ari_exp
rule 242  prime_bool_exp -> MY_TRUE
rule 243  prime_bool_exp -> MY_FALSE
rule 244  prime_bool_exp -> ari_exp
rule 245  prime_bool_exp -> ari_exp EQ strliteral
rule 246  prime_bool_exp -> ari_exp NE strliteral
rule 247  prime_bool_exp -> strliteral EQ ari_exp
rule 248  prime_bool_exp -> strliteral NE ari_exp
rule 249  prime_bool_exp -> ari_exp EQ POINTERNULL
rule 250  prime_bool_exp -> ari_exp NE POINTERNULL
rule 251  prime_bool_exp -> POINTERNULL EQ ari_exp
rule 252  prime_bool_exp -> POINTERNULL NE ari_exp
rule 253  prime_bool_exp -> ari_exp EQ charliteral
rule 254  prime_bool_exp -> ari_exp NE charliteral
rule 255  relation_operator -> GE
rule 256  relation_operator -> LE
rule 257  relation_operator -> NE
rule 258  relation_operator -> GT
rule 259  relation_operator -> LT
rule 260  relation_operator -> EQ
rule 261  sign_type_define -> UNSIGNED INTDECLARATION
rule 262  sign_type_define -> UNSIGNED CHARDECLARATION
rule 263  all_type_define -> sign_type_define
rule 264  all_type_define -> type_define
rule 265  option_function_parameter_list -> all_type_define identifier inner_option_define_identifier
rule 266  option_function_parameter_list -> all_type_define inner_option_define_identifier
rule 267  option_function_parameter_list -> STRUCT_TYPE identifier inner_option_define_identifier
rule 268  option_function_parameter_list -> STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 269  option_function_parameter_list -> STRUCT_TYPE MUL MUL identifier inner_option_define_identifier
rule 270  option_function_parameter_list -> STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 271  option_function_parameter_list -> ID identifier inner_option_define_identifier
rule 272  option_function_parameter_list -> ID MUL identifier inner_option_define_identifier
rule 273  option_function_parameter_list -> ID MUL MUL identifier inner_option_define_identifier
rule 274  option_function_parameter_list -> ID identifier ARRAY inner_option_define_identifier
rule 275  option_function_parameter_list -> STRUCT_TYPE inner_option_define_identifier
rule 276  option_function_parameter_list -> STRUCT_TYPE MUL inner_option_define_identifier
rule 277  option_function_parameter_list -> STRUCT_TYPE MUL MUL inner_option_define_identifier
rule 278  option_function_parameter_list -> ID inner_option_define_identifier
rule 279  option_function_parameter_list -> ID MUL inner_option_define_identifier
rule 280  option_function_parameter_list -> ID MUL MUL inner_option_define_identifier
rule 281  option_function_parameter_list -> all_type_define identifier ARRAY inner_option_define_identifier
rule 282  option_function_parameter_list -> all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 283  option_function_parameter_list -> all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 284  option_function_parameter_list -> all_type_define MUL identifier inner_option_define_identifier
rule 285  option_function_parameter_list -> all_type_define MUL inner_option_define_identifier
rule 286  option_function_parameter_list -> all_type_define MUL MUL identifier inner_option_define_identifier
rule 287  option_function_parameter_list -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 288  option_function_parameter_list ->		/* empty */
rule 289  inner_option_define_identifier -> COMMA all_type_define identifier inner_option_define_identifier
rule 290  inner_option_define_identifier -> COMMA all_type_define inner_option_define_identifier
rule 291  inner_option_define_identifier -> COMMA ID identifier inner_option_define_identifier
rule 292  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier inner_option_define_identifier
rule 293  inner_option_define_identifier -> COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 294  inner_option_define_identifier -> COMMA ID identifier ARRAY inner_option_define_identifier
rule 295  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 296  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY inner_option_define_identifier
rule 297  inner_option_define_identifier -> COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 298  inner_option_define_identifier -> COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 299  inner_option_define_identifier ->		/* empty */
rule 300  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 301  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 302  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 303  inner_option_define_identifier -> COMMA all_type_define MUL identifier inner_option_define_identifier
rule 304  inner_option_define_identifier -> COMMA all_type_define MUL inner_option_define_identifier
rule 305  inner_option_define_identifier -> COMMA error
rule 306  option_function_identifier -> ass_right inner_option_function_identifier
rule 307  option_function_identifier -> all_type_define
rule 308  option_function_identifier -> STRUCT_TYPE
rule 309  option_function_identifier ->		/* empty */
rule 310  option_function_identifier -> ADDRESS error
rule 311  inner_option_function_identifier -> COMMA ass_right inner_option_function_identifier
rule 312  inner_option_function_identifier ->		/* empty */
rule 313  inner_option_function_identifier -> COMMA error
rule 314  statement_bpar -> OPEN_BPAR statement CLOSE_BPAR
rule 315  statement_bpar -> error CLOSE_BPAR
rule 316  bool_par -> OPEN_PAR bool_exp CLOSE_PAR
rule 317  bool_par -> error CLOSE_PAR
rule 318  identifier -> ID
rule 319  identifier -> OPEN_PAR identifier CLOSE_PAR
rule 320  strliteral -> STRLITERAL
rule 321  intliteral -> INTLITERAL
rule 322  charliteral -> CHARLITERAL
rule 323  floatliteral -> FLOATLITERAL
rule 324  option_frame_identifier -> COMMA identifier option_frame_identifier
rule 325  option_frame_identifier ->		/* empty */
rule 326  option_frame_identifier -> COMMA error
rule 327  option_projection ->		/* empty */
rule 328  option_projection -> COMMA statement option_projection
rule 329  imply_pre -> prime_bool_exp
rule 330  imply_pre -> NEGATION imply_pre
rule 331  imply_pre -> imply_pre AND imply_pre
rule 332  imply_pre -> imply_pre OR imply_pre
rule 333  imply_pre -> OPEN_PAR imply_pre CLOSE_PAR
rule 334  while_statement -> WHILE bool_par statement_bpar
rule 335  for_statement -> FOR ari_exp TIMES DO statement_bpar
rule 336  extend_for_statement -> FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar
rule 337  for_sta_init -> ass_statement
rule 338  for_sta_init -> declaration
rule 339  for_sta_init ->		/* empty */
rule 340  for_sta_condition -> bool_exp
rule 341  for_sta_condition ->		/* empty */
rule 342  for_sta_control -> ass_statement
rule 343  for_sta_control ->		/* empty */
rule 344  switch_statement -> SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR
rule 345  case_par -> CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par
rule 346  case_par -> DEFAULT COLON OPEN_PAR statement CLOSE_PAR
rule 347  init_case_par -> BREAK case_par
rule 348  init_case_par -> case_par
rule 349  init_case_par ->		/* empty */
rule 350  if_statement -> IF bool_exp THEN statement_bpar option_else_statement
rule 351  option_else_statement -> ELSE statement_bpar
rule 352  option_else_statement ->		/* empty */
rule 353  output_statement -> DISPLAY OPEN_PAR ass_right CLOSE_PAR
rule 354  output_statement -> DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR
rule 355  option_output ->		/* empty */
rule 356  option_output -> COMMA ass_right option_output
rule 357  input_statement -> REQUEST OPEN_PAR identifier CLOSE_PAR
rule 358  input_statement -> REQUEST OPEN_PAR identifier option_input CLOSE_PAR
rule 359  input_statement -> REQUEST OPEN_PAR array CLOSE_PAR
rule 360  input_statement -> REQUEST OPEN_PAR array option_input CLOSE_PAR
rule 361  input_statement -> REQUEST OPEN_PAR struct_member_exp CLOSE_PAR
rule 362  option_input ->		/* empty */
rule 363  option_input -> COMMA identifier option_input
rule 364  option_input -> COMMA array option_input
rule 365  struct_member_exp -> identifier DOT identifier option_struct_member_exp
rule 366  struct_member_exp -> array DOT identifier option_struct_member_exp
rule 367  struct_member_exp -> point_exp DOT identifier option_struct_member_exp
rule 368  struct_member_exp -> identifier DOT array option_struct_member_exp
rule 369  struct_member_exp -> array DOT array option_struct_member_exp
rule 370  struct_member_exp -> point_exp DOT array option_struct_member_exp
rule 371  struct_member_exp -> identifier IMPLY identifier option_struct_member_exp
rule 372  struct_member_exp -> array IMPLY identifier option_struct_member_exp
rule 373  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp
rule 374  struct_member_exp -> point_exp IMPLY identifier option_struct_member_exp
rule 375  struct_member_exp -> identifier IMPLY array option_struct_member_exp
rule 376  struct_member_exp -> array IMPLY array option_struct_member_exp
rule 377  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp
rule 378  struct_member_exp -> identifier DOT function
rule 379  struct_member_exp -> identifier IMPLY function
rule 380  struct_member_exp -> point_exp IMPLY array option_struct_member_exp
rule 381  struct_member_exp -> OPEN_PAR struct_member_exp CLOSE_PAR
rule 382  option_struct_member_exp ->		/* empty */
rule 383  option_struct_member_exp -> DOT identifier option_struct_member_exp
rule 384  option_struct_member_exp -> DOT array option_struct_member_exp
rule 385  option_struct_member_exp -> IMPLY identifier option_struct_member_exp
rule 386  option_struct_member_exp -> IMPLY array option_struct_member_exp
rule 387  option_struct_member_exp -> DOT function
rule 388  option_struct_member_exp -> IMPLY function
>>>>>>> 9ebb173a31c1cef6348212635bf5307c2530de39

Terminals, with rules where they appear

$ (-1)
error (256) 103 108 148 206 305 310 313 315 317 326
SWITCH (258) 344
CASE (259) 345
BREAK (260) 347
DEFAULT (261) 346
IF (262) 160 350
ELSE (263) 163 351
EMPTY (264) 18 46
AWAIT (265) 43
PROJECTION (266) 23 57 58
PBEGIN (267) 2
PEND (268) 2
POINTERNULL (269) 170 249 250 251 252
ARRAY (270) 97 98 270 274 281 282 283 294 295 296 297 302
STRUCT (271) 73 80 82 231 233
DOT (272) 365 366 367 368 369 370 378 383 384 387
UNION (273) 74 81 83
FILEDECLARATION (274) 93
MORE (275) 19 47
DEFINE (276) 25 60
MY_TRUE (277) 15 242
MY_FALSE (278) 16 243
EXIST (279) 63
FRAME (280) 56
FOR (281) 335 336
WHILE (282) 334
DO (283) 335
TRUE (284) 51
FALSE (285) 52
REPEAT (286) 44
UNTIL (287) 44
DISPLAY (288) 353 354
SKIP (289) 14 45
THEN (290) 160 350
COMMA (291) 28 102 103 106 108 147 148 202 203 204 206 289 290 291
    292 293 294 295 296 297 298 300 301 302 303 304 305 311 313 324
    326 328 336 356 363 364
COLON (292) 25 63 345 346
INTDECLARATION (293) 88 119 123 126 127 128 129 141 142 212 215 217
    219 220 225 226 261
STRDECLARATION (294) 91
POINTERDECLARATION (295)
CHARDECLARATION (296) 90 117 118 121 122 123 124 125 126 127 128 144
    145 214 216 218 222 223 228 229 262
VOIDDECLARATION (297) 92 224 230
FLOATDECLARATION (298) 89 120 143 213 221 227
LISTDECLARATION (299)
OPEN_PAR (300) 27 40 41 42 43 44 48 53 55 56 59 60 64 69 70 71 84 85
    86 87 114 117 118 119 120 121 122 123 124 125 126 127 128 129 135
    136 138 140 141 142 143 144 145 146 153 154 155 156 176 195 211
    212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227
    228 229 230 231 232 233 234 240 287 298 316 319 333 336 344 345
    346 353 354 357 358 359 360 361 373 377 381
CLOSE_PAR (301) 27 40 41 42 43 44 48 53 55 56 59 60 64 69 70 71 84
    85 86 87 114 117 118 119 120 121 122 123 124 125 126 127 128 129
    135 136 138 140 141 142 143 144 145 146 153 154 155 156 176 195
    211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226
    227 228 229 230 231 232 233 234 240 287 298 316 317 319 333 336
    344 345 346 353 354 357 358 359 360 361 373 377 381
TIMES (302) 335
OPEN_BPAR (303) 23 44 57 58 59 60 63 72 199 200 201 314 344
CLOSE_BPAR (304) 23 44 57 58 59 60 63 72 199 200 201 314 315 344
OPEN_MPAR (305) 55 86 87 95 99 100 105 106 117 118 119 120 121 122
    123 124 125 126 127 128 129 139 141 142 143 144 145 153 196 197
    198 283 300 301 302
CLOSE_MPAR (306) 55 86 87 95 99 100 105 106 117 118 119 120 121 122
    123 124 125 126 127 128 129 139 141 142 143 144 145 153 196 197
    198 283 300 301 302
FUNCTION (307) 59
OVER (308)
CYLINDER (309)
OVEREP (310)
INTER_OR (311) 188
NON_DETERMINED (312)
SEND (313)
RECEIVE (314)
PROCESS (315)
CHANNEL (316)
PUT (317)
GET (318)
ERROR_TOKEN (319)
STRFUNCHEAD (320)
STRFUNCTAIL (321)
STRFUNCCAT (322)
STRFUNCCMP (323)
STRFUNCCPY (324)
STRFUNCLEN (325)
EXTERN (326) 70
UNSIGNED (327) 76 118 122 124 125 126 128 142 145 217 218 220 223 226
    229 261 262
SIGNED (328) 75 215 216
CHOP (329) 8 32
<<<<<<< HEAD
OR (330) 5 31 238 331
PARALLEL (331) 54
AND (332) 4 30 56 66 237 330
ASS_P (333) 60 87 96 97 98 99 100 130
ASS_N (334) 131
CON (335) 188 191
ADDRESS (336) 186 206 207 208 209 309
IMPLY (337) 55 370 371 372 373 374 375 376 378 379 384 385 387
IFF (338) 6
PROPIMPLY (339) 7
NE (340) 245 247 249 251 253 256
EQ (341) 244 246 248 250 252 259
GE (342) 254
LE (343) 255
GT (344) 257
LT (345) 258
LST (346) 184
RST (347) 185
ADD (348) 189
SUB (349) 167 190
=======
IMPLY (330) 55 371 372 373 374 375 376 377 379 380 385 386 388
IFF (331) 6
PROPIMPLY (332) 7
OR (333) 5 31 239 332
PARALLEL (334) 54
AND (335) 4 30 56 66 238 331
ASS_P (336) 60 87 96 97 98 99 100 130
ASS_N (337) 131
CON (338) 189 192
ADDRESS (339) 187 207 208 209 210 310
NE (340) 246 248 250 252 254 257
EQ (341) 245 247 249 251 253 260
GE (342) 255
LE (343) 256
GT (344) 258
LT (345) 259
LST (346) 185
RST (347) 186
ADD (348) 190
SUB (349) 168 191
>>>>>>> 9ebb173a31c1cef6348212635bf5307c2530de39
MUL (350) 84 85 86 87 101 117 118 119 120 121 122 123 124 125 126 127
    128 129 138 141 142 143 144 145 150 151 152 154 155 182 219 220
    221 222 223 224 225 226 227 228 229 230 231 232 233 234 268 269
    272 273 276 277 279 280 282 284 285 286 287 293 297 298 303 304
DIV (351) 183
MOD (352) 184
BNE (353) 169
CHOPSTAR (354) 26
NEXT (355) 13 40 115
NEGATION (356) 22 237 330
LENGTH (357) 17 48
REQUEST (358) 357 358 359 360 361
FINAL (359) 21 53
KEEP (360) 10 41
ALWAYS (361) 9 42
HALT (362) 20
W_NEXT (363) 12
PREFIX (364)
SOMETIMES (365) 11
ID (366) 24 25 59 60 69 70 73 74 80 81 86 87 95 97 98 99 100 105 106
    139 271 272 273 274 278 279 280 291 294 318
STRLITERAL (367) 320
STRUCT_TYPE (368) 79 82 83 231 232 233 234 267 268 269 270 275 276
    277 292 293 295 308
INTLITERAL (369) 117 118 119 120 121 122 123 124 125 126 127 128 129
    321
FLOATLITERAL (370) 323
CHARLITERAL (371) 322

Nonterminals, with rules where they appear

program (117)
    on left: 1
gComplexProposition (118)
    on left: 2 3, on right: 1
complexProposition (119)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27, on right: 2 4 5 6 7 8 9 10 11 12 13 20 21 22 23 26
    27 28
poptional_projection (120)
    on left: 28 29, on right: 23 28
statement (121)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64,
    on right: 1 30 31 32 40 41 42 44 53 54 55 56 57 58 59 63 64 67
    314 328 345 346
option_struct_declaration (122)
    on left: 65 66, on right: 66 72
empty_statement (123)
    on left: 67 68, on right: 60
function (124)
    on left: 69 70 71, on right: 62 135 175 378 379 387 388
struct_define_statement (125)
    on left: 72, on right: 61
struct_identifier (126)
    on left: 73 74, on right: 72
sign_declaration (127)
    on left: 75 76 77, on right: 34 65 66
declaration (128)
    on left: 78 79 80 81 82 83 84 85 86 87, on right: 75 76 77 338
type_define (129)
    on left: 88 89 90 91 92 93, on right: 78 135 264
option_identifier_array_declaration (130)
    on left: 94 95 96 97 98 99 100 101, on right: 78 79 80 81 82 83
    101 102
inner_option_identifier_array_declaration (131)
    on left: 102 103 104, on right: 94 95 96 97 98 99 100
ass_statement (132)
    on left: 109, on right: 33 337 342
ass_left (133)
    on left: 110 111 112 113 114 115 116, on right: 109 114 115
leftaddrshift (134)
    on left: 117 118 119 120 121 122 123 124 125 126 127 128 129,
    on right: 116 138
assign_operator (135)
    on left: 130 131, on right: 109
ass_right (136)
    on left: 132 133 134 135 136 137, on right: 96 109 136 306 311
    353 354 356
rightaddrshift (137)
    on left: 138, on right: 137
array (138)
<<<<<<< HEAD
    on left: 139 140, on right: 71 112 140 151 172 208 358 359 363
    365 367 368 369 371 374 375 376 379 383 385
=======
    on left: 139 140, on right: 71 112 140 152 173 208 359 360 364
    366 368 369 370 372 375 376 377 380 384 386
>>>>>>> 9ebb173a31c1cef6348212635bf5307c2530de39
array_cast_exp (139)
    on left: 141 142 143 144 145 146, on right: 146 181
option_ari_exp (140)
    on left: 147 148 149, on right: 86 87 95 99 100 105 106 117 118
    119 120 121 122 123 124 125 126 127 128 129 139 141 142 143 144
    145 147 153
point_exp (141)
    on left: 150 151 152 153 154 155 156, on right: 113 151 153 156
    174 367 370 374 380
ari_exp (142)
    on left: 157 158 159 160, on right: 17 48 86 87 95 99 100 105 106
    117 118 119 120 121 122 123 124 125 126 127 128 129 132 139 141
    142 143 144 145 147 153 154 155 158 159 160 163 176 196 199 202
    241 244 245 246 247 248 249 250 251 252 253 254 283 300 301 302
    335
type_cast_alg_exp (143)
    on left: 161 162, on right: 212 213 214 215 216 217 218 235
option_exp_else_statement (144)
    on left: 163 164, on right: 160
simple_ari_exp (145)
    on left: 165 166, on right: 157 158 159 161 162 166
member_in_exp (146)
    on left: 167 168 169 170 171 172 173 174 175 176 177 178 179 180
    181, on right: 165 166 168 169 344 345
bi_operator (147)
    on left: 182 183 184 185 186 187 188 189, on right: 166
ari_operator (148)
    on left: 190 191, on right: 159 162
array_exp (149)
    on left: 192 193 194 195, on right: 87 97 99 133 192 195 198 201
    204
option_list_value (150)
    on left: 196 197 198, on right: 193
option_struct_list_value (151)
    on left: 199 200 201, on right: 194
inner_option_list_value (152)
    on left: 202 203 204 205 206, on right: 196 197 198 199 200 201
    202 203 204
address_exp (153)
    on left: 207 208 209 210 211, on right: 178 210 211 373 377
type_cast (154)
    on left: 212 213 214 215 216 217 218 219 220 221 222 223 224 225
    226 227 228 229 230 231 232 233 234, on right: 179
casted_element (155)
    on left: 235, on right: 219 220 221 222 223 224 225 226 227 228
    229 230 231 232 233 234
bool_exp (156)
    on left: 236 237 238 239 240, on right: 43 44 160 237 238 239 240
    316 340 350
prime_bool_exp (157)
    on left: 241 242 243 244 245 246 247 248 249 250 251 252 253 254
   , on right: 25 236 329
relation_operator (158)
    on left: 255 256 257 258 259 260, on right: 158 241
sign_type_define (159)
    on left: 261 262, on right: 263
all_type_define (160)
    on left: 263 264, on right: 154 265 266 281 282 283 284 285 286
    289 290 296 297 300 301 302 303 304 307
option_function_parameter_list (161)
    on left: 265 266 267 268 269 270 271 272 273 274 275 276 277 278
    279 280 281 282 283 284 285 286 287 288, on right: 59 60 84 85
    86 87 135 287 298
inner_option_define_identifier (162)
    on left: 289 290 291 292 293 294 295 296 297 298 299 300 301 302
    303 304 305, on right: 63 265 266 267 268 269 270 271 272 273 274
    275 276 277 278 279 280 281 282 283 284 285 286 287 289 290 291
    292 293 294 295 296 297 298 300 301 302 303 304
option_function_identifier (163)
    on left: 306 307 308 309 310, on right: 69 70 71
inner_option_function_identifier (164)
    on left: 311 312 313, on right: 306 311
statement_bpar (165)
    on left: 314 315, on right: 57 58 334 335 336 350 351
bool_par (166)
    on left: 316 317, on right: 334
identifier (167)
<<<<<<< HEAD
    on left: 317 318, on right: 56 63 84 85 94 96 110 141 149 171 207
    264 266 267 268 269 270 271 272 273 280 281 282 283 285 286 288
    290 291 292 293 294 295 296 297 299 300 301 302 318 323 356 357
    362 364 365 366 367 370 371 372 373 374 377 378 382 384
=======
    on left: 318 319, on right: 56 63 84 85 94 96 110 141 142 143 144
    145 150 172 207 265 267 268 269 270 271 272 273 274 281 282 283
    284 286 287 289 291 292 293 294 295 296 297 298 300 301 302 303
    319 324 357 358 363 365 366 367 368 371 372 373 374 375 378 379
    383 385
>>>>>>> 9ebb173a31c1cef6348212635bf5307c2530de39
strliteral (168)
    on left: 320, on right: 98 100 134 135 197 200 203 245 246 247
    248
intliteral (169)
    on left: 321, on right: 167
charliteral (170)
    on left: 322, on right: 177 253 254
floatliteral (171)
    on left: 323, on right: 171
option_frame_identifier (172)
    on left: 324 325 326, on right: 56 324
option_projection (173)
    on left: 327 328, on right: 57 328
imply_pre (174)
    on left: 329 330 331 332 333, on right: 55 330 331 332 333
while_statement (175)
    on left: 334, on right: 37
for_statement (176)
    on left: 335, on right: 38
extend_for_statement (177)
    on left: 336, on right: 39
for_sta_init (178)
    on left: 337 338 339, on right: 336
for_sta_condition (179)
    on left: 340 341, on right: 336
for_sta_control (180)
    on left: 342 343, on right: 336
switch_statement (181)
    on left: 344, on right: 35
case_par (182)
    on left: 345 346, on right: 344 347 348
init_case_par (183)
    on left: 347 348 349, on right: 345
if_statement (184)
    on left: 350, on right: 36
option_else_statement (185)
    on left: 351 352, on right: 350
output_statement (186)
    on left: 353 354, on right: 50
option_output (187)
    on left: 355 356, on right: 354 356
input_statement (188)
    on left: 357 358 359 360 361, on right: 49
option_input (189)
    on left: 362 363 364, on right: 358 360 363 364
struct_member_exp (190)
<<<<<<< HEAD
    on left: 364 365 366 367 368 369 370 371 372 373 374 375 376 377
    378 379 380, on right: 111 179 206 360 380
=======
    on left: 365 366 367 368 369 370 371 372 373 374 375 376 377 378
    379 380 381, on right: 111 180 209 361 381
>>>>>>> 9ebb173a31c1cef6348212635bf5307c2530de39
option_struct_member_exp (191)
    on left: 382 383 384 385 386 387 388, on right: 365 366 367 368
    369 370 371 372 373 374 375 376 377 380 383 384 385 386


state 0

    PBEGIN	shift, and go to state 1

    $default	reduce using rule 3 (gComplexProposition)

    program	go to state 1158
    gComplexProposition	go to state 2



state 1

    gComplexProposition  ->  PBEGIN . complexProposition PEND   (rule 2)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 21



state 2

    program  ->  gComplexProposition . statement   (rule 1)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 60
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 3

    complexProposition  ->  EMPTY .   (rule 18)

    $default	reduce using rule 18 (complexProposition)



state 4

    complexProposition  ->  MORE .   (rule 19)

    $default	reduce using rule 19 (complexProposition)



state 5

    complexProposition  ->  DEFINE . ID COLON prime_bool_exp   (rule 25)

    ID  	shift, and go to state 81



state 6

    complexProposition  ->  MY_TRUE .   (rule 15)

    $default	reduce using rule 15 (complexProposition)



state 7

    complexProposition  ->  MY_FALSE .   (rule 16)

    $default	reduce using rule 16 (complexProposition)



state 8

    complexProposition  ->  SKIP .   (rule 14)

    $default	reduce using rule 14 (complexProposition)



state 9

    complexProposition  ->  OPEN_PAR . complexProposition CLOSE_PAR   (rule 27)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 82



state 10

    complexProposition  ->  OPEN_BPAR . complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 83



state 11

    complexProposition  ->  NEXT . complexProposition   (rule 13)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 84



state 12

    complexProposition  ->  NEGATION . complexProposition   (rule 22)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 85



state 13

    complexProposition  ->  LENGTH . ari_exp   (rule 17)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 99
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 14

    complexProposition  ->  FINAL . complexProposition   (rule 21)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 109



state 15

    complexProposition  ->  KEEP . complexProposition   (rule 10)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 110



state 16

    complexProposition  ->  ALWAYS . complexProposition   (rule 9)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 111



state 17

    complexProposition  ->  HALT . complexProposition   (rule 20)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 112



state 18

    complexProposition  ->  W_NEXT . complexProposition   (rule 12)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 113



state 19

    complexProposition  ->  SOMETIMES . complexProposition   (rule 11)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 114



state 20

    complexProposition  ->  ID .   (rule 24)

    $default	reduce using rule 24 (complexProposition)



state 21

    gComplexProposition  ->  PBEGIN complexProposition . PEND   (rule 2)
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    PEND	shift, and go to state 115
    CHOP	shift, and go to state 116
    OR  	shift, and go to state 117
    AND 	shift, and go to state 118
    IFF 	shift, and go to state 119
    PROPIMPLY	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121



state 22

    switch_statement  ->  SWITCH . OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 344)

    OPEN_PAR	shift, and go to state 122



state 23

    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 350)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 123
    MY_TRUE	shift, and go to state 124
    MY_FALSE	shift, and go to state 125
    OPEN_PAR	shift, and go to state 126
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 127
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 129
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 130
    prime_bool_exp	go to state 131
    identifier	go to state 104
    strliteral	go to state 132
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 24

    statement  ->  EMPTY .   (rule 46)

    $default	reduce using rule 46 (statement)



state 25

    statement  ->  AWAIT . OPEN_PAR bool_exp CLOSE_PAR   (rule 43)

    OPEN_PAR	shift, and go to state 133



state 26

    struct_identifier  ->  STRUCT . ID   (rule 73)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 80)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 82)

    ID  	shift, and go to state 134
    STRUCT_TYPE	shift, and go to state 135



state 27

    struct_identifier  ->  UNION . ID   (rule 74)
    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 81)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 83)

    ID  	shift, and go to state 136
    STRUCT_TYPE	shift, and go to state 137



state 28

    type_define  ->  FILEDECLARATION .   (rule 93)

    $default	reduce using rule 93 (type_define)



state 29

    statement  ->  MORE .   (rule 47)

    $default	reduce using rule 47 (statement)



state 30

    statement  ->  DEFINE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    ID  	shift, and go to state 138



state 31

    statement  ->  EXIST . identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 63)

    OPEN_PAR	shift, and go to state 139
    ID  	shift, and go to state 140

    identifier	go to state 141



state 32

    statement  ->  FRAME . OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    OPEN_PAR	shift, and go to state 142



state 33

    for_statement  ->  FOR . ari_exp TIMES DO statement_bpar   (rule 335)
    extend_for_statement  ->  FOR . OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 336)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 143
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 144
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 34

    while_statement  ->  WHILE . bool_par statement_bpar   (rule 334)

    error	shift, and go to state 145
    OPEN_PAR	shift, and go to state 146

    bool_par	go to state 147



state 35

    statement  ->  TRUE .   (rule 51)

    $default	reduce using rule 51 (statement)



state 36

    statement  ->  FALSE .   (rule 52)

    $default	reduce using rule 52 (statement)



state 37

    statement  ->  REPEAT . OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

    OPEN_BPAR	shift, and go to state 148



state 38

    output_statement  ->  DISPLAY . OPEN_PAR ass_right CLOSE_PAR   (rule 353)
    output_statement  ->  DISPLAY . OPEN_PAR ass_right option_output CLOSE_PAR   (rule 354)

    OPEN_PAR	shift, and go to state 149



state 39

    statement  ->  SKIP .   (rule 45)

    $default	reduce using rule 45 (statement)



state 40

    type_define  ->  INTDECLARATION .   (rule 88)

    $default	reduce using rule 88 (type_define)



state 41

    type_define  ->  STRDECLARATION .   (rule 91)

    $default	reduce using rule 91 (type_define)



state 42

    type_define  ->  CHARDECLARATION .   (rule 90)

    $default	reduce using rule 90 (type_define)



state 43

    type_define  ->  VOIDDECLARATION .   (rule 92)

    $default	reduce using rule 92 (type_define)



state 44

    type_define  ->  FLOATDECLARATION .   (rule 89)

    $default	reduce using rule 89 (type_define)



state 45

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 64)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 150
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    POINTERNULL	shift, and go to state 123
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    MY_TRUE	shift, and go to state 124
    MY_FALSE	shift, and go to state 125
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 151
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 152
    BNE 	shift, and go to state 91
    NEXT	shift, and go to state 52
    NEGATION	shift, and go to state 153
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 59
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    statement	go to state 154
    function	go to state 155
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 156
    leftaddrshift	go to state 69
    array	go to state 157
    array_cast_exp	go to state 97
    point_exp	go to state 158
    ari_exp	go to state 129
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 159
    type_cast	go to state 103
    prime_bool_exp	go to state 160
    identifier	go to state 161
    strliteral	go to state 132
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 162
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 163



state 46

    statement  ->  OPEN_BPAR . statement option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 57)
    statement  ->  OPEN_BPAR . statement CLOSE_BPAR PROJECTION statement_bpar   (rule 58)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 164
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 47

    statement  ->  FUNCTION . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 59)

    ID  	shift, and go to state 165



state 48

    function  ->  EXTERN . ID OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)

    ID  	shift, and go to state 166



state 49

    sign_declaration  ->  UNSIGNED . declaration   (rule 76)

    STRUCT	shift, and go to state 167
    UNION	shift, and go to state 168
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 169
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 170
    type_define	go to state 66



state 50

    sign_declaration  ->  SIGNED . declaration   (rule 75)

    STRUCT	shift, and go to state 167
    UNION	shift, and go to state 168
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 169
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 171
    type_define	go to state 66



state 51

    point_exp  ->  MUL . identifier   (rule 150)
    point_exp  ->  MUL . point_exp   (rule 151)
    point_exp  ->  MUL . array   (rule 152)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 154)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 155)

    OPEN_PAR	shift, and go to state 172
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 173

    array	go to state 174
    point_exp	go to state 175
    identifier	go to state 176



state 52

    statement  ->  NEXT . OPEN_PAR statement CLOSE_PAR   (rule 40)
    ass_left  ->  NEXT . ass_left   (rule 115)

    OPEN_PAR	shift, and go to state 177
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 178
    ID  	shift, and go to state 173

    ass_left	go to state 179
    leftaddrshift	go to state 69
    array	go to state 180
    point_exp	go to state 71
    identifier	go to state 72
    struct_member_exp	go to state 80



state 53

    statement  ->  LENGTH . OPEN_PAR ari_exp CLOSE_PAR   (rule 48)

    OPEN_PAR	shift, and go to state 181



state 54

    input_statement  ->  REQUEST . OPEN_PAR identifier CLOSE_PAR   (rule 357)
    input_statement  ->  REQUEST . OPEN_PAR identifier option_input CLOSE_PAR   (rule 358)
    input_statement  ->  REQUEST . OPEN_PAR array CLOSE_PAR   (rule 359)
    input_statement  ->  REQUEST . OPEN_PAR array option_input CLOSE_PAR   (rule 360)
    input_statement  ->  REQUEST . OPEN_PAR struct_member_exp CLOSE_PAR   (rule 361)

    OPEN_PAR	shift, and go to state 182



state 55

    statement  ->  FINAL . OPEN_PAR statement CLOSE_PAR   (rule 53)

    OPEN_PAR	shift, and go to state 183



state 56

    statement  ->  KEEP . OPEN_PAR statement CLOSE_PAR   (rule 41)

    OPEN_PAR	shift, and go to state 184



state 57

    statement  ->  ALWAYS . OPEN_PAR statement CLOSE_PAR   (rule 42)

    OPEN_PAR	shift, and go to state 185



state 58

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    identifier  ->  ID .   (rule 318)

    OPEN_PAR	shift, and go to state 186
    OPEN_MPAR	shift, and go to state 187

    $default	reduce using rule 318 (identifier)



state 59

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 79)

    OPEN_PAR	shift, and go to state 139
    MUL 	shift, and go to state 188
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 190
    identifier	go to state 191



state 60

    program  ->  gComplexProposition statement .   (rule 1)
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195

    $default	reduce using rule 1 (program)



state 61

    statement  ->  function .   (rule 62)

    $default	reduce using rule 62 (statement)



state 62

    statement  ->  struct_define_statement .   (rule 61)

    $default	reduce using rule 61 (statement)



state 63

    struct_define_statement  ->  struct_identifier . OPEN_BPAR option_struct_declaration CLOSE_BPAR   (rule 72)

    OPEN_BPAR	shift, and go to state 196



state 64

    statement  ->  sign_declaration .   (rule 34)

    $default	reduce using rule 34 (statement)



state 65

    sign_declaration  ->  declaration .   (rule 77)

    $default	reduce using rule 77 (sign_declaration)



state 66

    declaration  ->  type_define . option_identifier_array_declaration   (rule 78)

    OPEN_PAR	shift, and go to state 139
    MUL 	shift, and go to state 188
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 197
    identifier	go to state 191



state 67

    statement  ->  ass_statement .   (rule 33)

    $default	reduce using rule 33 (statement)



state 68

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 109)

    ASS_P	shift, and go to state 198
    ASS_N	shift, and go to state 199

    assign_operator	go to state 200



state 69

    ass_left  ->  leftaddrshift .   (rule 116)

    $default	reduce using rule 116 (ass_left)



state 70

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    ass_left  ->  array .   (rule 112)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 376)

    DOT 	shift, and go to state 201
    OPEN_PAR	shift, and go to state 202
    IMPLY	shift, and go to state 203

    $default	reduce using rule 112 (ass_left)



state 71

    ass_left  ->  point_exp .   (rule 113)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 380)

    DOT 	shift, and go to state 204
    IMPLY	shift, and go to state 205

    $default	reduce using rule 113 (ass_left)



state 72

    ass_left  ->  identifier .   (rule 110)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . DOT function   (rule 378)
    struct_member_exp  ->  identifier . IMPLY function   (rule 379)

    DOT 	shift, and go to state 206
    IMPLY	shift, and go to state 207

    $default	reduce using rule 110 (ass_left)



state 73

    statement  ->  while_statement .   (rule 37)

    $default	reduce using rule 37 (statement)



state 74

    statement  ->  for_statement .   (rule 38)

    $default	reduce using rule 38 (statement)



state 75

    statement  ->  extend_for_statement .   (rule 39)

    $default	reduce using rule 39 (statement)



state 76

    statement  ->  switch_statement .   (rule 35)

    $default	reduce using rule 35 (statement)



state 77

    statement  ->  if_statement .   (rule 36)

    $default	reduce using rule 36 (statement)



state 78

    statement  ->  output_statement .   (rule 50)

    $default	reduce using rule 50 (statement)



state 79

    statement  ->  input_statement .   (rule 49)

    $default	reduce using rule 49 (statement)



state 80

    ass_left  ->  struct_member_exp .   (rule 111)

    $default	reduce using rule 111 (ass_left)



state 81

    complexProposition  ->  DEFINE ID . COLON prime_bool_exp   (rule 25)

    COLON	shift, and go to state 208



state 82

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    complexProposition  ->  OPEN_PAR complexProposition . CLOSE_PAR   (rule 27)

    CLOSE_PAR	shift, and go to state 209
    CHOP	shift, and go to state 116
    OR  	shift, and go to state 117
    AND 	shift, and go to state 118
    IFF 	shift, and go to state 119
    PROPIMPLY	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121



state 83

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition . poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    COMMA	shift, and go to state 210
    CHOP	shift, and go to state 116
    OR  	shift, and go to state 117
    AND 	shift, and go to state 118
    IFF 	shift, and go to state 119
    PROPIMPLY	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 211



state 84

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEXT complexProposition .   (rule 13)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 13 (complexProposition)



state 85

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEGATION complexProposition .   (rule 22)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 22 (complexProposition)



state 86

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 160)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 123
    MY_TRUE	shift, and go to state 124
    MY_FALSE	shift, and go to state 125
    OPEN_PAR	shift, and go to state 126
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 127
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 129
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 212
    prime_bool_exp	go to state 131
    identifier	go to state 104
    strliteral	go to state 132
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 87

    member_in_exp  ->  POINTERNULL .   (rule 170)

    $default	reduce using rule 170 (member_in_exp)



state 88

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 213
    INTDECLARATION	shift, and go to state 214
    CHARDECLARATION	shift, and go to state 215
    VOIDDECLARATION	shift, and go to state 216
    FLOATDECLARATION	shift, and go to state 217
    OPEN_PAR	shift, and go to state 218
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 219
    SIGNED	shift, and go to state 220
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 221
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 222
    array_cast_exp	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 89

<<<<<<< HEAD
    address_exp  ->  ADDRESS . struct_member_exp   (rule 206)
    address_exp  ->  ADDRESS . identifier   (rule 207)
    address_exp  ->  ADDRESS . array   (rule 208)
    address_exp  ->  ADDRESS . address_exp   (rule 209)
=======
    address_exp  ->  ADDRESS . identifier   (rule 207)
    address_exp  ->  ADDRESS . array   (rule 208)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 209)
    address_exp  ->  ADDRESS . address_exp   (rule 210)
>>>>>>> 9ebb173a31c1cef6348212635bf5307c2530de39

    OPEN_PAR	shift, and go to state 229
    ADDRESS	shift, and go to state 89
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 173

    array	go to state 230
    point_exp	go to state 231
    address_exp	go to state 232
    identifier	go to state 233
    struct_member_exp	go to state 234



state 90

    member_in_exp  ->  SUB . member_in_exp   (rule 168)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    member_in_exp	go to state 235
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 91

    member_in_exp  ->  BNE . member_in_exp   (rule 169)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    member_in_exp	go to state 236
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 92

    intliteral  ->  INTLITERAL .   (rule 321)

    $default	reduce using rule 321 (intliteral)



state 93

    floatliteral  ->  FLOATLITERAL .   (rule 323)

    $default	reduce using rule 323 (floatliteral)



state 94

    charliteral  ->  CHARLITERAL .   (rule 322)

    $default	reduce using rule 322 (charliteral)



state 95

    member_in_exp  ->  function .   (rule 175)

    $default	reduce using rule 175 (member_in_exp)



state 96

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    member_in_exp  ->  array .   (rule 173)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 376)

    DOT 	shift, and go to state 201
    OPEN_PAR	shift, and go to state 202
    IMPLY	shift, and go to state 203

    DOT 	[reduce using rule 173 (member_in_exp)]
    IMPLY	[reduce using rule 173 (member_in_exp)]
    $default	reduce using rule 173 (member_in_exp)



state 97

    member_in_exp  ->  array_cast_exp .   (rule 181)

    $default	reduce using rule 181 (member_in_exp)



state 98

    member_in_exp  ->  point_exp .   (rule 174)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 380)

    DOT 	shift, and go to state 204
    IMPLY	shift, and go to state 205

    DOT 	[reduce using rule 174 (member_in_exp)]
    IMPLY	[reduce using rule 174 (member_in_exp)]
    $default	reduce using rule 174 (member_in_exp)



state 99

    complexProposition  ->  LENGTH ari_exp .   (rule 17)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 17 (complexProposition)

    ari_operator	go to state 239



state 100

    ari_exp  ->  simple_ari_exp .   (rule 157)
    ari_exp  ->  simple_ari_exp . relation_operator ari_exp   (rule 158)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 166)

    INTER_OR	shift, and go to state 240
    CON 	shift, and go to state 241
    ADDRESS	shift, and go to state 242
    NE  	shift, and go to state 243
    EQ  	shift, and go to state 244
    GE  	shift, and go to state 245
    LE  	shift, and go to state 246
    GT  	shift, and go to state 247
    LT  	shift, and go to state 248
    LST 	shift, and go to state 249
    RST 	shift, and go to state 250
    MUL 	shift, and go to state 251
    DIV 	shift, and go to state 252
    MOD 	shift, and go to state 253

    INTER_OR	[reduce using rule 157 (ari_exp)]
    CON 	[reduce using rule 157 (ari_exp)]
    ADDRESS	[reduce using rule 157 (ari_exp)]
    NE  	[reduce using rule 157 (ari_exp)]
    EQ  	[reduce using rule 157 (ari_exp)]
    GE  	[reduce using rule 157 (ari_exp)]
    LE  	[reduce using rule 157 (ari_exp)]
    GT  	[reduce using rule 157 (ari_exp)]
    LT  	[reduce using rule 157 (ari_exp)]
    LST 	[reduce using rule 157 (ari_exp)]
    RST 	[reduce using rule 157 (ari_exp)]
    MUL 	[reduce using rule 157 (ari_exp)]
    DIV 	[reduce using rule 157 (ari_exp)]
    MOD 	[reduce using rule 157 (ari_exp)]
    $default	reduce using rule 157 (ari_exp)

    bi_operator	go to state 254
    relation_operator	go to state 255



state 101

    simple_ari_exp  ->  member_in_exp .   (rule 165)

    $default	reduce using rule 165 (simple_ari_exp)



state 102

    member_in_exp  ->  address_exp .   (rule 178)

    $default	reduce using rule 178 (member_in_exp)



state 103

    member_in_exp  ->  type_cast .   (rule 179)

    $default	reduce using rule 179 (member_in_exp)



state 104

    member_in_exp  ->  identifier .   (rule 172)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . DOT function   (rule 378)
    struct_member_exp  ->  identifier . IMPLY function   (rule 379)

    DOT 	shift, and go to state 206
    IMPLY	shift, and go to state 207

    DOT 	[reduce using rule 172 (member_in_exp)]
    IMPLY	[reduce using rule 172 (member_in_exp)]
    $default	reduce using rule 172 (member_in_exp)



state 105

    member_in_exp  ->  intliteral .   (rule 167)

    $default	reduce using rule 167 (member_in_exp)



state 106

    member_in_exp  ->  charliteral .   (rule 177)

    $default	reduce using rule 177 (member_in_exp)



state 107

    member_in_exp  ->  floatliteral .   (rule 171)

    $default	reduce using rule 171 (member_in_exp)



state 108

    member_in_exp  ->  struct_member_exp .   (rule 180)

    $default	reduce using rule 180 (member_in_exp)



state 109

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  FINAL complexProposition .   (rule 21)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 21 (complexProposition)



state 110

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  KEEP complexProposition .   (rule 10)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 10 (complexProposition)



state 111

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  ALWAYS complexProposition .   (rule 9)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 9 (complexProposition)



state 112

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  HALT complexProposition .   (rule 20)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 20 (complexProposition)



state 113

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  W_NEXT complexProposition .   (rule 12)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 12 (complexProposition)



state 114

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  SOMETIMES complexProposition .   (rule 11)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 11 (complexProposition)



state 115

    gComplexProposition  ->  PBEGIN complexProposition PEND .   (rule 2)

    $default	reduce using rule 2 (gComplexProposition)



state 116

    complexProposition  ->  complexProposition CHOP . complexProposition   (rule 8)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 256



state 117

    complexProposition  ->  complexProposition OR . complexProposition   (rule 5)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 257



state 118

    complexProposition  ->  complexProposition AND . complexProposition   (rule 4)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 258



state 119

    complexProposition  ->  complexProposition IFF . complexProposition   (rule 6)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 259



state 120

    complexProposition  ->  complexProposition PROPIMPLY . complexProposition   (rule 7)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 260



state 121

    complexProposition  ->  complexProposition CHOPSTAR .   (rule 26)

    $default	reduce using rule 26 (complexProposition)



state 122

    switch_statement  ->  SWITCH OPEN_PAR . member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 344)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    member_in_exp	go to state 261
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 123

    member_in_exp  ->  POINTERNULL .   (rule 170)
    prime_bool_exp  ->  POINTERNULL . EQ ari_exp   (rule 251)
    prime_bool_exp  ->  POINTERNULL . NE ari_exp   (rule 252)

    NE  	shift, and go to state 262
    EQ  	shift, and go to state 263

    NE  	[reduce using rule 170 (member_in_exp)]
    EQ  	[reduce using rule 170 (member_in_exp)]
    $default	reduce using rule 170 (member_in_exp)



state 124

    prime_bool_exp  ->  MY_TRUE .   (rule 242)

    $default	reduce using rule 242 (prime_bool_exp)



state 125

    prime_bool_exp  ->  MY_FALSE .   (rule 243)

    $default	reduce using rule 243 (prime_bool_exp)



state 126

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 240)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 123
    STRUCT	shift, and go to state 213
    MY_TRUE	shift, and go to state 124
    MY_FALSE	shift, and go to state 125
    INTDECLARATION	shift, and go to state 214
    CHARDECLARATION	shift, and go to state 215
    VOIDDECLARATION	shift, and go to state 216
    FLOATDECLARATION	shift, and go to state 217
    OPEN_PAR	shift, and go to state 264
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 219
    SIGNED	shift, and go to state 220
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 127
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 221
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 222
    array_cast_exp	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 265
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    bool_exp	go to state 266
    prime_bool_exp	go to state 131
    identifier	go to state 227
    strliteral	go to state 132
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 127

    bool_exp  ->  NEGATION . bool_exp   (rule 237)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 123
    MY_TRUE	shift, and go to state 124
    MY_FALSE	shift, and go to state 125
    OPEN_PAR	shift, and go to state 126
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 127
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 129
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 267
    prime_bool_exp	go to state 131
    identifier	go to state 104
    strliteral	go to state 132
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 128

    strliteral  ->  STRLITERAL .   (rule 320)

    $default	reduce using rule 320 (strliteral)



state 129

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 241)
    prime_bool_exp  ->  ari_exp .   (rule 244)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 245)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 246)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 249)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 250)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 253)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 254)

    NE  	shift, and go to state 268
    EQ  	shift, and go to state 269
    GE  	shift, and go to state 245
    LE  	shift, and go to state 246
    GT  	shift, and go to state 247
    LT  	shift, and go to state 248
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 244 (prime_bool_exp)

    ari_operator	go to state 239
    relation_operator	go to state 270



state 130

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 350)

    THEN	shift, and go to state 271
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273



state 131

    bool_exp  ->  prime_bool_exp .   (rule 236)

    $default	reduce using rule 236 (bool_exp)



state 132

    prime_bool_exp  ->  strliteral . EQ ari_exp   (rule 247)
    prime_bool_exp  ->  strliteral . NE ari_exp   (rule 248)

    NE  	shift, and go to state 274
    EQ  	shift, and go to state 275



state 133

    statement  ->  AWAIT OPEN_PAR . bool_exp CLOSE_PAR   (rule 43)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 123
    MY_TRUE	shift, and go to state 124
    MY_FALSE	shift, and go to state 125
    OPEN_PAR	shift, and go to state 126
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 127
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 129
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 276
    prime_bool_exp	go to state 131
    identifier	go to state 104
    strliteral	go to state 132
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 134

    struct_identifier  ->  STRUCT ID .   (rule 73)
    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 80)

    OPEN_PAR	shift, and go to state 139
    MUL 	shift, and go to state 188
    ID  	shift, and go to state 189

    $default	reduce using rule 73 (struct_identifier)

    option_identifier_array_declaration	go to state 277
    identifier	go to state 191



state 135

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 82)

    OPEN_PAR	shift, and go to state 139
    MUL 	shift, and go to state 188
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 278
    identifier	go to state 191



state 136

    struct_identifier  ->  UNION ID .   (rule 74)
    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 81)

    OPEN_PAR	shift, and go to state 139
    MUL 	shift, and go to state 188
    ID  	shift, and go to state 189

    $default	reduce using rule 74 (struct_identifier)

    option_identifier_array_declaration	go to state 279
    identifier	go to state 191



state 137

    declaration  ->  UNION STRUCT_TYPE . option_identifier_array_declaration   (rule 83)

    OPEN_PAR	shift, and go to state 139
    MUL 	shift, and go to state 188
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 280
    identifier	go to state 191



state 138

    statement  ->  DEFINE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    OPEN_PAR	shift, and go to state 281



state 139

    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)

    OPEN_PAR	shift, and go to state 139
    ID  	shift, and go to state 140

    identifier	go to state 282



state 140

    identifier  ->  ID .   (rule 318)

    $default	reduce using rule 318 (identifier)



state 141

    statement  ->  EXIST identifier . inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 63)

    COMMA	shift, and go to state 283

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 284



state 142

    statement  ->  FRAME OPEN_PAR . identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    OPEN_PAR	shift, and go to state 139
    ID  	shift, and go to state 140

    identifier	go to state 285



state 143

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    extend_for_statement  ->  FOR OPEN_PAR . for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 336)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 286
    UNION	shift, and go to state 168
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 287
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 288
    VOIDDECLARATION	shift, and go to state 289
    FLOATDECLARATION	shift, and go to state 290
    OPEN_PAR	shift, and go to state 291
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 219
    SIGNED	shift, and go to state 220
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEXT	shift, and go to state 178
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 292
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    $default	reduce using rule 339 (for_sta_init)

    function	go to state 95
    declaration	go to state 293
    type_define	go to state 66
    ass_statement	go to state 294
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 157
    array_cast_exp	go to state 223
    point_exp	go to state 158
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 161
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    for_sta_init	go to state 295
    struct_member_exp	go to state 163



state 144

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    for_statement  ->  FOR ari_exp . TIMES DO statement_bpar   (rule 335)

    TIMES	shift, and go to state 296
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ari_operator	go to state 239



state 145

    bool_par  ->  error . CLOSE_PAR   (rule 317)

    CLOSE_PAR	shift, and go to state 297



state 146

    bool_par  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 316)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 123
    MY_TRUE	shift, and go to state 124
    MY_FALSE	shift, and go to state 125
    OPEN_PAR	shift, and go to state 126
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 127
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 129
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 298
    prime_bool_exp	go to state 131
    identifier	go to state 104
    strliteral	go to state 132
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 147

    while_statement  ->  WHILE bool_par . statement_bpar   (rule 334)

    error	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300

    statement_bpar	go to state 301



state 148

    statement  ->  REPEAT OPEN_BPAR . statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 302
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 149

    output_statement  ->  DISPLAY OPEN_PAR . ass_right CLOSE_PAR   (rule 353)
    output_statement  ->  DISPLAY OPEN_PAR . ass_right option_output CLOSE_PAR   (rule 354)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    ass_right	go to state 307
    rightaddrshift	go to state 308
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 150

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 160)
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 350)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 123
    MY_TRUE	shift, and go to state 124
    MY_FALSE	shift, and go to state 125
    OPEN_PAR	shift, and go to state 126
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 127
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 129
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 314
    prime_bool_exp	go to state 131
    identifier	go to state 104
    strliteral	go to state 132
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 151

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 64)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 333)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 150
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    POINTERNULL	shift, and go to state 123
    STRUCT	shift, and go to state 315
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    MY_TRUE	shift, and go to state 124
    MY_FALSE	shift, and go to state 125
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 316
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 317
    VOIDDECLARATION	shift, and go to state 289
    FLOATDECLARATION	shift, and go to state 318
    OPEN_PAR	shift, and go to state 319
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 320
    SIGNED	shift, and go to state 321
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 152
    BNE 	shift, and go to state 91
    NEXT	shift, and go to state 52
    NEGATION	shift, and go to state 153
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 292
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    statement	go to state 154
    function	go to state 155
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 156
    leftaddrshift	go to state 69
    array	go to state 157
    array_cast_exp	go to state 223
    point_exp	go to state 158
    ari_exp	go to state 265
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    prime_bool_exp	go to state 160
    identifier	go to state 161
    strliteral	go to state 132
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 322
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 163



state 152

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    point_exp  ->  MUL . identifier   (rule 150)
    point_exp  ->  MUL . point_exp   (rule 151)
    point_exp  ->  MUL . array   (rule 152)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 154)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 155)

    OPEN_PAR	shift, and go to state 172
    MUL 	shift, and go to state 323
    ID  	shift, and go to state 324

    array	go to state 174
    point_exp	go to state 175
    identifier	go to state 325



state 153

    imply_pre  ->  NEGATION . imply_pre   (rule 330)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 123
    MY_TRUE	shift, and go to state 124
    MY_FALSE	shift, and go to state 125
    OPEN_PAR	shift, and go to state 326
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 153
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 129
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    prime_bool_exp	go to state 160
    identifier	go to state 104
    strliteral	go to state 132
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 327
    struct_member_exp	go to state 108



state 154

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  OPEN_PAR statement . CLOSE_PAR   (rule 64)

    CLOSE_PAR	shift, and go to state 328
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 155

    statement  ->  function .   (rule 62)
    member_in_exp  ->  function .   (rule 175)

    CLOSE_PAR	reduce using rule 62 (statement)
    CLOSE_PAR	[reduce using rule 175 (member_in_exp)]
    CHOP	reduce using rule 62 (statement)
    OR  	reduce using rule 62 (statement)
    OR  	[reduce using rule 175 (member_in_exp)]
    PARALLEL	reduce using rule 62 (statement)
    AND 	reduce using rule 62 (statement)
    AND 	[reduce using rule 175 (member_in_exp)]
    $default	reduce using rule 175 (member_in_exp)



state 156

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 109)
    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 114)

    CLOSE_PAR	shift, and go to state 329
    ASS_P	shift, and go to state 198
    ASS_N	shift, and go to state 199

    assign_operator	go to state 200



state 157

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    ass_left  ->  array .   (rule 112)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 140)
    member_in_exp  ->  array .   (rule 173)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 376)

    DOT 	shift, and go to state 201
    OPEN_PAR	shift, and go to state 202
    CLOSE_PAR	shift, and go to state 330
    IMPLY	shift, and go to state 203

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    CLOSE_PAR	[reduce using rule 173 (member_in_exp)]
    ASS_P	reduce using rule 112 (ass_left)
    ASS_N	reduce using rule 112 (ass_left)
    $default	reduce using rule 173 (member_in_exp)



state 158

    ass_left  ->  point_exp .   (rule 113)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 156)
    member_in_exp  ->  point_exp .   (rule 174)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 380)

    DOT 	shift, and go to state 204
    CLOSE_PAR	shift, and go to state 331
    IMPLY	shift, and go to state 205

    CLOSE_PAR	[reduce using rule 113 (ass_left)]
    CLOSE_PAR	[reduce using rule 174 (member_in_exp)]
    ASS_P	reduce using rule 113 (ass_left)
    ASS_N	reduce using rule 113 (ass_left)
    $default	reduce using rule 174 (member_in_exp)



state 159

    member_in_exp  ->  address_exp .   (rule 178)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)

    CLOSE_PAR	shift, and go to state 332

    CLOSE_PAR	[reduce using rule 178 (member_in_exp)]
    $default	reduce using rule 178 (member_in_exp)



state 160

    imply_pre  ->  prime_bool_exp .   (rule 329)

    $default	reduce using rule 329 (imply_pre)



state 161

    ass_left  ->  identifier .   (rule 110)
    member_in_exp  ->  identifier .   (rule 172)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 319)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . DOT function   (rule 378)
    struct_member_exp  ->  identifier . IMPLY function   (rule 379)

    DOT 	shift, and go to state 206
    CLOSE_PAR	shift, and go to state 333
    IMPLY	shift, and go to state 207

    CLOSE_PAR	[reduce using rule 110 (ass_left)]
    CLOSE_PAR	[reduce using rule 172 (member_in_exp)]
    ASS_P	reduce using rule 110 (ass_left)
    ASS_N	reduce using rule 110 (ass_left)
    $default	reduce using rule 172 (member_in_exp)



state 162

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 331)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 332)

    CLOSE_PAR	shift, and go to state 334
    OR  	shift, and go to state 335
    AND 	shift, and go to state 336



state 163

    ass_left  ->  struct_member_exp .   (rule 111)
    member_in_exp  ->  struct_member_exp .   (rule 180)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 381)

    CLOSE_PAR	shift, and go to state 337

    CLOSE_PAR	[reduce using rule 111 (ass_left)]
    CLOSE_PAR	[reduce using rule 180 (member_in_exp)]
    ASS_P	reduce using rule 111 (ass_left)
    ASS_N	reduce using rule 111 (ass_left)
    $default	reduce using rule 180 (member_in_exp)



state 164

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  OPEN_BPAR statement . option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 57)
    statement  ->  OPEN_BPAR statement . CLOSE_BPAR PROJECTION statement_bpar   (rule 58)

    COMMA	shift, and go to state 338
    CLOSE_BPAR	shift, and go to state 339
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195

    CLOSE_BPAR	[reduce using rule 327 (option_projection)]
    $default	reduce using rule 327 (option_projection)

    option_projection	go to state 340



state 165

    statement  ->  FUNCTION ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 59)

    OPEN_PAR	shift, and go to state 341



state 166

    function  ->  EXTERN ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)

    OPEN_PAR	shift, and go to state 342



state 167

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 80)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 82)

    ID  	shift, and go to state 343
    STRUCT_TYPE	shift, and go to state 135



state 168

    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 81)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 83)

    ID  	shift, and go to state 344
    STRUCT_TYPE	shift, and go to state 137



state 169

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    MUL 	shift, and go to state 345



state 170

    sign_declaration  ->  UNSIGNED declaration .   (rule 76)

    $default	reduce using rule 76 (sign_declaration)



state 171

    sign_declaration  ->  SIGNED declaration .   (rule 75)

    $default	reduce using rule 75 (sign_declaration)



state 172

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 154)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 155)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 346
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    type_define	go to state 347
    array	go to state 222
    array_cast_exp	go to state 97
    point_exp	go to state 224
    ari_exp	go to state 348
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    sign_type_define	go to state 349
    all_type_define	go to state 350
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 173

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    identifier  ->  ID .   (rule 318)

    OPEN_MPAR	shift, and go to state 187

    $default	reduce using rule 318 (identifier)



state 174

    point_exp  ->  MUL array .   (rule 152)

    $default	reduce using rule 152 (point_exp)



state 175

    point_exp  ->  MUL point_exp .   (rule 151)

    $default	reduce using rule 151 (point_exp)



state 176

    point_exp  ->  MUL identifier .   (rule 150)

    $default	reduce using rule 150 (point_exp)



state 177

    statement  ->  NEXT OPEN_PAR . statement CLOSE_PAR   (rule 40)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 351
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    ADDRESS	shift, and go to state 89
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 352
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 156
    leftaddrshift	go to state 69
    array	go to state 353
    point_exp	go to state 354
    address_exp	go to state 355
    identifier	go to state 356
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 357



state 178

    ass_left  ->  NEXT . ass_left   (rule 115)

    OPEN_PAR	shift, and go to state 358
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 178
    ID  	shift, and go to state 173

    ass_left	go to state 179
    leftaddrshift	go to state 69
    array	go to state 180
    point_exp	go to state 71
    identifier	go to state 72
    struct_member_exp	go to state 80



state 179

    ass_left  ->  NEXT ass_left .   (rule 115)

    $default	reduce using rule 115 (ass_left)



state 180

    ass_left  ->  array .   (rule 112)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 376)

    DOT 	shift, and go to state 201
    IMPLY	shift, and go to state 203

    $default	reduce using rule 112 (ass_left)



state 181

    statement  ->  LENGTH OPEN_PAR . ari_exp CLOSE_PAR   (rule 48)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 359
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 182

    input_statement  ->  REQUEST OPEN_PAR . identifier CLOSE_PAR   (rule 357)
    input_statement  ->  REQUEST OPEN_PAR . identifier option_input CLOSE_PAR   (rule 358)
    input_statement  ->  REQUEST OPEN_PAR . array CLOSE_PAR   (rule 359)
    input_statement  ->  REQUEST OPEN_PAR . array option_input CLOSE_PAR   (rule 360)
    input_statement  ->  REQUEST OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 361)

    OPEN_PAR	shift, and go to state 360
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 173

    array	go to state 361
    point_exp	go to state 231
    identifier	go to state 362
    struct_member_exp	go to state 363



state 183

    statement  ->  FINAL OPEN_PAR . statement CLOSE_PAR   (rule 53)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 364
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 184

    statement  ->  KEEP OPEN_PAR . statement CLOSE_PAR   (rule 41)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 365
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 185

    statement  ->  ALWAYS OPEN_PAR . statement CLOSE_PAR   (rule 42)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 366
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 186

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 69)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 346
    ADDRESS	shift, and go to state 367
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 368
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    $default	reduce using rule 309 (option_function_identifier)

    function	go to state 95
    type_define	go to state 347
    ass_right	go to state 369
    rightaddrshift	go to state 308
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    sign_type_define	go to state 349
    all_type_define	go to state 370
    option_function_identifier	go to state 371
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 187

    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 372
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 188

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)

    OPEN_PAR	shift, and go to state 139
    MUL 	shift, and go to state 188
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 373
    identifier	go to state 191



state 189

    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 98)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)
    identifier  ->  ID .   (rule 318)

    ARRAY	shift, and go to state 374
    OPEN_MPAR	shift, and go to state 375

    $default	reduce using rule 318 (identifier)



state 190

    declaration  ->  STRUCT_TYPE option_identifier_array_declaration .   (rule 79)

    $default	reduce using rule 79 (declaration)



state 191

    option_identifier_array_declaration  ->  identifier . inner_option_identifier_array_declaration   (rule 94)
    option_identifier_array_declaration  ->  identifier . ASS_P ass_right inner_option_identifier_array_declaration   (rule 96)

    COMMA	shift, and go to state 376
    ASS_P	shift, and go to state 377

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 378



state 192

    statement  ->  statement CHOP . statement   (rule 32)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 379
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 193

    statement  ->  statement OR . statement   (rule 31)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 380
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 194

    statement  ->  statement PARALLEL . statement   (rule 54)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 381
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 195

    statement  ->  statement AND . statement   (rule 30)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 382
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 196

    struct_define_statement  ->  struct_identifier OPEN_BPAR . option_struct_declaration CLOSE_BPAR   (rule 72)

    STRUCT	shift, and go to state 167
    UNION	shift, and go to state 168
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 169
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    STRUCT_TYPE	shift, and go to state 59

    option_struct_declaration	go to state 383
    sign_declaration	go to state 384
    declaration	go to state 65
    type_define	go to state 66



state 197

    declaration  ->  type_define option_identifier_array_declaration .   (rule 78)

    $default	reduce using rule 78 (declaration)



state 198

    assign_operator  ->  ASS_P .   (rule 130)

    $default	reduce using rule 130 (assign_operator)



state 199

    assign_operator  ->  ASS_N .   (rule 131)

    $default	reduce using rule 131 (assign_operator)



state 200

    ass_statement  ->  ass_left assign_operator . ass_right   (rule 109)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    ass_right	go to state 385
    rightaddrshift	go to state 308
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 201

    struct_member_exp  ->  array DOT . identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array DOT . array option_struct_member_exp   (rule 369)

    OPEN_PAR	shift, and go to state 386
    ID  	shift, and go to state 173

    array	go to state 387
    identifier	go to state 388



state 202

    function  ->  array OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 71)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 346
    ADDRESS	shift, and go to state 367
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 368
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    $default	reduce using rule 309 (option_function_identifier)

    function	go to state 95
    type_define	go to state 347
    ass_right	go to state 369
    rightaddrshift	go to state 308
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    sign_type_define	go to state 349
    all_type_define	go to state 370
    option_function_identifier	go to state 389
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 203

    struct_member_exp  ->  array IMPLY . identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array IMPLY . array option_struct_member_exp   (rule 376)

    OPEN_PAR	shift, and go to state 386
    ID  	shift, and go to state 173

    array	go to state 390
    identifier	go to state 391



state 204

    struct_member_exp  ->  point_exp DOT . identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  point_exp DOT . array option_struct_member_exp   (rule 370)

    OPEN_PAR	shift, and go to state 386
    ID  	shift, and go to state 173

    array	go to state 392
    identifier	go to state 393



state 205

    struct_member_exp  ->  point_exp IMPLY . identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp IMPLY . array option_struct_member_exp   (rule 380)

    OPEN_PAR	shift, and go to state 386
    ID  	shift, and go to state 173

    array	go to state 394
    identifier	go to state 395



state 206

    struct_member_exp  ->  identifier DOT . identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier DOT . array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  identifier DOT . function   (rule 378)

    OPEN_PAR	shift, and go to state 386
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 58

    function	go to state 396
    array	go to state 397
    identifier	go to state 398



state 207

    struct_member_exp  ->  identifier IMPLY . identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier IMPLY . array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier IMPLY . function   (rule 379)

    OPEN_PAR	shift, and go to state 386
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 58

    function	go to state 399
    array	go to state 400
    identifier	go to state 401



state 208

    complexProposition  ->  DEFINE ID COLON . prime_bool_exp   (rule 25)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 123
    MY_TRUE	shift, and go to state 124
    MY_FALSE	shift, and go to state 125
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 129
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    prime_bool_exp	go to state 402
    identifier	go to state 104
    strliteral	go to state 132
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 209

    complexProposition  ->  OPEN_PAR complexProposition CLOSE_PAR .   (rule 27)

    $default	reduce using rule 27 (complexProposition)



state 210

    poptional_projection  ->  COMMA . complexProposition poptional_projection   (rule 28)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 403



state 211

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection . CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    CLOSE_BPAR	shift, and go to state 404



state 212

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 160)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)

    THEN	shift, and go to state 405
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273



state 213

    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)

    STRUCT_TYPE	shift, and go to state 406



state 214

    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 408



state 215

    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 409
    MUL 	shift, and go to state 410



state 216

    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    MUL 	shift, and go to state 411



state 217

    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 413



state 218

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 213
    INTDECLARATION	shift, and go to state 414
    CHARDECLARATION	shift, and go to state 415
    VOIDDECLARATION	shift, and go to state 216
    FLOATDECLARATION	shift, and go to state 416
    OPEN_PAR	shift, and go to state 218
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 417
    SIGNED	shift, and go to state 220
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 221
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 222
    array_cast_exp	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 219

    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

    INTDECLARATION	shift, and go to state 418
    CHARDECLARATION	shift, and go to state 419



state 220

    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)

    INTDECLARATION	shift, and go to state 420
    CHARDECLARATION	shift, and go to state 421



state 221

    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 234)

    MUL 	shift, and go to state 422



state 222

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 140)
    member_in_exp  ->  array .   (rule 173)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 376)

    DOT 	shift, and go to state 201
    OPEN_PAR	shift, and go to state 202
    CLOSE_PAR	shift, and go to state 330
    IMPLY	shift, and go to state 203

    CLOSE_PAR	[reduce using rule 173 (member_in_exp)]
    $default	reduce using rule 173 (member_in_exp)



state 223

    array_cast_exp  ->  OPEN_PAR array_cast_exp . CLOSE_PAR   (rule 146)
    member_in_exp  ->  array_cast_exp .   (rule 181)

    CLOSE_PAR	shift, and go to state 423

    CLOSE_PAR	[reduce using rule 181 (member_in_exp)]
    $default	reduce using rule 181 (member_in_exp)



state 224

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 156)
    member_in_exp  ->  point_exp .   (rule 174)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 380)

    DOT 	shift, and go to state 204
    CLOSE_PAR	shift, and go to state 331
    IMPLY	shift, and go to state 205

    CLOSE_PAR	[reduce using rule 174 (member_in_exp)]
    $default	reduce using rule 174 (member_in_exp)



state 225

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 176)

    CLOSE_PAR	shift, and go to state 424
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ari_operator	go to state 239



state 226

    member_in_exp  ->  address_exp .   (rule 178)
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 211)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)

    CLOSE_PAR	shift, and go to state 425

    CLOSE_PAR	[reduce using rule 178 (member_in_exp)]
    $default	reduce using rule 178 (member_in_exp)



state 227

    member_in_exp  ->  identifier .   (rule 172)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 319)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . DOT function   (rule 378)
    struct_member_exp  ->  identifier . IMPLY function   (rule 379)

    DOT 	shift, and go to state 206
    CLOSE_PAR	shift, and go to state 333
    IMPLY	shift, and go to state 207

    CLOSE_PAR	[reduce using rule 172 (member_in_exp)]
    $default	reduce using rule 172 (member_in_exp)



state 228

    member_in_exp  ->  struct_member_exp .   (rule 180)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 381)

    CLOSE_PAR	shift, and go to state 337

    CLOSE_PAR	[reduce using rule 180 (member_in_exp)]
    $default	reduce using rule 180 (member_in_exp)



state 229

<<<<<<< HEAD
    address_exp  ->  ADDRESS array .   (rule 208)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 201
    IMPLY	shift, and go to state 203

    DOT 	[reduce using rule 208 (address_exp)]
    $default	reduce using rule 208 (address_exp)
=======
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    OPEN_PAR	shift, and go to state 229
    ADDRESS	shift, and go to state 89
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 173

    array	go to state 426
    point_exp	go to state 427
    address_exp	go to state 428
    identifier	go to state 429
    struct_member_exp	go to state 430
>>>>>>> 9ebb173a31c1cef6348212635bf5307c2530de39



state 230

    address_exp  ->  ADDRESS array .   (rule 208)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 376)

    DOT 	shift, and go to state 201

    DOT 	[reduce using rule 208 (address_exp)]
    $default	reduce using rule 208 (address_exp)



state 231

    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 380)

    DOT 	shift, and go to state 204
    IMPLY	shift, and go to state 205



state 232

<<<<<<< HEAD
    address_exp  ->  ADDRESS identifier .   (rule 207)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 364)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 367)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 370)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 374)
    struct_member_exp  ->  identifier . DOT function   (rule 377)
    struct_member_exp  ->  identifier . IMPLY function   (rule 378)

    DOT 	shift, and go to state 206
    IMPLY	shift, and go to state 207

    DOT 	[reduce using rule 207 (address_exp)]
    $default	reduce using rule 207 (address_exp)
=======
    address_exp  ->  ADDRESS address_exp .   (rule 210)

    $default	reduce using rule 210 (address_exp)
>>>>>>> 9ebb173a31c1cef6348212635bf5307c2530de39



state 233

<<<<<<< HEAD
    address_exp  ->  ADDRESS struct_member_exp .   (rule 206)

    $default	reduce using rule 206 (address_exp)
=======
    address_exp  ->  ADDRESS identifier .   (rule 207)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . DOT function   (rule 378)
    struct_member_exp  ->  identifier . IMPLY function   (rule 379)

    DOT 	shift, and go to state 206

    DOT 	[reduce using rule 207 (address_exp)]
    $default	reduce using rule 207 (address_exp)
>>>>>>> 9ebb173a31c1cef6348212635bf5307c2530de39



state 234

    address_exp  ->  ADDRESS struct_member_exp .   (rule 209)

    $default	reduce using rule 209 (address_exp)



state 235

    member_in_exp  ->  SUB member_in_exp .   (rule 168)

    $default	reduce using rule 168 (member_in_exp)



state 236

    member_in_exp  ->  BNE member_in_exp .   (rule 169)

    $default	reduce using rule 169 (member_in_exp)



state 237

    ari_operator  ->  ADD .   (rule 190)

    $default	reduce using rule 190 (ari_operator)



state 238

    ari_operator  ->  SUB .   (rule 191)

    $default	reduce using rule 191 (ari_operator)



state 239

    ari_exp  ->  ari_exp ari_operator . simple_ari_exp   (rule 159)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    simple_ari_exp	go to state 431
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 240

    bi_operator  ->  INTER_OR .   (rule 188)

    $default	reduce using rule 188 (bi_operator)



state 241

    bi_operator  ->  CON .   (rule 189)

    $default	reduce using rule 189 (bi_operator)



state 242

    bi_operator  ->  ADDRESS .   (rule 187)

    $default	reduce using rule 187 (bi_operator)



state 243

    relation_operator  ->  NE .   (rule 257)

    $default	reduce using rule 257 (relation_operator)



state 244

    relation_operator  ->  EQ .   (rule 260)

    $default	reduce using rule 260 (relation_operator)



state 245

    relation_operator  ->  GE .   (rule 255)

    $default	reduce using rule 255 (relation_operator)



state 246

    relation_operator  ->  LE .   (rule 256)

    $default	reduce using rule 256 (relation_operator)



state 247

    relation_operator  ->  GT .   (rule 258)

    $default	reduce using rule 258 (relation_operator)



state 248

    relation_operator  ->  LT .   (rule 259)

    $default	reduce using rule 259 (relation_operator)



state 249

    bi_operator  ->  LST .   (rule 185)

    $default	reduce using rule 185 (bi_operator)



state 250

    bi_operator  ->  RST .   (rule 186)

    $default	reduce using rule 186 (bi_operator)



state 251

    bi_operator  ->  MUL .   (rule 182)

    $default	reduce using rule 182 (bi_operator)



state 252

    bi_operator  ->  DIV .   (rule 183)

    $default	reduce using rule 183 (bi_operator)



state 253

    bi_operator  ->  MOD .   (rule 184)

    $default	reduce using rule 184 (bi_operator)



state 254

    simple_ari_exp  ->  simple_ari_exp bi_operator . member_in_exp   (rule 166)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    member_in_exp	go to state 432
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 255

    ari_exp  ->  simple_ari_exp relation_operator . ari_exp   (rule 158)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 433
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 256

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition CHOP complexProposition .   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 117
    AND 	shift, and go to state 118
    IFF 	shift, and go to state 119
    PROPIMPLY	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 8 (complexProposition)



state 257

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition OR complexProposition .   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    AND 	shift, and go to state 118
    IFF 	shift, and go to state 119
    PROPIMPLY	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 5 (complexProposition)



state 258

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition AND complexProposition .   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    IFF 	shift, and go to state 119
    PROPIMPLY	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 4 (complexProposition)



state 259

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition IFF complexProposition .   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 6 (complexProposition)



state 260

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition PROPIMPLY complexProposition .   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 7 (complexProposition)



state 261

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp . CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 344)

    CLOSE_PAR	shift, and go to state 434



state 262

    prime_bool_exp  ->  POINTERNULL NE . ari_exp   (rule 252)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 435
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 263

    prime_bool_exp  ->  POINTERNULL EQ . ari_exp   (rule 251)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 436
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 264

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 240)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 123
    STRUCT	shift, and go to state 213
    MY_TRUE	shift, and go to state 124
    MY_FALSE	shift, and go to state 125
    INTDECLARATION	shift, and go to state 414
    CHARDECLARATION	shift, and go to state 415
    VOIDDECLARATION	shift, and go to state 216
    FLOATDECLARATION	shift, and go to state 416
    OPEN_PAR	shift, and go to state 264
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 417
    SIGNED	shift, and go to state 220
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 127
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 221
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 222
    array_cast_exp	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 265
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    bool_exp	go to state 266
    prime_bool_exp	go to state 131
    identifier	go to state 227
    strliteral	go to state 132
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 265

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 176)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 241)
    prime_bool_exp  ->  ari_exp .   (rule 244)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 245)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 246)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 249)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 250)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 253)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 254)

    CLOSE_PAR	shift, and go to state 424
    NE  	shift, and go to state 268
    EQ  	shift, and go to state 269
    GE  	shift, and go to state 245
    LE  	shift, and go to state 246
    GT  	shift, and go to state 247
    LT  	shift, and go to state 248
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    CLOSE_PAR	[reduce using rule 244 (prime_bool_exp)]
    $default	reduce using rule 244 (prime_bool_exp)

    ari_operator	go to state 239
    relation_operator	go to state 270



state 266

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    bool_exp  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 240)

    CLOSE_PAR	shift, and go to state 437
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273



state 267

    bool_exp  ->  NEGATION bool_exp .   (rule 237)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)


    $default	reduce using rule 237 (bool_exp)



state 268

    prime_bool_exp  ->  ari_exp NE . strliteral   (rule 246)
    prime_bool_exp  ->  ari_exp NE . POINTERNULL   (rule 250)
    prime_bool_exp  ->  ari_exp NE . charliteral   (rule 254)
    relation_operator  ->  NE .   (rule 257)

    POINTERNULL	shift, and go to state 438
    STRLITERAL	shift, and go to state 128
    CHARLITERAL	shift, and go to state 94

    POINTERNULL	[reduce using rule 257 (relation_operator)]
    CHARLITERAL	[reduce using rule 257 (relation_operator)]
    $default	reduce using rule 257 (relation_operator)

    strliteral	go to state 439
    charliteral	go to state 440



state 269

    prime_bool_exp  ->  ari_exp EQ . strliteral   (rule 245)
    prime_bool_exp  ->  ari_exp EQ . POINTERNULL   (rule 249)
    prime_bool_exp  ->  ari_exp EQ . charliteral   (rule 253)
    relation_operator  ->  EQ .   (rule 260)

    POINTERNULL	shift, and go to state 441
    STRLITERAL	shift, and go to state 128
    CHARLITERAL	shift, and go to state 94

    POINTERNULL	[reduce using rule 260 (relation_operator)]
    CHARLITERAL	[reduce using rule 260 (relation_operator)]
    $default	reduce using rule 260 (relation_operator)

    strliteral	go to state 442
    charliteral	go to state 443



state 270

    prime_bool_exp  ->  ari_exp relation_operator . ari_exp   (rule 241)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 444
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 271

    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 350)

    error	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300

    statement_bpar	go to state 445



state 272

    bool_exp  ->  bool_exp OR . bool_exp   (rule 239)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 123
    MY_TRUE	shift, and go to state 124
    MY_FALSE	shift, and go to state 125
    OPEN_PAR	shift, and go to state 126
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 127
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 129
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 446
    prime_bool_exp	go to state 131
    identifier	go to state 104
    strliteral	go to state 132
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 273

    bool_exp  ->  bool_exp AND . bool_exp   (rule 238)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 123
    MY_TRUE	shift, and go to state 124
    MY_FALSE	shift, and go to state 125
    OPEN_PAR	shift, and go to state 126
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 127
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 129
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 447
    prime_bool_exp	go to state 131
    identifier	go to state 104
    strliteral	go to state 132
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 274

    prime_bool_exp  ->  strliteral NE . ari_exp   (rule 248)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 448
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 275

    prime_bool_exp  ->  strliteral EQ . ari_exp   (rule 247)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 449
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 276

    statement  ->  AWAIT OPEN_PAR bool_exp . CLOSE_PAR   (rule 43)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)

    CLOSE_PAR	shift, and go to state 450
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273



state 277

    declaration  ->  STRUCT ID option_identifier_array_declaration .   (rule 80)

    $default	reduce using rule 80 (declaration)



state 278

    declaration  ->  STRUCT STRUCT_TYPE option_identifier_array_declaration .   (rule 82)

    $default	reduce using rule 82 (declaration)



state 279

    declaration  ->  UNION ID option_identifier_array_declaration .   (rule 81)

    $default	reduce using rule 81 (declaration)



state 280

    declaration  ->  UNION STRUCT_TYPE option_identifier_array_declaration .   (rule 83)

    $default	reduce using rule 83 (declaration)



state 281

    statement  ->  DEFINE ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 451
    UNSIGNED	shift, and go to state 346
    ID  	shift, and go to state 452
    STRUCT_TYPE	shift, and go to state 453

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 347
    sign_type_define	go to state 349
    all_type_define	go to state 454
    option_function_parameter_list	go to state 455



state 282

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 319)

    CLOSE_PAR	shift, and go to state 333



state 283

    inner_option_define_identifier  ->  COMMA . all_type_define identifier inner_option_define_identifier   (rule 289)
    inner_option_define_identifier  ->  COMMA . all_type_define inner_option_define_identifier   (rule 290)
    inner_option_define_identifier  ->  COMMA . ID identifier inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier inner_option_define_identifier   (rule 292)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE MUL identifier inner_option_define_identifier   (rule 293)
    inner_option_define_identifier  ->  COMMA . ID identifier ARRAY inner_option_define_identifier   (rule 294)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier ARRAY inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier ARRAY inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA . OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL inner_option_define_identifier   (rule 304)
    inner_option_define_identifier  ->  COMMA . error   (rule 305)

    error	shift, and go to state 456
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 457
    UNSIGNED	shift, and go to state 346
    ID  	shift, and go to state 458
    STRUCT_TYPE	shift, and go to state 459

    type_define	go to state 347
    sign_type_define	go to state 349
    all_type_define	go to state 460



state 284

    statement  ->  EXIST identifier inner_option_define_identifier . COLON OPEN_BPAR statement CLOSE_BPAR   (rule 63)

    COLON	shift, and go to state 461



state 285

    statement  ->  FRAME OPEN_PAR identifier . option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    COMMA	shift, and go to state 462

    $default	reduce using rule 325 (option_frame_identifier)

    option_frame_identifier	go to state 463



state 286

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 80)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 82)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)

    ID  	shift, and go to state 343
    STRUCT_TYPE	shift, and go to state 464



state 287

    type_define  ->  INTDECLARATION .   (rule 88)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 408

    MUL 	[reduce using rule 88 (type_define)]
    $default	reduce using rule 88 (type_define)



state 288

    type_define  ->  CHARDECLARATION .   (rule 90)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 409
    MUL 	shift, and go to state 410

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 289

    type_define  ->  VOIDDECLARATION .   (rule 92)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 230)

    MUL 	shift, and go to state 411

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)



state 290

    type_define  ->  FLOATDECLARATION .   (rule 89)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 413

    MUL 	[reduce using rule 89 (type_define)]
    $default	reduce using rule 89 (type_define)



state 291

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 213
    INTDECLARATION	shift, and go to state 414
    CHARDECLARATION	shift, and go to state 415
    VOIDDECLARATION	shift, and go to state 216
    FLOATDECLARATION	shift, and go to state 416
    OPEN_PAR	shift, and go to state 465
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 417
    SIGNED	shift, and go to state 220
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 152
    BNE 	shift, and go to state 91
    NEXT	shift, and go to state 178
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 221
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    ass_left	go to state 466
    leftaddrshift	go to state 69
    array	go to state 157
    array_cast_exp	go to state 223
    point_exp	go to state 158
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 161
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 163



state 292

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 79)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 234)

    OPEN_PAR	shift, and go to state 139
    MUL 	shift, and go to state 467
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 190
    identifier	go to state 191



state 293

    for_sta_init  ->  declaration .   (rule 338)

    $default	reduce using rule 338 (for_sta_init)



state 294

    for_sta_init  ->  ass_statement .   (rule 337)

    $default	reduce using rule 337 (for_sta_init)



state 295

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init . COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 336)

    COMMA	shift, and go to state 468



state 296

    for_statement  ->  FOR ari_exp TIMES . DO statement_bpar   (rule 335)

    DO  	shift, and go to state 469



state 297

    bool_par  ->  error CLOSE_PAR .   (rule 317)

    $default	reduce using rule 317 (bool_par)



state 298

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    bool_par  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 316)

    CLOSE_PAR	shift, and go to state 470
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273



state 299

    statement_bpar  ->  error . CLOSE_BPAR   (rule 315)

    CLOSE_BPAR	shift, and go to state 471



state 300

    statement_bpar  ->  OPEN_BPAR . statement CLOSE_BPAR   (rule 314)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 472
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 301

    while_statement  ->  WHILE bool_par statement_bpar .   (rule 334)

    $default	reduce using rule 334 (while_statement)



state 302

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  REPEAT OPEN_BPAR statement . CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 44)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_BPAR	shift, and go to state 473
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 303

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 136)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 195)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 213
    INTDECLARATION	shift, and go to state 214
    CHARDECLARATION	shift, and go to state 215
    VOIDDECLARATION	shift, and go to state 216
    FLOATDECLARATION	shift, and go to state 217
    OPEN_PAR	shift, and go to state 474
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 219
    SIGNED	shift, and go to state 220
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 221
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    ass_right	go to state 475
    rightaddrshift	go to state 308
    array	go to state 222
    array_cast_exp	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 476
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 477
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    strliteral	go to state 478
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 304

    option_struct_list_value  ->  OPEN_BPAR . ari_exp inner_option_list_value CLOSE_BPAR   (rule 199)
    option_struct_list_value  ->  OPEN_BPAR . strliteral inner_option_list_value CLOSE_BPAR   (rule 200)
    option_struct_list_value  ->  OPEN_BPAR . array_exp inner_option_list_value CLOSE_BPAR   (rule 201)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 479
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 480
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 481
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 482
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 305

    option_list_value  ->  OPEN_MPAR . ari_exp inner_option_list_value CLOSE_MPAR   (rule 196)
    option_list_value  ->  OPEN_MPAR . strliteral inner_option_list_value CLOSE_MPAR   (rule 197)
    option_list_value  ->  OPEN_MPAR . array_exp inner_option_list_value CLOSE_MPAR   (rule 198)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 479
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 483
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 484
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 485
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 306

    rightaddrshift  ->  MUL . OPEN_PAR leftaddrshift CLOSE_PAR   (rule 138)
    point_exp  ->  MUL . identifier   (rule 150)
    point_exp  ->  MUL . point_exp   (rule 151)
    point_exp  ->  MUL . array   (rule 152)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 154)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 155)

    OPEN_PAR	shift, and go to state 486
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 173

    array	go to state 174
    point_exp	go to state 175
    identifier	go to state 176



state 307

    output_statement  ->  DISPLAY OPEN_PAR ass_right . CLOSE_PAR   (rule 353)
    output_statement  ->  DISPLAY OPEN_PAR ass_right . option_output CLOSE_PAR   (rule 354)

    COMMA	shift, and go to state 487
    CLOSE_PAR	shift, and go to state 488

    CLOSE_PAR	[reduce using rule 355 (option_output)]
    $default	reduce using rule 355 (option_output)

    option_output	go to state 489



state 308

    ass_right  ->  rightaddrshift .   (rule 137)

    $default	reduce using rule 137 (ass_right)



state 309

    ass_right  ->  ari_exp .   (rule 132)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 132 (ass_right)

    ari_operator	go to state 239



state 310

    ass_right  ->  array_exp .   (rule 133)
    array_exp  ->  array_exp . CON array_exp   (rule 192)

    CON 	shift, and go to state 490

    $default	reduce using rule 133 (ass_right)



state 311

    array_exp  ->  option_list_value .   (rule 193)

    $default	reduce using rule 193 (array_exp)



state 312

    array_exp  ->  option_struct_list_value .   (rule 194)

    $default	reduce using rule 194 (array_exp)



state 313

    ass_right  ->  strliteral .   (rule 134)

    $default	reduce using rule 134 (ass_right)



state 314

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 160)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 350)

    THEN	shift, and go to state 491
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273



state 315

    struct_identifier  ->  STRUCT . ID   (rule 73)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 80)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 82)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)

    ID  	shift, and go to state 134
    STRUCT_TYPE	shift, and go to state 464



state 316

    type_define  ->  INTDECLARATION .   (rule 88)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 492

    MUL 	[reduce using rule 88 (type_define)]
    $default	reduce using rule 88 (type_define)



state 317

    type_define  ->  CHARDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 409
    MUL 	shift, and go to state 493

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 318

    type_define  ->  FLOATDECLARATION .   (rule 89)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 494

    MUL 	[reduce using rule 89 (type_define)]
    $default	reduce using rule 89 (type_define)



state 319

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 64)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 333)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 150
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    POINTERNULL	shift, and go to state 123
    STRUCT	shift, and go to state 315
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    MY_TRUE	shift, and go to state 124
    MY_FALSE	shift, and go to state 125
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 495
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 496
    VOIDDECLARATION	shift, and go to state 289
    FLOATDECLARATION	shift, and go to state 497
    OPEN_PAR	shift, and go to state 319
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 498
    SIGNED	shift, and go to state 321
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 152
    BNE 	shift, and go to state 91
    NEXT	shift, and go to state 52
    NEGATION	shift, and go to state 153
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 292
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    statement	go to state 154
    function	go to state 155
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 156
    leftaddrshift	go to state 69
    array	go to state 157
    array_cast_exp	go to state 223
    point_exp	go to state 158
    ari_exp	go to state 265
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    prime_bool_exp	go to state 160
    identifier	go to state 161
    strliteral	go to state 132
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 322
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 163



state 320

    sign_declaration  ->  UNSIGNED . declaration   (rule 76)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

    STRUCT	shift, and go to state 167
    UNION	shift, and go to state 168
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 499
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 500
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 169
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 170
    type_define	go to state 66



state 321

    sign_declaration  ->  SIGNED . declaration   (rule 75)
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)

    STRUCT	shift, and go to state 167
    UNION	shift, and go to state 168
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 501
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 502
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 169
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 171
    type_define	go to state 66



state 322

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 331)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 332)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 333)

    CLOSE_PAR	shift, and go to state 503
    OR  	shift, and go to state 335
    AND 	shift, and go to state 336



state 323

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    point_exp  ->  MUL . identifier   (rule 150)
    point_exp  ->  MUL . point_exp   (rule 151)
    point_exp  ->  MUL . array   (rule 152)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 154)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 155)

    OPEN_PAR	shift, and go to state 172
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 173

    array	go to state 174
    point_exp	go to state 175
    identifier	go to state 504



state 324

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    identifier  ->  ID .   (rule 318)

    OPEN_MPAR	shift, and go to state 505

    $default	reduce using rule 318 (identifier)



state 325

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    point_exp  ->  MUL identifier .   (rule 150)

    CLOSE_PAR	shift, and go to state 506

    CLOSE_PAR	[reduce using rule 150 (point_exp)]
    $default	reduce using rule 150 (point_exp)



state 326

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 333)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 123
    STRUCT	shift, and go to state 213
    MY_TRUE	shift, and go to state 124
    MY_FALSE	shift, and go to state 125
    INTDECLARATION	shift, and go to state 214
    CHARDECLARATION	shift, and go to state 215
    VOIDDECLARATION	shift, and go to state 216
    FLOATDECLARATION	shift, and go to state 217
    OPEN_PAR	shift, and go to state 507
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 219
    SIGNED	shift, and go to state 220
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 153
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 221
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 222
    array_cast_exp	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 265
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    prime_bool_exp	go to state 160
    identifier	go to state 227
    strliteral	go to state 132
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 508
    struct_member_exp	go to state 228



state 327

    imply_pre  ->  NEGATION imply_pre .   (rule 330)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 331)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 332)


    $default	reduce using rule 330 (imply_pre)



state 328

    statement  ->  OPEN_PAR statement CLOSE_PAR .   (rule 64)

    $default	reduce using rule 64 (statement)



state 329

    ass_left  ->  OPEN_PAR ass_left CLOSE_PAR .   (rule 114)

    $default	reduce using rule 114 (ass_left)



state 330

    array  ->  OPEN_PAR array CLOSE_PAR .   (rule 140)

    $default	reduce using rule 140 (array)



state 331

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR .   (rule 156)

    OPEN_MPAR	shift, and go to state 509

    $default	reduce using rule 156 (point_exp)



state 332

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 377)

    IMPLY	shift, and go to state 510



state 333

    identifier  ->  OPEN_PAR identifier CLOSE_PAR .   (rule 319)

    $default	reduce using rule 319 (identifier)



state 334

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)

    IMPLY	shift, and go to state 511



state 335

    imply_pre  ->  imply_pre OR . imply_pre   (rule 332)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 123
    MY_TRUE	shift, and go to state 124
    MY_FALSE	shift, and go to state 125
    OPEN_PAR	shift, and go to state 326
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 153
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 129
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    prime_bool_exp	go to state 160
    identifier	go to state 104
    strliteral	go to state 132
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 512
    struct_member_exp	go to state 108



state 336

    imply_pre  ->  imply_pre AND . imply_pre   (rule 331)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 123
    MY_TRUE	shift, and go to state 124
    MY_FALSE	shift, and go to state 125
    OPEN_PAR	shift, and go to state 326
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 153
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 129
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    prime_bool_exp	go to state 160
    identifier	go to state 104
    strliteral	go to state 132
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 513
    struct_member_exp	go to state 108



state 337

    struct_member_exp  ->  OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 381)

    $default	reduce using rule 381 (struct_member_exp)



state 338

    option_projection  ->  COMMA . statement option_projection   (rule 328)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 514
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 339

    statement  ->  OPEN_BPAR statement CLOSE_BPAR . PROJECTION statement_bpar   (rule 58)

    PROJECTION	shift, and go to state 515



state 340

    statement  ->  OPEN_BPAR statement option_projection . CLOSE_BPAR PROJECTION statement_bpar   (rule 57)

    CLOSE_BPAR	shift, and go to state 516



state 341

    statement  ->  FUNCTION ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 59)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 451
    UNSIGNED	shift, and go to state 346
    ID  	shift, and go to state 452
    STRUCT_TYPE	shift, and go to state 453

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 347
    sign_type_define	go to state 349
    all_type_define	go to state 454
    option_function_parameter_list	go to state 517



state 342

    function  ->  EXTERN ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 70)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 346
    ADDRESS	shift, and go to state 367
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 368
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    $default	reduce using rule 309 (option_function_identifier)

    function	go to state 95
    type_define	go to state 347
    ass_right	go to state 369
    rightaddrshift	go to state 308
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    sign_type_define	go to state 349
    all_type_define	go to state 370
    option_function_identifier	go to state 518
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 343

    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 80)

    OPEN_PAR	shift, and go to state 139
    MUL 	shift, and go to state 188
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 277
    identifier	go to state 191



state 344

    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 81)

    OPEN_PAR	shift, and go to state 139
    MUL 	shift, and go to state 188
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 279
    identifier	go to state 191



state 345

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    OPEN_PAR	shift, and go to state 139
    MUL 	shift, and go to state 519
    ID  	shift, and go to state 520

    identifier	go to state 521



state 346

    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 261)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 262)

    INTDECLARATION	shift, and go to state 522
    CHARDECLARATION	shift, and go to state 523



state 347

    all_type_define  ->  type_define .   (rule 264)

    $default	reduce using rule 264 (all_type_define)



state 348

    point_exp  ->  MUL OPEN_PAR ari_exp . CLOSE_PAR   (rule 155)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    CLOSE_PAR	shift, and go to state 524
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ari_operator	go to state 239



state 349

    all_type_define  ->  sign_type_define .   (rule 263)

    $default	reduce using rule 263 (all_type_define)



state 350

    point_exp  ->  MUL OPEN_PAR all_type_define . MUL CLOSE_PAR ari_exp   (rule 154)

    MUL 	shift, and go to state 525



state 351

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 64)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 150
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    POINTERNULL	shift, and go to state 123
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    MY_TRUE	shift, and go to state 124
    MY_FALSE	shift, and go to state 125
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 526
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 527
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 528
    OPEN_PAR	shift, and go to state 151
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 529
    SIGNED	shift, and go to state 50
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 152
    BNE 	shift, and go to state 91
    NEXT	shift, and go to state 52
    NEGATION	shift, and go to state 153
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 59
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    statement	go to state 154
    function	go to state 155
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 156
    leftaddrshift	go to state 69
    array	go to state 157
    array_cast_exp	go to state 97
    point_exp	go to state 158
    ari_exp	go to state 129
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    prime_bool_exp	go to state 160
    identifier	go to state 161
    strliteral	go to state 132
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 162
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 163



state 352

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  NEXT OPEN_PAR statement . CLOSE_PAR   (rule 40)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_PAR	shift, and go to state 530
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 353

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    ass_left  ->  array .   (rule 112)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 140)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 376)

    DOT 	shift, and go to state 201
    OPEN_PAR	shift, and go to state 202
    CLOSE_PAR	shift, and go to state 330
    IMPLY	shift, and go to state 203

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    $default	reduce using rule 112 (ass_left)



state 354

    ass_left  ->  point_exp .   (rule 113)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 156)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 380)

    DOT 	shift, and go to state 204
    CLOSE_PAR	shift, and go to state 331
    IMPLY	shift, and go to state 205

    CLOSE_PAR	[reduce using rule 113 (ass_left)]
    $default	reduce using rule 113 (ass_left)



state 355

    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)

    CLOSE_PAR	shift, and go to state 332



state 356

    ass_left  ->  identifier .   (rule 110)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 319)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . DOT function   (rule 378)
    struct_member_exp  ->  identifier . IMPLY function   (rule 379)

    DOT 	shift, and go to state 206
    CLOSE_PAR	shift, and go to state 333
    IMPLY	shift, and go to state 207

    CLOSE_PAR	[reduce using rule 110 (ass_left)]
    $default	reduce using rule 110 (ass_left)



state 357

    ass_left  ->  struct_member_exp .   (rule 111)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 381)

    CLOSE_PAR	shift, and go to state 337

    CLOSE_PAR	[reduce using rule 111 (ass_left)]
    $default	reduce using rule 111 (ass_left)



state 358

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    OPEN_PAR	shift, and go to state 531
    ADDRESS	shift, and go to state 89
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 178
    ID  	shift, and go to state 173

    ass_left	go to state 466
    leftaddrshift	go to state 69
    array	go to state 532
    point_exp	go to state 354
    address_exp	go to state 355
    identifier	go to state 356
    struct_member_exp	go to state 357



state 359

    statement  ->  LENGTH OPEN_PAR ari_exp . CLOSE_PAR   (rule 48)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    CLOSE_PAR	shift, and go to state 533
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ari_operator	go to state 239



state 360

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    OPEN_PAR	shift, and go to state 229
    ADDRESS	shift, and go to state 89
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 173

    array	go to state 426
    point_exp	go to state 427
    address_exp	go to state 355
    identifier	go to state 429
    struct_member_exp	go to state 430



state 361

    input_statement  ->  REQUEST OPEN_PAR array . CLOSE_PAR   (rule 359)
    input_statement  ->  REQUEST OPEN_PAR array . option_input CLOSE_PAR   (rule 360)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 376)

    DOT 	shift, and go to state 201
    COMMA	shift, and go to state 534
    CLOSE_PAR	shift, and go to state 535
    IMPLY	shift, and go to state 203

    CLOSE_PAR	[reduce using rule 362 (option_input)]
    $default	reduce using rule 362 (option_input)

    option_input	go to state 536



state 362

    input_statement  ->  REQUEST OPEN_PAR identifier . CLOSE_PAR   (rule 357)
    input_statement  ->  REQUEST OPEN_PAR identifier . option_input CLOSE_PAR   (rule 358)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . DOT function   (rule 378)
    struct_member_exp  ->  identifier . IMPLY function   (rule 379)

    DOT 	shift, and go to state 206
    COMMA	shift, and go to state 534
    CLOSE_PAR	shift, and go to state 537
    IMPLY	shift, and go to state 207

    CLOSE_PAR	[reduce using rule 362 (option_input)]
    $default	reduce using rule 362 (option_input)

    option_input	go to state 538



state 363

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 361)

    CLOSE_PAR	shift, and go to state 539



state 364

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  FINAL OPEN_PAR statement . CLOSE_PAR   (rule 53)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_PAR	shift, and go to state 540
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 365

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  KEEP OPEN_PAR statement . CLOSE_PAR   (rule 41)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_PAR	shift, and go to state 541
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 366

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  ALWAYS OPEN_PAR statement . CLOSE_PAR   (rule 42)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_PAR	shift, and go to state 542
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 367

<<<<<<< HEAD
    address_exp  ->  ADDRESS . struct_member_exp   (rule 206)
    address_exp  ->  ADDRESS . identifier   (rule 207)
    address_exp  ->  ADDRESS . array   (rule 208)
    address_exp  ->  ADDRESS . address_exp   (rule 209)
    option_function_identifier  ->  ADDRESS . error   (rule 309)
=======
    address_exp  ->  ADDRESS . identifier   (rule 207)
    address_exp  ->  ADDRESS . array   (rule 208)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 209)
    address_exp  ->  ADDRESS . address_exp   (rule 210)
    option_function_identifier  ->  ADDRESS . error   (rule 310)
>>>>>>> 9ebb173a31c1cef6348212635bf5307c2530de39

    error	shift, and go to state 543
    OPEN_PAR	shift, and go to state 229
    ADDRESS	shift, and go to state 89
    MUL 	shift, and go to state 51
    ID  	shift, and go to state 173

    array	go to state 230
    point_exp	go to state 231
    address_exp	go to state 232
    identifier	go to state 233
    struct_member_exp	go to state 234



state 368

    option_function_identifier  ->  STRUCT_TYPE .   (rule 308)

    $default	reduce using rule 308 (option_function_identifier)



state 369

    option_function_identifier  ->  ass_right . inner_option_function_identifier   (rule 306)

    COMMA	shift, and go to state 544

    $default	reduce using rule 312 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 545



state 370

    option_function_identifier  ->  all_type_define .   (rule 307)

    $default	reduce using rule 307 (option_function_identifier)



state 371

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 69)

    CLOSE_PAR	shift, and go to state 546



state 372

    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 139)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 547
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 548
    ari_operator	go to state 239



state 373

    option_identifier_array_declaration  ->  MUL option_identifier_array_declaration .   (rule 101)

    $default	reduce using rule 101 (option_identifier_array_declaration)



state 374

    option_identifier_array_declaration  ->  ID ARRAY . ASS_P array_exp inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID ARRAY . ASS_P strliteral inner_option_identifier_array_declaration   (rule 98)

    ASS_P	shift, and go to state 549



state 375

    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 550
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 376

    inner_option_identifier_array_declaration  ->  COMMA . option_identifier_array_declaration   (rule 102)
    inner_option_identifier_array_declaration  ->  COMMA . error   (rule 103)

    error	shift, and go to state 551
    OPEN_PAR	shift, and go to state 139
    MUL 	shift, and go to state 188
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 552
    identifier	go to state 191



state 377

    option_identifier_array_declaration  ->  identifier ASS_P . ass_right inner_option_identifier_array_declaration   (rule 96)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    ass_right	go to state 553
    rightaddrshift	go to state 308
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 378

    option_identifier_array_declaration  ->  identifier inner_option_identifier_array_declaration .   (rule 94)

    $default	reduce using rule 94 (option_identifier_array_declaration)



state 379

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement CHOP statement .   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)

    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195

    $default	reduce using rule 32 (statement)



state 380

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement OR statement .   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)

    AND 	shift, and go to state 195

    $default	reduce using rule 31 (statement)



state 381

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  statement PARALLEL statement .   (rule 54)

    AND 	shift, and go to state 195

    $default	reduce using rule 54 (statement)



state 382

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement AND statement .   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)


    $default	reduce using rule 30 (statement)



state 383

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration . CLOSE_BPAR   (rule 72)

    CLOSE_BPAR	shift, and go to state 554



state 384

    option_struct_declaration  ->  sign_declaration .   (rule 65)
    option_struct_declaration  ->  sign_declaration . AND option_struct_declaration   (rule 66)

    AND 	shift, and go to state 555

    $default	reduce using rule 65 (option_struct_declaration)



state 385

    ass_statement  ->  ass_left assign_operator ass_right .   (rule 109)

    $default	reduce using rule 109 (ass_statement)



state 386

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)

    OPEN_PAR	shift, and go to state 386
    ID  	shift, and go to state 173

    array	go to state 556
    identifier	go to state 282



state 387

    struct_member_exp  ->  array DOT array . option_struct_member_exp   (rule 369)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 559



state 388

    struct_member_exp  ->  array DOT identifier . option_struct_member_exp   (rule 366)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 560



state 389

    function  ->  array OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 71)

    CLOSE_PAR	shift, and go to state 561



state 390

    struct_member_exp  ->  array IMPLY array . option_struct_member_exp   (rule 376)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 562



state 391

    struct_member_exp  ->  array IMPLY identifier . option_struct_member_exp   (rule 372)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 563



state 392

    struct_member_exp  ->  point_exp DOT array . option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 564



state 393

    struct_member_exp  ->  point_exp DOT identifier . option_struct_member_exp   (rule 367)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 565



state 394

    struct_member_exp  ->  point_exp IMPLY array . option_struct_member_exp   (rule 380)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 566



state 395

    struct_member_exp  ->  point_exp IMPLY identifier . option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 567



state 396

    struct_member_exp  ->  identifier DOT function .   (rule 378)

    $default	reduce using rule 378 (struct_member_exp)



state 397

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    struct_member_exp  ->  identifier DOT array . option_struct_member_exp   (rule 368)

    DOT 	shift, and go to state 557
    OPEN_PAR	shift, and go to state 202
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 568



state 398

    struct_member_exp  ->  identifier DOT identifier . option_struct_member_exp   (rule 365)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 569



state 399

    struct_member_exp  ->  identifier IMPLY function .   (rule 379)

    $default	reduce using rule 379 (struct_member_exp)



state 400

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    struct_member_exp  ->  identifier IMPLY array . option_struct_member_exp   (rule 375)

    DOT 	shift, and go to state 557
    OPEN_PAR	shift, and go to state 202
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 570



state 401

    struct_member_exp  ->  identifier IMPLY identifier . option_struct_member_exp   (rule 371)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 571



state 402

    complexProposition  ->  DEFINE ID COLON prime_bool_exp .   (rule 25)

    $default	reduce using rule 25 (complexProposition)



state 403

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    poptional_projection  ->  COMMA complexProposition . poptional_projection   (rule 28)

    COMMA	shift, and go to state 210
    CHOP	shift, and go to state 116
    OR  	shift, and go to state 117
    AND 	shift, and go to state 118
    IFF 	shift, and go to state 119
    PROPIMPLY	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 572



state 404

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR . PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    PROJECTION	shift, and go to state 573



state 405

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 160)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 574
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 406

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 233)

    MUL 	shift, and go to state 575



state 407

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 212)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 576
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 408

    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 578
    MUL 	shift, and go to state 579



state 409

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 214)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 580
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 410

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 581
    MUL 	shift, and go to state 582



state 411

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 583
    MUL 	shift, and go to state 584



state 412

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 213)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 585
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 413

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 586
    MUL 	shift, and go to state 587



state 414

    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 588



state 415

    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 409
    MUL 	shift, and go to state 589



state 416

    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 590



state 417

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

    INTDECLARATION	shift, and go to state 591
    CHARDECLARATION	shift, and go to state 592



state 418

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 593
    MUL 	shift, and go to state 594



state 419

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 595
    MUL 	shift, and go to state 596



state 420

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)

    CLOSE_PAR	shift, and go to state 597



state 421

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)

    CLOSE_PAR	shift, and go to state 598



state 422

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 599
    MUL 	shift, and go to state 600



state 423

    array_cast_exp  ->  OPEN_PAR array_cast_exp CLOSE_PAR .   (rule 146)

    $default	reduce using rule 146 (array_cast_exp)



state 424

    member_in_exp  ->  OPEN_PAR ari_exp CLOSE_PAR .   (rule 176)

    $default	reduce using rule 176 (member_in_exp)



state 425

    address_exp  ->  OPEN_PAR address_exp CLOSE_PAR .   (rule 211)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 377)

    IMPLY	shift, and go to state 510

    IMPLY	[reduce using rule 211 (address_exp)]
    $default	reduce using rule 211 (address_exp)



state 426

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 140)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 376)

    DOT 	shift, and go to state 201
    CLOSE_PAR	shift, and go to state 330
    IMPLY	shift, and go to state 203



state 427

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 156)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 370)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 374)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 380)

    DOT 	shift, and go to state 204
    CLOSE_PAR	shift, and go to state 331
    IMPLY	shift, and go to state 205



state 428

    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 211)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)

    CLOSE_PAR	shift, and go to state 425



state 429

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 319)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . DOT function   (rule 378)
    struct_member_exp  ->  identifier . IMPLY function   (rule 379)

    DOT 	shift, and go to state 206
    CLOSE_PAR	shift, and go to state 333
    IMPLY	shift, and go to state 207



state 430

    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 381)

    CLOSE_PAR	shift, and go to state 337



state 431

    ari_exp  ->  ari_exp ari_operator simple_ari_exp .   (rule 159)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 166)

    INTER_OR	shift, and go to state 240
    CON 	shift, and go to state 241
    ADDRESS	shift, and go to state 242
    LST 	shift, and go to state 249
    RST 	shift, and go to state 250
    MUL 	shift, and go to state 251
    DIV 	shift, and go to state 252
    MOD 	shift, and go to state 253

    INTER_OR	[reduce using rule 159 (ari_exp)]
    CON 	[reduce using rule 159 (ari_exp)]
    ADDRESS	[reduce using rule 159 (ari_exp)]
    LST 	[reduce using rule 159 (ari_exp)]
    RST 	[reduce using rule 159 (ari_exp)]
    MUL 	[reduce using rule 159 (ari_exp)]
    DIV 	[reduce using rule 159 (ari_exp)]
    MOD 	[reduce using rule 159 (ari_exp)]
    $default	reduce using rule 159 (ari_exp)

    bi_operator	go to state 254



state 432

    simple_ari_exp  ->  simple_ari_exp bi_operator member_in_exp .   (rule 166)

    $default	reduce using rule 166 (simple_ari_exp)



state 433

    ari_exp  ->  simple_ari_exp relation_operator ari_exp .   (rule 158)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ADD 	[reduce using rule 158 (ari_exp)]
    SUB 	[reduce using rule 158 (ari_exp)]
    $default	reduce using rule 158 (ari_exp)

    ari_operator	go to state 239



state 434

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR . OPEN_BPAR case_par CLOSE_BPAR   (rule 344)

    OPEN_BPAR	shift, and go to state 601



state 435

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    prime_bool_exp  ->  POINTERNULL NE ari_exp .   (rule 252)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 252 (prime_bool_exp)

    ari_operator	go to state 239



state 436

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    prime_bool_exp  ->  POINTERNULL EQ ari_exp .   (rule 251)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 251 (prime_bool_exp)

    ari_operator	go to state 239



state 437

    bool_exp  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 240)

    $default	reduce using rule 240 (bool_exp)



state 438

    prime_bool_exp  ->  ari_exp NE POINTERNULL .   (rule 250)

    $default	reduce using rule 250 (prime_bool_exp)



state 439

    prime_bool_exp  ->  ari_exp NE strliteral .   (rule 246)

    $default	reduce using rule 246 (prime_bool_exp)



state 440

    prime_bool_exp  ->  ari_exp NE charliteral .   (rule 254)

    $default	reduce using rule 254 (prime_bool_exp)



state 441

    prime_bool_exp  ->  ari_exp EQ POINTERNULL .   (rule 249)

    $default	reduce using rule 249 (prime_bool_exp)



state 442

    prime_bool_exp  ->  ari_exp EQ strliteral .   (rule 245)

    $default	reduce using rule 245 (prime_bool_exp)



state 443

    prime_bool_exp  ->  ari_exp EQ charliteral .   (rule 253)

    $default	reduce using rule 253 (prime_bool_exp)



state 444

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    prime_bool_exp  ->  ari_exp relation_operator ari_exp .   (rule 241)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 241 (prime_bool_exp)

    ari_operator	go to state 239



state 445

    if_statement  ->  IF bool_exp THEN statement_bpar . option_else_statement   (rule 350)

    ELSE	shift, and go to state 602

    $default	reduce using rule 352 (option_else_statement)

    option_else_statement	go to state 603



state 446

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    bool_exp  ->  bool_exp OR bool_exp .   (rule 239)

    AND 	shift, and go to state 273

    $default	reduce using rule 239 (bool_exp)



state 447

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp AND bool_exp .   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)


    $default	reduce using rule 238 (bool_exp)



state 448

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    prime_bool_exp  ->  strliteral NE ari_exp .   (rule 248)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 248 (prime_bool_exp)

    ari_operator	go to state 239



state 449

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    prime_bool_exp  ->  strliteral EQ ari_exp .   (rule 247)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 247 (prime_bool_exp)

    ari_operator	go to state 239



state 450

    statement  ->  AWAIT OPEN_PAR bool_exp CLOSE_PAR .   (rule 43)

    $default	reduce using rule 43 (statement)



state 451

    option_function_parameter_list  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 287)

    MUL 	shift, and go to state 604



state 452

    option_function_parameter_list  ->  ID . identifier inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  ID . MUL identifier inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  ID . MUL MUL identifier inner_option_define_identifier   (rule 273)
    option_function_parameter_list  ->  ID . identifier ARRAY inner_option_define_identifier   (rule 274)
    option_function_parameter_list  ->  ID . inner_option_define_identifier   (rule 278)
    option_function_parameter_list  ->  ID . MUL inner_option_define_identifier   (rule 279)
    option_function_parameter_list  ->  ID . MUL MUL inner_option_define_identifier   (rule 280)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 139
    MUL 	shift, and go to state 605
    ID  	shift, and go to state 140

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 606
    identifier	go to state 607



state 453

    option_function_parameter_list  ->  STRUCT_TYPE . identifier inner_option_define_identifier   (rule 267)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 268)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL identifier inner_option_define_identifier   (rule 269)
    option_function_parameter_list  ->  STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 270)
    option_function_parameter_list  ->  STRUCT_TYPE . inner_option_define_identifier   (rule 275)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL inner_option_define_identifier   (rule 276)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL inner_option_define_identifier   (rule 277)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 139
    MUL 	shift, and go to state 608
    ID  	shift, and go to state 140

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 609
    identifier	go to state 610



state 454

    option_function_parameter_list  ->  all_type_define . identifier inner_option_define_identifier   (rule 265)
    option_function_parameter_list  ->  all_type_define . inner_option_define_identifier   (rule 266)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 282)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)
    option_function_parameter_list  ->  all_type_define . MUL identifier inner_option_define_identifier   (rule 284)
    option_function_parameter_list  ->  all_type_define . MUL inner_option_define_identifier   (rule 285)
    option_function_parameter_list  ->  all_type_define . MUL MUL identifier inner_option_define_identifier   (rule 286)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 139
    MUL 	shift, and go to state 611
    ID  	shift, and go to state 140

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 612
    identifier	go to state 613



state 455

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    CLOSE_PAR	shift, and go to state 614



state 456

    inner_option_define_identifier  ->  COMMA error .   (rule 305)

    $default	reduce using rule 305 (inner_option_define_identifier)



state 457

    inner_option_define_identifier  ->  COMMA OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)

    MUL 	shift, and go to state 615



state 458

    inner_option_define_identifier  ->  COMMA ID . identifier inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA ID . identifier ARRAY inner_option_define_identifier   (rule 294)

    OPEN_PAR	shift, and go to state 139
    ID  	shift, and go to state 140

    identifier	go to state 616



state 459

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier inner_option_define_identifier   (rule 292)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 293)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 295)

    OPEN_PAR	shift, and go to state 139
    MUL 	shift, and go to state 617
    ID  	shift, and go to state 140

    identifier	go to state 618



state 460

    inner_option_define_identifier  ->  COMMA all_type_define . identifier inner_option_define_identifier   (rule 289)
    inner_option_define_identifier  ->  COMMA all_type_define . inner_option_define_identifier   (rule 290)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL inner_option_define_identifier   (rule 304)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 139
    MUL 	shift, and go to state 619
    ID  	shift, and go to state 140

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 620
    identifier	go to state 621



state 461

    statement  ->  EXIST identifier inner_option_define_identifier COLON . OPEN_BPAR statement CLOSE_BPAR   (rule 63)

    OPEN_BPAR	shift, and go to state 622



state 462

    option_frame_identifier  ->  COMMA . identifier option_frame_identifier   (rule 324)
    option_frame_identifier  ->  COMMA . error   (rule 326)

    error	shift, and go to state 623
    OPEN_PAR	shift, and go to state 139
    ID  	shift, and go to state 140

    identifier	go to state 624



state 463

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier . CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    CLOSE_PAR	shift, and go to state 625



state 464

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 82)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 233)

    OPEN_PAR	shift, and go to state 139
    MUL 	shift, and go to state 626
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 278
    identifier	go to state 191



state 465

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 213
    INTDECLARATION	shift, and go to state 627
    CHARDECLARATION	shift, and go to state 628
    VOIDDECLARATION	shift, and go to state 216
    FLOATDECLARATION	shift, and go to state 629
    OPEN_PAR	shift, and go to state 465
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 630
    SIGNED	shift, and go to state 220
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEXT	shift, and go to state 178
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 221
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    ass_left	go to state 466
    leftaddrshift	go to state 69
    array	go to state 157
    array_cast_exp	go to state 223
    point_exp	go to state 158
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 161
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 163



state 466

    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 114)

    CLOSE_PAR	shift, and go to state 329



state 467

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 234)

    OPEN_PAR	shift, and go to state 139
    CLOSE_PAR	shift, and go to state 599
    MUL 	shift, and go to state 631
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 373
    identifier	go to state 191



state 468

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA . for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 336)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 123
    MY_TRUE	shift, and go to state 124
    MY_FALSE	shift, and go to state 125
    OPEN_PAR	shift, and go to state 126
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 127
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    $default	reduce using rule 341 (for_sta_condition)

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 129
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 632
    prime_bool_exp	go to state 131
    identifier	go to state 104
    strliteral	go to state 132
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    for_sta_condition	go to state 633
    struct_member_exp	go to state 108



state 469

    for_statement  ->  FOR ari_exp TIMES DO . statement_bpar   (rule 335)

    error	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300

    statement_bpar	go to state 634



state 470

    bool_par  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 316)

    $default	reduce using rule 316 (bool_par)



state 471

    statement_bpar  ->  error CLOSE_BPAR .   (rule 315)

    $default	reduce using rule 315 (statement_bpar)



state 472

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement_bpar  ->  OPEN_BPAR statement . CLOSE_BPAR   (rule 314)

    CLOSE_BPAR	shift, and go to state 635
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 473

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR . UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

    UNTIL	shift, and go to state 636



state 474

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 136)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 195)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 213
    INTDECLARATION	shift, and go to state 414
    CHARDECLARATION	shift, and go to state 415
    VOIDDECLARATION	shift, and go to state 216
    FLOATDECLARATION	shift, and go to state 416
    OPEN_PAR	shift, and go to state 474
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 417
    SIGNED	shift, and go to state 220
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 221
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    ass_right	go to state 475
    rightaddrshift	go to state 308
    array	go to state 222
    array_cast_exp	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 476
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 477
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    strliteral	go to state 478
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 475

    ass_right  ->  OPEN_PAR ass_right . CLOSE_PAR   (rule 136)

    CLOSE_PAR	shift, and go to state 637



state 476

    ass_right  ->  ari_exp .   (rule 132)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 176)

    CLOSE_PAR	shift, and go to state 424
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    CLOSE_PAR	[reduce using rule 132 (ass_right)]
    $default	reduce using rule 132 (ass_right)

    ari_operator	go to state 239



state 477

    ass_right  ->  array_exp .   (rule 133)
    array_exp  ->  array_exp . CON array_exp   (rule 192)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 195)

    CLOSE_PAR	shift, and go to state 638
    CON 	shift, and go to state 490

    CLOSE_PAR	[reduce using rule 133 (ass_right)]
    $default	reduce using rule 133 (ass_right)



state 478

    ass_right  ->  strliteral .   (rule 134)
    ass_right  ->  OPEN_PAR strliteral . CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)

    CLOSE_PAR	shift, and go to state 639

    CLOSE_PAR	[reduce using rule 134 (ass_right)]
    $default	reduce using rule 134 (ass_right)



state 479

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 195)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 213
    INTDECLARATION	shift, and go to state 214
    CHARDECLARATION	shift, and go to state 215
    VOIDDECLARATION	shift, and go to state 216
    FLOATDECLARATION	shift, and go to state 217
    OPEN_PAR	shift, and go to state 640
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 219
    SIGNED	shift, and go to state 220
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 221
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 222
    array_cast_exp	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 641
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 480

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    option_struct_list_value  ->  OPEN_BPAR ari_exp . inner_option_list_value CLOSE_BPAR   (rule 199)

    COMMA	shift, and go to state 642
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 205 (inner_option_list_value)

    ari_operator	go to state 239
    inner_option_list_value	go to state 643



state 481

    array_exp  ->  array_exp . CON array_exp   (rule 192)
    option_struct_list_value  ->  OPEN_BPAR array_exp . inner_option_list_value CLOSE_BPAR   (rule 201)

    COMMA	shift, and go to state 642
    CON 	shift, and go to state 490

    $default	reduce using rule 205 (inner_option_list_value)

    inner_option_list_value	go to state 644



state 482

    option_struct_list_value  ->  OPEN_BPAR strliteral . inner_option_list_value CLOSE_BPAR   (rule 200)

    COMMA	shift, and go to state 642

    $default	reduce using rule 205 (inner_option_list_value)

    inner_option_list_value	go to state 645



state 483

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    option_list_value  ->  OPEN_MPAR ari_exp . inner_option_list_value CLOSE_MPAR   (rule 196)

    COMMA	shift, and go to state 642
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 205 (inner_option_list_value)

    ari_operator	go to state 239
    inner_option_list_value	go to state 646



state 484

    array_exp  ->  array_exp . CON array_exp   (rule 192)
    option_list_value  ->  OPEN_MPAR array_exp . inner_option_list_value CLOSE_MPAR   (rule 198)

    COMMA	shift, and go to state 642
    CON 	shift, and go to state 490

    $default	reduce using rule 205 (inner_option_list_value)

    inner_option_list_value	go to state 647



state 485

    option_list_value  ->  OPEN_MPAR strliteral . inner_option_list_value CLOSE_MPAR   (rule 197)

    COMMA	shift, and go to state 642

    $default	reduce using rule 205 (inner_option_list_value)

    inner_option_list_value	go to state 648



state 486

    rightaddrshift  ->  MUL OPEN_PAR . leftaddrshift CLOSE_PAR   (rule 138)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 154)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 155)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 649
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 346
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    type_define	go to state 347
    leftaddrshift	go to state 650
    array	go to state 222
    array_cast_exp	go to state 97
    point_exp	go to state 224
    ari_exp	go to state 348
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    sign_type_define	go to state 349
    all_type_define	go to state 350
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 487

    option_output  ->  COMMA . ass_right option_output   (rule 356)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    ass_right	go to state 651
    rightaddrshift	go to state 308
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 488

    output_statement  ->  DISPLAY OPEN_PAR ass_right CLOSE_PAR .   (rule 353)

    $default	reduce using rule 353 (output_statement)



state 489

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output . CLOSE_PAR   (rule 354)

    CLOSE_PAR	shift, and go to state 652



state 490

    array_exp  ->  array_exp CON . array_exp   (rule 192)

    OPEN_PAR	shift, and go to state 653
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305

    array_exp	go to state 654
    option_list_value	go to state 311
    option_struct_list_value	go to state 312



state 491

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 160)
    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 350)

    error	shift, and go to state 299
    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    OPEN_BPAR	shift, and go to state 300
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 574
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    statement_bpar	go to state 445
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 492

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 655
    MUL 	shift, and go to state 579



state 493

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 656
    MUL 	shift, and go to state 582



state 494

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 657
    MUL 	shift, and go to state 587



state 495

    type_define  ->  INTDECLARATION .   (rule 88)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 658

    MUL 	[reduce using rule 88 (type_define)]
    $default	reduce using rule 88 (type_define)



state 496

    type_define  ->  CHARDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 409
    MUL 	shift, and go to state 659

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 497

    type_define  ->  FLOATDECLARATION .   (rule 89)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 660

    MUL 	[reduce using rule 89 (type_define)]
    $default	reduce using rule 89 (type_define)



state 498

    sign_declaration  ->  UNSIGNED . declaration   (rule 76)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

    STRUCT	shift, and go to state 167
    UNION	shift, and go to state 168
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 661
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 662
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 169
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 170
    type_define	go to state 66



state 499

    type_define  ->  INTDECLARATION .   (rule 88)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 593
    MUL 	shift, and go to state 594

    MUL 	[reduce using rule 88 (type_define)]
    $default	reduce using rule 88 (type_define)



state 500

    type_define  ->  CHARDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 595
    MUL 	shift, and go to state 663

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 501

    type_define  ->  INTDECLARATION .   (rule 88)
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)

    CLOSE_PAR	shift, and go to state 597

    $default	reduce using rule 88 (type_define)



state 502

    type_define  ->  CHARDECLARATION .   (rule 90)
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)

    CLOSE_PAR	shift, and go to state 598

    $default	reduce using rule 90 (type_define)



state 503

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 333)

    IMPLY	shift, and go to state 511

    $default	reduce using rule 333 (imply_pre)



state 504

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    point_exp  ->  MUL identifier .   (rule 150)

    CLOSE_PAR	shift, and go to state 664

    CLOSE_PAR	[reduce using rule 150 (point_exp)]
    $default	reduce using rule 150 (point_exp)



state 505

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 665
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 506

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)

    OPEN_PAR	shift, and go to state 666



state 507

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 333)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 123
    STRUCT	shift, and go to state 213
    MY_TRUE	shift, and go to state 124
    MY_FALSE	shift, and go to state 125
    INTDECLARATION	shift, and go to state 414
    CHARDECLARATION	shift, and go to state 415
    VOIDDECLARATION	shift, and go to state 216
    FLOATDECLARATION	shift, and go to state 416
    OPEN_PAR	shift, and go to state 507
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 417
    SIGNED	shift, and go to state 220
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 153
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    STRUCT_TYPE	shift, and go to state 221
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 222
    array_cast_exp	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 265
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    prime_bool_exp	go to state 160
    identifier	go to state 227
    strliteral	go to state 132
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    imply_pre	go to state 508
    struct_member_exp	go to state 228



state 508

    imply_pre  ->  imply_pre . AND imply_pre   (rule 331)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 332)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 333)

    CLOSE_PAR	shift, and go to state 667
    OR  	shift, and go to state 335
    AND 	shift, and go to state 336



state 509

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 668
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 510

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . array option_struct_member_exp   (rule 377)

    OPEN_PAR	shift, and go to state 386
    ID  	shift, and go to state 173

    array	go to state 669
    identifier	go to state 670



state 511

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY . OPEN_MPAR statement CLOSE_MPAR   (rule 55)

    OPEN_MPAR	shift, and go to state 671



state 512

    imply_pre  ->  imply_pre . AND imply_pre   (rule 331)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 332)
    imply_pre  ->  imply_pre OR imply_pre .   (rule 332)

    AND 	shift, and go to state 336

    $default	reduce using rule 332 (imply_pre)



state 513

    imply_pre  ->  imply_pre . AND imply_pre   (rule 331)
    imply_pre  ->  imply_pre AND imply_pre .   (rule 331)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 332)


    $default	reduce using rule 331 (imply_pre)



state 514

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    option_projection  ->  COMMA statement . option_projection   (rule 328)

    COMMA	shift, and go to state 338
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195

    $default	reduce using rule 327 (option_projection)

    option_projection	go to state 672



state 515

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION . statement_bpar   (rule 58)

    error	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300

    statement_bpar	go to state 673



state 516

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR . PROJECTION statement_bpar   (rule 57)

    PROJECTION	shift, and go to state 674



state 517

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 59)

    CLOSE_PAR	shift, and go to state 675



state 518

    function  ->  EXTERN ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 70)

    CLOSE_PAR	shift, and go to state 676



state 519

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)

    OPEN_PAR	shift, and go to state 139
    ID  	shift, and go to state 140

    identifier	go to state 677



state 520

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    identifier  ->  ID .   (rule 318)

    OPEN_MPAR	shift, and go to state 678

    $default	reduce using rule 318 (identifier)



state 521

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)

    CLOSE_PAR	shift, and go to state 506



state 522

    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 261)

    $default	reduce using rule 261 (sign_type_define)



state 523

    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 262)

    $default	reduce using rule 262 (sign_type_define)



state 524

    point_exp  ->  MUL OPEN_PAR ari_exp CLOSE_PAR .   (rule 155)

    $default	reduce using rule 155 (point_exp)



state 525

    point_exp  ->  MUL OPEN_PAR all_type_define MUL . CLOSE_PAR ari_exp   (rule 154)

    CLOSE_PAR	shift, and go to state 679



state 526

    type_define  ->  INTDECLARATION .   (rule 88)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    MUL 	shift, and go to state 680

    MUL 	[reduce using rule 88 (type_define)]
    $default	reduce using rule 88 (type_define)



state 527

    type_define  ->  CHARDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    MUL 	shift, and go to state 681

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 528

    type_define  ->  FLOATDECLARATION .   (rule 89)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    MUL 	shift, and go to state 682

    MUL 	[reduce using rule 89 (type_define)]
    $default	reduce using rule 89 (type_define)



state 529

    sign_declaration  ->  UNSIGNED . declaration   (rule 76)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    STRUCT	shift, and go to state 167
    UNION	shift, and go to state 168
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 683
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 169
    STRUCT_TYPE	shift, and go to state 59

    declaration	go to state 170
    type_define	go to state 66



state 530

    statement  ->  NEXT OPEN_PAR statement CLOSE_PAR .   (rule 40)

    $default	reduce using rule 40 (statement)



state 531

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    INTDECLARATION	shift, and go to state 684
    CHARDECLARATION	shift, and go to state 685
    FLOATDECLARATION	shift, and go to state 686
    OPEN_PAR	shift, and go to state 531
    UNSIGNED	shift, and go to state 687
    ADDRESS	shift, and go to state 89
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 178
    ID  	shift, and go to state 173

    ass_left	go to state 466
    leftaddrshift	go to state 69
    array	go to state 532
    point_exp	go to state 354
    address_exp	go to state 428
    identifier	go to state 356
    struct_member_exp	go to state 357



state 532

    ass_left  ->  array .   (rule 112)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 140)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 372)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 376)

    DOT 	shift, and go to state 201
    CLOSE_PAR	shift, and go to state 330
    IMPLY	shift, and go to state 203

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    $default	reduce using rule 112 (ass_left)



state 533

    statement  ->  LENGTH OPEN_PAR ari_exp CLOSE_PAR .   (rule 48)

    $default	reduce using rule 48 (statement)



state 534

    option_input  ->  COMMA . identifier option_input   (rule 363)
    option_input  ->  COMMA . array option_input   (rule 364)

    OPEN_PAR	shift, and go to state 386
    ID  	shift, and go to state 173

    array	go to state 688
    identifier	go to state 689



state 535

    input_statement  ->  REQUEST OPEN_PAR array CLOSE_PAR .   (rule 359)

    $default	reduce using rule 359 (input_statement)



state 536

    input_statement  ->  REQUEST OPEN_PAR array option_input . CLOSE_PAR   (rule 360)

    CLOSE_PAR	shift, and go to state 690



state 537

    input_statement  ->  REQUEST OPEN_PAR identifier CLOSE_PAR .   (rule 357)

    $default	reduce using rule 357 (input_statement)



state 538

    input_statement  ->  REQUEST OPEN_PAR identifier option_input . CLOSE_PAR   (rule 358)

    CLOSE_PAR	shift, and go to state 691



state 539

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 361)

    $default	reduce using rule 361 (input_statement)



state 540

    statement  ->  FINAL OPEN_PAR statement CLOSE_PAR .   (rule 53)

    $default	reduce using rule 53 (statement)



state 541

    statement  ->  KEEP OPEN_PAR statement CLOSE_PAR .   (rule 41)

    $default	reduce using rule 41 (statement)



state 542

    statement  ->  ALWAYS OPEN_PAR statement CLOSE_PAR .   (rule 42)

    $default	reduce using rule 42 (statement)



state 543

    option_function_identifier  ->  ADDRESS error .   (rule 310)

    $default	reduce using rule 310 (option_function_identifier)



state 544

    inner_option_function_identifier  ->  COMMA . ass_right inner_option_function_identifier   (rule 311)
    inner_option_function_identifier  ->  COMMA . error   (rule 313)

    error	shift, and go to state 692
    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 303
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 306
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    ass_right	go to state 693
    rightaddrshift	go to state 308
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 309
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 310
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 313
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 545

    option_function_identifier  ->  ass_right inner_option_function_identifier .   (rule 306)

    $default	reduce using rule 306 (option_function_identifier)



state 546

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 69)

    $default	reduce using rule 69 (function)



state 547

    option_ari_exp  ->  COMMA . ari_exp option_ari_exp   (rule 147)
    option_ari_exp  ->  COMMA . error   (rule 148)

    error	shift, and go to state 694
    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 695
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 548

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 139)

    CLOSE_MPAR	shift, and go to state 696



state 549

    option_identifier_array_declaration  ->  ID ARRAY ASS_P . array_exp inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID ARRAY ASS_P . strliteral inner_option_identifier_array_declaration   (rule 98)

    OPEN_PAR	shift, and go to state 653
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    STRLITERAL	shift, and go to state 128

    array_exp	go to state 697
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    strliteral	go to state 698



state 550

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 547
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 699
    ari_operator	go to state 239



state 551

    inner_option_identifier_array_declaration  ->  COMMA error .   (rule 103)

    $default	reduce using rule 103 (inner_option_identifier_array_declaration)



state 552

    inner_option_identifier_array_declaration  ->  COMMA option_identifier_array_declaration .   (rule 102)

    $default	reduce using rule 102 (inner_option_identifier_array_declaration)



state 553

    option_identifier_array_declaration  ->  identifier ASS_P ass_right . inner_option_identifier_array_declaration   (rule 96)

    COMMA	shift, and go to state 376

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 700



state 554

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR .   (rule 72)

    $default	reduce using rule 72 (struct_define_statement)



state 555

    option_struct_declaration  ->  sign_declaration AND . option_struct_declaration   (rule 66)

    STRUCT	shift, and go to state 167
    UNION	shift, and go to state 168
    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 169
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    STRUCT_TYPE	shift, and go to state 59

    option_struct_declaration	go to state 701
    sign_declaration	go to state 384
    declaration	go to state 65
    type_define	go to state 66



state 556

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 140)

    CLOSE_PAR	shift, and go to state 330



state 557

    option_struct_member_exp  ->  DOT . identifier option_struct_member_exp   (rule 383)
    option_struct_member_exp  ->  DOT . array option_struct_member_exp   (rule 384)
    option_struct_member_exp  ->  DOT . function   (rule 387)

    OPEN_PAR	shift, and go to state 386
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 58

    function	go to state 702
    array	go to state 703
    identifier	go to state 704



state 558

    option_struct_member_exp  ->  IMPLY . identifier option_struct_member_exp   (rule 385)
    option_struct_member_exp  ->  IMPLY . array option_struct_member_exp   (rule 386)
    option_struct_member_exp  ->  IMPLY . function   (rule 388)

    OPEN_PAR	shift, and go to state 386
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 58

    function	go to state 705
    array	go to state 706
    identifier	go to state 707



state 559

    struct_member_exp  ->  array DOT array option_struct_member_exp .   (rule 369)

    $default	reduce using rule 369 (struct_member_exp)



state 560

    struct_member_exp  ->  array DOT identifier option_struct_member_exp .   (rule 366)

    $default	reduce using rule 366 (struct_member_exp)



state 561

    function  ->  array OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 71)

    $default	reduce using rule 71 (function)



state 562

    struct_member_exp  ->  array IMPLY array option_struct_member_exp .   (rule 376)

    $default	reduce using rule 376 (struct_member_exp)



state 563

    struct_member_exp  ->  array IMPLY identifier option_struct_member_exp .   (rule 372)

    $default	reduce using rule 372 (struct_member_exp)



state 564

    struct_member_exp  ->  point_exp DOT array option_struct_member_exp .   (rule 370)

    $default	reduce using rule 370 (struct_member_exp)



state 565

    struct_member_exp  ->  point_exp DOT identifier option_struct_member_exp .   (rule 367)

    $default	reduce using rule 367 (struct_member_exp)



state 566

    struct_member_exp  ->  point_exp IMPLY array option_struct_member_exp .   (rule 380)

    $default	reduce using rule 380 (struct_member_exp)



state 567

    struct_member_exp  ->  point_exp IMPLY identifier option_struct_member_exp .   (rule 374)

    $default	reduce using rule 374 (struct_member_exp)



state 568

    struct_member_exp  ->  identifier DOT array option_struct_member_exp .   (rule 368)

    $default	reduce using rule 368 (struct_member_exp)



state 569

    struct_member_exp  ->  identifier DOT identifier option_struct_member_exp .   (rule 365)

    $default	reduce using rule 365 (struct_member_exp)



state 570

    struct_member_exp  ->  identifier IMPLY array option_struct_member_exp .   (rule 375)

    $default	reduce using rule 375 (struct_member_exp)



state 571

    struct_member_exp  ->  identifier IMPLY identifier option_struct_member_exp .   (rule 371)

    $default	reduce using rule 371 (struct_member_exp)



state 572

    poptional_projection  ->  COMMA complexProposition poptional_projection .   (rule 28)

    $default	reduce using rule 28 (poptional_projection)



state 573

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION . OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    OPEN_BPAR	shift, and go to state 708



state 574

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    ari_exp  ->  IF bool_exp THEN ari_exp . option_exp_else_statement   (rule 160)

    ELSE	shift, and go to state 709
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ELSE	[reduce using rule 164 (option_exp_else_statement)]
    ADD 	[reduce using rule 164 (option_exp_else_statement)]
    SUB 	[reduce using rule 164 (option_exp_else_statement)]
    $default	reduce using rule 164 (option_exp_else_statement)

    option_exp_else_statement	go to state 710
    ari_operator	go to state 239



state 575

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 711
    MUL 	shift, and go to state 712



state 576

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 212)

    $default	reduce using rule 212 (type_cast)



state 577

    type_cast_alg_exp  ->  simple_ari_exp .   (rule 161)
    type_cast_alg_exp  ->  simple_ari_exp . ari_operator simple_ari_exp   (rule 162)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 166)

    INTER_OR	shift, and go to state 240
    CON 	shift, and go to state 241
    ADDRESS	shift, and go to state 242
    LST 	shift, and go to state 249
    RST 	shift, and go to state 250
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238
    MUL 	shift, and go to state 251
    DIV 	shift, and go to state 252
    MOD 	shift, and go to state 253

    INTER_OR	[reduce using rule 161 (type_cast_alg_exp)]
    CON 	[reduce using rule 161 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 161 (type_cast_alg_exp)]
    LST 	[reduce using rule 161 (type_cast_alg_exp)]
    RST 	[reduce using rule 161 (type_cast_alg_exp)]
    ADD 	[reduce using rule 161 (type_cast_alg_exp)]
    SUB 	[reduce using rule 161 (type_cast_alg_exp)]
    MUL 	[reduce using rule 161 (type_cast_alg_exp)]
    DIV 	[reduce using rule 161 (type_cast_alg_exp)]
    MOD 	[reduce using rule 161 (type_cast_alg_exp)]
    $default	reduce using rule 161 (type_cast_alg_exp)

    bi_operator	go to state 254
    ari_operator	go to state 713



state 578

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 715
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 579

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 716



state 580

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 214)

    $default	reduce using rule 214 (type_cast)



state 581

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 717
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 582

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 718



state 583

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 719
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 584

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 230)

    CLOSE_PAR	shift, and go to state 720



state 585

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 213)

    $default	reduce using rule 213 (type_cast)



state 586

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 721
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 587

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 722



state 588

    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 723
    MUL 	shift, and go to state 579



state 589

    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 724
    MUL 	shift, and go to state 582



state 590

    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 725
    MUL 	shift, and go to state 587



state 591

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 593
    MUL 	shift, and go to state 726



state 592

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 595
    MUL 	shift, and go to state 727



state 593

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 217)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 728
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 594

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 729
    MUL 	shift, and go to state 730



state 595

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 218)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 731
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 596

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 732
    MUL 	shift, and go to state 733



state 597

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 215)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 734
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 598

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 216)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 735
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 599

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 736
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 600

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 234)

    CLOSE_PAR	shift, and go to state 737



state 601

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR . case_par CLOSE_BPAR   (rule 344)

    CASE	shift, and go to state 738
    DEFAULT	shift, and go to state 739

    case_par	go to state 740



state 602

    option_else_statement  ->  ELSE . statement_bpar   (rule 351)

    error	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300

    statement_bpar	go to state 741



state 603

    if_statement  ->  IF bool_exp THEN statement_bpar option_else_statement .   (rule 350)

    $default	reduce using rule 350 (if_statement)



state 604

    option_function_parameter_list  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 287)

    OPEN_PAR	shift, and go to state 139
    ID  	shift, and go to state 140

    identifier	go to state 742



state 605

    option_function_parameter_list  ->  ID MUL . identifier inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  ID MUL . MUL identifier inner_option_define_identifier   (rule 273)
    option_function_parameter_list  ->  ID MUL . inner_option_define_identifier   (rule 279)
    option_function_parameter_list  ->  ID MUL . MUL inner_option_define_identifier   (rule 280)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 139
    MUL 	shift, and go to state 743
    ID  	shift, and go to state 140

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 744
    identifier	go to state 745



state 606

    option_function_parameter_list  ->  ID inner_option_define_identifier .   (rule 278)

    $default	reduce using rule 278 (option_function_parameter_list)



state 607

    option_function_parameter_list  ->  ID identifier . inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  ID identifier . ARRAY inner_option_define_identifier   (rule 274)

    ARRAY	shift, and go to state 746
    COMMA	shift, and go to state 283

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 747



state 608

    option_function_parameter_list  ->  STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 268)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL identifier inner_option_define_identifier   (rule 269)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . inner_option_define_identifier   (rule 276)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL inner_option_define_identifier   (rule 277)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 139
    MUL 	shift, and go to state 748
    ID  	shift, and go to state 140

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 749
    identifier	go to state 750



state 609

    option_function_parameter_list  ->  STRUCT_TYPE inner_option_define_identifier .   (rule 275)

    $default	reduce using rule 275 (option_function_parameter_list)



state 610

    option_function_parameter_list  ->  STRUCT_TYPE identifier . inner_option_define_identifier   (rule 267)
    option_function_parameter_list  ->  STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 270)

    ARRAY	shift, and go to state 751
    COMMA	shift, and go to state 283

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 752



state 611

    option_function_parameter_list  ->  all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 282)
    option_function_parameter_list  ->  all_type_define MUL . identifier inner_option_define_identifier   (rule 284)
    option_function_parameter_list  ->  all_type_define MUL . inner_option_define_identifier   (rule 285)
    option_function_parameter_list  ->  all_type_define MUL . MUL identifier inner_option_define_identifier   (rule 286)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 139
    MUL 	shift, and go to state 753
    ID  	shift, and go to state 140

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 754
    identifier	go to state 755



state 612

    option_function_parameter_list  ->  all_type_define inner_option_define_identifier .   (rule 266)

    $default	reduce using rule 266 (option_function_parameter_list)



state 613

    option_function_parameter_list  ->  all_type_define identifier . inner_option_define_identifier   (rule 265)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)

    ARRAY	shift, and go to state 756
    COMMA	shift, and go to state 283

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 757



state 614

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    ASS_P	shift, and go to state 758



state 615

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)

    OPEN_PAR	shift, and go to state 139
    ID  	shift, and go to state 140

    identifier	go to state 759



state 616

    inner_option_define_identifier  ->  COMMA ID identifier . inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA ID identifier . ARRAY inner_option_define_identifier   (rule 294)

    ARRAY	shift, and go to state 760
    COMMA	shift, and go to state 283

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 761



state 617

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 293)

    OPEN_PAR	shift, and go to state 139
    ID  	shift, and go to state 140

    identifier	go to state 762



state 618

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . inner_option_define_identifier   (rule 292)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 295)

    ARRAY	shift, and go to state 763
    COMMA	shift, and go to state 283

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 764



state 619

    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . inner_option_define_identifier   (rule 304)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 139
    ID  	shift, and go to state 140

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 765
    identifier	go to state 766



state 620

    inner_option_define_identifier  ->  COMMA all_type_define inner_option_define_identifier .   (rule 290)

    $default	reduce using rule 290 (inner_option_define_identifier)



state 621

    inner_option_define_identifier  ->  COMMA all_type_define identifier . inner_option_define_identifier   (rule 289)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)

    ARRAY	shift, and go to state 767
    COMMA	shift, and go to state 283
    OPEN_MPAR	shift, and go to state 768

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 769



state 622

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR . statement CLOSE_BPAR   (rule 63)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 770
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 623

    option_frame_identifier  ->  COMMA error .   (rule 326)

    $default	reduce using rule 326 (option_frame_identifier)



state 624

    option_frame_identifier  ->  COMMA identifier . option_frame_identifier   (rule 324)

    COMMA	shift, and go to state 462

    $default	reduce using rule 325 (option_frame_identifier)

    option_frame_identifier	go to state 771



state 625

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR . AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    AND 	shift, and go to state 772



state 626

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 233)

    OPEN_PAR	shift, and go to state 139
    CLOSE_PAR	shift, and go to state 711
    MUL 	shift, and go to state 773
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 373
    identifier	go to state 191



state 627

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 658



state 628

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 409
    MUL 	shift, and go to state 659



state 629

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 412
    MUL 	shift, and go to state 660



state 630

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

    INTDECLARATION	shift, and go to state 591
    CHARDECLARATION	shift, and go to state 774



state 631

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 234)

    OPEN_PAR	shift, and go to state 139
    CLOSE_PAR	shift, and go to state 737
    MUL 	shift, and go to state 188
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 373
    identifier	go to state 191



state 632

    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)
    for_sta_condition  ->  bool_exp .   (rule 340)

    OR  	shift, and go to state 272
    AND 	shift, and go to state 273

    $default	reduce using rule 340 (for_sta_condition)



state 633

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition . COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 336)

    COMMA	shift, and go to state 775



state 634

    for_statement  ->  FOR ari_exp TIMES DO statement_bpar .   (rule 335)

    $default	reduce using rule 335 (for_statement)



state 635

    statement_bpar  ->  OPEN_BPAR statement CLOSE_BPAR .   (rule 314)

    $default	reduce using rule 314 (statement_bpar)



state 636

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL . OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

    OPEN_PAR	shift, and go to state 776



state 637

    ass_right  ->  OPEN_PAR ass_right CLOSE_PAR .   (rule 136)

    $default	reduce using rule 136 (ass_right)



state 638

    array_exp  ->  OPEN_PAR array_exp CLOSE_PAR .   (rule 195)

    $default	reduce using rule 195 (array_exp)



state 639

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR . OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)

    OPEN_PAR	shift, and go to state 777



state 640

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 195)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 213
    INTDECLARATION	shift, and go to state 414
    CHARDECLARATION	shift, and go to state 415
    VOIDDECLARATION	shift, and go to state 216
    FLOATDECLARATION	shift, and go to state 416
    OPEN_PAR	shift, and go to state 640
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 417
    SIGNED	shift, and go to state 220
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 221
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 222
    array_cast_exp	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 641
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 641

    array_exp  ->  array_exp . CON array_exp   (rule 192)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 195)

    CLOSE_PAR	shift, and go to state 638
    CON 	shift, and go to state 490



state 642

    inner_option_list_value  ->  COMMA . ari_exp inner_option_list_value   (rule 202)
    inner_option_list_value  ->  COMMA . strliteral inner_option_list_value   (rule 203)
    inner_option_list_value  ->  COMMA . array_exp inner_option_list_value   (rule 204)
    inner_option_list_value  ->  COMMA . error   (rule 206)

    error	shift, and go to state 778
    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 479
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 779
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    array_exp	go to state 780
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    strliteral	go to state 781
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 643

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value . CLOSE_BPAR   (rule 199)

    CLOSE_BPAR	shift, and go to state 782



state 644

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value . CLOSE_BPAR   (rule 201)

    CLOSE_BPAR	shift, and go to state 783



state 645

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value . CLOSE_BPAR   (rule 200)

    CLOSE_BPAR	shift, and go to state 784



state 646

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value . CLOSE_MPAR   (rule 196)

    CLOSE_MPAR	shift, and go to state 785



state 647

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value . CLOSE_MPAR   (rule 198)

    CLOSE_MPAR	shift, and go to state 786



state 648

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value . CLOSE_MPAR   (rule 197)

    CLOSE_MPAR	shift, and go to state 787



state 649

    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 213
    INTDECLARATION	shift, and go to state 214
    CHARDECLARATION	shift, and go to state 215
    VOIDDECLARATION	shift, and go to state 216
    FLOATDECLARATION	shift, and go to state 217
    OPEN_PAR	shift, and go to state 788
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 219
    SIGNED	shift, and go to state 220
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 221
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 222
    array_cast_exp	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 650

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift . CLOSE_PAR   (rule 138)

    CLOSE_PAR	shift, and go to state 789



state 651

    option_output  ->  COMMA ass_right . option_output   (rule 356)

    COMMA	shift, and go to state 487

    $default	reduce using rule 355 (option_output)

    option_output	go to state 790



state 652

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR .   (rule 354)

    $default	reduce using rule 354 (output_statement)



state 653

    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 195)

    OPEN_PAR	shift, and go to state 653
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305

    array_exp	go to state 641
    option_list_value	go to state 311
    option_struct_list_value	go to state 312



state 654

    array_exp  ->  array_exp . CON array_exp   (rule 192)
    array_exp  ->  array_exp CON array_exp .   (rule 192)


    $default	reduce using rule 192 (array_exp)



state 655

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 791
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 792
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 715
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 656

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 793
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 794
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 717
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 657

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 795
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 721
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 658

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 796
    MUL 	shift, and go to state 579



state 659

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 797
    MUL 	shift, and go to state 582



state 660

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 798
    MUL 	shift, and go to state 587



state 661

    type_define  ->  INTDECLARATION .   (rule 88)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 593
    MUL 	shift, and go to state 726

    MUL 	[reduce using rule 88 (type_define)]
    $default	reduce using rule 88 (type_define)



state 662

    type_define  ->  CHARDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 595
    MUL 	shift, and go to state 799

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 663

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 800
    MUL 	shift, and go to state 733



state 664

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)

    OPEN_PAR	shift, and go to state 801



state 665

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 139)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 547
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 802
    ari_operator	go to state 239



state 666

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 84)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 451
    UNSIGNED	shift, and go to state 346
    ID  	shift, and go to state 452
    STRUCT_TYPE	shift, and go to state 453

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 347
    sign_type_define	go to state 349
    all_type_define	go to state 454
    option_function_parameter_list	go to state 803



state 667

    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 333)

    $default	reduce using rule 333 (imply_pre)



state 668

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 153)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 547
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 804
    ari_operator	go to state 239



state 669

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array . option_struct_member_exp   (rule 377)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 805



state 670

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier . option_struct_member_exp   (rule 373)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 806



state 671

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR . statement CLOSE_MPAR   (rule 55)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 807
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 672

    option_projection  ->  COMMA statement option_projection .   (rule 328)

    $default	reduce using rule 328 (option_projection)



state 673

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar .   (rule 58)

    $default	reduce using rule 58 (statement)



state 674

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION . statement_bpar   (rule 57)

    error	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300

    statement_bpar	go to state 808



state 675

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 59)

    OPEN_BPAR	shift, and go to state 809



state 676

    function  ->  EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 70)

    $default	reduce using rule 70 (function)



state 677

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)

    CLOSE_PAR	shift, and go to state 664



state 678

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 810
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 679

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR . ari_exp   (rule 154)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 811
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 680

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 812



state 681

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 813



state 682

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    CLOSE_PAR	shift, and go to state 814



state 683

    type_define  ->  CHARDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    MUL 	shift, and go to state 815

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 684

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    MUL 	shift, and go to state 680



state 685

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    MUL 	shift, and go to state 681



state 686

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    MUL 	shift, and go to state 682



state 687

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CHARDECLARATION	shift, and go to state 816



state 688

    option_input  ->  COMMA array . option_input   (rule 364)

    COMMA	shift, and go to state 534

    $default	reduce using rule 362 (option_input)

    option_input	go to state 817



state 689

    option_input  ->  COMMA identifier . option_input   (rule 363)

    COMMA	shift, and go to state 534

    $default	reduce using rule 362 (option_input)

    option_input	go to state 818



state 690

    input_statement  ->  REQUEST OPEN_PAR array option_input CLOSE_PAR .   (rule 360)

    $default	reduce using rule 360 (input_statement)



state 691

    input_statement  ->  REQUEST OPEN_PAR identifier option_input CLOSE_PAR .   (rule 358)

    $default	reduce using rule 358 (input_statement)



state 692

    inner_option_function_identifier  ->  COMMA error .   (rule 313)

    $default	reduce using rule 313 (inner_option_function_identifier)



state 693

    inner_option_function_identifier  ->  COMMA ass_right . inner_option_function_identifier   (rule 311)

    COMMA	shift, and go to state 544

    $default	reduce using rule 312 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 819



state 694

    option_ari_exp  ->  COMMA error .   (rule 148)

    $default	reduce using rule 148 (option_ari_exp)



state 695

    option_ari_exp  ->  COMMA ari_exp . option_ari_exp   (rule 147)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 547
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 820
    ari_operator	go to state 239



state 696

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 139)

    $default	reduce using rule 139 (array)



state 697

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp . inner_option_identifier_array_declaration   (rule 97)
    array_exp  ->  array_exp . CON array_exp   (rule 192)

    COMMA	shift, and go to state 376
    CON 	shift, and go to state 490

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 821



state 698

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral . inner_option_identifier_array_declaration   (rule 98)

    COMMA	shift, and go to state 376

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 822



state 699

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)

    CLOSE_MPAR	shift, and go to state 823



state 700

    option_identifier_array_declaration  ->  identifier ASS_P ass_right inner_option_identifier_array_declaration .   (rule 96)

    $default	reduce using rule 96 (option_identifier_array_declaration)



state 701

    option_struct_declaration  ->  sign_declaration AND option_struct_declaration .   (rule 66)

    $default	reduce using rule 66 (option_struct_declaration)



state 702

    option_struct_member_exp  ->  DOT function .   (rule 387)

    $default	reduce using rule 387 (option_struct_member_exp)



state 703

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    option_struct_member_exp  ->  DOT array . option_struct_member_exp   (rule 384)

    DOT 	shift, and go to state 557
    OPEN_PAR	shift, and go to state 202
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 824



state 704

    option_struct_member_exp  ->  DOT identifier . option_struct_member_exp   (rule 383)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 825



state 705

    option_struct_member_exp  ->  IMPLY function .   (rule 388)

    $default	reduce using rule 388 (option_struct_member_exp)



state 706

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    option_struct_member_exp  ->  IMPLY array . option_struct_member_exp   (rule 386)

    DOT 	shift, and go to state 557
    OPEN_PAR	shift, and go to state 202
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 826



state 707

    option_struct_member_exp  ->  IMPLY identifier . option_struct_member_exp   (rule 385)

    DOT 	shift, and go to state 557
    IMPLY	shift, and go to state 558

    DOT 	[reduce using rule 382 (option_struct_member_exp)]
    IMPLY	[reduce using rule 382 (option_struct_member_exp)]
    $default	reduce using rule 382 (option_struct_member_exp)

    option_struct_member_exp	go to state 827



state 708

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR . complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 828



state 709

    option_exp_else_statement  ->  ELSE . ari_exp   (rule 163)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 829
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 710

    ari_exp  ->  IF bool_exp THEN ari_exp option_exp_else_statement .   (rule 160)

    $default	reduce using rule 160 (ari_exp)



state 711

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 231)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 830
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 712

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 233)

    CLOSE_PAR	shift, and go to state 831



state 713

    type_cast_alg_exp  ->  simple_ari_exp ari_operator . simple_ari_exp   (rule 162)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    simple_ari_exp	go to state 832
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 714

    casted_element  ->  type_cast_alg_exp .   (rule 235)

    $default	reduce using rule 235 (casted_element)



state 715

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 219)

    $default	reduce using rule 219 (type_cast)



state 716

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 833
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 717

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 222)

    $default	reduce using rule 222 (type_cast)



state 718

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 834
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 719

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element .   (rule 224)

    $default	reduce using rule 224 (type_cast)



state 720

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 230)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 835
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 721

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element .   (rule 221)

    $default	reduce using rule 221 (type_cast)



state 722

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 836
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 723

    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 715
    identifier	go to state 837
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 724

    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 717
    identifier	go to state 838
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 725

    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 721
    identifier	go to state 839
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 726

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 840
    MUL 	shift, and go to state 730



state 727

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 841
    MUL 	shift, and go to state 733



state 728

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 217)

    $default	reduce using rule 217 (type_cast)



state 729

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 842
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 730

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 843



state 731

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 218)

    $default	reduce using rule 218 (type_cast)



state 732

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 844
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 733

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 845



state 734

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 215)

    $default	reduce using rule 215 (type_cast)



state 735

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 216)

    $default	reduce using rule 216 (type_cast)



state 736

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 232)

    $default	reduce using rule 232 (type_cast)



state 737

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 846
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 738

    case_par  ->  CASE . member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 345)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    member_in_exp	go to state 847
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 739

    case_par  ->  DEFAULT . COLON OPEN_PAR statement CLOSE_PAR   (rule 346)

    COLON	shift, and go to state 848



state 740

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par . CLOSE_BPAR   (rule 344)

    CLOSE_BPAR	shift, and go to state 849



state 741

    option_else_statement  ->  ELSE statement_bpar .   (rule 351)

    $default	reduce using rule 351 (option_else_statement)



state 742

    option_function_parameter_list  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 287)

    CLOSE_PAR	shift, and go to state 850



state 743

    option_function_parameter_list  ->  ID MUL MUL . identifier inner_option_define_identifier   (rule 273)
    option_function_parameter_list  ->  ID MUL MUL . inner_option_define_identifier   (rule 280)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 139
    ID  	shift, and go to state 140

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 851
    identifier	go to state 852



state 744

    option_function_parameter_list  ->  ID MUL inner_option_define_identifier .   (rule 279)

    $default	reduce using rule 279 (option_function_parameter_list)



state 745

    option_function_parameter_list  ->  ID MUL identifier . inner_option_define_identifier   (rule 272)

    COMMA	shift, and go to state 283

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 853



state 746

    option_function_parameter_list  ->  ID identifier ARRAY . inner_option_define_identifier   (rule 274)

    COMMA	shift, and go to state 283

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 854



state 747

    option_function_parameter_list  ->  ID identifier inner_option_define_identifier .   (rule 271)

    $default	reduce using rule 271 (option_function_parameter_list)



state 748

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . identifier inner_option_define_identifier   (rule 269)
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . inner_option_define_identifier   (rule 277)

    COMMA	shift, and go to state 283
    OPEN_PAR	shift, and go to state 139
    ID  	shift, and go to state 140

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 855
    identifier	go to state 856



state 749

    option_function_parameter_list  ->  STRUCT_TYPE MUL inner_option_define_identifier .   (rule 276)

    $default	reduce using rule 276 (option_function_parameter_list)



state 750

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 268)

    COMMA	shift, and go to state 283

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 857



state 751

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 270)

    COMMA	shift, and go to state 283

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 858



state 752

    option_function_parameter_list  ->  STRUCT_TYPE identifier inner_option_define_identifier .   (rule 267)

    $default	reduce using rule 267 (option_function_parameter_list)



state 753

    option_function_parameter_list  ->  all_type_define MUL MUL . identifier inner_option_define_identifier   (rule 286)

    OPEN_PAR	shift, and go to state 139
    ID  	shift, and go to state 140

    identifier	go to state 859



state 754

    option_function_parameter_list  ->  all_type_define MUL inner_option_define_identifier .   (rule 285)

    $default	reduce using rule 285 (option_function_parameter_list)



state 755

    option_function_parameter_list  ->  all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 282)
    option_function_parameter_list  ->  all_type_define MUL identifier . inner_option_define_identifier   (rule 284)

    ARRAY	shift, and go to state 860
    COMMA	shift, and go to state 283

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 861



state 756

    option_function_parameter_list  ->  all_type_define identifier ARRAY . inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)

    COMMA	shift, and go to state 283
    OPEN_MPAR	shift, and go to state 862

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 863



state 757

    option_function_parameter_list  ->  all_type_define identifier inner_option_define_identifier .   (rule 265)

    $default	reduce using rule 265 (option_function_parameter_list)



state 758

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    OPEN_BPAR	shift, and go to state 864



state 759

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)

    CLOSE_PAR	shift, and go to state 865



state 760

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY . inner_option_define_identifier   (rule 294)

    COMMA	shift, and go to state 283

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 866



state 761

    inner_option_define_identifier  ->  COMMA ID identifier inner_option_define_identifier .   (rule 291)

    $default	reduce using rule 291 (inner_option_define_identifier)



state 762

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 293)

    COMMA	shift, and go to state 283

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 867



state 763

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 295)

    COMMA	shift, and go to state 283

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 868



state 764

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier inner_option_define_identifier .   (rule 292)

    $default	reduce using rule 292 (inner_option_define_identifier)



state 765

    inner_option_define_identifier  ->  COMMA all_type_define MUL inner_option_define_identifier .   (rule 304)

    $default	reduce using rule 304 (inner_option_define_identifier)



state 766

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . inner_option_define_identifier   (rule 303)

    ARRAY	shift, and go to state 869
    COMMA	shift, and go to state 283

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 870



state 767

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)

    COMMA	shift, and go to state 283
    OPEN_MPAR	shift, and go to state 871

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 872



state 768

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 873
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 769

    inner_option_define_identifier  ->  COMMA all_type_define identifier inner_option_define_identifier .   (rule 289)

    $default	reduce using rule 289 (inner_option_define_identifier)



state 770

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement . CLOSE_BPAR   (rule 63)

    CLOSE_BPAR	shift, and go to state 874
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 771

    option_frame_identifier  ->  COMMA identifier option_frame_identifier .   (rule 324)

    $default	reduce using rule 324 (option_frame_identifier)



state 772

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND . OPEN_PAR statement CLOSE_PAR   (rule 56)

    OPEN_PAR	shift, and go to state 875



state 773

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 233)

    OPEN_PAR	shift, and go to state 139
    CLOSE_PAR	shift, and go to state 831
    MUL 	shift, and go to state 188
    ID  	shift, and go to state 189

    option_identifier_array_declaration	go to state 373
    identifier	go to state 191



state 774

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 595
    MUL 	shift, and go to state 799



state 775

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA . for_sta_control CLOSE_PAR statement_bpar   (rule 336)

    OPEN_PAR	shift, and go to state 358
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 178
    ID  	shift, and go to state 173

    $default	reduce using rule 343 (for_sta_control)

    ass_statement	go to state 876
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 180
    point_exp	go to state 71
    identifier	go to state 72
    for_sta_control	go to state 877
    struct_member_exp	go to state 80



state 776

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR . bool_exp CLOSE_PAR   (rule 44)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 123
    MY_TRUE	shift, and go to state 124
    MY_FALSE	shift, and go to state 125
    OPEN_PAR	shift, and go to state 126
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    NEGATION	shift, and go to state 127
    ID  	shift, and go to state 58
    STRLITERAL	shift, and go to state 128
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 129
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    bool_exp	go to state 878
    prime_bool_exp	go to state 131
    identifier	go to state 104
    strliteral	go to state 132
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 777

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR . type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44

    type_define	go to state 879



state 778

    inner_option_list_value  ->  COMMA error .   (rule 206)

    $default	reduce using rule 206 (inner_option_list_value)



state 779

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    inner_option_list_value  ->  COMMA ari_exp . inner_option_list_value   (rule 202)

    COMMA	shift, and go to state 642
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 205 (inner_option_list_value)

    ari_operator	go to state 239
    inner_option_list_value	go to state 880



state 780

    array_exp  ->  array_exp . CON array_exp   (rule 192)
    inner_option_list_value  ->  COMMA array_exp . inner_option_list_value   (rule 204)

    COMMA	shift, and go to state 642
    CON 	shift, and go to state 490

    $default	reduce using rule 205 (inner_option_list_value)

    inner_option_list_value	go to state 881



state 781

    inner_option_list_value  ->  COMMA strliteral . inner_option_list_value   (rule 203)

    COMMA	shift, and go to state 642

    $default	reduce using rule 205 (inner_option_list_value)

    inner_option_list_value	go to state 882



state 782

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR .   (rule 199)

    $default	reduce using rule 199 (option_struct_list_value)



state 783

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR .   (rule 201)

    $default	reduce using rule 201 (option_struct_list_value)



state 784

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR .   (rule 200)

    $default	reduce using rule 200 (option_struct_list_value)



state 785

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR .   (rule 196)

    $default	reduce using rule 196 (option_list_value)



state 786

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR .   (rule 198)

    $default	reduce using rule 198 (option_list_value)



state 787

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR .   (rule 197)

    $default	reduce using rule 197 (option_list_value)



state 788

    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 213
    INTDECLARATION	shift, and go to state 627
    CHARDECLARATION	shift, and go to state 628
    VOIDDECLARATION	shift, and go to state 216
    FLOATDECLARATION	shift, and go to state 629
    OPEN_PAR	shift, and go to state 218
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 630
    SIGNED	shift, and go to state 220
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 221
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 222
    array_cast_exp	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 789

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift CLOSE_PAR .   (rule 138)

    $default	reduce using rule 138 (rightaddrshift)



state 790

    option_output  ->  COMMA ass_right option_output .   (rule 356)

    $default	reduce using rule 356 (option_output)



state 791

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 213
    INTDECLARATION	shift, and go to state 214
    CHARDECLARATION	shift, and go to state 215
    VOIDDECLARATION	shift, and go to state 216
    FLOATDECLARATION	shift, and go to state 217
    OPEN_PAR	shift, and go to state 883
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 219
    SIGNED	shift, and go to state 220
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 221
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 222
    array_cast_exp	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 792

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 884

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 793

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 213
    INTDECLARATION	shift, and go to state 214
    CHARDECLARATION	shift, and go to state 215
    VOIDDECLARATION	shift, and go to state 216
    FLOATDECLARATION	shift, and go to state 217
    OPEN_PAR	shift, and go to state 885
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 219
    SIGNED	shift, and go to state 220
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 221
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 222
    array_cast_exp	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 794

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 886

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 795

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 887

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 796

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 791
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 792
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 715
    identifier	go to state 837
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 797

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 793
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 794
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 717
    identifier	go to state 838
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 798

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 795
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 721
    identifier	go to state 839
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 799

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 888
    MUL 	shift, and go to state 733



state 800

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 889
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 890
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 844
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 801

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 85)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 451
    UNSIGNED	shift, and go to state 346
    ID  	shift, and go to state 452
    STRUCT_TYPE	shift, and go to state 453

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 347
    sign_type_define	go to state 349
    all_type_define	go to state 454
    option_function_parameter_list	go to state 891



state 802

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 139)

    CLOSE_MPAR	shift, and go to state 892



state 803

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 84)

    CLOSE_PAR	shift, and go to state 893



state 804

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 153)

    CLOSE_MPAR	shift, and go to state 894



state 805

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp .   (rule 377)

    $default	reduce using rule 377 (struct_member_exp)



state 806

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp .   (rule 373)

    $default	reduce using rule 373 (struct_member_exp)



state 807

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement . CLOSE_MPAR   (rule 55)

    CLOSE_MPAR	shift, and go to state 895
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 808

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar .   (rule 57)

    $default	reduce using rule 57 (statement)



state 809

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 59)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 896
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 810

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 547
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 897
    ari_operator	go to state 239



state 811

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp .   (rule 154)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ADD 	[reduce using rule 154 (point_exp)]
    SUB 	[reduce using rule 154 (point_exp)]
    $default	reduce using rule 154 (point_exp)

    ari_operator	go to state 239



state 812

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    OPEN_PAR	shift, and go to state 898
    INTLITERAL	shift, and go to state 899



state 813

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    OPEN_PAR	shift, and go to state 900
    INTLITERAL	shift, and go to state 901



state 814

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    INTLITERAL	shift, and go to state 902



state 815

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 903



state 816

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    MUL 	shift, and go to state 815



state 817

    option_input  ->  COMMA array option_input .   (rule 364)

    $default	reduce using rule 364 (option_input)



state 818

    option_input  ->  COMMA identifier option_input .   (rule 363)

    $default	reduce using rule 363 (option_input)



state 819

    inner_option_function_identifier  ->  COMMA ass_right inner_option_function_identifier .   (rule 311)

    $default	reduce using rule 311 (inner_option_function_identifier)



state 820

    option_ari_exp  ->  COMMA ari_exp option_ari_exp .   (rule 147)

    $default	reduce using rule 147 (option_ari_exp)



state 821

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration .   (rule 97)

    $default	reduce using rule 97 (option_identifier_array_declaration)



state 822

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration .   (rule 98)

    $default	reduce using rule 98 (option_identifier_array_declaration)



state 823

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)

    COMMA	shift, and go to state 376
    ASS_P	shift, and go to state 904

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 905



state 824

    option_struct_member_exp  ->  DOT array option_struct_member_exp .   (rule 384)

    $default	reduce using rule 384 (option_struct_member_exp)



state 825

    option_struct_member_exp  ->  DOT identifier option_struct_member_exp .   (rule 383)

    $default	reduce using rule 383 (option_struct_member_exp)



state 826

    option_struct_member_exp  ->  IMPLY array option_struct_member_exp .   (rule 386)

    $default	reduce using rule 386 (option_struct_member_exp)



state 827

    option_struct_member_exp  ->  IMPLY identifier option_struct_member_exp .   (rule 385)

    $default	reduce using rule 385 (option_struct_member_exp)



state 828

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition . CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CLOSE_BPAR	shift, and go to state 906
    CHOP	shift, and go to state 116
    OR  	shift, and go to state 117
    AND 	shift, and go to state 118
    IFF 	shift, and go to state 119
    PROPIMPLY	shift, and go to state 120
    CHOPSTAR	shift, and go to state 121



state 829

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    option_exp_else_statement  ->  ELSE ari_exp .   (rule 163)

    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ADD 	[reduce using rule 163 (option_exp_else_statement)]
    SUB 	[reduce using rule 163 (option_exp_else_statement)]
    $default	reduce using rule 163 (option_exp_else_statement)

    ari_operator	go to state 239



state 830

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 231)

    $default	reduce using rule 231 (type_cast)



state 831

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 907
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 832

    type_cast_alg_exp  ->  simple_ari_exp ari_operator simple_ari_exp .   (rule 162)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 166)

    INTER_OR	shift, and go to state 240
    CON 	shift, and go to state 241
    ADDRESS	shift, and go to state 242
    LST 	shift, and go to state 249
    RST 	shift, and go to state 250
    MUL 	shift, and go to state 251
    DIV 	shift, and go to state 252
    MOD 	shift, and go to state 253

    INTER_OR	[reduce using rule 162 (type_cast_alg_exp)]
    CON 	[reduce using rule 162 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 162 (type_cast_alg_exp)]
    LST 	[reduce using rule 162 (type_cast_alg_exp)]
    RST 	[reduce using rule 162 (type_cast_alg_exp)]
    MUL 	[reduce using rule 162 (type_cast_alg_exp)]
    DIV 	[reduce using rule 162 (type_cast_alg_exp)]
    MOD 	[reduce using rule 162 (type_cast_alg_exp)]
    $default	reduce using rule 162 (type_cast_alg_exp)

    bi_operator	go to state 254



state 833

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 225)

    $default	reduce using rule 225 (type_cast)



state 834

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 228)

    $default	reduce using rule 228 (type_cast)



state 835

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 230)

    $default	reduce using rule 230 (type_cast)



state 836

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 227)

    $default	reduce using rule 227 (type_cast)



state 837

    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    member_in_exp  ->  identifier .   (rule 172)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . DOT function   (rule 378)
    struct_member_exp  ->  identifier . IMPLY function   (rule 379)

    DOT 	shift, and go to state 206
    CLOSE_PAR	shift, and go to state 908
    IMPLY	shift, and go to state 207

    CLOSE_PAR	[reduce using rule 172 (member_in_exp)]
    $default	reduce using rule 172 (member_in_exp)



state 838

    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    member_in_exp  ->  identifier .   (rule 172)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . DOT function   (rule 378)
    struct_member_exp  ->  identifier . IMPLY function   (rule 379)

    DOT 	shift, and go to state 206
    CLOSE_PAR	shift, and go to state 909
    IMPLY	shift, and go to state 207

    CLOSE_PAR	[reduce using rule 172 (member_in_exp)]
    $default	reduce using rule 172 (member_in_exp)



state 839

    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    member_in_exp  ->  identifier .   (rule 172)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . DOT function   (rule 378)
    struct_member_exp  ->  identifier . IMPLY function   (rule 379)

    DOT 	shift, and go to state 206
    CLOSE_PAR	shift, and go to state 910
    IMPLY	shift, and go to state 207

    CLOSE_PAR	[reduce using rule 172 (member_in_exp)]
    $default	reduce using rule 172 (member_in_exp)



state 840

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 842
    identifier	go to state 911
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 841

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 844
    identifier	go to state 912
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 842

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 220)

    $default	reduce using rule 220 (type_cast)



state 843

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 913
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 844

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 223)

    $default	reduce using rule 223 (type_cast)



state 845

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 229)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 914
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 846

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 234)

    $default	reduce using rule 234 (type_cast)



state 847

    case_par  ->  CASE member_in_exp . COLON OPEN_PAR statement CLOSE_PAR init_case_par   (rule 345)

    COLON	shift, and go to state 915



state 848

    case_par  ->  DEFAULT COLON . OPEN_PAR statement CLOSE_PAR   (rule 346)

    OPEN_PAR	shift, and go to state 916



state 849

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR .   (rule 344)

    $default	reduce using rule 344 (switch_statement)



state 850

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 287)

    OPEN_PAR	shift, and go to state 917



state 851

    option_function_parameter_list  ->  ID MUL MUL inner_option_define_identifier .   (rule 280)

    $default	reduce using rule 280 (option_function_parameter_list)



state 852

    option_function_parameter_list  ->  ID MUL MUL identifier . inner_option_define_identifier   (rule 273)

    COMMA	shift, and go to state 283

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 918



state 853

    option_function_parameter_list  ->  ID MUL identifier inner_option_define_identifier .   (rule 272)

    $default	reduce using rule 272 (option_function_parameter_list)



state 854

    option_function_parameter_list  ->  ID identifier ARRAY inner_option_define_identifier .   (rule 274)

    $default	reduce using rule 274 (option_function_parameter_list)



state 855

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL inner_option_define_identifier .   (rule 277)

    $default	reduce using rule 277 (option_function_parameter_list)



state 856

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier . inner_option_define_identifier   (rule 269)

    COMMA	shift, and go to state 283

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 919



state 857

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 268)

    $default	reduce using rule 268 (option_function_parameter_list)



state 858

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 270)

    $default	reduce using rule 270 (option_function_parameter_list)



state 859

    option_function_parameter_list  ->  all_type_define MUL MUL identifier . inner_option_define_identifier   (rule 286)

    COMMA	shift, and go to state 283

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 920



state 860

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 282)

    COMMA	shift, and go to state 283

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 921



state 861

    option_function_parameter_list  ->  all_type_define MUL identifier inner_option_define_identifier .   (rule 284)

    $default	reduce using rule 284 (option_function_parameter_list)



state 862

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 922
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 863

    option_function_parameter_list  ->  all_type_define identifier ARRAY inner_option_define_identifier .   (rule 281)

    $default	reduce using rule 281 (option_function_parameter_list)



state 864

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 60)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    $default	reduce using rule 68 (empty_statement)

    statement	go to state 923
    empty_statement	go to state 924
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 865

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)

    OPEN_PAR	shift, and go to state 925



state 866

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY inner_option_define_identifier .   (rule 294)

    $default	reduce using rule 294 (inner_option_define_identifier)



state 867

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 293)

    $default	reduce using rule 293 (inner_option_define_identifier)



state 868

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 295)

    $default	reduce using rule 295 (inner_option_define_identifier)



state 869

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 297)

    COMMA	shift, and go to state 283

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 926



state 870

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier inner_option_define_identifier .   (rule 303)

    $default	reduce using rule 303 (inner_option_define_identifier)



state 871

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 927
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 872

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY inner_option_define_identifier .   (rule 296)

    $default	reduce using rule 296 (inner_option_define_identifier)



state 873

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)

    COMMA	shift, and go to state 928
    CLOSE_MPAR	shift, and go to state 929
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ari_operator	go to state 239



state 874

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR .   (rule 63)

    $default	reduce using rule 63 (statement)



state 875

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR . statement CLOSE_PAR   (rule 56)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 930
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 876

    for_sta_control  ->  ass_statement .   (rule 342)

    $default	reduce using rule 342 (for_sta_control)



state 877

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control . CLOSE_PAR statement_bpar   (rule 336)

    CLOSE_PAR	shift, and go to state 931



state 878

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp . CLOSE_PAR   (rule 44)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 238)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 239)

    CLOSE_PAR	shift, and go to state 932
    OR  	shift, and go to state 272
    AND 	shift, and go to state 273



state 879

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)

    CLOSE_PAR	shift, and go to state 933



state 880

    inner_option_list_value  ->  COMMA ari_exp inner_option_list_value .   (rule 202)

    $default	reduce using rule 202 (inner_option_list_value)



state 881

    inner_option_list_value  ->  COMMA array_exp inner_option_list_value .   (rule 204)

    $default	reduce using rule 204 (inner_option_list_value)



state 882

    inner_option_list_value  ->  COMMA strliteral inner_option_list_value .   (rule 203)

    $default	reduce using rule 203 (inner_option_list_value)



state 883

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 213
    INTDECLARATION	shift, and go to state 934
    CHARDECLARATION	shift, and go to state 935
    VOIDDECLARATION	shift, and go to state 216
    FLOATDECLARATION	shift, and go to state 416
    OPEN_PAR	shift, and go to state 218
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 936
    SIGNED	shift, and go to state 220
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 221
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 222
    array_cast_exp	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 884

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    OPEN_MPAR	shift, and go to state 937



state 885

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 213
    INTDECLARATION	shift, and go to state 938
    CHARDECLARATION	shift, and go to state 939
    VOIDDECLARATION	shift, and go to state 216
    FLOATDECLARATION	shift, and go to state 416
    OPEN_PAR	shift, and go to state 218
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 940
    SIGNED	shift, and go to state 220
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 221
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 222
    array_cast_exp	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 886

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)

    OPEN_MPAR	shift, and go to state 941



state 887

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    OPEN_MPAR	shift, and go to state 942



state 888

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 889
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 890
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 844
    identifier	go to state 912
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 889

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 213
    INTDECLARATION	shift, and go to state 214
    CHARDECLARATION	shift, and go to state 215
    VOIDDECLARATION	shift, and go to state 216
    FLOATDECLARATION	shift, and go to state 217
    OPEN_PAR	shift, and go to state 943
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 219
    SIGNED	shift, and go to state 220
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 221
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 222
    array_cast_exp	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 890

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 944

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 891

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 85)

    CLOSE_PAR	shift, and go to state 945



state 892

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 139)

    CLOSE_PAR	shift, and go to state 946

    CLOSE_PAR	[reduce using rule 139 (array)]
    $default	reduce using rule 139 (array)



state 893

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 84)

    $default	reduce using rule 84 (declaration)



state 894

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 153)

    $default	reduce using rule 153 (point_exp)



state 895

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR .   (rule 55)

    $default	reduce using rule 55 (statement)



state 896

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 59)

    CLOSE_BPAR	shift, and go to state 947
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 897

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    CLOSE_MPAR	shift, and go to state 948



state 898

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    OPEN_PAR	shift, and go to state 949



state 899

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    CLOSE_PAR	shift, and go to state 884



state 900

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    OPEN_PAR	shift, and go to state 950



state 901

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)

    CLOSE_PAR	shift, and go to state 886



state 902

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    CLOSE_PAR	shift, and go to state 887



state 903

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    OPEN_PAR	shift, and go to state 951
    INTLITERAL	shift, and go to state 952



state 904

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . strliteral inner_option_identifier_array_declaration   (rule 100)

    OPEN_PAR	shift, and go to state 653
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305
    STRLITERAL	shift, and go to state 128

    array_exp	go to state 953
    option_list_value	go to state 311
    option_struct_list_value	go to state 312
    strliteral	go to state 954



state 905

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration .   (rule 95)

    $default	reduce using rule 95 (option_identifier_array_declaration)



state 906

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR .   (rule 23)

    $default	reduce using rule 23 (complexProposition)



state 907

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 233)

    $default	reduce using rule 233 (type_cast)



state 908

    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    OPEN_MPAR	shift, and go to state 955



state 909

    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    OPEN_MPAR	shift, and go to state 956



state 910

    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    OPEN_MPAR	shift, and go to state 957



state 911

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    member_in_exp  ->  identifier .   (rule 172)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . DOT function   (rule 378)
    struct_member_exp  ->  identifier . IMPLY function   (rule 379)

    DOT 	shift, and go to state 206
    CLOSE_PAR	shift, and go to state 958
    IMPLY	shift, and go to state 207

    CLOSE_PAR	[reduce using rule 172 (member_in_exp)]
    $default	reduce using rule 172 (member_in_exp)



state 912

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    member_in_exp  ->  identifier .   (rule 172)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 368)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 371)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 375)
    struct_member_exp  ->  identifier . DOT function   (rule 378)
    struct_member_exp  ->  identifier . IMPLY function   (rule 379)

    DOT 	shift, and go to state 206
    CLOSE_PAR	shift, and go to state 959
    IMPLY	shift, and go to state 207

    CLOSE_PAR	[reduce using rule 172 (member_in_exp)]
    $default	reduce using rule 172 (member_in_exp)



state 913

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 226)

    $default	reduce using rule 226 (type_cast)



state 914

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 229)

    $default	reduce using rule 229 (type_cast)



state 915

    case_par  ->  CASE member_in_exp COLON . OPEN_PAR statement CLOSE_PAR init_case_par   (rule 345)

    OPEN_PAR	shift, and go to state 960



state 916

    case_par  ->  DEFAULT COLON OPEN_PAR . statement CLOSE_PAR   (rule 346)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 961
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 917

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 287)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 451
    UNSIGNED	shift, and go to state 346
    ID  	shift, and go to state 452
    STRUCT_TYPE	shift, and go to state 453

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 347
    sign_type_define	go to state 349
    all_type_define	go to state 454
    option_function_parameter_list	go to state 962



state 918

    option_function_parameter_list  ->  ID MUL MUL identifier inner_option_define_identifier .   (rule 273)

    $default	reduce using rule 273 (option_function_parameter_list)



state 919

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier inner_option_define_identifier .   (rule 269)

    $default	reduce using rule 269 (option_function_parameter_list)



state 920

    option_function_parameter_list  ->  all_type_define MUL MUL identifier inner_option_define_identifier .   (rule 286)

    $default	reduce using rule 286 (option_function_parameter_list)



state 921

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 282)

    $default	reduce using rule 282 (option_function_parameter_list)



state 922

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 283)

    CLOSE_MPAR	shift, and go to state 963
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ari_operator	go to state 239



state 923

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    empty_statement  ->  statement .   (rule 67)

    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195

    $default	reduce using rule 67 (empty_statement)



state 924

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 60)

    CLOSE_BPAR	shift, and go to state 964



state 925

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 451
    UNSIGNED	shift, and go to state 346
    ID  	shift, and go to state 452
    STRUCT_TYPE	shift, and go to state 453

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 347
    sign_type_define	go to state 349
    all_type_define	go to state 454
    option_function_parameter_list	go to state 965



state 926

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 297)

    $default	reduce using rule 297 (inner_option_define_identifier)



state 927

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 302)

    CLOSE_MPAR	shift, and go to state 966
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ari_operator	go to state 239



state 928

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 967
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 929

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 300)

    COMMA	shift, and go to state 283

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 968



state 930

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement . CLOSE_PAR   (rule 56)

    CLOSE_PAR	shift, and go to state 969
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 931

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR . statement_bpar   (rule 336)

    error	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300

    statement_bpar	go to state 970



state 932

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR .   (rule 44)

    $default	reduce using rule 44 (statement)



state 933

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)

    OPEN_PAR	shift, and go to state 971



state 934

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 972



state 935

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 409
    MUL 	shift, and go to state 973



state 936

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

    INTDECLARATION	shift, and go to state 591
    CHARDECLARATION	shift, and go to state 974



state 937

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 975
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 938

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 976



state 939

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 409
    MUL 	shift, and go to state 977



state 940

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

    INTDECLARATION	shift, and go to state 591
    CHARDECLARATION	shift, and go to state 978



state 941

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 117)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 979
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 942

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 980
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 943

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array_cast_exp  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    array_cast_exp  ->  OPEN_PAR . array_cast_exp CLOSE_PAR   (rule 146)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 156)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 176)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 211)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 234)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 373)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 377)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 381)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    STRUCT	shift, and go to state 213
    INTDECLARATION	shift, and go to state 981
    CHARDECLARATION	shift, and go to state 982
    VOIDDECLARATION	shift, and go to state 216
    FLOATDECLARATION	shift, and go to state 416
    OPEN_PAR	shift, and go to state 218
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 983
    SIGNED	shift, and go to state 220
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 221
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 222
    array_cast_exp	go to state 223
    point_exp	go to state 224
    ari_exp	go to state 225
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 226
    type_cast	go to state 103
    identifier	go to state 227
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 228



state 944

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)

    OPEN_MPAR	shift, and go to state 984



state 945

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 85)

    $default	reduce using rule 85 (declaration)



state 946

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    OPEN_PAR	shift, and go to state 985



state 947

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 59)

    $default	reduce using rule 59 (statement)



state 948

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    CLOSE_PAR	shift, and go to state 946



state 949

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    INTDECLARATION	shift, and go to state 986
    CHARDECLARATION	shift, and go to state 987
    UNSIGNED	shift, and go to state 988



state 950

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    INTDECLARATION	shift, and go to state 989
    CHARDECLARATION	shift, and go to state 990
    UNSIGNED	shift, and go to state 991



state 951

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    OPEN_PAR	shift, and go to state 992



state 952

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)

    CLOSE_PAR	shift, and go to state 944



state 953

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp . inner_option_identifier_array_declaration   (rule 99)
    array_exp  ->  array_exp . CON array_exp   (rule 192)

    COMMA	shift, and go to state 376
    CON 	shift, and go to state 490

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 993



state 954

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral . inner_option_identifier_array_declaration   (rule 100)

    COMMA	shift, and go to state 376

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 994



state 955

    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 995
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 956

    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 996
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 957

    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 997
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 958

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    OPEN_MPAR	shift, and go to state 998



state 959

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    OPEN_MPAR	shift, and go to state 999



state 960

    case_par  ->  CASE member_in_exp COLON OPEN_PAR . statement CLOSE_PAR init_case_par   (rule 345)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FILEDECLARATION	shift, and go to state 28
    MORE	shift, and go to state 29
    DEFINE	shift, and go to state 30
    EXIST	shift, and go to state 31
    FRAME	shift, and go to state 32
    FOR 	shift, and go to state 33
    WHILE	shift, and go to state 34
    TRUE	shift, and go to state 35
    FALSE	shift, and go to state 36
    REPEAT	shift, and go to state 37
    DISPLAY	shift, and go to state 38
    SKIP	shift, and go to state 39
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 45
    OPEN_BPAR	shift, and go to state 46
    FUNCTION	shift, and go to state 47
    EXTERN	shift, and go to state 48
    UNSIGNED	shift, and go to state 49
    SIGNED	shift, and go to state 50
    MUL 	shift, and go to state 51
    NEXT	shift, and go to state 52
    LENGTH	shift, and go to state 53
    REQUEST	shift, and go to state 54
    FINAL	shift, and go to state 55
    KEEP	shift, and go to state 56
    ALWAYS	shift, and go to state 57
    ID  	shift, and go to state 58
    STRUCT_TYPE	shift, and go to state 59

    statement	go to state 1000
    function	go to state 61
    struct_define_statement	go to state 62
    struct_identifier	go to state 63
    sign_declaration	go to state 64
    declaration	go to state 65
    type_define	go to state 66
    ass_statement	go to state 67
    ass_left	go to state 68
    leftaddrshift	go to state 69
    array	go to state 70
    point_exp	go to state 71
    identifier	go to state 72
    while_statement	go to state 73
    for_statement	go to state 74
    extend_for_statement	go to state 75
    switch_statement	go to state 76
    if_statement	go to state 77
    output_statement	go to state 78
    input_statement	go to state 79
    struct_member_exp	go to state 80



state 961

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    case_par  ->  DEFAULT COLON OPEN_PAR statement . CLOSE_PAR   (rule 346)

    CLOSE_PAR	shift, and go to state 1001
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 962

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 287)

    CLOSE_PAR	shift, and go to state 1002



state 963

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 283)

    COMMA	shift, and go to state 283

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1003



state 964

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 60)

    $default	reduce using rule 60 (statement)



state 965

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 298)

    CLOSE_PAR	shift, and go to state 1004



state 966

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 302)

    COMMA	shift, and go to state 283

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1005



state 967

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 301)

    CLOSE_MPAR	shift, and go to state 1006
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    ari_operator	go to state 239



state 968

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 300)

    $default	reduce using rule 300 (inner_option_define_identifier)



state 969

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR .   (rule 56)

    $default	reduce using rule 56 (statement)



state 970

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar .   (rule 336)

    $default	reduce using rule 336 (extend_for_statement)



state 971

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR function   (rule 135)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 451
    UNSIGNED	shift, and go to state 346
    ID  	shift, and go to state 452
    STRUCT_TYPE	shift, and go to state 453

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 347
    sign_type_define	go to state 349
    all_type_define	go to state 454
    option_function_parameter_list	go to state 1007



state 972

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 1008
    MUL 	shift, and go to state 579



state 973

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 1009
    MUL 	shift, and go to state 582



state 974

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 595
    MUL 	shift, and go to state 1010



state 975

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 119)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 547
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1011
    ari_operator	go to state 239



state 976

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 1012
    MUL 	shift, and go to state 579



state 977

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 1013
    MUL 	shift, and go to state 582



state 978

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 595
    MUL 	shift, and go to state 1014



state 979

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 117)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 547
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1015
    ari_operator	go to state 239



state 980

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 120)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 547
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1016
    ari_operator	go to state 239



state 981

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 1017



state 982

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 409
    MUL 	shift, and go to state 1018



state 983

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 217)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 229)

    INTDECLARATION	shift, and go to state 591
    CHARDECLARATION	shift, and go to state 1019



state 984

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 118)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1020
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 985

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    FILEDECLARATION	shift, and go to state 28
    INTDECLARATION	shift, and go to state 40
    STRDECLARATION	shift, and go to state 41
    CHARDECLARATION	shift, and go to state 42
    VOIDDECLARATION	shift, and go to state 43
    FLOATDECLARATION	shift, and go to state 44
    OPEN_PAR	shift, and go to state 451
    UNSIGNED	shift, and go to state 346
    ID  	shift, and go to state 452
    STRUCT_TYPE	shift, and go to state 453

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 347
    sign_type_define	go to state 349
    all_type_define	go to state 454
    option_function_parameter_list	go to state 1021



state 986

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    MUL 	shift, and go to state 1022



state 987

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    MUL 	shift, and go to state 1023



state 988

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CHARDECLARATION	shift, and go to state 1024



state 989

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    MUL 	shift, and go to state 1025



state 990

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    MUL 	shift, and go to state 1026



state 991

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CHARDECLARATION	shift, and go to state 1027



state 992

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    INTDECLARATION	shift, and go to state 1028
    CHARDECLARATION	shift, and go to state 1029
    UNSIGNED	shift, and go to state 1030



state 993

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration .   (rule 99)

    $default	reduce using rule 99 (option_identifier_array_declaration)



state 994

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration .   (rule 100)

    $default	reduce using rule 100 (option_identifier_array_declaration)



state 995

    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 141)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 547
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1031
    ari_operator	go to state 239



state 996

    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 144)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 547
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1032
    ari_operator	go to state 239



state 997

    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 143)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 547
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1033
    ari_operator	go to state 239



state 998

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1034
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 999

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 145)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1035
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1000

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement . CLOSE_PAR init_case_par   (rule 345)

    CLOSE_PAR	shift, and go to state 1036
    CHOP	shift, and go to state 192
    OR  	shift, and go to state 193
    PARALLEL	shift, and go to state 194
    AND 	shift, and go to state 195



state 1001

    case_par  ->  DEFAULT COLON OPEN_PAR statement CLOSE_PAR .   (rule 346)

    $default	reduce using rule 346 (case_par)



state 1002

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 287)

    COMMA	shift, and go to state 283

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1037



state 1003

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 283)

    $default	reduce using rule 283 (option_function_parameter_list)



state 1004

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 298)

    COMMA	shift, and go to state 283

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1038



state 1005

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 302)

    $default	reduce using rule 302 (inner_option_define_identifier)



state 1006

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 301)

    COMMA	shift, and go to state 283

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1039



state 1007

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR function   (rule 135)

    CLOSE_PAR	shift, and go to state 1040



state 1008

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 1041
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 715
    identifier	go to state 837
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1009

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 1042
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 717
    identifier	go to state 838
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1010

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 1043
    MUL 	shift, and go to state 733



state 1011

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 119)

    CLOSE_MPAR	shift, and go to state 1044



state 1012

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 1045
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 715
    identifier	go to state 837
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1013

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 1046
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 717
    identifier	go to state 838
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1014

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 1047
    MUL 	shift, and go to state 733



state 1015

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 117)

    CLOSE_MPAR	shift, and go to state 1048



state 1016

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 120)

    CLOSE_MPAR	shift, and go to state 1049



state 1017

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 1050
    MUL 	shift, and go to state 579



state 1018

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 1051
    MUL 	shift, and go to state 582



state 1019

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 595
    MUL 	shift, and go to state 1052



state 1020

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 118)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 547
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1053
    ari_operator	go to state 239



state 1021

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P array_exp   (rule 87)

    CLOSE_PAR	shift, and go to state 1054



state 1022

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1055



state 1023

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1056



state 1024

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    MUL 	shift, and go to state 1057



state 1025

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 1058



state 1026

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    CLOSE_PAR	shift, and go to state 1059



state 1027

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    MUL 	shift, and go to state 1060



state 1028

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    MUL 	shift, and go to state 1061



state 1029

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    MUL 	shift, and go to state 1062



state 1030

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CHARDECLARATION	shift, and go to state 1063



state 1031

    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 141)

    CLOSE_MPAR	shift, and go to state 1064



state 1032

    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 144)

    CLOSE_MPAR	shift, and go to state 1065



state 1033

    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 143)

    CLOSE_MPAR	shift, and go to state 1066



state 1034

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 142)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 547
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1067
    ari_operator	go to state 239



state 1035

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 145)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 547
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1068
    ari_operator	go to state 239



state 1036

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR . init_case_par   (rule 345)

    CASE	shift, and go to state 738
    BREAK	shift, and go to state 1069
    DEFAULT	shift, and go to state 739

    $default	reduce using rule 349 (init_case_par)

    case_par	go to state 1070
    init_case_par	go to state 1071



state 1037

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 287)

    $default	reduce using rule 287 (option_function_parameter_list)



state 1038

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 298)

    $default	reduce using rule 298 (inner_option_define_identifier)



state 1039

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 301)

    $default	reduce using rule 301 (inner_option_define_identifier)



state 1040

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . function   (rule 135)

    OPEN_PAR	shift, and go to state 1072
    EXTERN	shift, and go to state 48
    ID  	shift, and go to state 1073

    function	go to state 1074
    array	go to state 1075



state 1041

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1076

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 1042

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1077

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 1043

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 1078
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 844
    identifier	go to state 912
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1044

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 119)

    $default	reduce using rule 119 (leftaddrshift)



state 1045

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1079

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 1046

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1080

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 1047

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 1081
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 844
    identifier	go to state 912
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1048

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 117)

    $default	reduce using rule 117 (leftaddrshift)



state 1049

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 120)

    $default	reduce using rule 120 (leftaddrshift)



state 1050

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 1082
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 715
    identifier	go to state 837
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1051

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 1083
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 717
    identifier	go to state 838
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1052

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 229)

    CLOSE_PAR	shift, and go to state 1084
    MUL 	shift, and go to state 733



state 1053

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 118)

    CLOSE_MPAR	shift, and go to state 1085



state 1054

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P array_exp   (rule 87)

    ASS_P	shift, and go to state 1086

    $default	reduce using rule 86 (declaration)



state 1055

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    INTLITERAL	shift, and go to state 1087



state 1056

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    INTLITERAL	shift, and go to state 1088



state 1057

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1089



state 1058

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    INTLITERAL	shift, and go to state 1090



state 1059

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    INTLITERAL	shift, and go to state 1091



state 1060

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CLOSE_PAR	shift, and go to state 1092



state 1061

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1093



state 1062

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1094



state 1063

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    MUL 	shift, and go to state 1095



state 1064

    array_cast_exp  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 141)

    $default	reduce using rule 141 (array_cast_exp)



state 1065

    array_cast_exp  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 144)

    $default	reduce using rule 144 (array_cast_exp)



state 1066

    array_cast_exp  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 143)

    $default	reduce using rule 143 (array_cast_exp)



state 1067

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 142)

    CLOSE_MPAR	shift, and go to state 1096



state 1068

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 145)

    CLOSE_MPAR	shift, and go to state 1097



state 1069

    init_case_par  ->  BREAK . case_par   (rule 347)

    CASE	shift, and go to state 738
    DEFAULT	shift, and go to state 739

    case_par	go to state 1098



state 1070

    init_case_par  ->  case_par .   (rule 348)

    $default	reduce using rule 348 (init_case_par)



state 1071

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR init_case_par .   (rule 345)

    $default	reduce using rule 345 (case_par)



state 1072

    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 140)

    OPEN_PAR	shift, and go to state 1072
    ID  	shift, and go to state 1099

    array	go to state 556



state 1073

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    OPEN_PAR	shift, and go to state 186
    OPEN_MPAR	shift, and go to state 187



state 1074

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function .   (rule 135)

    $default	reduce using rule 135 (ass_right)



state 1075

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)

    OPEN_PAR	shift, and go to state 202



state 1076

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1100



state 1077

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1101



state 1078

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1102

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 1079

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 1103



state 1080

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    CLOSE_PAR	shift, and go to state 1104



state 1081

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1105

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 1082

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1106

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 1083

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1107

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 1084

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 145)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 1108
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    type_cast_alg_exp	go to state 714
    simple_ari_exp	go to state 577
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    casted_element	go to state 844
    identifier	go to state 912
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1085

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 118)

    $default	reduce using rule 118 (leftaddrshift)



state 1086

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . array_exp   (rule 87)

    OPEN_PAR	shift, and go to state 653
    OPEN_BPAR	shift, and go to state 304
    OPEN_MPAR	shift, and go to state 305

    array_exp	go to state 1109
    option_list_value	go to state 311
    option_struct_list_value	go to state 312



state 1087

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1076



state 1088

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1077



state 1089

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    INTLITERAL	shift, and go to state 1110



state 1090

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 1079



state 1091

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    CLOSE_PAR	shift, and go to state 1080



state 1092

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    INTLITERAL	shift, and go to state 1111



state 1093

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    INTLITERAL	shift, and go to state 1112



state 1094

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    INTLITERAL	shift, and go to state 1113



state 1095

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1114



state 1096

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 142)

    $default	reduce using rule 142 (array_cast_exp)



state 1097

    array_cast_exp  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR identifier CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 145)

    $default	reduce using rule 145 (array_cast_exp)



state 1098

    init_case_par  ->  BREAK case_par .   (rule 347)

    $default	reduce using rule 347 (init_case_par)



state 1099

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    OPEN_MPAR	shift, and go to state 187



state 1100

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    OPEN_MPAR	shift, and go to state 1115



state 1101

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    OPEN_MPAR	shift, and go to state 1116



state 1102

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1117



state 1103

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    OPEN_MPAR	shift, and go to state 1118



state 1104

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    OPEN_MPAR	shift, and go to state 1119



state 1105

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CLOSE_PAR	shift, and go to state 1120



state 1106

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1121



state 1107

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1122



state 1108

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1123

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 1109

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp .   (rule 87)
    array_exp  ->  array_exp . CON array_exp   (rule 192)

    CON 	shift, and go to state 490

    $default	reduce using rule 87 (declaration)



state 1110

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1102



state 1111

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CLOSE_PAR	shift, and go to state 1105



state 1112

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1106



state 1113

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1107



state 1114

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    INTLITERAL	shift, and go to state 1124



state 1115

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1125
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1116

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1126
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1117

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    OPEN_MPAR	shift, and go to state 1127



state 1118

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1128
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1119

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1129
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1120

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    OPEN_MPAR	shift, and go to state 1130



state 1121

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    OPEN_MPAR	shift, and go to state 1131



state 1122

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    OPEN_MPAR	shift, and go to state 1132



state 1123

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1133



state 1124

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1123



state 1125

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 129)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 547
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1134
    ari_operator	go to state 239



state 1126

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 127)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 547
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1135
    ari_operator	go to state 239



state 1127

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1136
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1128

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 123)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 547
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1137
    ari_operator	go to state 239



state 1129

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 121)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 547
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1138
    ari_operator	go to state 239



state 1130

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1139
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1131

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1140
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1132

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1141
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1133

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    OPEN_MPAR	shift, and go to state 1142



state 1134

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 129)

    CLOSE_MPAR	shift, and go to state 1143



state 1135

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 127)

    CLOSE_MPAR	shift, and go to state 1144



state 1136

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 128)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 547
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1145
    ari_operator	go to state 239



state 1137

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 123)

    CLOSE_MPAR	shift, and go to state 1146



state 1138

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 121)

    CLOSE_MPAR	shift, and go to state 1147



state 1139

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 122)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 547
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1148
    ari_operator	go to state 239



state 1140

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 126)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 547
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1149
    ari_operator	go to state 239



state 1141

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 124)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 547
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1150
    ari_operator	go to state 239



state 1142

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    IF  	shift, and go to state 86
    POINTERNULL	shift, and go to state 87
    OPEN_PAR	shift, and go to state 88
    EXTERN	shift, and go to state 48
    ADDRESS	shift, and go to state 89
    SUB 	shift, and go to state 90
    MUL 	shift, and go to state 51
    BNE 	shift, and go to state 91
    ID  	shift, and go to state 58
    INTLITERAL	shift, and go to state 92
    FLOATLITERAL	shift, and go to state 93
    CHARLITERAL	shift, and go to state 94

    function	go to state 95
    array	go to state 96
    array_cast_exp	go to state 97
    point_exp	go to state 98
    ari_exp	go to state 1151
    simple_ari_exp	go to state 100
    member_in_exp	go to state 101
    address_exp	go to state 102
    type_cast	go to state 103
    identifier	go to state 104
    intliteral	go to state 105
    charliteral	go to state 106
    floatliteral	go to state 107
    struct_member_exp	go to state 108



state 1143

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 129)

    $default	reduce using rule 129 (leftaddrshift)



state 1144

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 127)

    $default	reduce using rule 127 (leftaddrshift)



state 1145

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 128)

    CLOSE_MPAR	shift, and go to state 1152



state 1146

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 123)

    $default	reduce using rule 123 (leftaddrshift)



state 1147

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 121)

    $default	reduce using rule 121 (leftaddrshift)



state 1148

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 122)

    CLOSE_MPAR	shift, and go to state 1153



state 1149

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 126)

    CLOSE_MPAR	shift, and go to state 1154



state 1150

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 124)

    CLOSE_MPAR	shift, and go to state 1155



state 1151

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 125)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 159)

    COMMA	shift, and go to state 547
    ADD 	shift, and go to state 237
    SUB 	shift, and go to state 238

    $default	reduce using rule 149 (option_ari_exp)

    option_ari_exp	go to state 1156
    ari_operator	go to state 239



state 1152

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 128)

    $default	reduce using rule 128 (leftaddrshift)



state 1153

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 122)

    $default	reduce using rule 122 (leftaddrshift)



state 1154

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 126)

    $default	reduce using rule 126 (leftaddrshift)



state 1155

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 124)

    $default	reduce using rule 124 (leftaddrshift)



state 1156

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 125)

    CLOSE_MPAR	shift, and go to state 1157



state 1157

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 125)

    $default	reduce using rule 125 (leftaddrshift)



state 1158

    $   	go to state 1159



state 1159

    $   	go to state 1160



state 1160

    $default	accept
