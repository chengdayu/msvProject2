Useless nonterminals:

   option_array_declaration
   inner_option_array_declaration


Terminals which are not used:

   POINTERDECLARATION
   LISTDECLARATION
   OVER
   CYLINDER
   OVEREP
   NON_DETERMINED
   SEND
   RECEIVE
   CHANNEL
   PUT
   GET
   ERROR_TOKEN
   FREXP
   PREFIX


Useless rules:

#110   option_array_declaration :	 ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#111   inner_option_array_declaration :	 COMMA ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#112   inner_option_array_declaration :	;
#113   inner_option_array_declaration :	 COMMA error;


Conflict in state 107 between rule 13 and token CHOP resolved as reduce.
Conflict in state 107 between rule 13 and token IFF resolved as reduce.
Conflict in state 107 between rule 13 and token PROPIMPLY resolved as reduce.
Conflict in state 107 between rule 13 and token OR resolved as reduce.
Conflict in state 107 between rule 13 and token AND resolved as reduce.
Conflict in state 107 between rule 13 and token CHOPSTAR resolved as an error.
Conflict in state 108 between rule 22 and token CHOP resolved as reduce.
Conflict in state 108 between rule 22 and token IFF resolved as reduce.
Conflict in state 108 between rule 22 and token PROPIMPLY resolved as reduce.
Conflict in state 108 between rule 22 and token OR resolved as reduce.
Conflict in state 108 between rule 22 and token AND resolved as reduce.
Conflict in state 108 between rule 22 and token CHOPSTAR resolved as an error.
Conflict in state 158 between rule 21 and token CHOP resolved as reduce.
Conflict in state 158 between rule 21 and token IFF resolved as reduce.
Conflict in state 158 between rule 21 and token PROPIMPLY resolved as reduce.
Conflict in state 158 between rule 21 and token OR resolved as reduce.
Conflict in state 158 between rule 21 and token AND resolved as reduce.
Conflict in state 158 between rule 21 and token CHOPSTAR resolved as an error.
Conflict in state 159 between rule 10 and token CHOP resolved as reduce.
Conflict in state 159 between rule 10 and token IFF resolved as reduce.
Conflict in state 159 between rule 10 and token PROPIMPLY resolved as reduce.
Conflict in state 159 between rule 10 and token OR resolved as reduce.
Conflict in state 159 between rule 10 and token AND resolved as reduce.
Conflict in state 159 between rule 10 and token CHOPSTAR resolved as an error.
Conflict in state 160 between rule 9 and token CHOP resolved as reduce.
Conflict in state 160 between rule 9 and token IFF resolved as reduce.
Conflict in state 160 between rule 9 and token PROPIMPLY resolved as reduce.
Conflict in state 160 between rule 9 and token OR resolved as reduce.
Conflict in state 160 between rule 9 and token AND resolved as reduce.
Conflict in state 160 between rule 9 and token CHOPSTAR resolved as an error.
Conflict in state 161 between rule 20 and token CHOP resolved as reduce.
Conflict in state 161 between rule 20 and token IFF resolved as reduce.
Conflict in state 161 between rule 20 and token PROPIMPLY resolved as reduce.
Conflict in state 161 between rule 20 and token OR resolved as reduce.
Conflict in state 161 between rule 20 and token AND resolved as reduce.
Conflict in state 161 between rule 20 and token CHOPSTAR resolved as an error.
Conflict in state 162 between rule 12 and token CHOP resolved as reduce.
Conflict in state 162 between rule 12 and token IFF resolved as reduce.
Conflict in state 162 between rule 12 and token PROPIMPLY resolved as reduce.
Conflict in state 162 between rule 12 and token OR resolved as reduce.
Conflict in state 162 between rule 12 and token AND resolved as reduce.
Conflict in state 162 between rule 12 and token CHOPSTAR resolved as an error.
Conflict in state 163 between rule 11 and token CHOP resolved as reduce.
Conflict in state 163 between rule 11 and token IFF resolved as reduce.
Conflict in state 163 between rule 11 and token PROPIMPLY resolved as reduce.
Conflict in state 163 between rule 11 and token OR resolved as reduce.
Conflict in state 163 between rule 11 and token AND resolved as reduce.
Conflict in state 163 between rule 11 and token CHOPSTAR resolved as an error.
Conflict in state 318 between rule 220 and token IMPLY resolved as reduce.
Conflict in state 321 between rule 219 and token IMPLY resolved as reduce.
Conflict in state 344 between rule 8 and token CHOP resolved as reduce.
Conflict in state 344 between rule 8 and token IFF resolved as shift.
Conflict in state 344 between rule 8 and token PROPIMPLY resolved as shift.
Conflict in state 344 between rule 8 and token OR resolved as shift.
Conflict in state 344 between rule 8 and token AND resolved as shift.
Conflict in state 344 between rule 8 and token CHOPSTAR resolved as shift.
Conflict in state 345 between rule 6 and token CHOP resolved as reduce.
Conflict in state 345 between rule 6 and token IFF resolved as reduce.
Conflict in state 345 between rule 6 and token PROPIMPLY resolved as reduce.
Conflict in state 345 between rule 6 and token OR resolved as shift.
Conflict in state 345 between rule 6 and token AND resolved as shift.
Conflict in state 345 between rule 6 and token CHOPSTAR resolved as shift.
Conflict in state 346 between rule 7 and token CHOP resolved as reduce.
Conflict in state 346 between rule 7 and token IFF resolved as reduce.
Conflict in state 346 between rule 7 and token PROPIMPLY resolved as reduce.
Conflict in state 346 between rule 7 and token OR resolved as shift.
Conflict in state 346 between rule 7 and token AND resolved as shift.
Conflict in state 346 between rule 7 and token CHOPSTAR resolved as shift.
Conflict in state 347 between rule 5 and token CHOP resolved as reduce.
Conflict in state 347 between rule 5 and token IFF resolved as reduce.
Conflict in state 347 between rule 5 and token PROPIMPLY resolved as reduce.
Conflict in state 347 between rule 5 and token OR resolved as reduce.
Conflict in state 347 between rule 5 and token AND resolved as shift.
Conflict in state 347 between rule 5 and token CHOPSTAR resolved as shift.
Conflict in state 348 between rule 4 and token CHOP resolved as reduce.
Conflict in state 348 between rule 4 and token IFF resolved as reduce.
Conflict in state 348 between rule 4 and token PROPIMPLY resolved as reduce.
Conflict in state 348 between rule 4 and token OR resolved as reduce.
Conflict in state 348 between rule 4 and token AND resolved as reduce.
Conflict in state 348 between rule 4 and token CHOPSTAR resolved as shift.
Conflict in state 355 between rule 304 and token OR resolved as reduce.
Conflict in state 355 between rule 304 and token AND resolved as reduce.
Conflict in state 423 between rule 399 and token OR resolved as reduce.
Conflict in state 423 between rule 399 and token AND resolved as reduce.
Conflict in state 488 between rule 32 and token CHOP resolved as reduce.
Conflict in state 488 between rule 32 and token OR resolved as shift.
Conflict in state 488 between rule 32 and token PARALLEL resolved as shift.
Conflict in state 488 between rule 32 and token AND resolved as shift.
Conflict in state 489 between rule 31 and token CHOP resolved as reduce.
Conflict in state 489 between rule 31 and token OR resolved as reduce.
Conflict in state 489 between rule 31 and token PARALLEL resolved as reduce.
Conflict in state 489 between rule 31 and token AND resolved as shift.
Conflict in state 490 between rule 54 and token CHOP resolved as reduce.
Conflict in state 490 between rule 54 and token OR resolved as reduce.
Conflict in state 490 between rule 54 and token PARALLEL resolved as reduce.
Conflict in state 490 between rule 54 and token AND resolved as shift.
Conflict in state 491 between rule 30 and token CHOP resolved as reduce.
Conflict in state 491 between rule 30 and token OR resolved as reduce.
Conflict in state 491 between rule 30 and token PARALLEL resolved as reduce.
Conflict in state 491 between rule 30 and token AND resolved as reduce.
Conflict in state 569 between rule 306 and token OR resolved as reduce.
Conflict in state 569 between rule 306 and token AND resolved as shift.
Conflict in state 570 between rule 305 and token OR resolved as reduce.
Conflict in state 570 between rule 305 and token AND resolved as reduce.
Conflict in state 642 between rule 401 and token OR resolved as reduce.
Conflict in state 642 between rule 401 and token AND resolved as shift.
Conflict in state 643 between rule 400 and token OR resolved as reduce.
Conflict in state 643 between rule 400 and token AND resolved as reduce.
Conflict in state 820 between rule 204 and token CON resolved as reduce.
State 144 contains 2 shift/reduce conflicts.
State 145 contains 2 shift/reduce conflicts.
State 147 contains 14 shift/reduce conflicts.
State 153 contains 2 shift/reduce conflicts.
State 172 contains 2 shift/reduce conflicts.
State 210 contains 3 reduce/reduce conflicts.
State 212 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 213 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 214 contains 1 shift/reduce conflict.
State 216 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 218 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 219 contains 1 shift/reduce conflict.
State 255 contains 1 shift/reduce conflict.
State 286 contains 1 shift/reduce conflict.
State 287 contains 1 shift/reduce conflict.
State 289 contains 1 shift/reduce conflict.
State 290 contains 1 shift/reduce conflict.
State 291 contains 1 shift/reduce conflict.
State 293 contains 2 shift/reduce conflicts.
State 294 contains 2 shift/reduce conflicts.
State 295 contains 2 shift/reduce conflicts.
State 296 contains 2 shift/reduce conflicts.
State 297 contains 2 shift/reduce conflicts.
State 298 contains 2 shift/reduce conflicts.
State 299 contains 2 shift/reduce conflicts.
State 300 contains 2 shift/reduce conflicts.
State 301 contains 2 shift/reduce conflicts.
State 302 contains 2 shift/reduce conflicts.
State 303 contains 2 shift/reduce conflicts.
State 304 contains 2 shift/reduce conflicts.
State 305 contains 2 shift/reduce conflicts.
State 306 contains 2 shift/reduce conflicts.
State 307 contains 2 shift/reduce conflicts.
State 308 contains 2 shift/reduce conflicts.
State 311 contains 2 shift/reduce conflicts.
State 312 contains 2 shift/reduce conflicts.
State 313 contains 2 shift/reduce conflicts.
State 318 contains 1 shift/reduce conflict.
State 321 contains 1 shift/reduce conflict.
State 353 contains 1 shift/reduce conflict.
State 356 contains 2 shift/reduce conflicts.
State 357 contains 2 shift/reduce conflicts.
State 384 contains 1 shift/reduce conflict.
State 385 contains 1 shift/reduce conflict.
State 386 contains 1 shift/reduce conflict.
State 387 contains 1 shift/reduce conflict.
State 404 contains 1 shift/reduce conflict.
State 413 contains 1 shift/reduce conflict.
State 414 contains 1 shift/reduce conflict.
State 415 contains 1 shift/reduce conflict.
State 421 contains 1 shift/reduce conflict.
State 465 contains 1 shift/reduce conflict.
State 466 contains 1 shift/reduce conflict.
State 468 contains 1 shift/reduce conflict.
State 469 contains 1 shift/reduce conflict.
State 471 contains 1 shift/reduce conflict.
State 472 contains 1 shift/reduce conflict.
State 495 contains 2 shift/reduce conflicts.
State 496 contains 2 shift/reduce conflicts.
State 498 contains 2 shift/reduce conflicts.
State 499 contains 2 shift/reduce conflicts.
State 500 contains 2 shift/reduce conflicts.
State 501 contains 2 shift/reduce conflicts.
State 502 contains 2 shift/reduce conflicts.
State 503 contains 2 shift/reduce conflicts.
State 505 contains 2 shift/reduce conflicts.
State 506 contains 2 shift/reduce conflicts.
State 508 contains 2 shift/reduce conflicts.
State 509 contains 2 shift/reduce conflicts.
State 532 contains 1 shift/reduce conflict.
State 554 contains 8 shift/reduce conflicts.
State 556 contains 2 shift/reduce conflicts.
State 576 contains 1 shift/reduce conflict.
State 610 contains 1 shift/reduce conflict.
State 611 contains 1 shift/reduce conflict.
State 612 contains 1 shift/reduce conflict.
State 629 contains 1 shift/reduce conflict.
State 630 contains 1 shift/reduce conflict.
State 634 contains 1 shift/reduce conflict.
State 665 contains 1 shift/reduce conflict.
State 666 contains 1 shift/reduce conflict.
State 667 contains 1 shift/reduce conflict.
State 691 contains 1 shift/reduce conflict.
State 711 contains 3 shift/reduce conflicts.
State 714 contains 10 shift/reduce conflicts.
State 831 contains 2 shift/reduce conflicts.
State 832 contains 2 shift/reduce conflicts.
State 849 contains 1 shift/reduce conflict.
State 850 contains 1 shift/reduce conflict.
State 862 contains 1 shift/reduce conflict.
State 863 contains 1 shift/reduce conflict.
State 868 contains 2 shift/reduce conflicts.
State 869 contains 2 shift/reduce conflicts.
State 871 contains 2 shift/reduce conflicts.
State 872 contains 2 shift/reduce conflicts.
State 976 contains 1 shift/reduce conflict.
State 977 contains 1 shift/reduce conflict.
State 979 contains 1 shift/reduce conflict.
State 980 contains 1 shift/reduce conflict.
State 981 contains 1 shift/reduce conflict.
State 982 contains 1 shift/reduce conflict.
State 999 contains 2 shift/reduce conflicts.
State 1007 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 1013 contains 1 shift/reduce conflict.
State 1019 contains 2 shift/reduce conflicts.
State 1022 contains 8 shift/reduce conflicts.
State 1088 contains 1 shift/reduce conflict.
State 1090 contains 1 shift/reduce conflict.
State 1091 contains 1 shift/reduce conflict.
State 1093 contains 1 shift/reduce conflict.
State 1168 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 1169 contains 1 shift/reduce conflict.
State 1170 contains 1 shift/reduce conflict.
State 1257 contains 1 shift/reduce conflict.
State 1258 contains 1 shift/reduce conflict.
State 1262 contains 1 shift/reduce conflict.
State 1263 contains 1 shift/reduce conflict.
State 1294 contains 1 shift/reduce conflict.
State 1297 contains 1 shift/reduce conflict.
State 1299 contains 1 shift/reduce conflict.
State 1300 contains 1 shift/reduce conflict.
State 1325 contains 1 shift/reduce conflict.

Grammar
rule 1    program -> gComplexProposition statement
rule 2    gComplexProposition -> PBEGIN complexProposition PEND
rule 3    gComplexProposition ->		/* empty */
rule 4    complexProposition -> complexProposition AND complexProposition
rule 5    complexProposition -> complexProposition OR complexProposition
rule 6    complexProposition -> complexProposition IFF complexProposition
rule 7    complexProposition -> complexProposition PROPIMPLY complexProposition
rule 8    complexProposition -> complexProposition CHOP complexProposition
rule 9    complexProposition -> ALWAYS complexProposition
rule 10   complexProposition -> KEEP complexProposition
rule 11   complexProposition -> SOMETIMES complexProposition
rule 12   complexProposition -> W_NEXT complexProposition
rule 13   complexProposition -> NEXT complexProposition
rule 14   complexProposition -> SKIP
rule 15   complexProposition -> MY_TRUE
rule 16   complexProposition -> MY_FALSE
rule 17   complexProposition -> LENGTH ari_exp
rule 18   complexProposition -> EMPTY
rule 19   complexProposition -> MORE
rule 20   complexProposition -> HALT complexProposition
rule 21   complexProposition -> FINAL complexProposition
rule 22   complexProposition -> NEGATION complexProposition
rule 23   complexProposition -> OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR
rule 24   complexProposition -> ID
rule 25   complexProposition -> DEFINE ID COLON prime_bool_exp
rule 26   complexProposition -> complexProposition CHOPSTAR
rule 27   complexProposition -> OPEN_PAR complexProposition CLOSE_PAR
rule 28   poptional_projection -> COMMA complexProposition poptional_projection
rule 29   poptional_projection ->		/* empty */
rule 30   statement -> statement AND statement
rule 31   statement -> statement OR statement
rule 32   statement -> statement CHOP statement
rule 33   statement -> ass_statement
rule 34   statement -> sign_declaration
rule 35   statement -> switch_statement
rule 36   statement -> if_statement
rule 37   statement -> while_statement
rule 38   statement -> for_statement
rule 39   statement -> extend_for_statement
rule 40   statement -> NEXT OPEN_PAR statement CLOSE_PAR
rule 41   statement -> KEEP OPEN_PAR statement CLOSE_PAR
rule 42   statement -> ALWAYS OPEN_PAR statement CLOSE_PAR
rule 43   statement -> AWAIT OPEN_PAR bool_exp CLOSE_PAR
rule 44   statement -> REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR
rule 45   statement -> SKIP
rule 46   statement -> EMPTY
rule 47   statement -> MORE
rule 48   statement -> LENGTH OPEN_PAR ari_exp CLOSE_PAR
rule 49   statement -> input_statement
rule 50   statement -> output_statement
rule 51   statement -> TRUE
rule 52   statement -> FALSE
rule 53   statement -> FINAL OPEN_PAR statement CLOSE_PAR
rule 54   statement -> statement PARALLEL statement
rule 55   statement -> OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR
rule 56   statement -> FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR
rule 57   statement -> OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar
rule 58   statement -> OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar
rule 59   statement -> DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR
rule 60   statement -> FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 61   statement -> PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR
rule 62   statement -> struct_define_statement
rule 63   statement -> FREE OPEN_PAR identifier CLOSE_PAR
rule 64   statement -> SYSTEM OPEN_PAR str_func_parameter CLOSE_PAR
rule 65   statement -> function
rule 66   statement -> EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR
rule 67   statement -> OPEN_PAR statement CLOSE_PAR
rule 68   option_struct_declaration -> sign_declaration
rule 69   option_struct_declaration -> sign_declaration AND option_struct_declaration
rule 70   empty_statement -> statement
rule 71   empty_statement ->		/* empty */
rule 72   function -> ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 73   function -> EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 74   function -> array OPEN_PAR option_function_identifier CLOSE_PAR
rule 75   function -> file_statement
rule 76   function -> String_Function
rule 77   struct_define_statement -> struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR
rule 78   struct_identifier -> STRUCT ID
rule 79   struct_identifier -> UNION ID
rule 80   sign_declaration -> SIGNED declaration
rule 81   sign_declaration -> UNSIGNED declaration
rule 82   sign_declaration -> declaration
rule 83   declaration -> type_define option_identifier_array_declaration
rule 84   declaration -> STRUCT_TYPE option_identifier_array_declaration
rule 85   declaration -> STRUCT ID option_identifier_array_declaration
rule 86   declaration -> UNION ID option_identifier_array_declaration
rule 87   declaration -> STRUCT STRUCT_TYPE option_identifier_array_declaration
rule 88   declaration -> UNION STRUCT_TYPE option_identifier_array_declaration
rule 89   declaration -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 90   declaration -> OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 91   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 92   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp
rule 93   type_define -> INTDECLARATION
rule 94   type_define -> FLOATDECLARATION
rule 95   type_define -> CHARDECLARATION
rule 96   type_define -> STRDECLARATION
rule 97   type_define -> VOIDDECLARATION
rule 98   type_define -> FILEDECLARATION
rule 99   option_identifier_array_declaration -> identifier inner_option_identifier_array_declaration
rule 100  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration
rule 101  option_identifier_array_declaration -> identifier ASS_P ass_right inner_option_identifier_array_declaration
rule 102  option_identifier_array_declaration -> ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration
rule 103  option_identifier_array_declaration -> ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration
rule 104  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration
rule 105  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration
rule 106  option_identifier_array_declaration -> MUL option_identifier_array_declaration
rule 107  inner_option_identifier_array_declaration -> COMMA option_identifier_array_declaration
rule 108  inner_option_identifier_array_declaration -> COMMA error
rule 109  inner_option_identifier_array_declaration ->		/* empty */
rule 114  file_statement -> FOPEN OPEN_PAR ass_left COMMA strliteral CLOSE_PAR
rule 115  file_statement -> FGETS OPEN_PAR identifier COMMA intliteral COMMA identifier CLOSE_PAR
rule 116  file_statement -> FGETC OPEN_PAR identifier CLOSE_PAR
rule 117  file_statement -> FPUTS OPEN_PAR identifier COMMA identifier CLOSE_PAR
rule 118  file_statement -> FPUTC OPEN_PAR identifier COMMA identifier CLOSE_PAR
rule 119  file_statement -> FPUTC OPEN_PAR array COMMA identifier CLOSE_PAR
rule 120  file_statement -> FCLOSE OPEN_PAR identifier CLOSE_PAR
rule 121  ass_statement -> ass_left assign_operator ass_right
rule 122  ass_left -> identifier
rule 123  ass_left -> struct_member_exp
rule 124  ass_left -> array
rule 125  ass_left -> point_exp
rule 126  ass_left -> OPEN_PAR ass_left CLOSE_PAR
rule 127  ass_left -> NEXT ass_left
rule 128  ass_left -> leftaddrshift
rule 129  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 130  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 131  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 132  leftaddrshift -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 133  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 134  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 135  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 136  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 137  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 138  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 139  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 140  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 141  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 142  assign_operator -> ASS_P
rule 143  assign_operator -> ASS_N
rule 144  ass_right -> ari_exp
rule 145  ass_right -> array_exp
rule 146  ass_right -> strliteral
rule 147  ass_right -> OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function
rule 148  ass_right -> OPEN_PAR ass_right CLOSE_PAR
rule 149  ass_right -> rightaddrshift
rule 150  rightaddrshift -> MUL OPEN_PAR leftaddrshift CLOSE_PAR
rule 151  array -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 152  array -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 153  array -> OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 154  array -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 155  array -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 156  array -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 157  array -> OPEN_PAR array CLOSE_PAR
rule 158  option_ari_exp -> COMMA ari_exp option_ari_exp
rule 159  option_ari_exp -> COMMA error
rule 160  option_ari_exp ->		/* empty */
rule 161  point_exp -> MUL identifier
rule 162  point_exp -> MUL point_exp
rule 163  point_exp -> MUL array
rule 164  point_exp -> OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 165  point_exp -> MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp
rule 166  point_exp -> MUL OPEN_PAR ari_exp CLOSE_PAR
rule 167  point_exp -> OPEN_PAR point_exp CLOSE_PAR
rule 168  ari_exp -> simple_ari_exp
rule 169  ari_exp -> simple_ari_exp relation_operator ari_exp
rule 170  ari_exp -> ari_exp ari_operator simple_ari_exp
rule 171  ari_exp -> IF bool_exp THEN ari_exp option_exp_else_statement
rule 172  type_cast_alg_exp -> simple_ari_exp
rule 173  type_cast_alg_exp -> simple_ari_exp ari_operator simple_ari_exp
rule 174  option_exp_else_statement -> ELSE ari_exp
rule 175  option_exp_else_statement ->		/* empty */
rule 176  simple_ari_exp -> member_in_exp
rule 177  simple_ari_exp -> simple_ari_exp bi_operator member_in_exp
rule 178  member_in_exp -> intliteral
rule 179  member_in_exp -> SUB member_in_exp
rule 180  member_in_exp -> BNE member_in_exp
rule 181  member_in_exp -> POINTERNULL
rule 182  member_in_exp -> floatliteral
rule 183  member_in_exp -> identifier
rule 184  member_in_exp -> array
rule 185  member_in_exp -> point_exp
rule 186  member_in_exp -> function
rule 187  member_in_exp -> OPEN_PAR ari_exp CLOSE_PAR
rule 188  member_in_exp -> math_function
rule 189  member_in_exp -> charliteral
rule 190  member_in_exp -> address_exp
rule 191  member_in_exp -> type_cast
rule 192  member_in_exp -> struct_member_exp
rule 193  member_in_exp -> size_of
rule 194  bi_operator -> MUL
rule 195  bi_operator -> DIV
rule 196  bi_operator -> MOD
rule 197  bi_operator -> LST
rule 198  bi_operator -> RST
rule 199  bi_operator -> ADDRESS
rule 200  bi_operator -> INTER_OR
rule 201  bi_operator -> CON
rule 202  ari_operator -> ADD
rule 203  ari_operator -> SUB
rule 204  array_exp -> array_exp CON array_exp
rule 205  array_exp -> option_list_value
rule 206  array_exp -> option_struct_list_value
rule 207  array_exp -> OPEN_PAR array_exp CLOSE_PAR
rule 208  option_list_value -> OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR
rule 209  option_list_value -> OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR
rule 210  option_list_value -> OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR
rule 211  option_struct_list_value -> OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR
rule 212  option_struct_list_value -> OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR
rule 213  option_struct_list_value -> OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR
rule 214  inner_option_list_value -> COMMA ari_exp inner_option_list_value
rule 215  inner_option_list_value -> COMMA strliteral inner_option_list_value
rule 216  inner_option_list_value -> COMMA array_exp inner_option_list_value
rule 217  inner_option_list_value ->		/* empty */
rule 218  inner_option_list_value -> COMMA error
rule 219  address_exp -> ADDRESS identifier
rule 220  address_exp -> ADDRESS array
rule 221  address_exp -> ADDRESS struct_member_exp
rule 222  address_exp -> ADDRESS address_exp
rule 223  address_exp -> OPEN_PAR address_exp CLOSE_PAR
rule 224  type_cast -> OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 225  type_cast -> OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp
rule 226  type_cast -> OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 227  type_cast -> OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 228  type_cast -> OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 229  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 230  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 231  type_cast -> OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element
rule 232  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element
rule 233  type_cast -> OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element
rule 234  type_cast -> OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element
rule 235  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element
rule 236  type_cast -> OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element
rule 237  type_cast -> OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 238  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 239  type_cast -> OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element
rule 240  type_cast -> OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 241  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 242  type_cast -> OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element
rule 243  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 244  type_cast -> OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 245  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 246  type_cast -> OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 247  casted_element -> type_cast_alg_exp
rule 248  casted_element -> MALLOC OPEN_PAR ari_exp CLOSE_PAR
rule 249  all_sizeof_type -> all_type_define
rule 250  all_sizeof_type -> INTDECLARATION MUL
rule 251  all_sizeof_type -> FLOATDECLARATION MUL
rule 252  all_sizeof_type -> CHARDECLARATION MUL
rule 253  all_sizeof_type -> UNSIGNED INTDECLARATION MUL
rule 254  all_sizeof_type -> UNSIGNED CHARDECLARATION MUL
rule 255  all_sizeof_type -> STRUCT STRUCT_TYPE MUL
rule 256  all_sizeof_type -> STRUCT_TYPE MUL
rule 257  size_of -> SIZEOF OPEN_PAR ari_exp CLOSE_PAR
rule 258  size_of -> SIZEOF OPEN_PAR all_sizeof_type CLOSE_PAR
rule 259  size_of -> SIZEOF OPEN_PAR STRUCT_TYPE CLOSE_PAR
rule 260  size_of -> SIZEOF OPEN_PAR strliteral CLOSE_PAR
rule 261  String_Function -> String_Function_head
rule 262  String_Function -> String_Function_tail
rule 263  String_Function -> String_Function_cat
rule 264  String_Function -> String_Function_cpy
rule 265  String_Function -> String_Function_cmp
rule 266  String_Function -> String_Function_len
rule 267  String_Function_head -> STRFUNCHEAD OPEN_PAR str_func_parameter CLOSE_PAR
rule 268  String_Function_tail -> STRFUNCTAIL OPEN_PAR str_func_parameter CLOSE_PAR
rule 269  String_Function_cat -> STRFUNCCAT OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR
rule 270  String_Function_cmp -> STRFUNCCMP OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR
rule 271  String_Function_cpy -> STRFUNCCPY OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR
rule 272  String_Function_len -> STRFUNCLEN OPEN_PAR str_func_parameter CLOSE_PAR
rule 273  str_func_parameter -> identifier
rule 274  str_func_parameter -> array
rule 275  str_func_parameter -> point_exp
rule 276  str_func_parameter -> strliteral
rule 277  str_func_parameter -> String_Function
rule 278  str_func_parameter -> struct_member_exp
rule 279  math_function -> ROUND ari_exp
rule 280  math_function -> CEIL ari_exp
rule 281  math_function -> FLOOR ari_exp
rule 282  math_function -> SIN ari_exp
rule 283  math_function -> COS ari_exp
rule 284  math_function -> TAN ari_exp
rule 285  math_function -> ASIN ari_exp
rule 286  math_function -> ACOS ari_exp
rule 287  math_function -> ATAN ari_exp
rule 288  math_function -> SINH ari_exp
rule 289  math_function -> COSH ari_exp
rule 290  math_function -> TANH ari_exp
rule 291  math_function -> EXP ari_exp
rule 292  math_function -> LOG ari_exp
rule 293  math_function -> LOG10 ari_exp
rule 294  math_function -> SQRT ari_exp
rule 295  math_function -> ATAN2 OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR
rule 296  math_function -> POW OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR
rule 297  math_function -> FMOD OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR
rule 298  math_function -> MODF OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR
rule 299  math_function -> LDEXP OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR
rule 300  math_function -> ABS ari_exp
rule 301  math_function -> FABS ari_exp
rule 302  math_function -> LABS ari_exp
rule 303  bool_exp -> prime_bool_exp
rule 304  bool_exp -> NEGATION bool_exp
rule 305  bool_exp -> bool_exp AND bool_exp
rule 306  bool_exp -> bool_exp OR bool_exp
rule 307  bool_exp -> OPEN_PAR bool_exp CLOSE_PAR
rule 308  prime_bool_exp -> ari_exp relation_operator ari_exp
rule 309  prime_bool_exp -> MY_TRUE
rule 310  prime_bool_exp -> MY_FALSE
rule 311  prime_bool_exp -> ari_exp
rule 312  prime_bool_exp -> ari_exp EQ strliteral
rule 313  prime_bool_exp -> ari_exp NE strliteral
rule 314  prime_bool_exp -> strliteral EQ ari_exp
rule 315  prime_bool_exp -> strliteral NE ari_exp
rule 316  prime_bool_exp -> ari_exp EQ POINTERNULL
rule 317  prime_bool_exp -> ari_exp NE POINTERNULL
rule 318  prime_bool_exp -> POINTERNULL EQ ari_exp
rule 319  prime_bool_exp -> POINTERNULL NE ari_exp
rule 320  prime_bool_exp -> ari_exp EQ charliteral
rule 321  prime_bool_exp -> ari_exp NE charliteral
rule 322  relation_operator -> GE
rule 323  relation_operator -> LE
rule 324  relation_operator -> NE
rule 325  relation_operator -> GT
rule 326  relation_operator -> LT
rule 327  relation_operator -> EQ
rule 328  sign_type_define -> UNSIGNED INTDECLARATION
rule 329  sign_type_define -> UNSIGNED CHARDECLARATION
rule 330  all_type_define -> sign_type_define
rule 331  all_type_define -> type_define
rule 332  option_function_parameter_list -> all_type_define identifier inner_option_define_identifier
rule 333  option_function_parameter_list -> all_type_define inner_option_define_identifier
rule 334  option_function_parameter_list -> STRUCT_TYPE identifier inner_option_define_identifier
rule 335  option_function_parameter_list -> STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 336  option_function_parameter_list -> STRUCT_TYPE MUL MUL identifier inner_option_define_identifier
rule 337  option_function_parameter_list -> STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 338  option_function_parameter_list -> ID identifier inner_option_define_identifier
rule 339  option_function_parameter_list -> ID MUL identifier inner_option_define_identifier
rule 340  option_function_parameter_list -> ID MUL MUL identifier inner_option_define_identifier
rule 341  option_function_parameter_list -> ID identifier ARRAY inner_option_define_identifier
rule 342  option_function_parameter_list -> STRUCT_TYPE inner_option_define_identifier
rule 343  option_function_parameter_list -> STRUCT_TYPE MUL inner_option_define_identifier
rule 344  option_function_parameter_list -> STRUCT_TYPE MUL MUL inner_option_define_identifier
rule 345  option_function_parameter_list -> ID inner_option_define_identifier
rule 346  option_function_parameter_list -> ID MUL inner_option_define_identifier
rule 347  option_function_parameter_list -> ID MUL MUL inner_option_define_identifier
rule 348  option_function_parameter_list -> all_type_define identifier ARRAY inner_option_define_identifier
rule 349  option_function_parameter_list -> all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 350  option_function_parameter_list -> all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 351  option_function_parameter_list -> all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 352  option_function_parameter_list -> all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 353  option_function_parameter_list -> all_type_define MUL identifier inner_option_define_identifier
rule 354  option_function_parameter_list -> all_type_define MUL inner_option_define_identifier
rule 355  option_function_parameter_list -> all_type_define MUL MUL identifier inner_option_define_identifier
rule 356  option_function_parameter_list -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 357  option_function_parameter_list ->		/* empty */
rule 358  inner_option_define_identifier -> COMMA all_type_define identifier inner_option_define_identifier
rule 359  inner_option_define_identifier -> COMMA all_type_define inner_option_define_identifier
rule 360  inner_option_define_identifier -> COMMA ID identifier inner_option_define_identifier
rule 361  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier inner_option_define_identifier
rule 362  inner_option_define_identifier -> COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 363  inner_option_define_identifier -> COMMA ID identifier ARRAY inner_option_define_identifier
rule 364  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 365  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY inner_option_define_identifier
rule 366  inner_option_define_identifier -> COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 367  inner_option_define_identifier -> COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 368  inner_option_define_identifier ->		/* empty */
rule 369  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 370  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 371  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 372  inner_option_define_identifier -> COMMA all_type_define MUL identifier inner_option_define_identifier
rule 373  inner_option_define_identifier -> COMMA all_type_define MUL inner_option_define_identifier
rule 374  inner_option_define_identifier -> COMMA error
rule 375  option_function_identifier -> ass_right inner_option_function_identifier
rule 376  option_function_identifier -> ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 377  option_function_identifier ->		/* empty */
rule 378  option_function_identifier -> ADDRESS error
rule 379  inner_option_function_identifier -> COMMA ass_right inner_option_function_identifier
rule 380  inner_option_function_identifier -> COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 381  inner_option_function_identifier ->		/* empty */
rule 382  inner_option_function_identifier -> COMMA error
rule 383  statement_bpar -> OPEN_BPAR statement CLOSE_BPAR
rule 384  statement_bpar -> error CLOSE_BPAR
rule 385  bool_par -> OPEN_PAR bool_exp CLOSE_PAR
rule 386  bool_par -> error CLOSE_PAR
rule 387  identifier -> ID
rule 388  identifier -> OPEN_PAR identifier CLOSE_PAR
rule 389  strliteral -> STRLITERAL
rule 390  intliteral -> INTLITERAL
rule 391  charliteral -> CHARLITERAL
rule 392  floatliteral -> FLOATLITERAL
rule 393  option_frame_identifier -> COMMA identifier option_frame_identifier
rule 394  option_frame_identifier ->		/* empty */
rule 395  option_frame_identifier -> COMMA error
rule 396  option_projection ->		/* empty */
rule 397  option_projection -> COMMA statement option_projection
rule 398  imply_pre -> prime_bool_exp
rule 399  imply_pre -> NEGATION imply_pre
rule 400  imply_pre -> imply_pre AND imply_pre
rule 401  imply_pre -> imply_pre OR imply_pre
rule 402  imply_pre -> OPEN_PAR imply_pre CLOSE_PAR
rule 403  while_statement -> WHILE bool_par statement_bpar
rule 404  for_statement -> FOR ari_exp TIMES DO statement_bpar
rule 405  extend_for_statement -> FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar
rule 406  for_sta_init -> ass_statement
rule 407  for_sta_init -> declaration
rule 408  for_sta_init ->		/* empty */
rule 409  for_sta_condition -> bool_exp
rule 410  for_sta_condition ->		/* empty */
rule 411  for_sta_control -> ass_statement
rule 412  for_sta_control ->		/* empty */
rule 413  switch_statement -> SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR
rule 414  case_par -> CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR option_case_par
rule 415  option_case_par -> BREAK case_par
rule 416  option_case_par -> case_par
rule 417  option_case_par ->		/* empty */
rule 418  if_statement -> IF bool_exp THEN statement_bpar option_else_statement
rule 419  option_else_statement -> ELSE statement_bpar
rule 420  option_else_statement ->		/* empty */
rule 421  output_statement -> DISPLAY OPEN_PAR ass_right CLOSE_PAR
rule 422  output_statement -> DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR
rule 423  option_output ->		/* empty */
rule 424  option_output -> COMMA ass_right option_output
rule 425  input_statement -> REQUEST OPEN_PAR identifier CLOSE_PAR
rule 426  input_statement -> REQUEST OPEN_PAR identifier option_input CLOSE_PAR
rule 427  input_statement -> REQUEST OPEN_PAR array CLOSE_PAR
rule 428  input_statement -> REQUEST OPEN_PAR array option_input CLOSE_PAR
rule 429  input_statement -> REQUEST OPEN_PAR struct_member_exp CLOSE_PAR
rule 430  option_input ->		/* empty */
rule 431  option_input -> COMMA identifier option_input
rule 432  option_input -> COMMA array option_input
rule 433  struct_member_exp -> identifier DOT identifier option_struct_member_exp
rule 434  struct_member_exp -> array DOT identifier option_struct_member_exp
rule 435  struct_member_exp -> point_exp DOT identifier option_struct_member_exp
rule 436  struct_member_exp -> identifier DOT array option_struct_member_exp
rule 437  struct_member_exp -> array DOT array option_struct_member_exp
rule 438  struct_member_exp -> point_exp DOT array option_struct_member_exp
rule 439  struct_member_exp -> identifier IMPLY identifier option_struct_member_exp
rule 440  struct_member_exp -> array IMPLY identifier option_struct_member_exp
rule 441  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp
rule 442  struct_member_exp -> point_exp IMPLY identifier option_struct_member_exp
rule 443  struct_member_exp -> identifier IMPLY array option_struct_member_exp
rule 444  struct_member_exp -> array IMPLY array option_struct_member_exp
rule 445  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp
rule 446  struct_member_exp -> identifier DOT function
rule 447  struct_member_exp -> identifier IMPLY function
rule 448  struct_member_exp -> point_exp IMPLY array option_struct_member_exp
rule 449  struct_member_exp -> OPEN_PAR struct_member_exp CLOSE_PAR
rule 450  option_struct_member_exp ->		/* empty */
rule 451  option_struct_member_exp -> DOT identifier option_struct_member_exp
rule 452  option_struct_member_exp -> DOT array option_struct_member_exp
rule 453  option_struct_member_exp -> IMPLY identifier option_struct_member_exp
rule 454  option_struct_member_exp -> IMPLY array option_struct_member_exp
rule 455  option_struct_member_exp -> DOT function
rule 456  option_struct_member_exp -> IMPLY function

Terminals, with rules where they appear

$ (-1)
error (256) 108 113 159 218 374 378 382 384 386 395
SWITCH (258) 413
CASE (259) 414
BREAK (260) 415
IF (261) 171 418
ELSE (262) 174 419
EMPTY (263) 18 46
AWAIT (264) 43
PROJECTION (265) 23 57 58
PBEGIN (266) 2
PEND (267) 2
POINTERNULL (268) 181 316 317 318 319
ARRAY (269) 102 103 337 341 348 349 352 363 364 365 366 371
STRUCT (270) 78 85 87 243 245 255
DOT (271) 433 434 435 436 437 438 446 451 452 455
UNION (272) 79 86 88
FOPEN (273) 114
FCLOSE (274) 120
FILEDECLARATION (275) 98
FGETS (276) 115
FPUTS (277) 117
FGETC (278) 116
FPUTC (279) 118 119
MORE (280) 19 47
DEFINE (281) 25 59
MY_TRUE (282) 15 309
MY_FALSE (283) 16 310
EXIST (284) 66
FRAME (285) 56
FOR (286) 404 405
WHILE (287) 403
DO (288) 404
TRUE (289) 51
FALSE (290) 52
REPEAT (291) 44
UNTIL (292) 44
DISPLAY (293) 421 422
SKIP (294) 14 45
THEN (295) 171 418
COMMA (296) 28 107 108 111 113 114 115 117 118 119 158 159 214 215
    216 218 269 270 271 295 296 297 298 299 351 358 359 360 361 362
    363 364 365 366 367 369 370 371 372 373 374 379 380 382 393 395
    397 405 424 431 432
COLON (297) 25 66 414
INTDECLARATION (298) 93 131 135 138 139 140 141 152 153 224 227 229
    231 232 237 238 250 253 328
STRDECLARATION (299) 96
POINTERDECLARATION (300)
CHARDECLARATION (301) 95 129 130 133 134 135 136 137 138 139 140 155
    156 226 228 230 234 235 240 241 252 254 329
VOIDDECLARATION (302) 97 236 242
FLOATDECLARATION (303) 94 132 154 225 233 239 251
LISTDECLARATION (304)
OPEN_PAR (305) 27 40 41 42 43 44 48 53 55 56 59 60 61 63 64 67 72 73
    74 89 90 91 92 114 115 116 117 118 119 120 126 129 130 131 132
    133 134 135 136 137 138 139 140 141 147 148 150 152 153 154 155
    156 157 164 165 166 167 187 207 223 224 225 226 227 228 229 230
    231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246
    248 257 258 259 260 267 268 269 270 271 272 295 296 297 298 299
    307 356 367 376 380 385 388 402 405 413 414 421 422 425 426 427
    428 429 441 445 449
CLOSE_PAR (306) 27 40 41 42 43 44 48 53 55 56 59 60 61 63 64 67 72
    73 74 89 90 91 92 114 115 116 117 118 119 120 126 129 130 131 132
    133 134 135 136 137 138 139 140 141 147 148 150 152 153 154 155
    156 157 164 165 166 167 187 207 223 224 225 226 227 228 229 230
    231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246
    248 257 258 259 260 267 268 269 270 271 272 295 296 297 298 299
    307 356 367 376 380 385 386 388 402 405 413 414 421 422 425 426
    427 428 429 441 445 449
TIMES (307) 404
OPEN_BPAR (308) 23 44 57 58 59 60 61 66 77 211 212 213 383 413
CLOSE_BPAR (309) 23 44 57 58 59 60 61 66 77 211 212 213 383 384 413
OPEN_MPAR (310) 55 91 92 100 104 105 110 111 129 130 131 132 133 134
    135 136 137 138 139 140 141 151 152 153 154 155 156 164 208 209
    210 350 351 352 369 370 371
CLOSE_MPAR (311) 55 91 92 100 104 105 110 111 129 130 131 132 133 134
    135 136 137 138 139 140 141 151 152 153 154 155 156 164 208 209
    210 350 351 352 369 370 371
FUNCTION (312) 60
OVER (313)
CYLINDER (314)
OVEREP (315)
INTER_OR (316) 200
NON_DETERMINED (317)
SEND (318)
RECEIVE (319)
PROCESS (320) 61
CHANNEL (321)
PUT (322)
GET (323)
ERROR_TOKEN (324)
STRFUNCHEAD (325) 267
STRFUNCTAIL (326) 268
STRFUNCCAT (327) 269
STRFUNCCMP (328) 270
STRFUNCCPY (329) 271
STRFUNCLEN (330) 272
SIZEOF (331) 257 258 259 260
SYSTEM (332) 64
EXTERN (333) 73
CEIL (334) 280
FLOOR (335) 281
ROUND (336) 279
SIN (337) 282
COS (338) 283
TAN (339) 284
ASIN (340) 285
ACOS (341) 286
ATAN (342) 287
SINH (343) 288
COSH (344) 289
TANH (345) 290
EXP (346) 291
LOG (347) 292
LOG10 (348) 293
SQRT (349) 294
ATAN2 (350) 295
POW (351) 296
ABS (352) 300
FABS (353) 301
LABS (354) 302
FMOD (355) 297
MODF (356) 298
LDEXP (357) 299
FREXP (358)
UNSIGNED (359) 81 130 134 136 137 138 140 153 156 229 230 232 235 238
    241 253 254 328 329
SIGNED (360) 80 227 228
MALLOC (361) 248
FREE (362) 63
CHOP (363) 8 32
IMPLY (364) 55 439 440 441 442 443 444 445 447 448 453 454 456
IFF (365) 6
PROPIMPLY (366) 7
OR (367) 5 31 306 401
PARALLEL (368) 54
AND (369) 4 30 56 69 305 400
ASS_P (370) 59 61 92 101 102 103 104 105 142
ASS_N (371) 143
CON (372) 201 204
ADDRESS (373) 199 219 220 221 222 378
NE (374) 313 315 317 319 321 324
EQ (375) 312 314 316 318 320 327
GE (376) 322
LE (377) 323
GT (378) 325
LT (379) 326
LST (380) 197
RST (381) 198
ADD (382) 202
SUB (383) 179 203
MUL (384) 89 90 91 92 106 129 130 131 132 133 134 135 136 137 138 139
    140 141 150 152 153 154 155 156 161 162 163 165 166 194 231 232
    233 234 235 236 237 238 239 240 241 242 243 244 245 246 250 251
    252 253 254 255 256 335 336 339 340 343 344 346 347 349 353 354
    355 356 362 366 367 372 373
DIV (385) 195
MOD (386) 196
BNE (387) 180
CHOPSTAR (388) 26
NEXT (389) 13 40 127
NEGATION (390) 22 304 399
LENGTH (391) 17 48
REQUEST (392) 425 426 427 428 429
FINAL (393) 21 53
KEEP (394) 10 41
ALWAYS (395) 9 42
HALT (396) 20
W_NEXT (397) 12
PREFIX (398)
SOMETIMES (399) 11
ID (400) 24 25 59 60 61 72 73 78 79 85 86 91 92 100 102 103 104 105
    110 111 151 152 153 154 155 156 338 339 340 341 345 346 347 360
    363 376 380 387
STRLITERAL (401) 389
STRUCT_TYPE (402) 84 87 88 243 244 245 246 255 256 259 334 335 336
    337 342 343 344 361 362 364
INTLITERAL (403) 129 130 131 132 133 134 135 136 137 138 139 140 141
    390
FLOATLITERAL (404) 392
CHARLITERAL (405) 391

Nonterminals, with rules where they appear

program (151)
    on left: 1
gComplexProposition (152)
    on left: 2 3, on right: 1
complexProposition (153)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27, on right: 2 4 5 6 7 8 9 10 11 12 13 20 21 22 23 26
    27 28
poptional_projection (154)
    on left: 28 29, on right: 23 28
statement (155)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67,
    on right: 1 30 31 32 40 41 42 44 53 54 55 56 57 58 60 66 67 70
    383 397 414
option_struct_declaration (156)
    on left: 68 69, on right: 69 77
empty_statement (157)
    on left: 70 71, on right: 59 61
function (158)
    on left: 72 73 74 75 76, on right: 65 147 186 446 447 455 456
struct_define_statement (159)
    on left: 77, on right: 62
struct_identifier (160)
    on left: 78 79, on right: 77
sign_declaration (161)
    on left: 80 81 82, on right: 34 68 69
declaration (162)
    on left: 83 84 85 86 87 88 89 90 91 92, on right: 80 81 82 407
type_define (163)
    on left: 93 94 95 96 97 98, on right: 83 147 331
option_identifier_array_declaration (164)
    on left: 99 100 101 102 103 104 105 106, on right: 83 84 85 86
    87 88 106 107
inner_option_identifier_array_declaration (165)
    on left: 107 108 109, on right: 99 100 101 102 103 104 105
file_statement (166)
    on left: 114 115 116 117 118 119 120, on right: 75
ass_statement (167)
    on left: 121, on right: 33 406 411
ass_left (168)
    on left: 122 123 124 125 126 127 128, on right: 114 121 126 127
leftaddrshift (169)
    on left: 129 130 131 132 133 134 135 136 137 138 139 140 141,
    on right: 128 150
assign_operator (170)
    on left: 142 143, on right: 121
ass_right (171)
    on left: 144 145 146 147 148 149, on right: 101 121 148 375 379
    421 422 424
rightaddrshift (172)
    on left: 150, on right: 149
array (173)
    on left: 151 152 153 154 155 156 157, on right: 74 119 124 157
    163 184 220 274 427 428 432 434 436 437 438 440 443 444 445 448
    452 454
option_ari_exp (174)
    on left: 158 159 160, on right: 91 92 100 104 105 110 111 129 130
    131 132 133 134 135 136 137 138 139 140 141 151 152 153 154 155
    156 158 164
point_exp (175)
    on left: 161 162 163 164 165 166 167, on right: 125 162 164 167
    185 275 435 438 442 448
ari_exp (176)
    on left: 168 169 170 171, on right: 17 48 91 92 100 104 105 110
    111 129 130 131 132 133 134 135 136 137 138 139 140 141 144 151
    152 153 154 155 156 158 164 165 166 169 170 171 174 187 208 211
    214 248 257 279 280 281 282 283 284 285 286 287 288 289 290 291
    292 293 294 295 296 297 298 299 300 301 302 308 311 312 313 314
    315 316 317 318 319 320 321 350 351 352 369 370 371 404
type_cast_alg_exp (177)
    on left: 172 173, on right: 224 225 226 227 228 229 230 247
option_exp_else_statement (178)
    on left: 174 175, on right: 171
simple_ari_exp (179)
    on left: 176 177, on right: 168 169 170 172 173 177
member_in_exp (180)
    on left: 178 179 180 181 182 183 184 185 186 187 188 189 190 191
    192 193, on right: 176 177 179 180 413 414
bi_operator (181)
    on left: 194 195 196 197 198 199 200 201, on right: 177
ari_operator (182)
    on left: 202 203, on right: 170 173
array_exp (183)
    on left: 204 205 206 207, on right: 92 102 104 145 204 207 210
    213 216
option_list_value (184)
    on left: 208 209 210, on right: 205
option_struct_list_value (185)
    on left: 211 212 213, on right: 206
inner_option_list_value (186)
    on left: 214 215 216 217 218, on right: 208 209 210 211 212 213
    214 215 216
address_exp (187)
    on left: 219 220 221 222 223, on right: 190 222 223 441 445
type_cast (188)
    on left: 224 225 226 227 228 229 230 231 232 233 234 235 236 237
    238 239 240 241 242 243 244 245 246, on right: 191
casted_element (189)
    on left: 247 248, on right: 231 232 233 234 235 236 237 238 239
    240 241 242 243 244 245 246
all_sizeof_type (190)
    on left: 249 250 251 252 253 254 255 256, on right: 258
size_of (191)
    on left: 257 258 259 260, on right: 193
String_Function (192)
    on left: 261 262 263 264 265 266, on right: 76 277
String_Function_head (193)
    on left: 267, on right: 261
String_Function_tail (194)
    on left: 268, on right: 262
String_Function_cat (195)
    on left: 269, on right: 263
String_Function_cmp (196)
    on left: 270, on right: 265
String_Function_cpy (197)
    on left: 271, on right: 264
String_Function_len (198)
    on left: 272, on right: 266
str_func_parameter (199)
    on left: 273 274 275 276 277 278, on right: 64 267 268 269 270
    271 272
math_function (200)
    on left: 279 280 281 282 283 284 285 286 287 288 289 290 291 292
    293 294 295 296 297 298 299 300 301 302, on right: 188
bool_exp (201)
    on left: 303 304 305 306 307, on right: 43 44 171 304 305 306 307
    385 409 418
prime_bool_exp (202)
    on left: 308 309 310 311 312 313 314 315 316 317 318 319 320 321
   , on right: 25 303 398
relation_operator (203)
    on left: 322 323 324 325 326 327, on right: 169 308
sign_type_define (204)
    on left: 328 329, on right: 330
all_type_define (205)
    on left: 330 331, on right: 165 249 332 333 348 349 350 351 352
    353 354 355 358 359 365 366 369 370 371 372 373
option_function_parameter_list (206)
    on left: 332 333 334 335 336 337 338 339 340 341 342 343 344 345
    346 347 348 349 350 351 352 353 354 355 356 357,
    on right: 59 60 61 89 90 91 92 147 356 367
inner_option_define_identifier (207)
    on left: 358 359 360 361 362 363 364 365 366 367 368 369 370 371
    372 373 374, on right: 66 332 333 334 335 336 337 338 339 340 341
    342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 358
    359 360 361 362 363 364 365 366 367 369 370 371 372 373
option_function_identifier (208)
    on left: 375 376 377 378, on right: 72 73 74 376 380
inner_option_function_identifier (209)
    on left: 379 380 381 382, on right: 375 376 379 380
statement_bpar (210)
    on left: 383 384, on right: 57 58 403 404 405 418 419
bool_par (211)
    on left: 385 386, on right: 403
identifier (212)
    on left: 387 388, on right: 56 63 66 89 90 99 101 115 116 117 118
    119 120 122 161 183 219 273 332 334 335 336 337 338 339 340 341
    348 349 350 351 352 353 355 356 358 360 361 362 363 364 365 366
    367 369 370 371 372 388 393 425 426 431 433 434 435 436 439 440
    441 442 443 446 447 451 453
strliteral (213)
    on left: 389, on right: 103 105 114 146 147 209 212 215 260 276
    312 313 314 315
intliteral (214)
    on left: 390, on right: 115 178
charliteral (215)
    on left: 391, on right: 189 320 321
floatliteral (216)
    on left: 392, on right: 182
option_frame_identifier (217)
    on left: 393 394 395, on right: 56 393
option_projection (218)
    on left: 396 397, on right: 57 397
imply_pre (219)
    on left: 398 399 400 401 402, on right: 55 399 400 401 402
while_statement (220)
    on left: 403, on right: 37
for_statement (221)
    on left: 404, on right: 38
extend_for_statement (222)
    on left: 405, on right: 39
for_sta_init (223)
    on left: 406 407 408, on right: 405
for_sta_condition (224)
    on left: 409 410, on right: 405
for_sta_control (225)
    on left: 411 412, on right: 405
switch_statement (226)
    on left: 413, on right: 35
case_par (227)
    on left: 414, on right: 413 415 416
option_case_par (228)
    on left: 415 416 417, on right: 414
if_statement (229)
    on left: 418, on right: 36
option_else_statement (230)
    on left: 419 420, on right: 418
output_statement (231)
    on left: 421 422, on right: 50
option_output (232)
    on left: 423 424, on right: 422 424
input_statement (233)
    on left: 425 426 427 428 429, on right: 49
option_input (234)
    on left: 430 431 432, on right: 426 428 431 432
struct_member_exp (235)
    on left: 433 434 435 436 437 438 439 440 441 442 443 444 445 446
    447 448 449, on right: 123 192 221 278 429 449
option_struct_member_exp (236)
    on left: 450 451 452 453 454 455 456, on right: 433 434 435 436
    437 438 439 440 441 442 443 444 445 448 451 452 453 454


state 0

    PBEGIN	shift, and go to state 1

    $default	reduce using rule 3 (gComplexProposition)

    program	go to state 1375
    gComplexProposition	go to state 2



state 1

    gComplexProposition  ->  PBEGIN . complexProposition PEND   (rule 2)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 21



state 2

    program  ->  gComplexProposition . statement   (rule 1)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    EXTERN	shift, and go to state 62
    UNSIGNED	shift, and go to state 63
    SIGNED	shift, and go to state 64
    FREE	shift, and go to state 65
    MUL 	shift, and go to state 66
    NEXT	shift, and go to state 67
    LENGTH	shift, and go to state 68
    REQUEST	shift, and go to state 69
    FINAL	shift, and go to state 70
    KEEP	shift, and go to state 71
    ALWAYS	shift, and go to state 72
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 74

    statement	go to state 75
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 95
    while_statement	go to state 96
    for_statement	go to state 97
    extend_for_statement	go to state 98
    switch_statement	go to state 99
    if_statement	go to state 100
    output_statement	go to state 101
    input_statement	go to state 102
    struct_member_exp	go to state 103



state 3

    complexProposition  ->  EMPTY .   (rule 18)

    $default	reduce using rule 18 (complexProposition)



state 4

    complexProposition  ->  MORE .   (rule 19)

    $default	reduce using rule 19 (complexProposition)



state 5

    complexProposition  ->  DEFINE . ID COLON prime_bool_exp   (rule 25)

    ID  	shift, and go to state 104



state 6

    complexProposition  ->  MY_TRUE .   (rule 15)

    $default	reduce using rule 15 (complexProposition)



state 7

    complexProposition  ->  MY_FALSE .   (rule 16)

    $default	reduce using rule 16 (complexProposition)



state 8

    complexProposition  ->  SKIP .   (rule 14)

    $default	reduce using rule 14 (complexProposition)



state 9

    complexProposition  ->  OPEN_PAR . complexProposition CLOSE_PAR   (rule 27)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 105



state 10

    complexProposition  ->  OPEN_BPAR . complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 106



state 11

    complexProposition  ->  NEXT . complexProposition   (rule 13)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 107



state 12

    complexProposition  ->  NEGATION . complexProposition   (rule 22)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 108



state 13

    complexProposition  ->  LENGTH . ari_exp   (rule 17)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 146
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 14

    complexProposition  ->  FINAL . complexProposition   (rule 21)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 158



state 15

    complexProposition  ->  KEEP . complexProposition   (rule 10)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 159



state 16

    complexProposition  ->  ALWAYS . complexProposition   (rule 9)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 160



state 17

    complexProposition  ->  HALT . complexProposition   (rule 20)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 161



state 18

    complexProposition  ->  W_NEXT . complexProposition   (rule 12)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 162



state 19

    complexProposition  ->  SOMETIMES . complexProposition   (rule 11)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 163



state 20

    complexProposition  ->  ID .   (rule 24)

    $default	reduce using rule 24 (complexProposition)



state 21

    gComplexProposition  ->  PBEGIN complexProposition . PEND   (rule 2)
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    PEND	shift, and go to state 164
    CHOP	shift, and go to state 165
    IFF 	shift, and go to state 166
    PROPIMPLY	shift, and go to state 167
    OR  	shift, and go to state 168
    AND 	shift, and go to state 169
    CHOPSTAR	shift, and go to state 170



state 22

    switch_statement  ->  SWITCH . OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 413)

    OPEN_PAR	shift, and go to state 171



state 23

    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 418)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 172
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 173
    MY_FALSE	shift, and go to state 174
    OPEN_PAR	shift, and go to state 175
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    NEGATION	shift, and go to state 176
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 178
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    bool_exp	go to state 179
    prime_bool_exp	go to state 180
    identifier	go to state 153
    strliteral	go to state 181
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 24

    statement  ->  EMPTY .   (rule 46)

    $default	reduce using rule 46 (statement)



state 25

    statement  ->  AWAIT . OPEN_PAR bool_exp CLOSE_PAR   (rule 43)

    OPEN_PAR	shift, and go to state 182



state 26

    struct_identifier  ->  STRUCT . ID   (rule 78)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 85)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 87)

    ID  	shift, and go to state 183
    STRUCT_TYPE	shift, and go to state 184



state 27

    struct_identifier  ->  UNION . ID   (rule 79)
    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 86)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 88)

    ID  	shift, and go to state 185
    STRUCT_TYPE	shift, and go to state 186



state 28

    file_statement  ->  FOPEN . OPEN_PAR ass_left COMMA strliteral CLOSE_PAR   (rule 114)

    OPEN_PAR	shift, and go to state 187



state 29

    file_statement  ->  FCLOSE . OPEN_PAR identifier CLOSE_PAR   (rule 120)

    OPEN_PAR	shift, and go to state 188



state 30

    type_define  ->  FILEDECLARATION .   (rule 98)

    $default	reduce using rule 98 (type_define)



state 31

    file_statement  ->  FGETS . OPEN_PAR identifier COMMA intliteral COMMA identifier CLOSE_PAR   (rule 115)

    OPEN_PAR	shift, and go to state 189



state 32

    file_statement  ->  FPUTS . OPEN_PAR identifier COMMA identifier CLOSE_PAR   (rule 117)

    OPEN_PAR	shift, and go to state 190



state 33

    file_statement  ->  FGETC . OPEN_PAR identifier CLOSE_PAR   (rule 116)

    OPEN_PAR	shift, and go to state 191



state 34

    file_statement  ->  FPUTC . OPEN_PAR identifier COMMA identifier CLOSE_PAR   (rule 118)
    file_statement  ->  FPUTC . OPEN_PAR array COMMA identifier CLOSE_PAR   (rule 119)

    OPEN_PAR	shift, and go to state 192



state 35

    statement  ->  MORE .   (rule 47)

    $default	reduce using rule 47 (statement)



state 36

    statement  ->  DEFINE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 59)

    ID  	shift, and go to state 193



state 37

    statement  ->  EXIST . identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 66)

    OPEN_PAR	shift, and go to state 194
    ID  	shift, and go to state 195

    identifier	go to state 196



state 38

    statement  ->  FRAME . OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    OPEN_PAR	shift, and go to state 197



state 39

    for_statement  ->  FOR . ari_exp TIMES DO statement_bpar   (rule 404)
    extend_for_statement  ->  FOR . OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 405)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 198
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 199
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 40

    while_statement  ->  WHILE . bool_par statement_bpar   (rule 403)

    error	shift, and go to state 200
    OPEN_PAR	shift, and go to state 201

    bool_par	go to state 202



state 41

    statement  ->  TRUE .   (rule 51)

    $default	reduce using rule 51 (statement)



state 42

    statement  ->  FALSE .   (rule 52)

    $default	reduce using rule 52 (statement)



state 43

    statement  ->  REPEAT . OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

    OPEN_BPAR	shift, and go to state 203



state 44

    output_statement  ->  DISPLAY . OPEN_PAR ass_right CLOSE_PAR   (rule 421)
    output_statement  ->  DISPLAY . OPEN_PAR ass_right option_output CLOSE_PAR   (rule 422)

    OPEN_PAR	shift, and go to state 204



state 45

    statement  ->  SKIP .   (rule 45)

    $default	reduce using rule 45 (statement)



state 46

    type_define  ->  INTDECLARATION .   (rule 93)

    $default	reduce using rule 93 (type_define)



state 47

    type_define  ->  STRDECLARATION .   (rule 96)

    $default	reduce using rule 96 (type_define)



state 48

    type_define  ->  CHARDECLARATION .   (rule 95)

    $default	reduce using rule 95 (type_define)



state 49

    type_define  ->  VOIDDECLARATION .   (rule 97)

    $default	reduce using rule 97 (type_define)



state 50

    type_define  ->  FLOATDECLARATION .   (rule 94)

    $default	reduce using rule 94 (type_define)



state 51

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 67)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 205
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    POINTERNULL	shift, and go to state 172
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 173
    MY_FALSE	shift, and go to state 174
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 206
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    SYSTEM	shift, and go to state 61
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    UNSIGNED	shift, and go to state 63
    SIGNED	shift, and go to state 64
    FREE	shift, and go to state 65
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 207
    BNE 	shift, and go to state 139
    NEXT	shift, and go to state 67
    NEGATION	shift, and go to state 208
    LENGTH	shift, and go to state 68
    REQUEST	shift, and go to state 69
    FINAL	shift, and go to state 70
    KEEP	shift, and go to state 71
    ALWAYS	shift, and go to state 72
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    STRUCT_TYPE	shift, and go to state 74
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    statement	go to state 209
    function	go to state 210
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 211
    leftaddrshift	go to state 85
    array	go to state 212
    point_exp	go to state 213
    ari_exp	go to state 178
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 214
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    prime_bool_exp	go to state 215
    identifier	go to state 216
    strliteral	go to state 181
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    imply_pre	go to state 217
    while_statement	go to state 96
    for_statement	go to state 97
    extend_for_statement	go to state 98
    switch_statement	go to state 99
    if_statement	go to state 100
    output_statement	go to state 101
    input_statement	go to state 102
    struct_member_exp	go to state 218



state 52

    statement  ->  OPEN_BPAR . statement option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 57)
    statement  ->  OPEN_BPAR . statement CLOSE_BPAR PROJECTION statement_bpar   (rule 58)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    EXTERN	shift, and go to state 62
    UNSIGNED	shift, and go to state 63
    SIGNED	shift, and go to state 64
    FREE	shift, and go to state 65
    MUL 	shift, and go to state 66
    NEXT	shift, and go to state 67
    LENGTH	shift, and go to state 68
    REQUEST	shift, and go to state 69
    FINAL	shift, and go to state 70
    KEEP	shift, and go to state 71
    ALWAYS	shift, and go to state 72
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 74

    statement	go to state 219
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 95
    while_statement	go to state 96
    for_statement	go to state 97
    extend_for_statement	go to state 98
    switch_statement	go to state 99
    if_statement	go to state 100
    output_statement	go to state 101
    input_statement	go to state 102
    struct_member_exp	go to state 103



state 53

    statement  ->  FUNCTION . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 60)

    ID  	shift, and go to state 220



state 54

    statement  ->  PROCESS . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    ID  	shift, and go to state 221



state 55

    String_Function_head  ->  STRFUNCHEAD . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 267)

    OPEN_PAR	shift, and go to state 222



state 56

    String_Function_tail  ->  STRFUNCTAIL . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 268)

    OPEN_PAR	shift, and go to state 223



state 57

    String_Function_cat  ->  STRFUNCCAT . OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 269)

    OPEN_PAR	shift, and go to state 224



state 58

    String_Function_cmp  ->  STRFUNCCMP . OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 270)

    OPEN_PAR	shift, and go to state 225



state 59

    String_Function_cpy  ->  STRFUNCCPY . OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 271)

    OPEN_PAR	shift, and go to state 226



state 60

    String_Function_len  ->  STRFUNCLEN . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 272)

    OPEN_PAR	shift, and go to state 227



state 61

    statement  ->  SYSTEM . OPEN_PAR str_func_parameter CLOSE_PAR   (rule 64)

    OPEN_PAR	shift, and go to state 228



state 62

    function  ->  EXTERN . ID OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)

    ID  	shift, and go to state 229



state 63

    sign_declaration  ->  UNSIGNED . declaration   (rule 81)

    STRUCT	shift, and go to state 230
    UNION	shift, and go to state 231
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 232
    STRUCT_TYPE	shift, and go to state 74

    declaration	go to state 233
    type_define	go to state 81



state 64

    sign_declaration  ->  SIGNED . declaration   (rule 80)

    STRUCT	shift, and go to state 230
    UNION	shift, and go to state 231
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 232
    STRUCT_TYPE	shift, and go to state 74

    declaration	go to state 234
    type_define	go to state 81



state 65

    statement  ->  FREE . OPEN_PAR identifier CLOSE_PAR   (rule 63)

    OPEN_PAR	shift, and go to state 235



state 66

    point_exp  ->  MUL . identifier   (rule 161)
    point_exp  ->  MUL . point_exp   (rule 162)
    point_exp  ->  MUL . array   (rule 163)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 165)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 166)

    OPEN_PAR	shift, and go to state 236
    MUL 	shift, and go to state 66
    ID  	shift, and go to state 237

    array	go to state 238
    point_exp	go to state 239
    identifier	go to state 240



state 67

    statement  ->  NEXT . OPEN_PAR statement CLOSE_PAR   (rule 40)
    ass_left  ->  NEXT . ass_left   (rule 127)

    OPEN_PAR	shift, and go to state 241
    MUL 	shift, and go to state 66
    NEXT	shift, and go to state 242
    ID  	shift, and go to state 237

    ass_left	go to state 243
    leftaddrshift	go to state 85
    array	go to state 244
    point_exp	go to state 87
    identifier	go to state 95
    struct_member_exp	go to state 103



state 68

    statement  ->  LENGTH . OPEN_PAR ari_exp CLOSE_PAR   (rule 48)

    OPEN_PAR	shift, and go to state 245



state 69

    input_statement  ->  REQUEST . OPEN_PAR identifier CLOSE_PAR   (rule 425)
    input_statement  ->  REQUEST . OPEN_PAR identifier option_input CLOSE_PAR   (rule 426)
    input_statement  ->  REQUEST . OPEN_PAR array CLOSE_PAR   (rule 427)
    input_statement  ->  REQUEST . OPEN_PAR array option_input CLOSE_PAR   (rule 428)
    input_statement  ->  REQUEST . OPEN_PAR struct_member_exp CLOSE_PAR   (rule 429)

    OPEN_PAR	shift, and go to state 246



state 70

    statement  ->  FINAL . OPEN_PAR statement CLOSE_PAR   (rule 53)

    OPEN_PAR	shift, and go to state 247



state 71

    statement  ->  KEEP . OPEN_PAR statement CLOSE_PAR   (rule 41)

    OPEN_PAR	shift, and go to state 248



state 72

    statement  ->  ALWAYS . OPEN_PAR statement CLOSE_PAR   (rule 42)

    OPEN_PAR	shift, and go to state 249



state 73

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    identifier  ->  ID .   (rule 387)

    OPEN_PAR	shift, and go to state 250
    OPEN_MPAR	shift, and go to state 251

    $default	reduce using rule 387 (identifier)



state 74

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 84)

    OPEN_PAR	shift, and go to state 194
    MUL 	shift, and go to state 252
    ID  	shift, and go to state 253

    option_identifier_array_declaration	go to state 254
    identifier	go to state 255



state 75

    program  ->  gComplexProposition statement .   (rule 1)
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CHOP	shift, and go to state 256
    OR  	shift, and go to state 257
    PARALLEL	shift, and go to state 258
    AND 	shift, and go to state 259

    $default	reduce using rule 1 (program)



state 76

    statement  ->  function .   (rule 65)

    $default	reduce using rule 65 (statement)



state 77

    statement  ->  struct_define_statement .   (rule 62)

    $default	reduce using rule 62 (statement)



state 78

    struct_define_statement  ->  struct_identifier . OPEN_BPAR option_struct_declaration CLOSE_BPAR   (rule 77)

    OPEN_BPAR	shift, and go to state 260



state 79

    statement  ->  sign_declaration .   (rule 34)

    $default	reduce using rule 34 (statement)



state 80

    sign_declaration  ->  declaration .   (rule 82)

    $default	reduce using rule 82 (sign_declaration)



state 81

    declaration  ->  type_define . option_identifier_array_declaration   (rule 83)

    OPEN_PAR	shift, and go to state 194
    MUL 	shift, and go to state 252
    ID  	shift, and go to state 253

    option_identifier_array_declaration	go to state 261
    identifier	go to state 255



state 82

    function  ->  file_statement .   (rule 75)

    $default	reduce using rule 75 (function)



state 83

    statement  ->  ass_statement .   (rule 33)

    $default	reduce using rule 33 (statement)



state 84

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 121)

    ASS_P	shift, and go to state 262
    ASS_N	shift, and go to state 263

    assign_operator	go to state 264



state 85

    ass_left  ->  leftaddrshift .   (rule 128)

    $default	reduce using rule 128 (ass_left)



state 86

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 74)
    ass_left  ->  array .   (rule 124)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 437)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 444)

    DOT 	shift, and go to state 265
    OPEN_PAR	shift, and go to state 266
    IMPLY	shift, and go to state 267

    $default	reduce using rule 124 (ass_left)



state 87

    ass_left  ->  point_exp .   (rule 125)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 435)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 438)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 442)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 448)

    DOT 	shift, and go to state 268
    IMPLY	shift, and go to state 269

    $default	reduce using rule 125 (ass_left)



state 88

    function  ->  String_Function .   (rule 76)

    $default	reduce using rule 76 (function)



state 89

    String_Function  ->  String_Function_head .   (rule 261)

    $default	reduce using rule 261 (String_Function)



state 90

    String_Function  ->  String_Function_tail .   (rule 262)

    $default	reduce using rule 262 (String_Function)



state 91

    String_Function  ->  String_Function_cat .   (rule 263)

    $default	reduce using rule 263 (String_Function)



state 92

    String_Function  ->  String_Function_cmp .   (rule 265)

    $default	reduce using rule 265 (String_Function)



state 93

    String_Function  ->  String_Function_cpy .   (rule 264)

    $default	reduce using rule 264 (String_Function)



state 94

    String_Function  ->  String_Function_len .   (rule 266)

    $default	reduce using rule 266 (String_Function)



state 95

    ass_left  ->  identifier .   (rule 122)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 443)
    struct_member_exp  ->  identifier . DOT function   (rule 446)
    struct_member_exp  ->  identifier . IMPLY function   (rule 447)

    DOT 	shift, and go to state 270
    IMPLY	shift, and go to state 271

    $default	reduce using rule 122 (ass_left)



state 96

    statement  ->  while_statement .   (rule 37)

    $default	reduce using rule 37 (statement)



state 97

    statement  ->  for_statement .   (rule 38)

    $default	reduce using rule 38 (statement)



state 98

    statement  ->  extend_for_statement .   (rule 39)

    $default	reduce using rule 39 (statement)



state 99

    statement  ->  switch_statement .   (rule 35)

    $default	reduce using rule 35 (statement)



state 100

    statement  ->  if_statement .   (rule 36)

    $default	reduce using rule 36 (statement)



state 101

    statement  ->  output_statement .   (rule 50)

    $default	reduce using rule 50 (statement)



state 102

    statement  ->  input_statement .   (rule 49)

    $default	reduce using rule 49 (statement)



state 103

    ass_left  ->  struct_member_exp .   (rule 123)

    $default	reduce using rule 123 (ass_left)



state 104

    complexProposition  ->  DEFINE ID . COLON prime_bool_exp   (rule 25)

    COLON	shift, and go to state 272



state 105

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    complexProposition  ->  OPEN_PAR complexProposition . CLOSE_PAR   (rule 27)

    CLOSE_PAR	shift, and go to state 273
    CHOP	shift, and go to state 165
    IFF 	shift, and go to state 166
    PROPIMPLY	shift, and go to state 167
    OR  	shift, and go to state 168
    AND 	shift, and go to state 169
    CHOPSTAR	shift, and go to state 170



state 106

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition . poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    COMMA	shift, and go to state 274
    CHOP	shift, and go to state 165
    IFF 	shift, and go to state 166
    PROPIMPLY	shift, and go to state 167
    OR  	shift, and go to state 168
    AND 	shift, and go to state 169
    CHOPSTAR	shift, and go to state 170

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 275



state 107

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEXT complexProposition .   (rule 13)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 13 (complexProposition)



state 108

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEGATION complexProposition .   (rule 22)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 22 (complexProposition)



state 109

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 171)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 172
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 173
    MY_FALSE	shift, and go to state 174
    OPEN_PAR	shift, and go to state 175
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    NEGATION	shift, and go to state 176
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 178
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    bool_exp	go to state 276
    prime_bool_exp	go to state 180
    identifier	go to state 153
    strliteral	go to state 181
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 110

    member_in_exp  ->  POINTERNULL .   (rule 181)

    $default	reduce using rule 181 (member_in_exp)



state 111

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 187)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    STRUCT	shift, and go to state 277
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 278
    CHARDECLARATION	shift, and go to state 279
    VOIDDECLARATION	shift, and go to state 280
    FLOATDECLARATION	shift, and go to state 281
    OPEN_PAR	shift, and go to state 282
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    UNSIGNED	shift, and go to state 283
    SIGNED	shift, and go to state 284
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 285
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 286
    point_exp	go to state 287
    ari_exp	go to state 288
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 289
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 290
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 291



state 112

    size_of  ->  SIZEOF . OPEN_PAR ari_exp CLOSE_PAR   (rule 257)
    size_of  ->  SIZEOF . OPEN_PAR all_sizeof_type CLOSE_PAR   (rule 258)
    size_of  ->  SIZEOF . OPEN_PAR STRUCT_TYPE CLOSE_PAR   (rule 259)
    size_of  ->  SIZEOF . OPEN_PAR strliteral CLOSE_PAR   (rule 260)

    OPEN_PAR	shift, and go to state 292



state 113

    math_function  ->  CEIL . ari_exp   (rule 280)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 293
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 114

    math_function  ->  FLOOR . ari_exp   (rule 281)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 294
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 115

    math_function  ->  ROUND . ari_exp   (rule 279)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 295
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 116

    math_function  ->  SIN . ari_exp   (rule 282)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 296
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 117

    math_function  ->  COS . ari_exp   (rule 283)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 297
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 118

    math_function  ->  TAN . ari_exp   (rule 284)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 298
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 119

    math_function  ->  ASIN . ari_exp   (rule 285)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 299
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 120

    math_function  ->  ACOS . ari_exp   (rule 286)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 300
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 121

    math_function  ->  ATAN . ari_exp   (rule 287)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 301
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 122

    math_function  ->  SINH . ari_exp   (rule 288)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 302
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 123

    math_function  ->  COSH . ari_exp   (rule 289)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 303
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 124

    math_function  ->  TANH . ari_exp   (rule 290)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 304
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 125

    math_function  ->  EXP . ari_exp   (rule 291)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 305
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 126

    math_function  ->  LOG . ari_exp   (rule 292)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 306
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 127

    math_function  ->  LOG10 . ari_exp   (rule 293)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 307
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 128

    math_function  ->  SQRT . ari_exp   (rule 294)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 308
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 129

    math_function  ->  ATAN2 . OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR   (rule 295)

    OPEN_PAR	shift, and go to state 309



state 130

    math_function  ->  POW . OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR   (rule 296)

    OPEN_PAR	shift, and go to state 310



state 131

    math_function  ->  ABS . ari_exp   (rule 300)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 311
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 132

    math_function  ->  FABS . ari_exp   (rule 301)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 312
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 133

    math_function  ->  LABS . ari_exp   (rule 302)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 313
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 134

    math_function  ->  FMOD . OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR   (rule 297)

    OPEN_PAR	shift, and go to state 314



state 135

    math_function  ->  MODF . OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR   (rule 298)

    OPEN_PAR	shift, and go to state 315



state 136

    math_function  ->  LDEXP . OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR   (rule 299)

    OPEN_PAR	shift, and go to state 316



state 137

    address_exp  ->  ADDRESS . identifier   (rule 219)
    address_exp  ->  ADDRESS . array   (rule 220)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 221)
    address_exp  ->  ADDRESS . address_exp   (rule 222)

    OPEN_PAR	shift, and go to state 317
    ADDRESS	shift, and go to state 137
    MUL 	shift, and go to state 66
    ID  	shift, and go to state 237

    array	go to state 318
    point_exp	go to state 319
    address_exp	go to state 320
    identifier	go to state 321
    struct_member_exp	go to state 322



state 138

    member_in_exp  ->  SUB . member_in_exp   (rule 179)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    member_in_exp	go to state 323
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 139

    member_in_exp  ->  BNE . member_in_exp   (rule 180)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    member_in_exp	go to state 324
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 140

    intliteral  ->  INTLITERAL .   (rule 390)

    $default	reduce using rule 390 (intliteral)



state 141

    floatliteral  ->  FLOATLITERAL .   (rule 392)

    $default	reduce using rule 392 (floatliteral)



state 142

    charliteral  ->  CHARLITERAL .   (rule 391)

    $default	reduce using rule 391 (charliteral)



state 143

    member_in_exp  ->  function .   (rule 186)

    $default	reduce using rule 186 (member_in_exp)



state 144

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 74)
    member_in_exp  ->  array .   (rule 184)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 437)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 444)

    DOT 	shift, and go to state 265
    OPEN_PAR	shift, and go to state 266
    IMPLY	shift, and go to state 267

    DOT 	[reduce using rule 184 (member_in_exp)]
    IMPLY	[reduce using rule 184 (member_in_exp)]
    $default	reduce using rule 184 (member_in_exp)



state 145

    member_in_exp  ->  point_exp .   (rule 185)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 435)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 438)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 442)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 448)

    DOT 	shift, and go to state 268
    IMPLY	shift, and go to state 269

    DOT 	[reduce using rule 185 (member_in_exp)]
    IMPLY	[reduce using rule 185 (member_in_exp)]
    $default	reduce using rule 185 (member_in_exp)



state 146

    complexProposition  ->  LENGTH ari_exp .   (rule 17)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 17 (complexProposition)

    ari_operator	go to state 327



state 147

    ari_exp  ->  simple_ari_exp .   (rule 168)
    ari_exp  ->  simple_ari_exp . relation_operator ari_exp   (rule 169)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 177)

    INTER_OR	shift, and go to state 328
    CON 	shift, and go to state 329
    ADDRESS	shift, and go to state 330
    NE  	shift, and go to state 331
    EQ  	shift, and go to state 332
    GE  	shift, and go to state 333
    LE  	shift, and go to state 334
    GT  	shift, and go to state 335
    LT  	shift, and go to state 336
    LST 	shift, and go to state 337
    RST 	shift, and go to state 338
    MUL 	shift, and go to state 339
    DIV 	shift, and go to state 340
    MOD 	shift, and go to state 341

    INTER_OR	[reduce using rule 168 (ari_exp)]
    CON 	[reduce using rule 168 (ari_exp)]
    ADDRESS	[reduce using rule 168 (ari_exp)]
    NE  	[reduce using rule 168 (ari_exp)]
    EQ  	[reduce using rule 168 (ari_exp)]
    GE  	[reduce using rule 168 (ari_exp)]
    LE  	[reduce using rule 168 (ari_exp)]
    GT  	[reduce using rule 168 (ari_exp)]
    LT  	[reduce using rule 168 (ari_exp)]
    LST 	[reduce using rule 168 (ari_exp)]
    RST 	[reduce using rule 168 (ari_exp)]
    MUL 	[reduce using rule 168 (ari_exp)]
    DIV 	[reduce using rule 168 (ari_exp)]
    MOD 	[reduce using rule 168 (ari_exp)]
    $default	reduce using rule 168 (ari_exp)

    bi_operator	go to state 342
    relation_operator	go to state 343



state 148

    simple_ari_exp  ->  member_in_exp .   (rule 176)

    $default	reduce using rule 176 (simple_ari_exp)



state 149

    member_in_exp  ->  address_exp .   (rule 190)

    $default	reduce using rule 190 (member_in_exp)



state 150

    member_in_exp  ->  type_cast .   (rule 191)

    $default	reduce using rule 191 (member_in_exp)



state 151

    member_in_exp  ->  size_of .   (rule 193)

    $default	reduce using rule 193 (member_in_exp)



state 152

    member_in_exp  ->  math_function .   (rule 188)

    $default	reduce using rule 188 (member_in_exp)



state 153

    member_in_exp  ->  identifier .   (rule 183)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 443)
    struct_member_exp  ->  identifier . DOT function   (rule 446)
    struct_member_exp  ->  identifier . IMPLY function   (rule 447)

    DOT 	shift, and go to state 270
    IMPLY	shift, and go to state 271

    DOT 	[reduce using rule 183 (member_in_exp)]
    IMPLY	[reduce using rule 183 (member_in_exp)]
    $default	reduce using rule 183 (member_in_exp)



state 154

    member_in_exp  ->  intliteral .   (rule 178)

    $default	reduce using rule 178 (member_in_exp)



state 155

    member_in_exp  ->  charliteral .   (rule 189)

    $default	reduce using rule 189 (member_in_exp)



state 156

    member_in_exp  ->  floatliteral .   (rule 182)

    $default	reduce using rule 182 (member_in_exp)



state 157

    member_in_exp  ->  struct_member_exp .   (rule 192)

    $default	reduce using rule 192 (member_in_exp)



state 158

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  FINAL complexProposition .   (rule 21)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 21 (complexProposition)



state 159

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  KEEP complexProposition .   (rule 10)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 10 (complexProposition)



state 160

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  ALWAYS complexProposition .   (rule 9)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 9 (complexProposition)



state 161

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  HALT complexProposition .   (rule 20)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 20 (complexProposition)



state 162

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  W_NEXT complexProposition .   (rule 12)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 12 (complexProposition)



state 163

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  SOMETIMES complexProposition .   (rule 11)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 11 (complexProposition)



state 164

    gComplexProposition  ->  PBEGIN complexProposition PEND .   (rule 2)

    $default	reduce using rule 2 (gComplexProposition)



state 165

    complexProposition  ->  complexProposition CHOP . complexProposition   (rule 8)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 344



state 166

    complexProposition  ->  complexProposition IFF . complexProposition   (rule 6)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 345



state 167

    complexProposition  ->  complexProposition PROPIMPLY . complexProposition   (rule 7)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 346



state 168

    complexProposition  ->  complexProposition OR . complexProposition   (rule 5)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 347



state 169

    complexProposition  ->  complexProposition AND . complexProposition   (rule 4)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 348



state 170

    complexProposition  ->  complexProposition CHOPSTAR .   (rule 26)

    $default	reduce using rule 26 (complexProposition)



state 171

    switch_statement  ->  SWITCH OPEN_PAR . member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 413)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    member_in_exp	go to state 349
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 172

    member_in_exp  ->  POINTERNULL .   (rule 181)
    prime_bool_exp  ->  POINTERNULL . EQ ari_exp   (rule 318)
    prime_bool_exp  ->  POINTERNULL . NE ari_exp   (rule 319)

    NE  	shift, and go to state 350
    EQ  	shift, and go to state 351

    NE  	[reduce using rule 181 (member_in_exp)]
    EQ  	[reduce using rule 181 (member_in_exp)]
    $default	reduce using rule 181 (member_in_exp)



state 173

    prime_bool_exp  ->  MY_TRUE .   (rule 309)

    $default	reduce using rule 309 (prime_bool_exp)



state 174

    prime_bool_exp  ->  MY_FALSE .   (rule 310)

    $default	reduce using rule 310 (prime_bool_exp)



state 175

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 187)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 307)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 172
    STRUCT	shift, and go to state 277
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 173
    MY_FALSE	shift, and go to state 174
    INTDECLARATION	shift, and go to state 278
    CHARDECLARATION	shift, and go to state 279
    VOIDDECLARATION	shift, and go to state 280
    FLOATDECLARATION	shift, and go to state 281
    OPEN_PAR	shift, and go to state 352
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    UNSIGNED	shift, and go to state 283
    SIGNED	shift, and go to state 284
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    NEGATION	shift, and go to state 176
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    STRUCT_TYPE	shift, and go to state 285
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 286
    point_exp	go to state 287
    ari_exp	go to state 353
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 289
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    bool_exp	go to state 354
    prime_bool_exp	go to state 180
    identifier	go to state 290
    strliteral	go to state 181
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 291



state 176

    bool_exp  ->  NEGATION . bool_exp   (rule 304)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 172
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 173
    MY_FALSE	shift, and go to state 174
    OPEN_PAR	shift, and go to state 175
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    NEGATION	shift, and go to state 176
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 178
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    bool_exp	go to state 355
    prime_bool_exp	go to state 180
    identifier	go to state 153
    strliteral	go to state 181
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 177

    strliteral  ->  STRLITERAL .   (rule 389)

    $default	reduce using rule 389 (strliteral)



state 178

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 308)
    prime_bool_exp  ->  ari_exp .   (rule 311)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 312)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 313)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 316)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 317)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 320)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 321)

    NE  	shift, and go to state 356
    EQ  	shift, and go to state 357
    GE  	shift, and go to state 333
    LE  	shift, and go to state 334
    GT  	shift, and go to state 335
    LT  	shift, and go to state 336
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 311 (prime_bool_exp)

    ari_operator	go to state 327
    relation_operator	go to state 358



state 179

    bool_exp  ->  bool_exp . AND bool_exp   (rule 305)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 306)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 418)

    THEN	shift, and go to state 359
    OR  	shift, and go to state 360
    AND 	shift, and go to state 361



state 180

    bool_exp  ->  prime_bool_exp .   (rule 303)

    $default	reduce using rule 303 (bool_exp)



state 181

    prime_bool_exp  ->  strliteral . EQ ari_exp   (rule 314)
    prime_bool_exp  ->  strliteral . NE ari_exp   (rule 315)

    NE  	shift, and go to state 362
    EQ  	shift, and go to state 363



state 182

    statement  ->  AWAIT OPEN_PAR . bool_exp CLOSE_PAR   (rule 43)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 172
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 173
    MY_FALSE	shift, and go to state 174
    OPEN_PAR	shift, and go to state 175
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    NEGATION	shift, and go to state 176
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 178
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    bool_exp	go to state 364
    prime_bool_exp	go to state 180
    identifier	go to state 153
    strliteral	go to state 181
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 183

    struct_identifier  ->  STRUCT ID .   (rule 78)
    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 85)

    OPEN_PAR	shift, and go to state 194
    MUL 	shift, and go to state 252
    ID  	shift, and go to state 253

    $default	reduce using rule 78 (struct_identifier)

    option_identifier_array_declaration	go to state 365
    identifier	go to state 255



state 184

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 87)

    OPEN_PAR	shift, and go to state 194
    MUL 	shift, and go to state 252
    ID  	shift, and go to state 253

    option_identifier_array_declaration	go to state 366
    identifier	go to state 255



state 185

    struct_identifier  ->  UNION ID .   (rule 79)
    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 86)

    OPEN_PAR	shift, and go to state 194
    MUL 	shift, and go to state 252
    ID  	shift, and go to state 253

    $default	reduce using rule 79 (struct_identifier)

    option_identifier_array_declaration	go to state 367
    identifier	go to state 255



state 186

    declaration  ->  UNION STRUCT_TYPE . option_identifier_array_declaration   (rule 88)

    OPEN_PAR	shift, and go to state 194
    MUL 	shift, and go to state 252
    ID  	shift, and go to state 253

    option_identifier_array_declaration	go to state 368
    identifier	go to state 255



state 187

    file_statement  ->  FOPEN OPEN_PAR . ass_left COMMA strliteral CLOSE_PAR   (rule 114)

    OPEN_PAR	shift, and go to state 369
    MUL 	shift, and go to state 66
    NEXT	shift, and go to state 242
    ID  	shift, and go to state 237

    ass_left	go to state 370
    leftaddrshift	go to state 85
    array	go to state 244
    point_exp	go to state 87
    identifier	go to state 95
    struct_member_exp	go to state 103



state 188

    file_statement  ->  FCLOSE OPEN_PAR . identifier CLOSE_PAR   (rule 120)

    OPEN_PAR	shift, and go to state 194
    ID  	shift, and go to state 195

    identifier	go to state 371



state 189

    file_statement  ->  FGETS OPEN_PAR . identifier COMMA intliteral COMMA identifier CLOSE_PAR   (rule 115)

    OPEN_PAR	shift, and go to state 194
    ID  	shift, and go to state 195

    identifier	go to state 372



state 190

    file_statement  ->  FPUTS OPEN_PAR . identifier COMMA identifier CLOSE_PAR   (rule 117)

    OPEN_PAR	shift, and go to state 194
    ID  	shift, and go to state 195

    identifier	go to state 373



state 191

    file_statement  ->  FGETC OPEN_PAR . identifier CLOSE_PAR   (rule 116)

    OPEN_PAR	shift, and go to state 194
    ID  	shift, and go to state 195

    identifier	go to state 374



state 192

    file_statement  ->  FPUTC OPEN_PAR . identifier COMMA identifier CLOSE_PAR   (rule 118)
    file_statement  ->  FPUTC OPEN_PAR . array COMMA identifier CLOSE_PAR   (rule 119)

    OPEN_PAR	shift, and go to state 375
    ID  	shift, and go to state 237

    array	go to state 376
    identifier	go to state 377



state 193

    statement  ->  DEFINE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 59)

    OPEN_PAR	shift, and go to state 378



state 194

    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)

    OPEN_PAR	shift, and go to state 194
    ID  	shift, and go to state 195

    identifier	go to state 379



state 195

    identifier  ->  ID .   (rule 387)

    $default	reduce using rule 387 (identifier)



state 196

    statement  ->  EXIST identifier . inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 66)

    COMMA	shift, and go to state 380

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 381



state 197

    statement  ->  FRAME OPEN_PAR . identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    OPEN_PAR	shift, and go to state 194
    ID  	shift, and go to state 195

    identifier	go to state 382



state 198

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 187)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    extend_for_statement  ->  FOR OPEN_PAR . for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 405)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    STRUCT	shift, and go to state 383
    UNION	shift, and go to state 231
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 384
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 385
    VOIDDECLARATION	shift, and go to state 386
    FLOATDECLARATION	shift, and go to state 387
    OPEN_PAR	shift, and go to state 388
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    UNSIGNED	shift, and go to state 283
    SIGNED	shift, and go to state 284
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    NEXT	shift, and go to state 242
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 389
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    $default	reduce using rule 408 (for_sta_init)

    function	go to state 143
    declaration	go to state 390
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 391
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 212
    point_exp	go to state 213
    ari_exp	go to state 288
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 289
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 216
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    for_sta_init	go to state 392
    struct_member_exp	go to state 218



state 199

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    for_statement  ->  FOR ari_exp . TIMES DO statement_bpar   (rule 404)

    TIMES	shift, and go to state 393
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ari_operator	go to state 327



state 200

    bool_par  ->  error . CLOSE_PAR   (rule 386)

    CLOSE_PAR	shift, and go to state 394



state 201

    bool_par  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 385)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 172
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 173
    MY_FALSE	shift, and go to state 174
    OPEN_PAR	shift, and go to state 175
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    NEGATION	shift, and go to state 176
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 178
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    bool_exp	go to state 395
    prime_bool_exp	go to state 180
    identifier	go to state 153
    strliteral	go to state 181
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 202

    while_statement  ->  WHILE bool_par . statement_bpar   (rule 403)

    error	shift, and go to state 396
    OPEN_BPAR	shift, and go to state 397

    statement_bpar	go to state 398



state 203

    statement  ->  REPEAT OPEN_BPAR . statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    EXTERN	shift, and go to state 62
    UNSIGNED	shift, and go to state 63
    SIGNED	shift, and go to state 64
    FREE	shift, and go to state 65
    MUL 	shift, and go to state 66
    NEXT	shift, and go to state 67
    LENGTH	shift, and go to state 68
    REQUEST	shift, and go to state 69
    FINAL	shift, and go to state 70
    KEEP	shift, and go to state 71
    ALWAYS	shift, and go to state 72
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 74

    statement	go to state 399
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 95
    while_statement	go to state 96
    for_statement	go to state 97
    extend_for_statement	go to state 98
    switch_statement	go to state 99
    if_statement	go to state 100
    output_statement	go to state 101
    input_statement	go to state 102
    struct_member_exp	go to state 103



state 204

    output_statement  ->  DISPLAY OPEN_PAR . ass_right CLOSE_PAR   (rule 421)
    output_statement  ->  DISPLAY OPEN_PAR . ass_right option_output CLOSE_PAR   (rule 422)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 400
    OPEN_BPAR	shift, and go to state 401
    OPEN_MPAR	shift, and go to state 402
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 403
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    ass_right	go to state 404
    rightaddrshift	go to state 405
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 406
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    array_exp	go to state 407
    option_list_value	go to state 408
    option_struct_list_value	go to state 409
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    strliteral	go to state 410
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 205

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 171)
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 418)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 172
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 173
    MY_FALSE	shift, and go to state 174
    OPEN_PAR	shift, and go to state 175
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    NEGATION	shift, and go to state 176
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 178
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    bool_exp	go to state 411
    prime_bool_exp	go to state 180
    identifier	go to state 153
    strliteral	go to state 181
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 206

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 67)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 187)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 402)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 205
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    POINTERNULL	shift, and go to state 172
    STRUCT	shift, and go to state 412
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 173
    MY_FALSE	shift, and go to state 174
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 413
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 414
    VOIDDECLARATION	shift, and go to state 386
    FLOATDECLARATION	shift, and go to state 415
    OPEN_PAR	shift, and go to state 206
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    SYSTEM	shift, and go to state 61
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    UNSIGNED	shift, and go to state 416
    SIGNED	shift, and go to state 417
    FREE	shift, and go to state 65
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 207
    BNE 	shift, and go to state 139
    NEXT	shift, and go to state 67
    NEGATION	shift, and go to state 208
    LENGTH	shift, and go to state 68
    REQUEST	shift, and go to state 69
    FINAL	shift, and go to state 70
    KEEP	shift, and go to state 71
    ALWAYS	shift, and go to state 72
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    STRUCT_TYPE	shift, and go to state 389
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    statement	go to state 209
    function	go to state 210
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 211
    leftaddrshift	go to state 85
    array	go to state 212
    point_exp	go to state 213
    ari_exp	go to state 353
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 289
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    prime_bool_exp	go to state 215
    identifier	go to state 216
    strliteral	go to state 181
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    imply_pre	go to state 418
    while_statement	go to state 96
    for_statement	go to state 97
    extend_for_statement	go to state 98
    switch_statement	go to state 99
    if_statement	go to state 100
    output_statement	go to state 101
    input_statement	go to state 102
    struct_member_exp	go to state 218



state 207

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)
    point_exp  ->  MUL . identifier   (rule 161)
    point_exp  ->  MUL . point_exp   (rule 162)
    point_exp  ->  MUL . array   (rule 163)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 165)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 166)

    OPEN_PAR	shift, and go to state 236
    MUL 	shift, and go to state 419
    ID  	shift, and go to state 420

    array	go to state 238
    point_exp	go to state 239
    identifier	go to state 421



state 208

    imply_pre  ->  NEGATION . imply_pre   (rule 399)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 172
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 173
    MY_FALSE	shift, and go to state 174
    OPEN_PAR	shift, and go to state 422
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    NEGATION	shift, and go to state 208
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 178
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    prime_bool_exp	go to state 215
    identifier	go to state 153
    strliteral	go to state 181
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    imply_pre	go to state 423
    struct_member_exp	go to state 157



state 209

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  OPEN_PAR statement . CLOSE_PAR   (rule 67)

    CLOSE_PAR	shift, and go to state 424
    CHOP	shift, and go to state 256
    OR  	shift, and go to state 257
    PARALLEL	shift, and go to state 258
    AND 	shift, and go to state 259



state 210

    statement  ->  function .   (rule 65)
    member_in_exp  ->  function .   (rule 186)

    CLOSE_PAR	reduce using rule 65 (statement)
    CLOSE_PAR	[reduce using rule 186 (member_in_exp)]
    CHOP	reduce using rule 65 (statement)
    OR  	reduce using rule 65 (statement)
    OR  	[reduce using rule 186 (member_in_exp)]
    PARALLEL	reduce using rule 65 (statement)
    AND 	reduce using rule 65 (statement)
    AND 	[reduce using rule 186 (member_in_exp)]
    $default	reduce using rule 186 (member_in_exp)



state 211

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 121)
    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 126)

    CLOSE_PAR	shift, and go to state 425
    ASS_P	shift, and go to state 262
    ASS_N	shift, and go to state 263

    assign_operator	go to state 264



state 212

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 74)
    ass_left  ->  array .   (rule 124)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 157)
    member_in_exp  ->  array .   (rule 184)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 437)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 444)

    DOT 	shift, and go to state 265
    OPEN_PAR	shift, and go to state 266
    CLOSE_PAR	shift, and go to state 426
    IMPLY	shift, and go to state 267

    CLOSE_PAR	[reduce using rule 124 (ass_left)]
    CLOSE_PAR	[reduce using rule 184 (member_in_exp)]
    ASS_P	reduce using rule 124 (ass_left)
    ASS_N	reduce using rule 124 (ass_left)
    $default	reduce using rule 184 (member_in_exp)



state 213

    ass_left  ->  point_exp .   (rule 125)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 167)
    member_in_exp  ->  point_exp .   (rule 185)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 435)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 438)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 442)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 448)

    DOT 	shift, and go to state 268
    CLOSE_PAR	shift, and go to state 427
    IMPLY	shift, and go to state 269

    CLOSE_PAR	[reduce using rule 125 (ass_left)]
    CLOSE_PAR	[reduce using rule 185 (member_in_exp)]
    ASS_P	reduce using rule 125 (ass_left)
    ASS_N	reduce using rule 125 (ass_left)
    $default	reduce using rule 185 (member_in_exp)



state 214

    member_in_exp  ->  address_exp .   (rule 190)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)

    CLOSE_PAR	shift, and go to state 428

    CLOSE_PAR	[reduce using rule 190 (member_in_exp)]
    $default	reduce using rule 190 (member_in_exp)



state 215

    imply_pre  ->  prime_bool_exp .   (rule 398)

    $default	reduce using rule 398 (imply_pre)



state 216

    ass_left  ->  identifier .   (rule 122)
    member_in_exp  ->  identifier .   (rule 183)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 388)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 443)
    struct_member_exp  ->  identifier . DOT function   (rule 446)
    struct_member_exp  ->  identifier . IMPLY function   (rule 447)

    DOT 	shift, and go to state 270
    CLOSE_PAR	shift, and go to state 429
    IMPLY	shift, and go to state 271

    CLOSE_PAR	[reduce using rule 122 (ass_left)]
    CLOSE_PAR	[reduce using rule 183 (member_in_exp)]
    ASS_P	reduce using rule 122 (ass_left)
    ASS_N	reduce using rule 122 (ass_left)
    $default	reduce using rule 183 (member_in_exp)



state 217

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 400)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 401)

    CLOSE_PAR	shift, and go to state 430
    OR  	shift, and go to state 431
    AND 	shift, and go to state 432



state 218

    ass_left  ->  struct_member_exp .   (rule 123)
    member_in_exp  ->  struct_member_exp .   (rule 192)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 449)

    CLOSE_PAR	shift, and go to state 433

    CLOSE_PAR	[reduce using rule 123 (ass_left)]
    CLOSE_PAR	[reduce using rule 192 (member_in_exp)]
    ASS_P	reduce using rule 123 (ass_left)
    ASS_N	reduce using rule 123 (ass_left)
    $default	reduce using rule 192 (member_in_exp)



state 219

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  OPEN_BPAR statement . option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 57)
    statement  ->  OPEN_BPAR statement . CLOSE_BPAR PROJECTION statement_bpar   (rule 58)

    COMMA	shift, and go to state 434
    CLOSE_BPAR	shift, and go to state 435
    CHOP	shift, and go to state 256
    OR  	shift, and go to state 257
    PARALLEL	shift, and go to state 258
    AND 	shift, and go to state 259

    CLOSE_BPAR	[reduce using rule 396 (option_projection)]
    $default	reduce using rule 396 (option_projection)

    option_projection	go to state 436



state 220

    statement  ->  FUNCTION ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 60)

    OPEN_PAR	shift, and go to state 437



state 221

    statement  ->  PROCESS ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    OPEN_PAR	shift, and go to state 438



state 222

    String_Function_head  ->  STRFUNCHEAD OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 267)

    OPEN_PAR	shift, and go to state 439
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 66
    ID  	shift, and go to state 237
    STRLITERAL	shift, and go to state 177

    array	go to state 440
    point_exp	go to state 441
    String_Function	go to state 442
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 443
    identifier	go to state 444
    strliteral	go to state 445
    struct_member_exp	go to state 446



state 223

    String_Function_tail  ->  STRFUNCTAIL OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 268)

    OPEN_PAR	shift, and go to state 439
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 66
    ID  	shift, and go to state 237
    STRLITERAL	shift, and go to state 177

    array	go to state 440
    point_exp	go to state 441
    String_Function	go to state 442
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 447
    identifier	go to state 444
    strliteral	go to state 445
    struct_member_exp	go to state 446



state 224

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR . str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 269)

    OPEN_PAR	shift, and go to state 439
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 66
    ID  	shift, and go to state 237
    STRLITERAL	shift, and go to state 177

    array	go to state 440
    point_exp	go to state 441
    String_Function	go to state 442
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 448
    identifier	go to state 444
    strliteral	go to state 445
    struct_member_exp	go to state 446



state 225

    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR . str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 270)

    OPEN_PAR	shift, and go to state 439
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 66
    ID  	shift, and go to state 237
    STRLITERAL	shift, and go to state 177

    array	go to state 440
    point_exp	go to state 441
    String_Function	go to state 442
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 449
    identifier	go to state 444
    strliteral	go to state 445
    struct_member_exp	go to state 446



state 226

    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR . str_func_parameter COMMA str_func_parameter CLOSE_PAR   (rule 271)

    OPEN_PAR	shift, and go to state 439
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 66
    ID  	shift, and go to state 237
    STRLITERAL	shift, and go to state 177

    array	go to state 440
    point_exp	go to state 441
    String_Function	go to state 442
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 450
    identifier	go to state 444
    strliteral	go to state 445
    struct_member_exp	go to state 446



state 227

    String_Function_len  ->  STRFUNCLEN OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 272)

    OPEN_PAR	shift, and go to state 439
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 66
    ID  	shift, and go to state 237
    STRLITERAL	shift, and go to state 177

    array	go to state 440
    point_exp	go to state 441
    String_Function	go to state 442
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 451
    identifier	go to state 444
    strliteral	go to state 445
    struct_member_exp	go to state 446



state 228

    statement  ->  SYSTEM OPEN_PAR . str_func_parameter CLOSE_PAR   (rule 64)

    OPEN_PAR	shift, and go to state 439
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 66
    ID  	shift, and go to state 237
    STRLITERAL	shift, and go to state 177

    array	go to state 440
    point_exp	go to state 441
    String_Function	go to state 442
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 452
    identifier	go to state 444
    strliteral	go to state 445
    struct_member_exp	go to state 446



state 229

    function  ->  EXTERN ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 73)

    OPEN_PAR	shift, and go to state 453



state 230

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 85)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 87)

    ID  	shift, and go to state 454
    STRUCT_TYPE	shift, and go to state 184



state 231

    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 86)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 88)

    ID  	shift, and go to state 455
    STRUCT_TYPE	shift, and go to state 186



state 232

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)

    MUL 	shift, and go to state 456



state 233

    sign_declaration  ->  UNSIGNED declaration .   (rule 81)

    $default	reduce using rule 81 (sign_declaration)



state 234

    sign_declaration  ->  SIGNED declaration .   (rule 80)

    $default	reduce using rule 80 (sign_declaration)



state 235

    statement  ->  FREE OPEN_PAR . identifier CLOSE_PAR   (rule 63)

    OPEN_PAR	shift, and go to state 194
    ID  	shift, and go to state 195

    identifier	go to state 457



state 236

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 165)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 166)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 282
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    UNSIGNED	shift, and go to state 458
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    type_define	go to state 459
    file_statement	go to state 82
    array	go to state 286
    point_exp	go to state 287
    ari_exp	go to state 460
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    sign_type_define	go to state 461
    all_type_define	go to state 462
    identifier	go to state 290
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 237

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    identifier  ->  ID .   (rule 387)

    OPEN_MPAR	shift, and go to state 251

    $default	reduce using rule 387 (identifier)



state 238

    point_exp  ->  MUL array .   (rule 163)

    $default	reduce using rule 163 (point_exp)



state 239

    point_exp  ->  MUL point_exp .   (rule 162)

    $default	reduce using rule 162 (point_exp)



state 240

    point_exp  ->  MUL identifier .   (rule 161)

    $default	reduce using rule 161 (point_exp)



state 241

    statement  ->  NEXT OPEN_PAR . statement CLOSE_PAR   (rule 40)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 463
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    EXTERN	shift, and go to state 62
    UNSIGNED	shift, and go to state 63
    SIGNED	shift, and go to state 64
    FREE	shift, and go to state 65
    ADDRESS	shift, and go to state 137
    MUL 	shift, and go to state 66
    NEXT	shift, and go to state 67
    LENGTH	shift, and go to state 68
    REQUEST	shift, and go to state 69
    FINAL	shift, and go to state 70
    KEEP	shift, and go to state 71
    ALWAYS	shift, and go to state 72
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 74

    statement	go to state 464
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 211
    leftaddrshift	go to state 85
    array	go to state 465
    point_exp	go to state 466
    address_exp	go to state 467
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 468
    while_statement	go to state 96
    for_statement	go to state 97
    extend_for_statement	go to state 98
    switch_statement	go to state 99
    if_statement	go to state 100
    output_statement	go to state 101
    input_statement	go to state 102
    struct_member_exp	go to state 469



state 242

    ass_left  ->  NEXT . ass_left   (rule 127)

    OPEN_PAR	shift, and go to state 369
    MUL 	shift, and go to state 66
    NEXT	shift, and go to state 242
    ID  	shift, and go to state 237

    ass_left	go to state 243
    leftaddrshift	go to state 85
    array	go to state 244
    point_exp	go to state 87
    identifier	go to state 95
    struct_member_exp	go to state 103



state 243

    ass_left  ->  NEXT ass_left .   (rule 127)

    $default	reduce using rule 127 (ass_left)



state 244

    ass_left  ->  array .   (rule 124)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 437)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 444)

    DOT 	shift, and go to state 265
    IMPLY	shift, and go to state 267

    $default	reduce using rule 124 (ass_left)



state 245

    statement  ->  LENGTH OPEN_PAR . ari_exp CLOSE_PAR   (rule 48)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 470
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 246

    input_statement  ->  REQUEST OPEN_PAR . identifier CLOSE_PAR   (rule 425)
    input_statement  ->  REQUEST OPEN_PAR . identifier option_input CLOSE_PAR   (rule 426)
    input_statement  ->  REQUEST OPEN_PAR . array CLOSE_PAR   (rule 427)
    input_statement  ->  REQUEST OPEN_PAR . array option_input CLOSE_PAR   (rule 428)
    input_statement  ->  REQUEST OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 429)

    OPEN_PAR	shift, and go to state 439
    MUL 	shift, and go to state 66
    ID  	shift, and go to state 237

    array	go to state 471
    point_exp	go to state 319
    identifier	go to state 472
    struct_member_exp	go to state 473



state 247

    statement  ->  FINAL OPEN_PAR . statement CLOSE_PAR   (rule 53)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    EXTERN	shift, and go to state 62
    UNSIGNED	shift, and go to state 63
    SIGNED	shift, and go to state 64
    FREE	shift, and go to state 65
    MUL 	shift, and go to state 66
    NEXT	shift, and go to state 67
    LENGTH	shift, and go to state 68
    REQUEST	shift, and go to state 69
    FINAL	shift, and go to state 70
    KEEP	shift, and go to state 71
    ALWAYS	shift, and go to state 72
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 74

    statement	go to state 474
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 95
    while_statement	go to state 96
    for_statement	go to state 97
    extend_for_statement	go to state 98
    switch_statement	go to state 99
    if_statement	go to state 100
    output_statement	go to state 101
    input_statement	go to state 102
    struct_member_exp	go to state 103



state 248

    statement  ->  KEEP OPEN_PAR . statement CLOSE_PAR   (rule 41)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    EXTERN	shift, and go to state 62
    UNSIGNED	shift, and go to state 63
    SIGNED	shift, and go to state 64
    FREE	shift, and go to state 65
    MUL 	shift, and go to state 66
    NEXT	shift, and go to state 67
    LENGTH	shift, and go to state 68
    REQUEST	shift, and go to state 69
    FINAL	shift, and go to state 70
    KEEP	shift, and go to state 71
    ALWAYS	shift, and go to state 72
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 74

    statement	go to state 475
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 95
    while_statement	go to state 96
    for_statement	go to state 97
    extend_for_statement	go to state 98
    switch_statement	go to state 99
    if_statement	go to state 100
    output_statement	go to state 101
    input_statement	go to state 102
    struct_member_exp	go to state 103



state 249

    statement  ->  ALWAYS OPEN_PAR . statement CLOSE_PAR   (rule 42)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    EXTERN	shift, and go to state 62
    UNSIGNED	shift, and go to state 63
    SIGNED	shift, and go to state 64
    FREE	shift, and go to state 65
    MUL 	shift, and go to state 66
    NEXT	shift, and go to state 67
    LENGTH	shift, and go to state 68
    REQUEST	shift, and go to state 69
    FINAL	shift, and go to state 70
    KEEP	shift, and go to state 71
    ALWAYS	shift, and go to state 72
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 74

    statement	go to state 476
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 95
    while_statement	go to state 96
    for_statement	go to state 97
    extend_for_statement	go to state 98
    switch_statement	go to state 99
    if_statement	go to state 100
    output_statement	go to state 101
    input_statement	go to state 102
    struct_member_exp	go to state 103



state 250

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 72)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 400
    OPEN_BPAR	shift, and go to state 401
    OPEN_MPAR	shift, and go to state 402
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 477
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 403
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 478
    STRLITERAL	shift, and go to state 177
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    $default	reduce using rule 377 (option_function_identifier)

    function	go to state 143
    file_statement	go to state 82
    ass_right	go to state 479
    rightaddrshift	go to state 405
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 406
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    array_exp	go to state 407
    option_list_value	go to state 408
    option_struct_list_value	go to state 409
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    option_function_identifier	go to state 480
    identifier	go to state 153
    strliteral	go to state 410
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 251

    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 481
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 252

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 106)

    OPEN_PAR	shift, and go to state 194
    MUL 	shift, and go to state 252
    ID  	shift, and go to state 253

    option_identifier_array_declaration	go to state 482
    identifier	go to state 255



state 253

    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 103)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 105)
    identifier  ->  ID .   (rule 387)

    ARRAY	shift, and go to state 483
    OPEN_MPAR	shift, and go to state 484

    $default	reduce using rule 387 (identifier)



state 254

    declaration  ->  STRUCT_TYPE option_identifier_array_declaration .   (rule 84)

    $default	reduce using rule 84 (declaration)



state 255

    option_identifier_array_declaration  ->  identifier . inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  identifier . ASS_P ass_right inner_option_identifier_array_declaration   (rule 101)

    COMMA	shift, and go to state 485
    ASS_P	shift, and go to state 486

    COMMA	[reduce using rule 109 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 109 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 487



state 256

    statement  ->  statement CHOP . statement   (rule 32)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    EXTERN	shift, and go to state 62
    UNSIGNED	shift, and go to state 63
    SIGNED	shift, and go to state 64
    FREE	shift, and go to state 65
    MUL 	shift, and go to state 66
    NEXT	shift, and go to state 67
    LENGTH	shift, and go to state 68
    REQUEST	shift, and go to state 69
    FINAL	shift, and go to state 70
    KEEP	shift, and go to state 71
    ALWAYS	shift, and go to state 72
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 74

    statement	go to state 488
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 95
    while_statement	go to state 96
    for_statement	go to state 97
    extend_for_statement	go to state 98
    switch_statement	go to state 99
    if_statement	go to state 100
    output_statement	go to state 101
    input_statement	go to state 102
    struct_member_exp	go to state 103



state 257

    statement  ->  statement OR . statement   (rule 31)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    EXTERN	shift, and go to state 62
    UNSIGNED	shift, and go to state 63
    SIGNED	shift, and go to state 64
    FREE	shift, and go to state 65
    MUL 	shift, and go to state 66
    NEXT	shift, and go to state 67
    LENGTH	shift, and go to state 68
    REQUEST	shift, and go to state 69
    FINAL	shift, and go to state 70
    KEEP	shift, and go to state 71
    ALWAYS	shift, and go to state 72
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 74

    statement	go to state 489
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 95
    while_statement	go to state 96
    for_statement	go to state 97
    extend_for_statement	go to state 98
    switch_statement	go to state 99
    if_statement	go to state 100
    output_statement	go to state 101
    input_statement	go to state 102
    struct_member_exp	go to state 103



state 258

    statement  ->  statement PARALLEL . statement   (rule 54)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    EXTERN	shift, and go to state 62
    UNSIGNED	shift, and go to state 63
    SIGNED	shift, and go to state 64
    FREE	shift, and go to state 65
    MUL 	shift, and go to state 66
    NEXT	shift, and go to state 67
    LENGTH	shift, and go to state 68
    REQUEST	shift, and go to state 69
    FINAL	shift, and go to state 70
    KEEP	shift, and go to state 71
    ALWAYS	shift, and go to state 72
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 74

    statement	go to state 490
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 95
    while_statement	go to state 96
    for_statement	go to state 97
    extend_for_statement	go to state 98
    switch_statement	go to state 99
    if_statement	go to state 100
    output_statement	go to state 101
    input_statement	go to state 102
    struct_member_exp	go to state 103



state 259

    statement  ->  statement AND . statement   (rule 30)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    EXTERN	shift, and go to state 62
    UNSIGNED	shift, and go to state 63
    SIGNED	shift, and go to state 64
    FREE	shift, and go to state 65
    MUL 	shift, and go to state 66
    NEXT	shift, and go to state 67
    LENGTH	shift, and go to state 68
    REQUEST	shift, and go to state 69
    FINAL	shift, and go to state 70
    KEEP	shift, and go to state 71
    ALWAYS	shift, and go to state 72
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 74

    statement	go to state 491
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 95
    while_statement	go to state 96
    for_statement	go to state 97
    extend_for_statement	go to state 98
    switch_statement	go to state 99
    if_statement	go to state 100
    output_statement	go to state 101
    input_statement	go to state 102
    struct_member_exp	go to state 103



state 260

    struct_define_statement  ->  struct_identifier OPEN_BPAR . option_struct_declaration CLOSE_BPAR   (rule 77)

    STRUCT	shift, and go to state 230
    UNION	shift, and go to state 231
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 232
    UNSIGNED	shift, and go to state 63
    SIGNED	shift, and go to state 64
    STRUCT_TYPE	shift, and go to state 74

    option_struct_declaration	go to state 492
    sign_declaration	go to state 493
    declaration	go to state 80
    type_define	go to state 81



state 261

    declaration  ->  type_define option_identifier_array_declaration .   (rule 83)

    $default	reduce using rule 83 (declaration)



state 262

    assign_operator  ->  ASS_P .   (rule 142)

    $default	reduce using rule 142 (assign_operator)



state 263

    assign_operator  ->  ASS_N .   (rule 143)

    $default	reduce using rule 143 (assign_operator)



state 264

    ass_statement  ->  ass_left assign_operator . ass_right   (rule 121)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 400
    OPEN_BPAR	shift, and go to state 401
    OPEN_MPAR	shift, and go to state 402
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 403
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    ass_right	go to state 494
    rightaddrshift	go to state 405
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 406
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    array_exp	go to state 407
    option_list_value	go to state 408
    option_struct_list_value	go to state 409
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    strliteral	go to state 410
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 265

    struct_member_exp  ->  array DOT . identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  array DOT . array option_struct_member_exp   (rule 437)

    OPEN_PAR	shift, and go to state 375
    ID  	shift, and go to state 237

    array	go to state 495
    identifier	go to state 496



state 266

    function  ->  array OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 74)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 400
    OPEN_BPAR	shift, and go to state 401
    OPEN_MPAR	shift, and go to state 402
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 477
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 403
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 478
    STRLITERAL	shift, and go to state 177
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    $default	reduce using rule 377 (option_function_identifier)

    function	go to state 143
    file_statement	go to state 82
    ass_right	go to state 479
    rightaddrshift	go to state 405
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 406
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    array_exp	go to state 407
    option_list_value	go to state 408
    option_struct_list_value	go to state 409
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    option_function_identifier	go to state 497
    identifier	go to state 153
    strliteral	go to state 410
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 267

    struct_member_exp  ->  array IMPLY . identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  array IMPLY . array option_struct_member_exp   (rule 444)

    OPEN_PAR	shift, and go to state 375
    ID  	shift, and go to state 237

    array	go to state 498
    identifier	go to state 499



state 268

    struct_member_exp  ->  point_exp DOT . identifier option_struct_member_exp   (rule 435)
    struct_member_exp  ->  point_exp DOT . array option_struct_member_exp   (rule 438)

    OPEN_PAR	shift, and go to state 375
    ID  	shift, and go to state 237

    array	go to state 500
    identifier	go to state 501



state 269

    struct_member_exp  ->  point_exp IMPLY . identifier option_struct_member_exp   (rule 442)
    struct_member_exp  ->  point_exp IMPLY . array option_struct_member_exp   (rule 448)

    OPEN_PAR	shift, and go to state 375
    ID  	shift, and go to state 237

    array	go to state 502
    identifier	go to state 503



state 270

    struct_member_exp  ->  identifier DOT . identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  identifier DOT . array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  identifier DOT . function   (rule 446)

    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 375
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    EXTERN	shift, and go to state 62
    ID  	shift, and go to state 73

    function	go to state 504
    file_statement	go to state 82
    array	go to state 505
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 506



state 271

    struct_member_exp  ->  identifier IMPLY . identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  identifier IMPLY . array option_struct_member_exp   (rule 443)
    struct_member_exp  ->  identifier IMPLY . function   (rule 447)

    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 375
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    EXTERN	shift, and go to state 62
    ID  	shift, and go to state 73

    function	go to state 507
    file_statement	go to state 82
    array	go to state 508
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 509



state 272

    complexProposition  ->  DEFINE ID COLON . prime_bool_exp   (rule 25)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 172
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 173
    MY_FALSE	shift, and go to state 174
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 178
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    prime_bool_exp	go to state 510
    identifier	go to state 153
    strliteral	go to state 181
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 273

    complexProposition  ->  OPEN_PAR complexProposition CLOSE_PAR .   (rule 27)

    $default	reduce using rule 27 (complexProposition)



state 274

    poptional_projection  ->  COMMA . complexProposition poptional_projection   (rule 28)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 511



state 275

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection . CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    CLOSE_BPAR	shift, and go to state 512



state 276

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 171)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 305)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 306)

    THEN	shift, and go to state 513
    OR  	shift, and go to state 360
    AND 	shift, and go to state 361



state 277

    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)

    STRUCT_TYPE	shift, and go to state 514



state 278

    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 515
    MUL 	shift, and go to state 516



state 279

    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 517
    MUL 	shift, and go to state 518



state 280

    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 242)

    MUL 	shift, and go to state 519



state 281

    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 520
    MUL 	shift, and go to state 521



state 282

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 187)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    STRUCT	shift, and go to state 277
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 522
    CHARDECLARATION	shift, and go to state 523
    VOIDDECLARATION	shift, and go to state 280
    FLOATDECLARATION	shift, and go to state 524
    OPEN_PAR	shift, and go to state 282
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    UNSIGNED	shift, and go to state 525
    SIGNED	shift, and go to state 284
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 285
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 286
    point_exp	go to state 287
    ari_exp	go to state 288
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 289
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 290
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 291



state 283

    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)

    INTDECLARATION	shift, and go to state 526
    CHARDECLARATION	shift, and go to state 527



state 284

    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)

    INTDECLARATION	shift, and go to state 528
    CHARDECLARATION	shift, and go to state 529



state 285

    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 246)

    MUL 	shift, and go to state 530



state 286

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 74)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 157)
    member_in_exp  ->  array .   (rule 184)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 437)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 444)

    DOT 	shift, and go to state 265
    OPEN_PAR	shift, and go to state 266
    CLOSE_PAR	shift, and go to state 426
    IMPLY	shift, and go to state 267

    CLOSE_PAR	[reduce using rule 184 (member_in_exp)]
    $default	reduce using rule 184 (member_in_exp)



state 287

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 167)
    member_in_exp  ->  point_exp .   (rule 185)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 435)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 438)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 442)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 448)

    DOT 	shift, and go to state 268
    CLOSE_PAR	shift, and go to state 427
    IMPLY	shift, and go to state 269

    CLOSE_PAR	[reduce using rule 185 (member_in_exp)]
    $default	reduce using rule 185 (member_in_exp)



state 288

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 187)

    CLOSE_PAR	shift, and go to state 531
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ari_operator	go to state 327



state 289

    member_in_exp  ->  address_exp .   (rule 190)
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 223)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)

    CLOSE_PAR	shift, and go to state 532

    CLOSE_PAR	[reduce using rule 190 (member_in_exp)]
    $default	reduce using rule 190 (member_in_exp)



state 290

    member_in_exp  ->  identifier .   (rule 183)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 388)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 443)
    struct_member_exp  ->  identifier . DOT function   (rule 446)
    struct_member_exp  ->  identifier . IMPLY function   (rule 447)

    DOT 	shift, and go to state 270
    CLOSE_PAR	shift, and go to state 429
    IMPLY	shift, and go to state 271

    CLOSE_PAR	[reduce using rule 183 (member_in_exp)]
    $default	reduce using rule 183 (member_in_exp)



state 291

    member_in_exp  ->  struct_member_exp .   (rule 192)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 449)

    CLOSE_PAR	shift, and go to state 433

    CLOSE_PAR	[reduce using rule 192 (member_in_exp)]
    $default	reduce using rule 192 (member_in_exp)



state 292

    size_of  ->  SIZEOF OPEN_PAR . ari_exp CLOSE_PAR   (rule 257)
    size_of  ->  SIZEOF OPEN_PAR . all_sizeof_type CLOSE_PAR   (rule 258)
    size_of  ->  SIZEOF OPEN_PAR . STRUCT_TYPE CLOSE_PAR   (rule 259)
    size_of  ->  SIZEOF OPEN_PAR . strliteral CLOSE_PAR   (rule 260)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    STRUCT	shift, and go to state 533
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 534
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 535
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 536
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    UNSIGNED	shift, and go to state 537
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    STRUCT_TYPE	shift, and go to state 538
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    type_define	go to state 459
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 539
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    all_sizeof_type	go to state 540
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    sign_type_define	go to state 461
    all_type_define	go to state 541
    identifier	go to state 153
    strliteral	go to state 542
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 293

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  CEIL ari_exp .   (rule 280)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ADD 	[reduce using rule 280 (math_function)]
    SUB 	[reduce using rule 280 (math_function)]
    $default	reduce using rule 280 (math_function)

    ari_operator	go to state 327



state 294

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  FLOOR ari_exp .   (rule 281)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ADD 	[reduce using rule 281 (math_function)]
    SUB 	[reduce using rule 281 (math_function)]
    $default	reduce using rule 281 (math_function)

    ari_operator	go to state 327



state 295

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  ROUND ari_exp .   (rule 279)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ADD 	[reduce using rule 279 (math_function)]
    SUB 	[reduce using rule 279 (math_function)]
    $default	reduce using rule 279 (math_function)

    ari_operator	go to state 327



state 296

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  SIN ari_exp .   (rule 282)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ADD 	[reduce using rule 282 (math_function)]
    SUB 	[reduce using rule 282 (math_function)]
    $default	reduce using rule 282 (math_function)

    ari_operator	go to state 327



state 297

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  COS ari_exp .   (rule 283)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ADD 	[reduce using rule 283 (math_function)]
    SUB 	[reduce using rule 283 (math_function)]
    $default	reduce using rule 283 (math_function)

    ari_operator	go to state 327



state 298

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  TAN ari_exp .   (rule 284)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ADD 	[reduce using rule 284 (math_function)]
    SUB 	[reduce using rule 284 (math_function)]
    $default	reduce using rule 284 (math_function)

    ari_operator	go to state 327



state 299

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  ASIN ari_exp .   (rule 285)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ADD 	[reduce using rule 285 (math_function)]
    SUB 	[reduce using rule 285 (math_function)]
    $default	reduce using rule 285 (math_function)

    ari_operator	go to state 327



state 300

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  ACOS ari_exp .   (rule 286)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ADD 	[reduce using rule 286 (math_function)]
    SUB 	[reduce using rule 286 (math_function)]
    $default	reduce using rule 286 (math_function)

    ari_operator	go to state 327



state 301

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  ATAN ari_exp .   (rule 287)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ADD 	[reduce using rule 287 (math_function)]
    SUB 	[reduce using rule 287 (math_function)]
    $default	reduce using rule 287 (math_function)

    ari_operator	go to state 327



state 302

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  SINH ari_exp .   (rule 288)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ADD 	[reduce using rule 288 (math_function)]
    SUB 	[reduce using rule 288 (math_function)]
    $default	reduce using rule 288 (math_function)

    ari_operator	go to state 327



state 303

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  COSH ari_exp .   (rule 289)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ADD 	[reduce using rule 289 (math_function)]
    SUB 	[reduce using rule 289 (math_function)]
    $default	reduce using rule 289 (math_function)

    ari_operator	go to state 327



state 304

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  TANH ari_exp .   (rule 290)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ADD 	[reduce using rule 290 (math_function)]
    SUB 	[reduce using rule 290 (math_function)]
    $default	reduce using rule 290 (math_function)

    ari_operator	go to state 327



state 305

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  EXP ari_exp .   (rule 291)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ADD 	[reduce using rule 291 (math_function)]
    SUB 	[reduce using rule 291 (math_function)]
    $default	reduce using rule 291 (math_function)

    ari_operator	go to state 327



state 306

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  LOG ari_exp .   (rule 292)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ADD 	[reduce using rule 292 (math_function)]
    SUB 	[reduce using rule 292 (math_function)]
    $default	reduce using rule 292 (math_function)

    ari_operator	go to state 327



state 307

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  LOG10 ari_exp .   (rule 293)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ADD 	[reduce using rule 293 (math_function)]
    SUB 	[reduce using rule 293 (math_function)]
    $default	reduce using rule 293 (math_function)

    ari_operator	go to state 327



state 308

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  SQRT ari_exp .   (rule 294)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ADD 	[reduce using rule 294 (math_function)]
    SUB 	[reduce using rule 294 (math_function)]
    $default	reduce using rule 294 (math_function)

    ari_operator	go to state 327



state 309

    math_function  ->  ATAN2 OPEN_PAR . ari_exp COMMA ari_exp CLOSE_PAR   (rule 295)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 543
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 310

    math_function  ->  POW OPEN_PAR . ari_exp COMMA ari_exp CLOSE_PAR   (rule 296)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 544
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 311

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  ABS ari_exp .   (rule 300)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ADD 	[reduce using rule 300 (math_function)]
    SUB 	[reduce using rule 300 (math_function)]
    $default	reduce using rule 300 (math_function)

    ari_operator	go to state 327



state 312

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  FABS ari_exp .   (rule 301)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ADD 	[reduce using rule 301 (math_function)]
    SUB 	[reduce using rule 301 (math_function)]
    $default	reduce using rule 301 (math_function)

    ari_operator	go to state 327



state 313

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  LABS ari_exp .   (rule 302)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ADD 	[reduce using rule 302 (math_function)]
    SUB 	[reduce using rule 302 (math_function)]
    $default	reduce using rule 302 (math_function)

    ari_operator	go to state 327



state 314

    math_function  ->  FMOD OPEN_PAR . ari_exp COMMA ari_exp CLOSE_PAR   (rule 297)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 545
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 315

    math_function  ->  MODF OPEN_PAR . ari_exp COMMA ari_exp CLOSE_PAR   (rule 298)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 546
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 316

    math_function  ->  LDEXP OPEN_PAR . ari_exp COMMA ari_exp CLOSE_PAR   (rule 299)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 547
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 317

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 223)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    OPEN_PAR	shift, and go to state 548
    ADDRESS	shift, and go to state 137
    MUL 	shift, and go to state 66
    ID  	shift, and go to state 237

    array	go to state 549
    point_exp	go to state 550
    address_exp	go to state 551
    identifier	go to state 552
    struct_member_exp	go to state 553



state 318

    address_exp  ->  ADDRESS array .   (rule 220)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 437)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 444)

    DOT 	shift, and go to state 265

    DOT 	[reduce using rule 220 (address_exp)]
    $default	reduce using rule 220 (address_exp)



state 319

    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 435)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 438)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 442)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 448)

    DOT 	shift, and go to state 268
    IMPLY	shift, and go to state 269



state 320

    address_exp  ->  ADDRESS address_exp .   (rule 222)

    $default	reduce using rule 222 (address_exp)



state 321

    address_exp  ->  ADDRESS identifier .   (rule 219)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 443)
    struct_member_exp  ->  identifier . DOT function   (rule 446)
    struct_member_exp  ->  identifier . IMPLY function   (rule 447)

    DOT 	shift, and go to state 270

    DOT 	[reduce using rule 219 (address_exp)]
    $default	reduce using rule 219 (address_exp)



state 322

    address_exp  ->  ADDRESS struct_member_exp .   (rule 221)

    $default	reduce using rule 221 (address_exp)



state 323

    member_in_exp  ->  SUB member_in_exp .   (rule 179)

    $default	reduce using rule 179 (member_in_exp)



state 324

    member_in_exp  ->  BNE member_in_exp .   (rule 180)

    $default	reduce using rule 180 (member_in_exp)



state 325

    ari_operator  ->  ADD .   (rule 202)

    $default	reduce using rule 202 (ari_operator)



state 326

    ari_operator  ->  SUB .   (rule 203)

    $default	reduce using rule 203 (ari_operator)



state 327

    ari_exp  ->  ari_exp ari_operator . simple_ari_exp   (rule 170)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    simple_ari_exp	go to state 554
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 328

    bi_operator  ->  INTER_OR .   (rule 200)

    $default	reduce using rule 200 (bi_operator)



state 329

    bi_operator  ->  CON .   (rule 201)

    $default	reduce using rule 201 (bi_operator)



state 330

    bi_operator  ->  ADDRESS .   (rule 199)

    $default	reduce using rule 199 (bi_operator)



state 331

    relation_operator  ->  NE .   (rule 324)

    $default	reduce using rule 324 (relation_operator)



state 332

    relation_operator  ->  EQ .   (rule 327)

    $default	reduce using rule 327 (relation_operator)



state 333

    relation_operator  ->  GE .   (rule 322)

    $default	reduce using rule 322 (relation_operator)



state 334

    relation_operator  ->  LE .   (rule 323)

    $default	reduce using rule 323 (relation_operator)



state 335

    relation_operator  ->  GT .   (rule 325)

    $default	reduce using rule 325 (relation_operator)



state 336

    relation_operator  ->  LT .   (rule 326)

    $default	reduce using rule 326 (relation_operator)



state 337

    bi_operator  ->  LST .   (rule 197)

    $default	reduce using rule 197 (bi_operator)



state 338

    bi_operator  ->  RST .   (rule 198)

    $default	reduce using rule 198 (bi_operator)



state 339

    bi_operator  ->  MUL .   (rule 194)

    $default	reduce using rule 194 (bi_operator)



state 340

    bi_operator  ->  DIV .   (rule 195)

    $default	reduce using rule 195 (bi_operator)



state 341

    bi_operator  ->  MOD .   (rule 196)

    $default	reduce using rule 196 (bi_operator)



state 342

    simple_ari_exp  ->  simple_ari_exp bi_operator . member_in_exp   (rule 177)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    member_in_exp	go to state 555
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 343

    ari_exp  ->  simple_ari_exp relation_operator . ari_exp   (rule 169)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 556
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 344

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition CHOP complexProposition .   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    IFF 	shift, and go to state 166
    PROPIMPLY	shift, and go to state 167
    OR  	shift, and go to state 168
    AND 	shift, and go to state 169
    CHOPSTAR	shift, and go to state 170

    $default	reduce using rule 8 (complexProposition)



state 345

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition IFF complexProposition .   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 168
    AND 	shift, and go to state 169
    CHOPSTAR	shift, and go to state 170

    $default	reduce using rule 6 (complexProposition)



state 346

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition PROPIMPLY complexProposition .   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 168
    AND 	shift, and go to state 169
    CHOPSTAR	shift, and go to state 170

    $default	reduce using rule 7 (complexProposition)



state 347

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition OR complexProposition .   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    AND 	shift, and go to state 169
    CHOPSTAR	shift, and go to state 170

    $default	reduce using rule 5 (complexProposition)



state 348

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition AND complexProposition .   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CHOPSTAR	shift, and go to state 170

    $default	reduce using rule 4 (complexProposition)



state 349

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp . CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR   (rule 413)

    CLOSE_PAR	shift, and go to state 557



state 350

    prime_bool_exp  ->  POINTERNULL NE . ari_exp   (rule 319)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 558
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 351

    prime_bool_exp  ->  POINTERNULL EQ . ari_exp   (rule 318)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 559
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 352

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 187)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 307)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 172
    STRUCT	shift, and go to state 277
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 173
    MY_FALSE	shift, and go to state 174
    INTDECLARATION	shift, and go to state 522
    CHARDECLARATION	shift, and go to state 523
    VOIDDECLARATION	shift, and go to state 280
    FLOATDECLARATION	shift, and go to state 524
    OPEN_PAR	shift, and go to state 352
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    UNSIGNED	shift, and go to state 525
    SIGNED	shift, and go to state 284
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    NEGATION	shift, and go to state 176
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    STRUCT_TYPE	shift, and go to state 285
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 286
    point_exp	go to state 287
    ari_exp	go to state 353
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 289
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    bool_exp	go to state 354
    prime_bool_exp	go to state 180
    identifier	go to state 290
    strliteral	go to state 181
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 291



state 353

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 187)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 308)
    prime_bool_exp  ->  ari_exp .   (rule 311)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 312)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 313)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 316)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 317)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 320)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 321)

    CLOSE_PAR	shift, and go to state 531
    NE  	shift, and go to state 356
    EQ  	shift, and go to state 357
    GE  	shift, and go to state 333
    LE  	shift, and go to state 334
    GT  	shift, and go to state 335
    LT  	shift, and go to state 336
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    CLOSE_PAR	[reduce using rule 311 (prime_bool_exp)]
    $default	reduce using rule 311 (prime_bool_exp)

    ari_operator	go to state 327
    relation_operator	go to state 358



state 354

    bool_exp  ->  bool_exp . AND bool_exp   (rule 305)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 306)
    bool_exp  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 307)

    CLOSE_PAR	shift, and go to state 560
    OR  	shift, and go to state 360
    AND 	shift, and go to state 361



state 355

    bool_exp  ->  NEGATION bool_exp .   (rule 304)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 305)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 306)


    $default	reduce using rule 304 (bool_exp)



state 356

    prime_bool_exp  ->  ari_exp NE . strliteral   (rule 313)
    prime_bool_exp  ->  ari_exp NE . POINTERNULL   (rule 317)
    prime_bool_exp  ->  ari_exp NE . charliteral   (rule 321)
    relation_operator  ->  NE .   (rule 324)

    POINTERNULL	shift, and go to state 561
    STRLITERAL	shift, and go to state 177
    CHARLITERAL	shift, and go to state 142

    POINTERNULL	[reduce using rule 324 (relation_operator)]
    CHARLITERAL	[reduce using rule 324 (relation_operator)]
    $default	reduce using rule 324 (relation_operator)

    strliteral	go to state 562
    charliteral	go to state 563



state 357

    prime_bool_exp  ->  ari_exp EQ . strliteral   (rule 312)
    prime_bool_exp  ->  ari_exp EQ . POINTERNULL   (rule 316)
    prime_bool_exp  ->  ari_exp EQ . charliteral   (rule 320)
    relation_operator  ->  EQ .   (rule 327)

    POINTERNULL	shift, and go to state 564
    STRLITERAL	shift, and go to state 177
    CHARLITERAL	shift, and go to state 142

    POINTERNULL	[reduce using rule 327 (relation_operator)]
    CHARLITERAL	[reduce using rule 327 (relation_operator)]
    $default	reduce using rule 327 (relation_operator)

    strliteral	go to state 565
    charliteral	go to state 566



state 358

    prime_bool_exp  ->  ari_exp relation_operator . ari_exp   (rule 308)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 567
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 359

    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 418)

    error	shift, and go to state 396
    OPEN_BPAR	shift, and go to state 397

    statement_bpar	go to state 568



state 360

    bool_exp  ->  bool_exp OR . bool_exp   (rule 306)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 172
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 173
    MY_FALSE	shift, and go to state 174
    OPEN_PAR	shift, and go to state 175
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    NEGATION	shift, and go to state 176
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 178
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    bool_exp	go to state 569
    prime_bool_exp	go to state 180
    identifier	go to state 153
    strliteral	go to state 181
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 361

    bool_exp  ->  bool_exp AND . bool_exp   (rule 305)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 172
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 173
    MY_FALSE	shift, and go to state 174
    OPEN_PAR	shift, and go to state 175
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    NEGATION	shift, and go to state 176
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 178
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    bool_exp	go to state 570
    prime_bool_exp	go to state 180
    identifier	go to state 153
    strliteral	go to state 181
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 362

    prime_bool_exp  ->  strliteral NE . ari_exp   (rule 315)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 571
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 363

    prime_bool_exp  ->  strliteral EQ . ari_exp   (rule 314)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 572
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 364

    statement  ->  AWAIT OPEN_PAR bool_exp . CLOSE_PAR   (rule 43)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 305)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 306)

    CLOSE_PAR	shift, and go to state 573
    OR  	shift, and go to state 360
    AND 	shift, and go to state 361



state 365

    declaration  ->  STRUCT ID option_identifier_array_declaration .   (rule 85)

    $default	reduce using rule 85 (declaration)



state 366

    declaration  ->  STRUCT STRUCT_TYPE option_identifier_array_declaration .   (rule 87)

    $default	reduce using rule 87 (declaration)



state 367

    declaration  ->  UNION ID option_identifier_array_declaration .   (rule 86)

    $default	reduce using rule 86 (declaration)



state 368

    declaration  ->  UNION STRUCT_TYPE option_identifier_array_declaration .   (rule 88)

    $default	reduce using rule 88 (declaration)



state 369

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    OPEN_PAR	shift, and go to state 574
    ADDRESS	shift, and go to state 137
    MUL 	shift, and go to state 66
    NEXT	shift, and go to state 242
    ID  	shift, and go to state 237

    ass_left	go to state 575
    leftaddrshift	go to state 85
    array	go to state 576
    point_exp	go to state 466
    address_exp	go to state 467
    identifier	go to state 468
    struct_member_exp	go to state 469



state 370

    file_statement  ->  FOPEN OPEN_PAR ass_left . COMMA strliteral CLOSE_PAR   (rule 114)

    COMMA	shift, and go to state 577



state 371

    file_statement  ->  FCLOSE OPEN_PAR identifier . CLOSE_PAR   (rule 120)

    CLOSE_PAR	shift, and go to state 578



state 372

    file_statement  ->  FGETS OPEN_PAR identifier . COMMA intliteral COMMA identifier CLOSE_PAR   (rule 115)

    COMMA	shift, and go to state 579



state 373

    file_statement  ->  FPUTS OPEN_PAR identifier . COMMA identifier CLOSE_PAR   (rule 117)

    COMMA	shift, and go to state 580



state 374

    file_statement  ->  FGETC OPEN_PAR identifier . CLOSE_PAR   (rule 116)

    CLOSE_PAR	shift, and go to state 581



state 375

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)

    OPEN_PAR	shift, and go to state 582
    ID  	shift, and go to state 237

    array	go to state 583
    identifier	go to state 379



state 376

    file_statement  ->  FPUTC OPEN_PAR array . COMMA identifier CLOSE_PAR   (rule 119)

    COMMA	shift, and go to state 584



state 377

    file_statement  ->  FPUTC OPEN_PAR identifier . COMMA identifier CLOSE_PAR   (rule 118)

    COMMA	shift, and go to state 585



state 378

    statement  ->  DEFINE ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 59)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 586
    UNSIGNED	shift, and go to state 458
    ID  	shift, and go to state 587
    STRUCT_TYPE	shift, and go to state 588

    $default	reduce using rule 357 (option_function_parameter_list)

    type_define	go to state 459
    sign_type_define	go to state 461
    all_type_define	go to state 589
    option_function_parameter_list	go to state 590



state 379

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 388)

    CLOSE_PAR	shift, and go to state 429



state 380

    inner_option_define_identifier  ->  COMMA . all_type_define identifier inner_option_define_identifier   (rule 358)
    inner_option_define_identifier  ->  COMMA . all_type_define inner_option_define_identifier   (rule 359)
    inner_option_define_identifier  ->  COMMA . ID identifier inner_option_define_identifier   (rule 360)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier inner_option_define_identifier   (rule 361)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE MUL identifier inner_option_define_identifier   (rule 362)
    inner_option_define_identifier  ->  COMMA . ID identifier ARRAY inner_option_define_identifier   (rule 363)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier ARRAY inner_option_define_identifier   (rule 364)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY inner_option_define_identifier   (rule 365)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier ARRAY inner_option_define_identifier   (rule 366)
    inner_option_define_identifier  ->  COMMA . OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 367)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 369)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 370)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 371)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier inner_option_define_identifier   (rule 372)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL inner_option_define_identifier   (rule 373)
    inner_option_define_identifier  ->  COMMA . error   (rule 374)

    error	shift, and go to state 591
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 592
    UNSIGNED	shift, and go to state 458
    ID  	shift, and go to state 593
    STRUCT_TYPE	shift, and go to state 594

    type_define	go to state 459
    sign_type_define	go to state 461
    all_type_define	go to state 595



state 381

    statement  ->  EXIST identifier inner_option_define_identifier . COLON OPEN_BPAR statement CLOSE_BPAR   (rule 66)

    COLON	shift, and go to state 596



state 382

    statement  ->  FRAME OPEN_PAR identifier . option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    COMMA	shift, and go to state 597

    $default	reduce using rule 394 (option_frame_identifier)

    option_frame_identifier	go to state 598



state 383

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 85)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 87)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)

    ID  	shift, and go to state 454
    STRUCT_TYPE	shift, and go to state 599



state 384

    type_define  ->  INTDECLARATION .   (rule 93)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 515
    MUL 	shift, and go to state 516

    MUL 	[reduce using rule 93 (type_define)]
    $default	reduce using rule 93 (type_define)



state 385

    type_define  ->  CHARDECLARATION .   (rule 95)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 517
    MUL 	shift, and go to state 518

    MUL 	[reduce using rule 95 (type_define)]
    $default	reduce using rule 95 (type_define)



state 386

    type_define  ->  VOIDDECLARATION .   (rule 97)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 242)

    MUL 	shift, and go to state 519

    MUL 	[reduce using rule 97 (type_define)]
    $default	reduce using rule 97 (type_define)



state 387

    type_define  ->  FLOATDECLARATION .   (rule 94)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 520
    MUL 	shift, and go to state 521

    MUL 	[reduce using rule 94 (type_define)]
    $default	reduce using rule 94 (type_define)



state 388

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 187)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    STRUCT	shift, and go to state 277
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 522
    CHARDECLARATION	shift, and go to state 523
    VOIDDECLARATION	shift, and go to state 280
    FLOATDECLARATION	shift, and go to state 524
    OPEN_PAR	shift, and go to state 600
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    UNSIGNED	shift, and go to state 525
    SIGNED	shift, and go to state 284
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 207
    BNE 	shift, and go to state 139
    NEXT	shift, and go to state 242
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 285
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    ass_left	go to state 575
    leftaddrshift	go to state 85
    array	go to state 212
    point_exp	go to state 213
    ari_exp	go to state 288
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 289
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 216
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 218



state 389

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 84)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 246)

    OPEN_PAR	shift, and go to state 194
    MUL 	shift, and go to state 601
    ID  	shift, and go to state 253

    option_identifier_array_declaration	go to state 254
    identifier	go to state 255



state 390

    for_sta_init  ->  declaration .   (rule 407)

    $default	reduce using rule 407 (for_sta_init)



state 391

    for_sta_init  ->  ass_statement .   (rule 406)

    $default	reduce using rule 406 (for_sta_init)



state 392

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init . COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 405)

    COMMA	shift, and go to state 602



state 393

    for_statement  ->  FOR ari_exp TIMES . DO statement_bpar   (rule 404)

    DO  	shift, and go to state 603



state 394

    bool_par  ->  error CLOSE_PAR .   (rule 386)

    $default	reduce using rule 386 (bool_par)



state 395

    bool_exp  ->  bool_exp . AND bool_exp   (rule 305)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 306)
    bool_par  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 385)

    CLOSE_PAR	shift, and go to state 604
    OR  	shift, and go to state 360
    AND 	shift, and go to state 361



state 396

    statement_bpar  ->  error . CLOSE_BPAR   (rule 384)

    CLOSE_BPAR	shift, and go to state 605



state 397

    statement_bpar  ->  OPEN_BPAR . statement CLOSE_BPAR   (rule 383)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    EXTERN	shift, and go to state 62
    UNSIGNED	shift, and go to state 63
    SIGNED	shift, and go to state 64
    FREE	shift, and go to state 65
    MUL 	shift, and go to state 66
    NEXT	shift, and go to state 67
    LENGTH	shift, and go to state 68
    REQUEST	shift, and go to state 69
    FINAL	shift, and go to state 70
    KEEP	shift, and go to state 71
    ALWAYS	shift, and go to state 72
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 74

    statement	go to state 606
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 95
    while_statement	go to state 96
    for_statement	go to state 97
    extend_for_statement	go to state 98
    switch_statement	go to state 99
    if_statement	go to state 100
    output_statement	go to state 101
    input_statement	go to state 102
    struct_member_exp	go to state 103



state 398

    while_statement  ->  WHILE bool_par statement_bpar .   (rule 403)

    $default	reduce using rule 403 (while_statement)



state 399

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  REPEAT OPEN_BPAR statement . CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 44)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_BPAR	shift, and go to state 607
    CHOP	shift, and go to state 256
    OR  	shift, and go to state 257
    PARALLEL	shift, and go to state 258
    AND 	shift, and go to state 259



state 400

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 147)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 187)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 207)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    STRUCT	shift, and go to state 277
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 278
    CHARDECLARATION	shift, and go to state 279
    VOIDDECLARATION	shift, and go to state 280
    FLOATDECLARATION	shift, and go to state 281
    OPEN_PAR	shift, and go to state 608
    OPEN_BPAR	shift, and go to state 401
    OPEN_MPAR	shift, and go to state 402
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    UNSIGNED	shift, and go to state 283
    SIGNED	shift, and go to state 284
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 403
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    STRUCT_TYPE	shift, and go to state 285
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    ass_right	go to state 609
    rightaddrshift	go to state 405
    array	go to state 286
    point_exp	go to state 287
    ari_exp	go to state 610
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    array_exp	go to state 611
    option_list_value	go to state 408
    option_struct_list_value	go to state 409
    address_exp	go to state 289
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 290
    strliteral	go to state 612
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 291



state 401

    option_struct_list_value  ->  OPEN_BPAR . ari_exp inner_option_list_value CLOSE_BPAR   (rule 211)
    option_struct_list_value  ->  OPEN_BPAR . strliteral inner_option_list_value CLOSE_BPAR   (rule 212)
    option_struct_list_value  ->  OPEN_BPAR . array_exp inner_option_list_value CLOSE_BPAR   (rule 213)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 613
    OPEN_BPAR	shift, and go to state 401
    OPEN_MPAR	shift, and go to state 402
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 614
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    array_exp	go to state 615
    option_list_value	go to state 408
    option_struct_list_value	go to state 409
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    strliteral	go to state 616
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 402

    option_list_value  ->  OPEN_MPAR . ari_exp inner_option_list_value CLOSE_MPAR   (rule 208)
    option_list_value  ->  OPEN_MPAR . strliteral inner_option_list_value CLOSE_MPAR   (rule 209)
    option_list_value  ->  OPEN_MPAR . array_exp inner_option_list_value CLOSE_MPAR   (rule 210)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 613
    OPEN_BPAR	shift, and go to state 401
    OPEN_MPAR	shift, and go to state 402
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 617
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    array_exp	go to state 618
    option_list_value	go to state 408
    option_struct_list_value	go to state 409
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    strliteral	go to state 619
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 403

    rightaddrshift  ->  MUL . OPEN_PAR leftaddrshift CLOSE_PAR   (rule 150)
    point_exp  ->  MUL . identifier   (rule 161)
    point_exp  ->  MUL . point_exp   (rule 162)
    point_exp  ->  MUL . array   (rule 163)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 165)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 166)

    OPEN_PAR	shift, and go to state 620
    MUL 	shift, and go to state 66
    ID  	shift, and go to state 237

    array	go to state 238
    point_exp	go to state 239
    identifier	go to state 240



state 404

    output_statement  ->  DISPLAY OPEN_PAR ass_right . CLOSE_PAR   (rule 421)
    output_statement  ->  DISPLAY OPEN_PAR ass_right . option_output CLOSE_PAR   (rule 422)

    COMMA	shift, and go to state 621
    CLOSE_PAR	shift, and go to state 622

    CLOSE_PAR	[reduce using rule 423 (option_output)]
    $default	reduce using rule 423 (option_output)

    option_output	go to state 623



state 405

    ass_right  ->  rightaddrshift .   (rule 149)

    $default	reduce using rule 149 (ass_right)



state 406

    ass_right  ->  ari_exp .   (rule 144)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 144 (ass_right)

    ari_operator	go to state 327



state 407

    ass_right  ->  array_exp .   (rule 145)
    array_exp  ->  array_exp . CON array_exp   (rule 204)

    CON 	shift, and go to state 624

    $default	reduce using rule 145 (ass_right)



state 408

    array_exp  ->  option_list_value .   (rule 205)

    $default	reduce using rule 205 (array_exp)



state 409

    array_exp  ->  option_struct_list_value .   (rule 206)

    $default	reduce using rule 206 (array_exp)



state 410

    ass_right  ->  strliteral .   (rule 146)

    $default	reduce using rule 146 (ass_right)



state 411

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 171)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 305)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 306)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 418)

    THEN	shift, and go to state 625
    OR  	shift, and go to state 360
    AND 	shift, and go to state 361



state 412

    struct_identifier  ->  STRUCT . ID   (rule 78)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 85)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 87)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)

    ID  	shift, and go to state 183
    STRUCT_TYPE	shift, and go to state 599



state 413

    type_define  ->  INTDECLARATION .   (rule 93)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 515
    MUL 	shift, and go to state 626

    MUL 	[reduce using rule 93 (type_define)]
    $default	reduce using rule 93 (type_define)



state 414

    type_define  ->  CHARDECLARATION .   (rule 95)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 517
    MUL 	shift, and go to state 627

    MUL 	[reduce using rule 95 (type_define)]
    $default	reduce using rule 95 (type_define)



state 415

    type_define  ->  FLOATDECLARATION .   (rule 94)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 520
    MUL 	shift, and go to state 628

    MUL 	[reduce using rule 94 (type_define)]
    $default	reduce using rule 94 (type_define)



state 416

    sign_declaration  ->  UNSIGNED . declaration   (rule 81)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)

    STRUCT	shift, and go to state 230
    UNION	shift, and go to state 231
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 629
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 630
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 232
    STRUCT_TYPE	shift, and go to state 74

    declaration	go to state 233
    type_define	go to state 81



state 417

    sign_declaration  ->  SIGNED . declaration   (rule 80)
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)

    STRUCT	shift, and go to state 230
    UNION	shift, and go to state 231
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 631
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 632
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 232
    STRUCT_TYPE	shift, and go to state 74

    declaration	go to state 234
    type_define	go to state 81



state 418

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 400)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 401)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 402)

    CLOSE_PAR	shift, and go to state 633
    OR  	shift, and go to state 431
    AND 	shift, and go to state 432



state 419

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    point_exp  ->  MUL . identifier   (rule 161)
    point_exp  ->  MUL . point_exp   (rule 162)
    point_exp  ->  MUL . array   (rule 163)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 165)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 166)

    OPEN_PAR	shift, and go to state 236
    MUL 	shift, and go to state 66
    ID  	shift, and go to state 237

    array	go to state 238
    point_exp	go to state 239
    identifier	go to state 634



state 420

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    identifier  ->  ID .   (rule 387)

    OPEN_MPAR	shift, and go to state 635

    $default	reduce using rule 387 (identifier)



state 421

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    point_exp  ->  MUL identifier .   (rule 161)

    CLOSE_PAR	shift, and go to state 636

    CLOSE_PAR	[reduce using rule 161 (point_exp)]
    $default	reduce using rule 161 (point_exp)



state 422

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 187)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 402)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 172
    STRUCT	shift, and go to state 277
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 173
    MY_FALSE	shift, and go to state 174
    INTDECLARATION	shift, and go to state 278
    CHARDECLARATION	shift, and go to state 279
    VOIDDECLARATION	shift, and go to state 280
    FLOATDECLARATION	shift, and go to state 281
    OPEN_PAR	shift, and go to state 637
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    UNSIGNED	shift, and go to state 283
    SIGNED	shift, and go to state 284
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    NEGATION	shift, and go to state 208
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    STRUCT_TYPE	shift, and go to state 285
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 286
    point_exp	go to state 287
    ari_exp	go to state 353
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 289
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    prime_bool_exp	go to state 215
    identifier	go to state 290
    strliteral	go to state 181
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    imply_pre	go to state 638
    struct_member_exp	go to state 291



state 423

    imply_pre  ->  NEGATION imply_pre .   (rule 399)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 400)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 401)


    $default	reduce using rule 399 (imply_pre)



state 424

    statement  ->  OPEN_PAR statement CLOSE_PAR .   (rule 67)

    $default	reduce using rule 67 (statement)



state 425

    ass_left  ->  OPEN_PAR ass_left CLOSE_PAR .   (rule 126)

    $default	reduce using rule 126 (ass_left)



state 426

    array  ->  OPEN_PAR array CLOSE_PAR .   (rule 157)

    $default	reduce using rule 157 (array)



state 427

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR .   (rule 167)

    OPEN_MPAR	shift, and go to state 639

    $default	reduce using rule 167 (point_exp)



state 428

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 445)

    IMPLY	shift, and go to state 640



state 429

    identifier  ->  OPEN_PAR identifier CLOSE_PAR .   (rule 388)

    $default	reduce using rule 388 (identifier)



state 430

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)

    IMPLY	shift, and go to state 641



state 431

    imply_pre  ->  imply_pre OR . imply_pre   (rule 401)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 172
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 173
    MY_FALSE	shift, and go to state 174
    OPEN_PAR	shift, and go to state 422
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    NEGATION	shift, and go to state 208
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 178
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    prime_bool_exp	go to state 215
    identifier	go to state 153
    strliteral	go to state 181
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    imply_pre	go to state 642
    struct_member_exp	go to state 157



state 432

    imply_pre  ->  imply_pre AND . imply_pre   (rule 400)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 172
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 173
    MY_FALSE	shift, and go to state 174
    OPEN_PAR	shift, and go to state 422
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    NEGATION	shift, and go to state 208
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 178
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    prime_bool_exp	go to state 215
    identifier	go to state 153
    strliteral	go to state 181
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    imply_pre	go to state 643
    struct_member_exp	go to state 157



state 433

    struct_member_exp  ->  OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 449)

    $default	reduce using rule 449 (struct_member_exp)



state 434

    option_projection  ->  COMMA . statement option_projection   (rule 397)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    EXTERN	shift, and go to state 62
    UNSIGNED	shift, and go to state 63
    SIGNED	shift, and go to state 64
    FREE	shift, and go to state 65
    MUL 	shift, and go to state 66
    NEXT	shift, and go to state 67
    LENGTH	shift, and go to state 68
    REQUEST	shift, and go to state 69
    FINAL	shift, and go to state 70
    KEEP	shift, and go to state 71
    ALWAYS	shift, and go to state 72
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 74

    statement	go to state 644
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 95
    while_statement	go to state 96
    for_statement	go to state 97
    extend_for_statement	go to state 98
    switch_statement	go to state 99
    if_statement	go to state 100
    output_statement	go to state 101
    input_statement	go to state 102
    struct_member_exp	go to state 103



state 435

    statement  ->  OPEN_BPAR statement CLOSE_BPAR . PROJECTION statement_bpar   (rule 58)

    PROJECTION	shift, and go to state 645



state 436

    statement  ->  OPEN_BPAR statement option_projection . CLOSE_BPAR PROJECTION statement_bpar   (rule 57)

    CLOSE_BPAR	shift, and go to state 646



state 437

    statement  ->  FUNCTION ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 60)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 586
    UNSIGNED	shift, and go to state 458
    ID  	shift, and go to state 587
    STRUCT_TYPE	shift, and go to state 588

    $default	reduce using rule 357 (option_function_parameter_list)

    type_define	go to state 459
    sign_type_define	go to state 461
    all_type_define	go to state 589
    option_function_parameter_list	go to state 647



state 438

    statement  ->  PROCESS ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 586
    UNSIGNED	shift, and go to state 458
    ID  	shift, and go to state 587
    STRUCT_TYPE	shift, and go to state 588

    $default	reduce using rule 357 (option_function_parameter_list)

    type_define	go to state 459
    sign_type_define	go to state 461
    all_type_define	go to state 589
    option_function_parameter_list	go to state 648



state 439

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    OPEN_PAR	shift, and go to state 548
    ADDRESS	shift, and go to state 137
    MUL 	shift, and go to state 66
    ID  	shift, and go to state 237

    array	go to state 549
    point_exp	go to state 550
    address_exp	go to state 467
    identifier	go to state 552
    struct_member_exp	go to state 553



state 440

    str_func_parameter  ->  array .   (rule 274)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 437)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 444)

    DOT 	shift, and go to state 265
    IMPLY	shift, and go to state 267

    $default	reduce using rule 274 (str_func_parameter)



state 441

    str_func_parameter  ->  point_exp .   (rule 275)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 435)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 438)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 442)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 448)

    DOT 	shift, and go to state 268
    IMPLY	shift, and go to state 269

    $default	reduce using rule 275 (str_func_parameter)



state 442

    str_func_parameter  ->  String_Function .   (rule 277)

    $default	reduce using rule 277 (str_func_parameter)



state 443

    String_Function_head  ->  STRFUNCHEAD OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 267)

    CLOSE_PAR	shift, and go to state 649



state 444

    str_func_parameter  ->  identifier .   (rule 273)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 443)
    struct_member_exp  ->  identifier . DOT function   (rule 446)
    struct_member_exp  ->  identifier . IMPLY function   (rule 447)

    DOT 	shift, and go to state 270
    IMPLY	shift, and go to state 271

    $default	reduce using rule 273 (str_func_parameter)



state 445

    str_func_parameter  ->  strliteral .   (rule 276)

    $default	reduce using rule 276 (str_func_parameter)



state 446

    str_func_parameter  ->  struct_member_exp .   (rule 278)

    $default	reduce using rule 278 (str_func_parameter)



state 447

    String_Function_tail  ->  STRFUNCTAIL OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 268)

    CLOSE_PAR	shift, and go to state 650



state 448

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter . COMMA str_func_parameter CLOSE_PAR   (rule 269)

    COMMA	shift, and go to state 651



state 449

    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter . COMMA str_func_parameter CLOSE_PAR   (rule 270)

    COMMA	shift, and go to state 652



state 450

    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter . COMMA str_func_parameter CLOSE_PAR   (rule 271)

    COMMA	shift, and go to state 653



state 451

    String_Function_len  ->  STRFUNCLEN OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 272)

    CLOSE_PAR	shift, and go to state 654



state 452

    statement  ->  SYSTEM OPEN_PAR str_func_parameter . CLOSE_PAR   (rule 64)

    CLOSE_PAR	shift, and go to state 655



state 453

    function  ->  EXTERN ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 73)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 400
    OPEN_BPAR	shift, and go to state 401
    OPEN_MPAR	shift, and go to state 402
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 477
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 403
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 478
    STRLITERAL	shift, and go to state 177
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    $default	reduce using rule 377 (option_function_identifier)

    function	go to state 143
    file_statement	go to state 82
    ass_right	go to state 479
    rightaddrshift	go to state 405
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 406
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    array_exp	go to state 407
    option_list_value	go to state 408
    option_struct_list_value	go to state 409
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    option_function_identifier	go to state 656
    identifier	go to state 153
    strliteral	go to state 410
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 454

    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 85)

    OPEN_PAR	shift, and go to state 194
    MUL 	shift, and go to state 252
    ID  	shift, and go to state 253

    option_identifier_array_declaration	go to state 365
    identifier	go to state 255



state 455

    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 86)

    OPEN_PAR	shift, and go to state 194
    MUL 	shift, and go to state 252
    ID  	shift, and go to state 253

    option_identifier_array_declaration	go to state 367
    identifier	go to state 255



state 456

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)

    OPEN_PAR	shift, and go to state 194
    MUL 	shift, and go to state 657
    ID  	shift, and go to state 658

    identifier	go to state 659



state 457

    statement  ->  FREE OPEN_PAR identifier . CLOSE_PAR   (rule 63)

    CLOSE_PAR	shift, and go to state 660



state 458

    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 328)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 329)

    INTDECLARATION	shift, and go to state 661
    CHARDECLARATION	shift, and go to state 662



state 459

    all_type_define  ->  type_define .   (rule 331)

    $default	reduce using rule 331 (all_type_define)



state 460

    point_exp  ->  MUL OPEN_PAR ari_exp . CLOSE_PAR   (rule 166)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    CLOSE_PAR	shift, and go to state 663
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ari_operator	go to state 327



state 461

    all_type_define  ->  sign_type_define .   (rule 330)

    $default	reduce using rule 330 (all_type_define)



state 462

    point_exp  ->  MUL OPEN_PAR all_type_define . MUL CLOSE_PAR ari_exp   (rule 165)

    MUL 	shift, and go to state 664



state 463

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 67)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 223)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 205
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    POINTERNULL	shift, and go to state 172
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    MY_TRUE	shift, and go to state 173
    MY_FALSE	shift, and go to state 174
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 665
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 666
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 667
    OPEN_PAR	shift, and go to state 206
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    SYSTEM	shift, and go to state 61
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    UNSIGNED	shift, and go to state 668
    SIGNED	shift, and go to state 64
    FREE	shift, and go to state 65
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 207
    BNE 	shift, and go to state 139
    NEXT	shift, and go to state 67
    NEGATION	shift, and go to state 208
    LENGTH	shift, and go to state 68
    REQUEST	shift, and go to state 69
    FINAL	shift, and go to state 70
    KEEP	shift, and go to state 71
    ALWAYS	shift, and go to state 72
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    STRUCT_TYPE	shift, and go to state 74
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    statement	go to state 209
    function	go to state 210
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 211
    leftaddrshift	go to state 85
    array	go to state 212
    point_exp	go to state 213
    ari_exp	go to state 178
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 289
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    prime_bool_exp	go to state 215
    identifier	go to state 216
    strliteral	go to state 181
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    imply_pre	go to state 217
    while_statement	go to state 96
    for_statement	go to state 97
    extend_for_statement	go to state 98
    switch_statement	go to state 99
    if_statement	go to state 100
    output_statement	go to state 101
    input_statement	go to state 102
    struct_member_exp	go to state 218



state 464

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  NEXT OPEN_PAR statement . CLOSE_PAR   (rule 40)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_PAR	shift, and go to state 669
    CHOP	shift, and go to state 256
    OR  	shift, and go to state 257
    PARALLEL	shift, and go to state 258
    AND 	shift, and go to state 259



state 465

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 74)
    ass_left  ->  array .   (rule 124)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 157)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 437)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 444)

    DOT 	shift, and go to state 265
    OPEN_PAR	shift, and go to state 266
    CLOSE_PAR	shift, and go to state 426
    IMPLY	shift, and go to state 267

    CLOSE_PAR	[reduce using rule 124 (ass_left)]
    $default	reduce using rule 124 (ass_left)



state 466

    ass_left  ->  point_exp .   (rule 125)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 167)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 435)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 438)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 442)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 448)

    DOT 	shift, and go to state 268
    CLOSE_PAR	shift, and go to state 427
    IMPLY	shift, and go to state 269

    CLOSE_PAR	[reduce using rule 125 (ass_left)]
    $default	reduce using rule 125 (ass_left)



state 467

    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)

    CLOSE_PAR	shift, and go to state 428



state 468

    ass_left  ->  identifier .   (rule 122)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 388)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 443)
    struct_member_exp  ->  identifier . DOT function   (rule 446)
    struct_member_exp  ->  identifier . IMPLY function   (rule 447)

    DOT 	shift, and go to state 270
    CLOSE_PAR	shift, and go to state 429
    IMPLY	shift, and go to state 271

    CLOSE_PAR	[reduce using rule 122 (ass_left)]
    $default	reduce using rule 122 (ass_left)



state 469

    ass_left  ->  struct_member_exp .   (rule 123)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 449)

    CLOSE_PAR	shift, and go to state 433

    CLOSE_PAR	[reduce using rule 123 (ass_left)]
    $default	reduce using rule 123 (ass_left)



state 470

    statement  ->  LENGTH OPEN_PAR ari_exp . CLOSE_PAR   (rule 48)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    CLOSE_PAR	shift, and go to state 670
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ari_operator	go to state 327



state 471

    input_statement  ->  REQUEST OPEN_PAR array . CLOSE_PAR   (rule 427)
    input_statement  ->  REQUEST OPEN_PAR array . option_input CLOSE_PAR   (rule 428)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 437)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 444)

    DOT 	shift, and go to state 265
    COMMA	shift, and go to state 671
    CLOSE_PAR	shift, and go to state 672
    IMPLY	shift, and go to state 267

    CLOSE_PAR	[reduce using rule 430 (option_input)]
    $default	reduce using rule 430 (option_input)

    option_input	go to state 673



state 472

    input_statement  ->  REQUEST OPEN_PAR identifier . CLOSE_PAR   (rule 425)
    input_statement  ->  REQUEST OPEN_PAR identifier . option_input CLOSE_PAR   (rule 426)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 443)
    struct_member_exp  ->  identifier . DOT function   (rule 446)
    struct_member_exp  ->  identifier . IMPLY function   (rule 447)

    DOT 	shift, and go to state 270
    COMMA	shift, and go to state 671
    CLOSE_PAR	shift, and go to state 674
    IMPLY	shift, and go to state 271

    CLOSE_PAR	[reduce using rule 430 (option_input)]
    $default	reduce using rule 430 (option_input)

    option_input	go to state 675



state 473

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 429)

    CLOSE_PAR	shift, and go to state 676



state 474

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  FINAL OPEN_PAR statement . CLOSE_PAR   (rule 53)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_PAR	shift, and go to state 677
    CHOP	shift, and go to state 256
    OR  	shift, and go to state 257
    PARALLEL	shift, and go to state 258
    AND 	shift, and go to state 259



state 475

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  KEEP OPEN_PAR statement . CLOSE_PAR   (rule 41)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_PAR	shift, and go to state 678
    CHOP	shift, and go to state 256
    OR  	shift, and go to state 257
    PARALLEL	shift, and go to state 258
    AND 	shift, and go to state 259



state 476

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  ALWAYS OPEN_PAR statement . CLOSE_PAR   (rule 42)
    statement  ->  statement . PARALLEL statement   (rule 54)

    CLOSE_PAR	shift, and go to state 679
    CHOP	shift, and go to state 256
    OR  	shift, and go to state 257
    PARALLEL	shift, and go to state 258
    AND 	shift, and go to state 259



state 477

    address_exp  ->  ADDRESS . identifier   (rule 219)
    address_exp  ->  ADDRESS . array   (rule 220)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 221)
    address_exp  ->  ADDRESS . address_exp   (rule 222)
    option_function_identifier  ->  ADDRESS . error   (rule 378)

    error	shift, and go to state 680
    OPEN_PAR	shift, and go to state 317
    ADDRESS	shift, and go to state 137
    MUL 	shift, and go to state 66
    ID  	shift, and go to state 237

    array	go to state 318
    point_exp	go to state 319
    address_exp	go to state 320
    identifier	go to state 321
    struct_member_exp	go to state 322



state 478

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    option_function_identifier  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 376)
    identifier  ->  ID .   (rule 387)

    OPEN_PAR	shift, and go to state 681
    OPEN_MPAR	shift, and go to state 251

    $default	reduce using rule 387 (identifier)



state 479

    option_function_identifier  ->  ass_right . inner_option_function_identifier   (rule 375)

    COMMA	shift, and go to state 682

    $default	reduce using rule 381 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 683



state 480

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 72)

    CLOSE_PAR	shift, and go to state 684



state 481

    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 151)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    COMMA	shift, and go to state 685
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 160 (option_ari_exp)

    option_ari_exp	go to state 686
    ari_operator	go to state 327



state 482

    option_identifier_array_declaration  ->  MUL option_identifier_array_declaration .   (rule 106)

    $default	reduce using rule 106 (option_identifier_array_declaration)



state 483

    option_identifier_array_declaration  ->  ID ARRAY . ASS_P array_exp inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID ARRAY . ASS_P strliteral inner_option_identifier_array_declaration   (rule 103)

    ASS_P	shift, and go to state 687



state 484

    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 105)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 688
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 485

    inner_option_identifier_array_declaration  ->  COMMA . option_identifier_array_declaration   (rule 107)
    inner_option_identifier_array_declaration  ->  COMMA . error   (rule 108)

    error	shift, and go to state 689
    OPEN_PAR	shift, and go to state 194
    MUL 	shift, and go to state 252
    ID  	shift, and go to state 253

    option_identifier_array_declaration	go to state 690
    identifier	go to state 255



state 486

    option_identifier_array_declaration  ->  identifier ASS_P . ass_right inner_option_identifier_array_declaration   (rule 101)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 400
    OPEN_BPAR	shift, and go to state 401
    OPEN_MPAR	shift, and go to state 402
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 403
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    ass_right	go to state 691
    rightaddrshift	go to state 405
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 406
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    array_exp	go to state 407
    option_list_value	go to state 408
    option_struct_list_value	go to state 409
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    strliteral	go to state 410
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 487

    option_identifier_array_declaration  ->  identifier inner_option_identifier_array_declaration .   (rule 99)

    $default	reduce using rule 99 (option_identifier_array_declaration)



state 488

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement CHOP statement .   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)

    OR  	shift, and go to state 257
    PARALLEL	shift, and go to state 258
    AND 	shift, and go to state 259

    $default	reduce using rule 32 (statement)



state 489

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement OR statement .   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)

    AND 	shift, and go to state 259

    $default	reduce using rule 31 (statement)



state 490

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  statement PARALLEL statement .   (rule 54)

    AND 	shift, and go to state 259

    $default	reduce using rule 54 (statement)



state 491

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement AND statement .   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)


    $default	reduce using rule 30 (statement)



state 492

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration . CLOSE_BPAR   (rule 77)

    CLOSE_BPAR	shift, and go to state 692



state 493

    option_struct_declaration  ->  sign_declaration .   (rule 68)
    option_struct_declaration  ->  sign_declaration . AND option_struct_declaration   (rule 69)

    AND 	shift, and go to state 693

    $default	reduce using rule 68 (option_struct_declaration)



state 494

    ass_statement  ->  ass_left assign_operator ass_right .   (rule 121)

    $default	reduce using rule 121 (ass_statement)



state 495

    struct_member_exp  ->  array DOT array . option_struct_member_exp   (rule 437)

    DOT 	shift, and go to state 694
    IMPLY	shift, and go to state 695

    DOT 	[reduce using rule 450 (option_struct_member_exp)]
    IMPLY	[reduce using rule 450 (option_struct_member_exp)]
    $default	reduce using rule 450 (option_struct_member_exp)

    option_struct_member_exp	go to state 696



state 496

    struct_member_exp  ->  array DOT identifier . option_struct_member_exp   (rule 434)

    DOT 	shift, and go to state 694
    IMPLY	shift, and go to state 695

    DOT 	[reduce using rule 450 (option_struct_member_exp)]
    IMPLY	[reduce using rule 450 (option_struct_member_exp)]
    $default	reduce using rule 450 (option_struct_member_exp)

    option_struct_member_exp	go to state 697



state 497

    function  ->  array OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 74)

    CLOSE_PAR	shift, and go to state 698



state 498

    struct_member_exp  ->  array IMPLY array . option_struct_member_exp   (rule 444)

    DOT 	shift, and go to state 694
    IMPLY	shift, and go to state 695

    DOT 	[reduce using rule 450 (option_struct_member_exp)]
    IMPLY	[reduce using rule 450 (option_struct_member_exp)]
    $default	reduce using rule 450 (option_struct_member_exp)

    option_struct_member_exp	go to state 699



state 499

    struct_member_exp  ->  array IMPLY identifier . option_struct_member_exp   (rule 440)

    DOT 	shift, and go to state 694
    IMPLY	shift, and go to state 695

    DOT 	[reduce using rule 450 (option_struct_member_exp)]
    IMPLY	[reduce using rule 450 (option_struct_member_exp)]
    $default	reduce using rule 450 (option_struct_member_exp)

    option_struct_member_exp	go to state 700



state 500

    struct_member_exp  ->  point_exp DOT array . option_struct_member_exp   (rule 438)

    DOT 	shift, and go to state 694
    IMPLY	shift, and go to state 695

    DOT 	[reduce using rule 450 (option_struct_member_exp)]
    IMPLY	[reduce using rule 450 (option_struct_member_exp)]
    $default	reduce using rule 450 (option_struct_member_exp)

    option_struct_member_exp	go to state 701



state 501

    struct_member_exp  ->  point_exp DOT identifier . option_struct_member_exp   (rule 435)

    DOT 	shift, and go to state 694
    IMPLY	shift, and go to state 695

    DOT 	[reduce using rule 450 (option_struct_member_exp)]
    IMPLY	[reduce using rule 450 (option_struct_member_exp)]
    $default	reduce using rule 450 (option_struct_member_exp)

    option_struct_member_exp	go to state 702



state 502

    struct_member_exp  ->  point_exp IMPLY array . option_struct_member_exp   (rule 448)

    DOT 	shift, and go to state 694
    IMPLY	shift, and go to state 695

    DOT 	[reduce using rule 450 (option_struct_member_exp)]
    IMPLY	[reduce using rule 450 (option_struct_member_exp)]
    $default	reduce using rule 450 (option_struct_member_exp)

    option_struct_member_exp	go to state 703



state 503

    struct_member_exp  ->  point_exp IMPLY identifier . option_struct_member_exp   (rule 442)

    DOT 	shift, and go to state 694
    IMPLY	shift, and go to state 695

    DOT 	[reduce using rule 450 (option_struct_member_exp)]
    IMPLY	[reduce using rule 450 (option_struct_member_exp)]
    $default	reduce using rule 450 (option_struct_member_exp)

    option_struct_member_exp	go to state 704



state 504

    struct_member_exp  ->  identifier DOT function .   (rule 446)

    $default	reduce using rule 446 (struct_member_exp)



state 505

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 74)
    struct_member_exp  ->  identifier DOT array . option_struct_member_exp   (rule 436)

    DOT 	shift, and go to state 694
    OPEN_PAR	shift, and go to state 266
    IMPLY	shift, and go to state 695

    DOT 	[reduce using rule 450 (option_struct_member_exp)]
    IMPLY	[reduce using rule 450 (option_struct_member_exp)]
    $default	reduce using rule 450 (option_struct_member_exp)

    option_struct_member_exp	go to state 705



state 506

    struct_member_exp  ->  identifier DOT identifier . option_struct_member_exp   (rule 433)

    DOT 	shift, and go to state 694
    IMPLY	shift, and go to state 695

    DOT 	[reduce using rule 450 (option_struct_member_exp)]
    IMPLY	[reduce using rule 450 (option_struct_member_exp)]
    $default	reduce using rule 450 (option_struct_member_exp)

    option_struct_member_exp	go to state 706



state 507

    struct_member_exp  ->  identifier IMPLY function .   (rule 447)

    $default	reduce using rule 447 (struct_member_exp)



state 508

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 74)
    struct_member_exp  ->  identifier IMPLY array . option_struct_member_exp   (rule 443)

    DOT 	shift, and go to state 694
    OPEN_PAR	shift, and go to state 266
    IMPLY	shift, and go to state 695

    DOT 	[reduce using rule 450 (option_struct_member_exp)]
    IMPLY	[reduce using rule 450 (option_struct_member_exp)]
    $default	reduce using rule 450 (option_struct_member_exp)

    option_struct_member_exp	go to state 707



state 509

    struct_member_exp  ->  identifier IMPLY identifier . option_struct_member_exp   (rule 439)

    DOT 	shift, and go to state 694
    IMPLY	shift, and go to state 695

    DOT 	[reduce using rule 450 (option_struct_member_exp)]
    IMPLY	[reduce using rule 450 (option_struct_member_exp)]
    $default	reduce using rule 450 (option_struct_member_exp)

    option_struct_member_exp	go to state 708



state 510

    complexProposition  ->  DEFINE ID COLON prime_bool_exp .   (rule 25)

    $default	reduce using rule 25 (complexProposition)



state 511

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    poptional_projection  ->  COMMA complexProposition . poptional_projection   (rule 28)

    COMMA	shift, and go to state 274
    CHOP	shift, and go to state 165
    IFF 	shift, and go to state 166
    PROPIMPLY	shift, and go to state 167
    OR  	shift, and go to state 168
    AND 	shift, and go to state 169
    CHOPSTAR	shift, and go to state 170

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 709



state 512

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR . PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    PROJECTION	shift, and go to state 710



state 513

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 171)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 711
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 514

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 245)

    MUL 	shift, and go to state 712



state 515

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 224)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 713
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 516

    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 715
    MUL 	shift, and go to state 716



state 517

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 226)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 717
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 518

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 718
    MUL 	shift, and go to state 719



state 519

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 242)

    CLOSE_PAR	shift, and go to state 720
    MUL 	shift, and go to state 721



state 520

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 225)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 722
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 521

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 723
    MUL 	shift, and go to state 724



state 522

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 515
    MUL 	shift, and go to state 725



state 523

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 517
    MUL 	shift, and go to state 726



state 524

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 520
    MUL 	shift, and go to state 727



state 525

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)

    INTDECLARATION	shift, and go to state 728
    CHARDECLARATION	shift, and go to state 729



state 526

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 730
    MUL 	shift, and go to state 731



state 527

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 732
    MUL 	shift, and go to state 733



state 528

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 227)

    CLOSE_PAR	shift, and go to state 734



state 529

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 228)

    CLOSE_PAR	shift, and go to state 735



state 530

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 246)

    CLOSE_PAR	shift, and go to state 736
    MUL 	shift, and go to state 737



state 531

    member_in_exp  ->  OPEN_PAR ari_exp CLOSE_PAR .   (rule 187)

    $default	reduce using rule 187 (member_in_exp)



state 532

    address_exp  ->  OPEN_PAR address_exp CLOSE_PAR .   (rule 223)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 445)

    IMPLY	shift, and go to state 640

    IMPLY	[reduce using rule 223 (address_exp)]
    $default	reduce using rule 223 (address_exp)



state 533

    all_sizeof_type  ->  STRUCT . STRUCT_TYPE MUL   (rule 255)

    STRUCT_TYPE	shift, and go to state 738



state 534

    type_define  ->  INTDECLARATION .   (rule 93)
    all_sizeof_type  ->  INTDECLARATION . MUL   (rule 250)

    MUL 	shift, and go to state 739

    $default	reduce using rule 93 (type_define)



state 535

    type_define  ->  CHARDECLARATION .   (rule 95)
    all_sizeof_type  ->  CHARDECLARATION . MUL   (rule 252)

    MUL 	shift, and go to state 740

    $default	reduce using rule 95 (type_define)



state 536

    type_define  ->  FLOATDECLARATION .   (rule 94)
    all_sizeof_type  ->  FLOATDECLARATION . MUL   (rule 251)

    MUL 	shift, and go to state 741

    $default	reduce using rule 94 (type_define)



state 537

    all_sizeof_type  ->  UNSIGNED . INTDECLARATION MUL   (rule 253)
    all_sizeof_type  ->  UNSIGNED . CHARDECLARATION MUL   (rule 254)
    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 328)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 329)

    INTDECLARATION	shift, and go to state 742
    CHARDECLARATION	shift, and go to state 743



state 538

    all_sizeof_type  ->  STRUCT_TYPE . MUL   (rule 256)
    size_of  ->  SIZEOF OPEN_PAR STRUCT_TYPE . CLOSE_PAR   (rule 259)

    CLOSE_PAR	shift, and go to state 744
    MUL 	shift, and go to state 745



state 539

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    size_of  ->  SIZEOF OPEN_PAR ari_exp . CLOSE_PAR   (rule 257)

    CLOSE_PAR	shift, and go to state 746
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ari_operator	go to state 327



state 540

    size_of  ->  SIZEOF OPEN_PAR all_sizeof_type . CLOSE_PAR   (rule 258)

    CLOSE_PAR	shift, and go to state 747



state 541

    all_sizeof_type  ->  all_type_define .   (rule 249)

    $default	reduce using rule 249 (all_sizeof_type)



state 542

    size_of  ->  SIZEOF OPEN_PAR strliteral . CLOSE_PAR   (rule 260)

    CLOSE_PAR	shift, and go to state 748



state 543

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  ATAN2 OPEN_PAR ari_exp . COMMA ari_exp CLOSE_PAR   (rule 295)

    COMMA	shift, and go to state 749
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ari_operator	go to state 327



state 544

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  POW OPEN_PAR ari_exp . COMMA ari_exp CLOSE_PAR   (rule 296)

    COMMA	shift, and go to state 750
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ari_operator	go to state 327



state 545

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  FMOD OPEN_PAR ari_exp . COMMA ari_exp CLOSE_PAR   (rule 297)

    COMMA	shift, and go to state 751
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ari_operator	go to state 327



state 546

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  MODF OPEN_PAR ari_exp . COMMA ari_exp CLOSE_PAR   (rule 298)

    COMMA	shift, and go to state 752
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ari_operator	go to state 327



state 547

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  LDEXP OPEN_PAR ari_exp . COMMA ari_exp CLOSE_PAR   (rule 299)

    COMMA	shift, and go to state 753
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ari_operator	go to state 327



state 548

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 223)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    INTDECLARATION	shift, and go to state 754
    CHARDECLARATION	shift, and go to state 755
    FLOATDECLARATION	shift, and go to state 756
    OPEN_PAR	shift, and go to state 548
    UNSIGNED	shift, and go to state 757
    ADDRESS	shift, and go to state 137
    MUL 	shift, and go to state 66
    ID  	shift, and go to state 237

    array	go to state 549
    point_exp	go to state 550
    address_exp	go to state 551
    identifier	go to state 552
    struct_member_exp	go to state 553



state 549

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 157)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 437)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 444)

    DOT 	shift, and go to state 265
    CLOSE_PAR	shift, and go to state 426
    IMPLY	shift, and go to state 267



state 550

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 167)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 435)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 438)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 442)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 448)

    DOT 	shift, and go to state 268
    CLOSE_PAR	shift, and go to state 427
    IMPLY	shift, and go to state 269



state 551

    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 223)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)

    CLOSE_PAR	shift, and go to state 532



state 552

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 388)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 433)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 436)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 439)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 443)
    struct_member_exp  ->  identifier . DOT function   (rule 446)
    struct_member_exp  ->  identifier . IMPLY function   (rule 447)

    DOT 	shift, and go to state 270
    CLOSE_PAR	shift, and go to state 429
    IMPLY	shift, and go to state 271



state 553

    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 449)

    CLOSE_PAR	shift, and go to state 433



state 554

    ari_exp  ->  ari_exp ari_operator simple_ari_exp .   (rule 170)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 177)

    INTER_OR	shift, and go to state 328
    CON 	shift, and go to state 329
    ADDRESS	shift, and go to state 330
    LST 	shift, and go to state 337
    RST 	shift, and go to state 338
    MUL 	shift, and go to state 339
    DIV 	shift, and go to state 340
    MOD 	shift, and go to state 341

    INTER_OR	[reduce using rule 170 (ari_exp)]
    CON 	[reduce using rule 170 (ari_exp)]
    ADDRESS	[reduce using rule 170 (ari_exp)]
    LST 	[reduce using rule 170 (ari_exp)]
    RST 	[reduce using rule 170 (ari_exp)]
    MUL 	[reduce using rule 170 (ari_exp)]
    DIV 	[reduce using rule 170 (ari_exp)]
    MOD 	[reduce using rule 170 (ari_exp)]
    $default	reduce using rule 170 (ari_exp)

    bi_operator	go to state 342



state 555

    simple_ari_exp  ->  simple_ari_exp bi_operator member_in_exp .   (rule 177)

    $default	reduce using rule 177 (simple_ari_exp)



state 556

    ari_exp  ->  simple_ari_exp relation_operator ari_exp .   (rule 169)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ADD 	[reduce using rule 169 (ari_exp)]
    SUB 	[reduce using rule 169 (ari_exp)]
    $default	reduce using rule 169 (ari_exp)

    ari_operator	go to state 327



state 557

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR . OPEN_BPAR case_par CLOSE_BPAR   (rule 413)

    OPEN_BPAR	shift, and go to state 758



state 558

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    prime_bool_exp  ->  POINTERNULL NE ari_exp .   (rule 319)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 319 (prime_bool_exp)

    ari_operator	go to state 327



state 559

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    prime_bool_exp  ->  POINTERNULL EQ ari_exp .   (rule 318)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 318 (prime_bool_exp)

    ari_operator	go to state 327



state 560

    bool_exp  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 307)

    $default	reduce using rule 307 (bool_exp)



state 561

    prime_bool_exp  ->  ari_exp NE POINTERNULL .   (rule 317)

    $default	reduce using rule 317 (prime_bool_exp)



state 562

    prime_bool_exp  ->  ari_exp NE strliteral .   (rule 313)

    $default	reduce using rule 313 (prime_bool_exp)



state 563

    prime_bool_exp  ->  ari_exp NE charliteral .   (rule 321)

    $default	reduce using rule 321 (prime_bool_exp)



state 564

    prime_bool_exp  ->  ari_exp EQ POINTERNULL .   (rule 316)

    $default	reduce using rule 316 (prime_bool_exp)



state 565

    prime_bool_exp  ->  ari_exp EQ strliteral .   (rule 312)

    $default	reduce using rule 312 (prime_bool_exp)



state 566

    prime_bool_exp  ->  ari_exp EQ charliteral .   (rule 320)

    $default	reduce using rule 320 (prime_bool_exp)



state 567

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    prime_bool_exp  ->  ari_exp relation_operator ari_exp .   (rule 308)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 308 (prime_bool_exp)

    ari_operator	go to state 327



state 568

    if_statement  ->  IF bool_exp THEN statement_bpar . option_else_statement   (rule 418)

    ELSE	shift, and go to state 759

    $default	reduce using rule 420 (option_else_statement)

    option_else_statement	go to state 760



state 569

    bool_exp  ->  bool_exp . AND bool_exp   (rule 305)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 306)
    bool_exp  ->  bool_exp OR bool_exp .   (rule 306)

    AND 	shift, and go to state 361

    $default	reduce using rule 306 (bool_exp)



state 570

    bool_exp  ->  bool_exp . AND bool_exp   (rule 305)
    bool_exp  ->  bool_exp AND bool_exp .   (rule 305)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 306)


    $default	reduce using rule 305 (bool_exp)



state 571

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    prime_bool_exp  ->  strliteral NE ari_exp .   (rule 315)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 315 (prime_bool_exp)

    ari_operator	go to state 327



state 572

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    prime_bool_exp  ->  strliteral EQ ari_exp .   (rule 314)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 314 (prime_bool_exp)

    ari_operator	go to state 327



state 573

    statement  ->  AWAIT OPEN_PAR bool_exp CLOSE_PAR .   (rule 43)

    $default	reduce using rule 43 (statement)



state 574

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 223)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    INTDECLARATION	shift, and go to state 761
    CHARDECLARATION	shift, and go to state 762
    FLOATDECLARATION	shift, and go to state 763
    OPEN_PAR	shift, and go to state 574
    UNSIGNED	shift, and go to state 764
    ADDRESS	shift, and go to state 137
    MUL 	shift, and go to state 66
    NEXT	shift, and go to state 242
    ID  	shift, and go to state 237

    ass_left	go to state 575
    leftaddrshift	go to state 85
    array	go to state 576
    point_exp	go to state 466
    address_exp	go to state 551
    identifier	go to state 468
    struct_member_exp	go to state 469



state 575

    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 126)

    CLOSE_PAR	shift, and go to state 425



state 576

    ass_left  ->  array .   (rule 124)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 157)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 434)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 437)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 440)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 444)

    DOT 	shift, and go to state 265
    CLOSE_PAR	shift, and go to state 426
    IMPLY	shift, and go to state 267

    CLOSE_PAR	[reduce using rule 124 (ass_left)]
    $default	reduce using rule 124 (ass_left)



state 577

    file_statement  ->  FOPEN OPEN_PAR ass_left COMMA . strliteral CLOSE_PAR   (rule 114)

    STRLITERAL	shift, and go to state 177

    strliteral	go to state 765



state 578

    file_statement  ->  FCLOSE OPEN_PAR identifier CLOSE_PAR .   (rule 120)

    $default	reduce using rule 120 (file_statement)



state 579

    file_statement  ->  FGETS OPEN_PAR identifier COMMA . intliteral COMMA identifier CLOSE_PAR   (rule 115)

    INTLITERAL	shift, and go to state 140

    intliteral	go to state 766



state 580

    file_statement  ->  FPUTS OPEN_PAR identifier COMMA . identifier CLOSE_PAR   (rule 117)

    OPEN_PAR	shift, and go to state 194
    ID  	shift, and go to state 195

    identifier	go to state 767



state 581

    file_statement  ->  FGETC OPEN_PAR identifier CLOSE_PAR .   (rule 116)

    $default	reduce using rule 116 (file_statement)



state 582

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)

    INTDECLARATION	shift, and go to state 754
    CHARDECLARATION	shift, and go to state 755
    FLOATDECLARATION	shift, and go to state 756
    OPEN_PAR	shift, and go to state 582
    UNSIGNED	shift, and go to state 757
    ID  	shift, and go to state 237

    array	go to state 583
    identifier	go to state 379



state 583

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 157)

    CLOSE_PAR	shift, and go to state 426



state 584

    file_statement  ->  FPUTC OPEN_PAR array COMMA . identifier CLOSE_PAR   (rule 119)

    OPEN_PAR	shift, and go to state 194
    ID  	shift, and go to state 195

    identifier	go to state 768



state 585

    file_statement  ->  FPUTC OPEN_PAR identifier COMMA . identifier CLOSE_PAR   (rule 118)

    OPEN_PAR	shift, and go to state 194
    ID  	shift, and go to state 195

    identifier	go to state 769



state 586

    option_function_parameter_list  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 356)

    MUL 	shift, and go to state 770



state 587

    option_function_parameter_list  ->  ID . identifier inner_option_define_identifier   (rule 338)
    option_function_parameter_list  ->  ID . MUL identifier inner_option_define_identifier   (rule 339)
    option_function_parameter_list  ->  ID . MUL MUL identifier inner_option_define_identifier   (rule 340)
    option_function_parameter_list  ->  ID . identifier ARRAY inner_option_define_identifier   (rule 341)
    option_function_parameter_list  ->  ID . inner_option_define_identifier   (rule 345)
    option_function_parameter_list  ->  ID . MUL inner_option_define_identifier   (rule 346)
    option_function_parameter_list  ->  ID . MUL MUL inner_option_define_identifier   (rule 347)

    COMMA	shift, and go to state 380
    OPEN_PAR	shift, and go to state 194
    MUL 	shift, and go to state 771
    ID  	shift, and go to state 195

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 772
    identifier	go to state 773



state 588

    option_function_parameter_list  ->  STRUCT_TYPE . identifier inner_option_define_identifier   (rule 334)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 335)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL identifier inner_option_define_identifier   (rule 336)
    option_function_parameter_list  ->  STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 337)
    option_function_parameter_list  ->  STRUCT_TYPE . inner_option_define_identifier   (rule 342)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL inner_option_define_identifier   (rule 343)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL inner_option_define_identifier   (rule 344)

    COMMA	shift, and go to state 380
    OPEN_PAR	shift, and go to state 194
    MUL 	shift, and go to state 774
    ID  	shift, and go to state 195

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 775
    identifier	go to state 776



state 589

    option_function_parameter_list  ->  all_type_define . identifier inner_option_define_identifier   (rule 332)
    option_function_parameter_list  ->  all_type_define . inner_option_define_identifier   (rule 333)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY inner_option_define_identifier   (rule 348)
    option_function_parameter_list  ->  all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 349)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 350)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 351)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 352)
    option_function_parameter_list  ->  all_type_define . MUL identifier inner_option_define_identifier   (rule 353)
    option_function_parameter_list  ->  all_type_define . MUL inner_option_define_identifier   (rule 354)
    option_function_parameter_list  ->  all_type_define . MUL MUL identifier inner_option_define_identifier   (rule 355)

    COMMA	shift, and go to state 380
    OPEN_PAR	shift, and go to state 194
    MUL 	shift, and go to state 777
    ID  	shift, and go to state 195

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 778
    identifier	go to state 779



state 590

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 59)

    CLOSE_PAR	shift, and go to state 780



state 591

    inner_option_define_identifier  ->  COMMA error .   (rule 374)

    $default	reduce using rule 374 (inner_option_define_identifier)



state 592

    inner_option_define_identifier  ->  COMMA OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 367)

    MUL 	shift, and go to state 781



state 593

    inner_option_define_identifier  ->  COMMA ID . identifier inner_option_define_identifier   (rule 360)
    inner_option_define_identifier  ->  COMMA ID . identifier ARRAY inner_option_define_identifier   (rule 363)

    OPEN_PAR	shift, and go to state 194
    ID  	shift, and go to state 195

    identifier	go to state 782



state 594

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier inner_option_define_identifier   (rule 361)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 362)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 364)

    OPEN_PAR	shift, and go to state 194
    MUL 	shift, and go to state 783
    ID  	shift, and go to state 195

    identifier	go to state 784



state 595

    inner_option_define_identifier  ->  COMMA all_type_define . identifier inner_option_define_identifier   (rule 358)
    inner_option_define_identifier  ->  COMMA all_type_define . inner_option_define_identifier   (rule 359)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY inner_option_define_identifier   (rule 365)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 366)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 369)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 370)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 371)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier inner_option_define_identifier   (rule 372)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL inner_option_define_identifier   (rule 373)

    COMMA	shift, and go to state 380
    OPEN_PAR	shift, and go to state 194
    MUL 	shift, and go to state 785
    ID  	shift, and go to state 195

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 786
    identifier	go to state 787



state 596

    statement  ->  EXIST identifier inner_option_define_identifier COLON . OPEN_BPAR statement CLOSE_BPAR   (rule 66)

    OPEN_BPAR	shift, and go to state 788



state 597

    option_frame_identifier  ->  COMMA . identifier option_frame_identifier   (rule 393)
    option_frame_identifier  ->  COMMA . error   (rule 395)

    error	shift, and go to state 789
    OPEN_PAR	shift, and go to state 194
    ID  	shift, and go to state 195

    identifier	go to state 790



state 598

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier . CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    CLOSE_PAR	shift, and go to state 791



state 599

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 87)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 245)

    OPEN_PAR	shift, and go to state 194
    MUL 	shift, and go to state 792
    ID  	shift, and go to state 253

    option_identifier_array_declaration	go to state 366
    identifier	go to state 255



state 600

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 187)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    STRUCT	shift, and go to state 277
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 793
    CHARDECLARATION	shift, and go to state 794
    VOIDDECLARATION	shift, and go to state 280
    FLOATDECLARATION	shift, and go to state 795
    OPEN_PAR	shift, and go to state 600
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    UNSIGNED	shift, and go to state 796
    SIGNED	shift, and go to state 284
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    NEXT	shift, and go to state 242
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 285
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    ass_left	go to state 575
    leftaddrshift	go to state 85
    array	go to state 212
    point_exp	go to state 213
    ari_exp	go to state 288
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 289
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 216
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 218



state 601

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 106)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 246)

    OPEN_PAR	shift, and go to state 194
    CLOSE_PAR	shift, and go to state 736
    MUL 	shift, and go to state 797
    ID  	shift, and go to state 253

    option_identifier_array_declaration	go to state 482
    identifier	go to state 255



state 602

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA . for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 405)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 172
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 173
    MY_FALSE	shift, and go to state 174
    OPEN_PAR	shift, and go to state 175
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    NEGATION	shift, and go to state 176
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    $default	reduce using rule 410 (for_sta_condition)

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 178
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    bool_exp	go to state 798
    prime_bool_exp	go to state 180
    identifier	go to state 153
    strliteral	go to state 181
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    for_sta_condition	go to state 799
    struct_member_exp	go to state 157



state 603

    for_statement  ->  FOR ari_exp TIMES DO . statement_bpar   (rule 404)

    error	shift, and go to state 396
    OPEN_BPAR	shift, and go to state 397

    statement_bpar	go to state 800



state 604

    bool_par  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 385)

    $default	reduce using rule 385 (bool_par)



state 605

    statement_bpar  ->  error CLOSE_BPAR .   (rule 384)

    $default	reduce using rule 384 (statement_bpar)



state 606

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement_bpar  ->  OPEN_BPAR statement . CLOSE_BPAR   (rule 383)

    CLOSE_BPAR	shift, and go to state 801
    CHOP	shift, and go to state 256
    OR  	shift, and go to state 257
    PARALLEL	shift, and go to state 258
    AND 	shift, and go to state 259



state 607

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR . UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

    UNTIL	shift, and go to state 802



state 608

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 147)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 148)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 187)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 207)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    STRUCT	shift, and go to state 277
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 522
    CHARDECLARATION	shift, and go to state 523
    VOIDDECLARATION	shift, and go to state 280
    FLOATDECLARATION	shift, and go to state 524
    OPEN_PAR	shift, and go to state 608
    OPEN_BPAR	shift, and go to state 401
    OPEN_MPAR	shift, and go to state 402
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    UNSIGNED	shift, and go to state 525
    SIGNED	shift, and go to state 284
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 403
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    STRUCT_TYPE	shift, and go to state 285
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    ass_right	go to state 609
    rightaddrshift	go to state 405
    array	go to state 286
    point_exp	go to state 287
    ari_exp	go to state 610
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    array_exp	go to state 611
    option_list_value	go to state 408
    option_struct_list_value	go to state 409
    address_exp	go to state 289
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 290
    strliteral	go to state 612
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 291



state 609

    ass_right  ->  OPEN_PAR ass_right . CLOSE_PAR   (rule 148)

    CLOSE_PAR	shift, and go to state 803



state 610

    ass_right  ->  ari_exp .   (rule 144)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 187)

    CLOSE_PAR	shift, and go to state 531
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    CLOSE_PAR	[reduce using rule 144 (ass_right)]
    $default	reduce using rule 144 (ass_right)

    ari_operator	go to state 327



state 611

    ass_right  ->  array_exp .   (rule 145)
    array_exp  ->  array_exp . CON array_exp   (rule 204)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 207)

    CLOSE_PAR	shift, and go to state 804
    CON 	shift, and go to state 624

    CLOSE_PAR	[reduce using rule 145 (ass_right)]
    $default	reduce using rule 145 (ass_right)



state 612

    ass_right  ->  strliteral .   (rule 146)
    ass_right  ->  OPEN_PAR strliteral . CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 147)

    CLOSE_PAR	shift, and go to state 805

    CLOSE_PAR	[reduce using rule 146 (ass_right)]
    $default	reduce using rule 146 (ass_right)



state 613

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 187)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 207)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    STRUCT	shift, and go to state 277
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 278
    CHARDECLARATION	shift, and go to state 279
    VOIDDECLARATION	shift, and go to state 280
    FLOATDECLARATION	shift, and go to state 281
    OPEN_PAR	shift, and go to state 806
    OPEN_BPAR	shift, and go to state 401
    OPEN_MPAR	shift, and go to state 402
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    UNSIGNED	shift, and go to state 283
    SIGNED	shift, and go to state 284
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 285
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 286
    point_exp	go to state 287
    ari_exp	go to state 288
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    array_exp	go to state 807
    option_list_value	go to state 408
    option_struct_list_value	go to state 409
    address_exp	go to state 289
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 290
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 291



state 614

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    option_struct_list_value  ->  OPEN_BPAR ari_exp . inner_option_list_value CLOSE_BPAR   (rule 211)

    COMMA	shift, and go to state 808
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 217 (inner_option_list_value)

    ari_operator	go to state 327
    inner_option_list_value	go to state 809



state 615

    array_exp  ->  array_exp . CON array_exp   (rule 204)
    option_struct_list_value  ->  OPEN_BPAR array_exp . inner_option_list_value CLOSE_BPAR   (rule 213)

    COMMA	shift, and go to state 808
    CON 	shift, and go to state 624

    $default	reduce using rule 217 (inner_option_list_value)

    inner_option_list_value	go to state 810



state 616

    option_struct_list_value  ->  OPEN_BPAR strliteral . inner_option_list_value CLOSE_BPAR   (rule 212)

    COMMA	shift, and go to state 808

    $default	reduce using rule 217 (inner_option_list_value)

    inner_option_list_value	go to state 811



state 617

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    option_list_value  ->  OPEN_MPAR ari_exp . inner_option_list_value CLOSE_MPAR   (rule 208)

    COMMA	shift, and go to state 808
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 217 (inner_option_list_value)

    ari_operator	go to state 327
    inner_option_list_value	go to state 812



state 618

    array_exp  ->  array_exp . CON array_exp   (rule 204)
    option_list_value  ->  OPEN_MPAR array_exp . inner_option_list_value CLOSE_MPAR   (rule 210)

    COMMA	shift, and go to state 808
    CON 	shift, and go to state 624

    $default	reduce using rule 217 (inner_option_list_value)

    inner_option_list_value	go to state 813



state 619

    option_list_value  ->  OPEN_MPAR strliteral . inner_option_list_value CLOSE_MPAR   (rule 209)

    COMMA	shift, and go to state 808

    $default	reduce using rule 217 (inner_option_list_value)

    inner_option_list_value	go to state 814



state 620

    rightaddrshift  ->  MUL OPEN_PAR . leftaddrshift CLOSE_PAR   (rule 150)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 165)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 166)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 815
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    UNSIGNED	shift, and go to state 458
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    type_define	go to state 459
    file_statement	go to state 82
    leftaddrshift	go to state 816
    array	go to state 286
    point_exp	go to state 287
    ari_exp	go to state 460
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    sign_type_define	go to state 461
    all_type_define	go to state 462
    identifier	go to state 290
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 621

    option_output  ->  COMMA . ass_right option_output   (rule 424)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 400
    OPEN_BPAR	shift, and go to state 401
    OPEN_MPAR	shift, and go to state 402
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 403
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    ass_right	go to state 817
    rightaddrshift	go to state 405
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 406
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    array_exp	go to state 407
    option_list_value	go to state 408
    option_struct_list_value	go to state 409
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    strliteral	go to state 410
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 622

    output_statement  ->  DISPLAY OPEN_PAR ass_right CLOSE_PAR .   (rule 421)

    $default	reduce using rule 421 (output_statement)



state 623

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output . CLOSE_PAR   (rule 422)

    CLOSE_PAR	shift, and go to state 818



state 624

    array_exp  ->  array_exp CON . array_exp   (rule 204)

    OPEN_PAR	shift, and go to state 819
    OPEN_BPAR	shift, and go to state 401
    OPEN_MPAR	shift, and go to state 402

    array_exp	go to state 820
    option_list_value	go to state 408
    option_struct_list_value	go to state 409



state 625

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 171)
    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 418)

    error	shift, and go to state 396
    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    OPEN_BPAR	shift, and go to state 397
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 711
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    statement_bpar	go to state 568
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 626

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 821
    MUL 	shift, and go to state 716



state 627

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 822
    MUL 	shift, and go to state 719



state 628

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 823
    MUL 	shift, and go to state 724



state 629

    type_define  ->  INTDECLARATION .   (rule 93)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 730
    MUL 	shift, and go to state 824

    MUL 	[reduce using rule 93 (type_define)]
    $default	reduce using rule 93 (type_define)



state 630

    type_define  ->  CHARDECLARATION .   (rule 95)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 732
    MUL 	shift, and go to state 825

    MUL 	[reduce using rule 95 (type_define)]
    $default	reduce using rule 95 (type_define)



state 631

    type_define  ->  INTDECLARATION .   (rule 93)
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 227)

    CLOSE_PAR	shift, and go to state 734

    $default	reduce using rule 93 (type_define)



state 632

    type_define  ->  CHARDECLARATION .   (rule 95)
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 228)

    CLOSE_PAR	shift, and go to state 735

    $default	reduce using rule 95 (type_define)



state 633

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 55)
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 402)

    IMPLY	shift, and go to state 641

    $default	reduce using rule 402 (imply_pre)



state 634

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)
    point_exp  ->  MUL identifier .   (rule 161)

    CLOSE_PAR	shift, and go to state 826

    CLOSE_PAR	[reduce using rule 161 (point_exp)]
    $default	reduce using rule 161 (point_exp)



state 635

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)
    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 827
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 636

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)

    OPEN_PAR	shift, and go to state 828



state 637

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 187)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 402)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 172
    STRUCT	shift, and go to state 277
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 173
    MY_FALSE	shift, and go to state 174
    INTDECLARATION	shift, and go to state 522
    CHARDECLARATION	shift, and go to state 523
    VOIDDECLARATION	shift, and go to state 280
    FLOATDECLARATION	shift, and go to state 524
    OPEN_PAR	shift, and go to state 637
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    UNSIGNED	shift, and go to state 525
    SIGNED	shift, and go to state 284
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    NEGATION	shift, and go to state 208
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    STRUCT_TYPE	shift, and go to state 285
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 286
    point_exp	go to state 287
    ari_exp	go to state 353
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 289
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    prime_bool_exp	go to state 215
    identifier	go to state 290
    strliteral	go to state 181
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    imply_pre	go to state 638
    struct_member_exp	go to state 291



state 638

    imply_pre  ->  imply_pre . AND imply_pre   (rule 400)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 401)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 402)

    CLOSE_PAR	shift, and go to state 829
    OR  	shift, and go to state 431
    AND 	shift, and go to state 432



state 639

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 164)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 830
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 640

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . array option_struct_member_exp   (rule 445)

    OPEN_PAR	shift, and go to state 375
    ID  	shift, and go to state 237

    array	go to state 831
    identifier	go to state 832



state 641

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY . OPEN_MPAR statement CLOSE_MPAR   (rule 55)

    OPEN_MPAR	shift, and go to state 833



state 642

    imply_pre  ->  imply_pre . AND imply_pre   (rule 400)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 401)
    imply_pre  ->  imply_pre OR imply_pre .   (rule 401)

    AND 	shift, and go to state 432

    $default	reduce using rule 401 (imply_pre)



state 643

    imply_pre  ->  imply_pre . AND imply_pre   (rule 400)
    imply_pre  ->  imply_pre AND imply_pre .   (rule 400)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 401)


    $default	reduce using rule 400 (imply_pre)



state 644

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    option_projection  ->  COMMA statement . option_projection   (rule 397)

    COMMA	shift, and go to state 434
    CHOP	shift, and go to state 256
    OR  	shift, and go to state 257
    PARALLEL	shift, and go to state 258
    AND 	shift, and go to state 259

    $default	reduce using rule 396 (option_projection)

    option_projection	go to state 834



state 645

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION . statement_bpar   (rule 58)

    error	shift, and go to state 396
    OPEN_BPAR	shift, and go to state 397

    statement_bpar	go to state 835



state 646

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR . PROJECTION statement_bpar   (rule 57)

    PROJECTION	shift, and go to state 836



state 647

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 60)

    CLOSE_PAR	shift, and go to state 837



state 648

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    CLOSE_PAR	shift, and go to state 838



state 649

    String_Function_head  ->  STRFUNCHEAD OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 267)

    $default	reduce using rule 267 (String_Function_head)



state 650

    String_Function_tail  ->  STRFUNCTAIL OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 268)

    $default	reduce using rule 268 (String_Function_tail)



state 651

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter COMMA . str_func_parameter CLOSE_PAR   (rule 269)

    OPEN_PAR	shift, and go to state 439
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 66
    ID  	shift, and go to state 237
    STRLITERAL	shift, and go to state 177

    array	go to state 440
    point_exp	go to state 441
    String_Function	go to state 442
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 839
    identifier	go to state 444
    strliteral	go to state 445
    struct_member_exp	go to state 446



state 652

    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter COMMA . str_func_parameter CLOSE_PAR   (rule 270)

    OPEN_PAR	shift, and go to state 439
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 66
    ID  	shift, and go to state 237
    STRLITERAL	shift, and go to state 177

    array	go to state 440
    point_exp	go to state 441
    String_Function	go to state 442
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 840
    identifier	go to state 444
    strliteral	go to state 445
    struct_member_exp	go to state 446



state 653

    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter COMMA . str_func_parameter CLOSE_PAR   (rule 271)

    OPEN_PAR	shift, and go to state 439
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    MUL 	shift, and go to state 66
    ID  	shift, and go to state 237
    STRLITERAL	shift, and go to state 177

    array	go to state 440
    point_exp	go to state 441
    String_Function	go to state 442
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    str_func_parameter	go to state 841
    identifier	go to state 444
    strliteral	go to state 445
    struct_member_exp	go to state 446



state 654

    String_Function_len  ->  STRFUNCLEN OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 272)

    $default	reduce using rule 272 (String_Function_len)



state 655

    statement  ->  SYSTEM OPEN_PAR str_func_parameter CLOSE_PAR .   (rule 64)

    $default	reduce using rule 64 (statement)



state 656

    function  ->  EXTERN ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 73)

    CLOSE_PAR	shift, and go to state 842



state 657

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)

    OPEN_PAR	shift, and go to state 194
    ID  	shift, and go to state 195

    identifier	go to state 843



state 658

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)
    identifier  ->  ID .   (rule 387)

    OPEN_MPAR	shift, and go to state 844

    $default	reduce using rule 387 (identifier)



state 659

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 89)

    CLOSE_PAR	shift, and go to state 636



state 660

    statement  ->  FREE OPEN_PAR identifier CLOSE_PAR .   (rule 63)

    $default	reduce using rule 63 (statement)



state 661

    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 328)

    $default	reduce using rule 328 (sign_type_define)



state 662

    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 329)

    $default	reduce using rule 329 (sign_type_define)



state 663

    point_exp  ->  MUL OPEN_PAR ari_exp CLOSE_PAR .   (rule 166)

    $default	reduce using rule 166 (point_exp)



state 664

    point_exp  ->  MUL OPEN_PAR all_type_define MUL . CLOSE_PAR ari_exp   (rule 165)

    CLOSE_PAR	shift, and go to state 845



state 665

    type_define  ->  INTDECLARATION .   (rule 93)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    MUL 	shift, and go to state 846

    MUL 	[reduce using rule 93 (type_define)]
    $default	reduce using rule 93 (type_define)



state 666

    type_define  ->  CHARDECLARATION .   (rule 95)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    MUL 	shift, and go to state 847

    MUL 	[reduce using rule 95 (type_define)]
    $default	reduce using rule 95 (type_define)



state 667

    type_define  ->  FLOATDECLARATION .   (rule 94)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    MUL 	shift, and go to state 848

    MUL 	[reduce using rule 94 (type_define)]
    $default	reduce using rule 94 (type_define)



state 668

    sign_declaration  ->  UNSIGNED . declaration   (rule 81)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)

    STRUCT	shift, and go to state 230
    UNION	shift, and go to state 231
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 849
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 850
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 232
    STRUCT_TYPE	shift, and go to state 74

    declaration	go to state 233
    type_define	go to state 81



state 669

    statement  ->  NEXT OPEN_PAR statement CLOSE_PAR .   (rule 40)

    $default	reduce using rule 40 (statement)



state 670

    statement  ->  LENGTH OPEN_PAR ari_exp CLOSE_PAR .   (rule 48)

    $default	reduce using rule 48 (statement)



state 671

    option_input  ->  COMMA . identifier option_input   (rule 431)
    option_input  ->  COMMA . array option_input   (rule 432)

    OPEN_PAR	shift, and go to state 375
    ID  	shift, and go to state 237

    array	go to state 851
    identifier	go to state 852



state 672

    input_statement  ->  REQUEST OPEN_PAR array CLOSE_PAR .   (rule 427)

    $default	reduce using rule 427 (input_statement)



state 673

    input_statement  ->  REQUEST OPEN_PAR array option_input . CLOSE_PAR   (rule 428)

    CLOSE_PAR	shift, and go to state 853



state 674

    input_statement  ->  REQUEST OPEN_PAR identifier CLOSE_PAR .   (rule 425)

    $default	reduce using rule 425 (input_statement)



state 675

    input_statement  ->  REQUEST OPEN_PAR identifier option_input . CLOSE_PAR   (rule 426)

    CLOSE_PAR	shift, and go to state 854



state 676

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 429)

    $default	reduce using rule 429 (input_statement)



state 677

    statement  ->  FINAL OPEN_PAR statement CLOSE_PAR .   (rule 53)

    $default	reduce using rule 53 (statement)



state 678

    statement  ->  KEEP OPEN_PAR statement CLOSE_PAR .   (rule 41)

    $default	reduce using rule 41 (statement)



state 679

    statement  ->  ALWAYS OPEN_PAR statement CLOSE_PAR .   (rule 42)

    $default	reduce using rule 42 (statement)



state 680

    option_function_identifier  ->  ADDRESS error .   (rule 378)

    $default	reduce using rule 378 (option_function_identifier)



state 681

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 72)
    option_function_identifier  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 376)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 400
    OPEN_BPAR	shift, and go to state 401
    OPEN_MPAR	shift, and go to state 402
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 477
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 403
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 478
    STRLITERAL	shift, and go to state 177
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    $default	reduce using rule 377 (option_function_identifier)

    function	go to state 143
    file_statement	go to state 82
    ass_right	go to state 479
    rightaddrshift	go to state 405
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 406
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    array_exp	go to state 407
    option_list_value	go to state 408
    option_struct_list_value	go to state 409
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    option_function_identifier	go to state 855
    identifier	go to state 153
    strliteral	go to state 410
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 682

    inner_option_function_identifier  ->  COMMA . ass_right inner_option_function_identifier   (rule 379)
    inner_option_function_identifier  ->  COMMA . ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 380)
    inner_option_function_identifier  ->  COMMA . error   (rule 382)

    error	shift, and go to state 856
    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 400
    OPEN_BPAR	shift, and go to state 401
    OPEN_MPAR	shift, and go to state 402
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 403
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 857
    STRLITERAL	shift, and go to state 177
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    ass_right	go to state 858
    rightaddrshift	go to state 405
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 406
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    array_exp	go to state 407
    option_list_value	go to state 408
    option_struct_list_value	go to state 409
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    strliteral	go to state 410
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 683

    option_function_identifier  ->  ass_right inner_option_function_identifier .   (rule 375)

    $default	reduce using rule 375 (option_function_identifier)



state 684

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 72)

    $default	reduce using rule 72 (function)



state 685

    option_ari_exp  ->  COMMA . ari_exp option_ari_exp   (rule 158)
    option_ari_exp  ->  COMMA . error   (rule 159)

    error	shift, and go to state 859
    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 860
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 686

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 151)

    CLOSE_MPAR	shift, and go to state 861



state 687

    option_identifier_array_declaration  ->  ID ARRAY ASS_P . array_exp inner_option_identifier_array_declaration   (rule 102)
    option_identifier_array_declaration  ->  ID ARRAY ASS_P . strliteral inner_option_identifier_array_declaration   (rule 103)

    OPEN_PAR	shift, and go to state 819
    OPEN_BPAR	shift, and go to state 401
    OPEN_MPAR	shift, and go to state 402
    STRLITERAL	shift, and go to state 177

    array_exp	go to state 862
    option_list_value	go to state 408
    option_struct_list_value	go to state 409
    strliteral	go to state 863



state 688

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 105)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    COMMA	shift, and go to state 685
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 160 (option_ari_exp)

    option_ari_exp	go to state 864
    ari_operator	go to state 327



state 689

    inner_option_identifier_array_declaration  ->  COMMA error .   (rule 108)

    $default	reduce using rule 108 (inner_option_identifier_array_declaration)



state 690

    inner_option_identifier_array_declaration  ->  COMMA option_identifier_array_declaration .   (rule 107)

    $default	reduce using rule 107 (inner_option_identifier_array_declaration)



state 691

    option_identifier_array_declaration  ->  identifier ASS_P ass_right . inner_option_identifier_array_declaration   (rule 101)

    COMMA	shift, and go to state 485

    COMMA	[reduce using rule 109 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 109 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 865



state 692

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR .   (rule 77)

    $default	reduce using rule 77 (struct_define_statement)



state 693

    option_struct_declaration  ->  sign_declaration AND . option_struct_declaration   (rule 69)

    STRUCT	shift, and go to state 230
    UNION	shift, and go to state 231
    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 232
    UNSIGNED	shift, and go to state 63
    SIGNED	shift, and go to state 64
    STRUCT_TYPE	shift, and go to state 74

    option_struct_declaration	go to state 866
    sign_declaration	go to state 493
    declaration	go to state 80
    type_define	go to state 81



state 694

    option_struct_member_exp  ->  DOT . identifier option_struct_member_exp   (rule 451)
    option_struct_member_exp  ->  DOT . array option_struct_member_exp   (rule 452)
    option_struct_member_exp  ->  DOT . function   (rule 455)

    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 375
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    EXTERN	shift, and go to state 62
    ID  	shift, and go to state 73

    function	go to state 867
    file_statement	go to state 82
    array	go to state 868
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 869



state 695

    option_struct_member_exp  ->  IMPLY . identifier option_struct_member_exp   (rule 453)
    option_struct_member_exp  ->  IMPLY . array option_struct_member_exp   (rule 454)
    option_struct_member_exp  ->  IMPLY . function   (rule 456)

    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 375
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    EXTERN	shift, and go to state 62
    ID  	shift, and go to state 73

    function	go to state 870
    file_statement	go to state 82
    array	go to state 871
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 872



state 696

    struct_member_exp  ->  array DOT array option_struct_member_exp .   (rule 437)

    $default	reduce using rule 437 (struct_member_exp)



state 697

    struct_member_exp  ->  array DOT identifier option_struct_member_exp .   (rule 434)

    $default	reduce using rule 434 (struct_member_exp)



state 698

    function  ->  array OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 74)

    $default	reduce using rule 74 (function)



state 699

    struct_member_exp  ->  array IMPLY array option_struct_member_exp .   (rule 444)

    $default	reduce using rule 444 (struct_member_exp)



state 700

    struct_member_exp  ->  array IMPLY identifier option_struct_member_exp .   (rule 440)

    $default	reduce using rule 440 (struct_member_exp)



state 701

    struct_member_exp  ->  point_exp DOT array option_struct_member_exp .   (rule 438)

    $default	reduce using rule 438 (struct_member_exp)



state 702

    struct_member_exp  ->  point_exp DOT identifier option_struct_member_exp .   (rule 435)

    $default	reduce using rule 435 (struct_member_exp)



state 703

    struct_member_exp  ->  point_exp IMPLY array option_struct_member_exp .   (rule 448)

    $default	reduce using rule 448 (struct_member_exp)



state 704

    struct_member_exp  ->  point_exp IMPLY identifier option_struct_member_exp .   (rule 442)

    $default	reduce using rule 442 (struct_member_exp)



state 705

    struct_member_exp  ->  identifier DOT array option_struct_member_exp .   (rule 436)

    $default	reduce using rule 436 (struct_member_exp)



state 706

    struct_member_exp  ->  identifier DOT identifier option_struct_member_exp .   (rule 433)

    $default	reduce using rule 433 (struct_member_exp)



state 707

    struct_member_exp  ->  identifier IMPLY array option_struct_member_exp .   (rule 443)

    $default	reduce using rule 443 (struct_member_exp)



state 708

    struct_member_exp  ->  identifier IMPLY identifier option_struct_member_exp .   (rule 439)

    $default	reduce using rule 439 (struct_member_exp)



state 709

    poptional_projection  ->  COMMA complexProposition poptional_projection .   (rule 28)

    $default	reduce using rule 28 (poptional_projection)



state 710

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION . OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    OPEN_BPAR	shift, and go to state 873



state 711

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    ari_exp  ->  IF bool_exp THEN ari_exp . option_exp_else_statement   (rule 171)

    ELSE	shift, and go to state 874
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ELSE	[reduce using rule 175 (option_exp_else_statement)]
    ADD 	[reduce using rule 175 (option_exp_else_statement)]
    SUB 	[reduce using rule 175 (option_exp_else_statement)]
    $default	reduce using rule 175 (option_exp_else_statement)

    option_exp_else_statement	go to state 875
    ari_operator	go to state 327



state 712

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 245)

    CLOSE_PAR	shift, and go to state 876
    MUL 	shift, and go to state 877



state 713

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 224)

    $default	reduce using rule 224 (type_cast)



state 714

    type_cast_alg_exp  ->  simple_ari_exp .   (rule 172)
    type_cast_alg_exp  ->  simple_ari_exp . ari_operator simple_ari_exp   (rule 173)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 177)

    INTER_OR	shift, and go to state 328
    CON 	shift, and go to state 329
    ADDRESS	shift, and go to state 330
    LST 	shift, and go to state 337
    RST 	shift, and go to state 338
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326
    MUL 	shift, and go to state 339
    DIV 	shift, and go to state 340
    MOD 	shift, and go to state 341

    INTER_OR	[reduce using rule 172 (type_cast_alg_exp)]
    CON 	[reduce using rule 172 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 172 (type_cast_alg_exp)]
    LST 	[reduce using rule 172 (type_cast_alg_exp)]
    RST 	[reduce using rule 172 (type_cast_alg_exp)]
    ADD 	[reduce using rule 172 (type_cast_alg_exp)]
    SUB 	[reduce using rule 172 (type_cast_alg_exp)]
    MUL 	[reduce using rule 172 (type_cast_alg_exp)]
    DIV 	[reduce using rule 172 (type_cast_alg_exp)]
    MOD 	[reduce using rule 172 (type_cast_alg_exp)]
    $default	reduce using rule 172 (type_cast_alg_exp)

    bi_operator	go to state 342
    ari_operator	go to state 878



state 715

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 231)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 881
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 716

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 882



state 717

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 226)

    $default	reduce using rule 226 (type_cast)



state 718

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 883
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 719

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 884



state 720

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR . casted_element   (rule 236)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 885
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 721

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 242)

    CLOSE_PAR	shift, and go to state 886



state 722

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 225)

    $default	reduce using rule 225 (type_cast)



state 723

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 887
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 724

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 888



state 725

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 889
    MUL 	shift, and go to state 716



state 726

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 890
    MUL 	shift, and go to state 719



state 727

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 891
    MUL 	shift, and go to state 724



state 728

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 730
    MUL 	shift, and go to state 824



state 729

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 732
    MUL 	shift, and go to state 892



state 730

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 229)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 893
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 731

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 894
    MUL 	shift, and go to state 895



state 732

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 230)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 896
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 733

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 897
    MUL 	shift, and go to state 898



state 734

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 227)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 899
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 735

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 228)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 900
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 736

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 244)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 901
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 737

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 246)

    CLOSE_PAR	shift, and go to state 902



state 738

    all_sizeof_type  ->  STRUCT STRUCT_TYPE . MUL   (rule 255)

    MUL 	shift, and go to state 903



state 739

    all_sizeof_type  ->  INTDECLARATION MUL .   (rule 250)

    $default	reduce using rule 250 (all_sizeof_type)



state 740

    all_sizeof_type  ->  CHARDECLARATION MUL .   (rule 252)

    $default	reduce using rule 252 (all_sizeof_type)



state 741

    all_sizeof_type  ->  FLOATDECLARATION MUL .   (rule 251)

    $default	reduce using rule 251 (all_sizeof_type)



state 742

    all_sizeof_type  ->  UNSIGNED INTDECLARATION . MUL   (rule 253)
    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 328)

    MUL 	shift, and go to state 904

    $default	reduce using rule 328 (sign_type_define)



state 743

    all_sizeof_type  ->  UNSIGNED CHARDECLARATION . MUL   (rule 254)
    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 329)

    MUL 	shift, and go to state 905

    $default	reduce using rule 329 (sign_type_define)



state 744

    size_of  ->  SIZEOF OPEN_PAR STRUCT_TYPE CLOSE_PAR .   (rule 259)

    $default	reduce using rule 259 (size_of)



state 745

    all_sizeof_type  ->  STRUCT_TYPE MUL .   (rule 256)

    $default	reduce using rule 256 (all_sizeof_type)



state 746

    size_of  ->  SIZEOF OPEN_PAR ari_exp CLOSE_PAR .   (rule 257)

    $default	reduce using rule 257 (size_of)



state 747

    size_of  ->  SIZEOF OPEN_PAR all_sizeof_type CLOSE_PAR .   (rule 258)

    $default	reduce using rule 258 (size_of)



state 748

    size_of  ->  SIZEOF OPEN_PAR strliteral CLOSE_PAR .   (rule 260)

    $default	reduce using rule 260 (size_of)



state 749

    math_function  ->  ATAN2 OPEN_PAR ari_exp COMMA . ari_exp CLOSE_PAR   (rule 295)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 906
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 750

    math_function  ->  POW OPEN_PAR ari_exp COMMA . ari_exp CLOSE_PAR   (rule 296)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 907
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 751

    math_function  ->  FMOD OPEN_PAR ari_exp COMMA . ari_exp CLOSE_PAR   (rule 297)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 908
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 752

    math_function  ->  MODF OPEN_PAR ari_exp COMMA . ari_exp CLOSE_PAR   (rule 298)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 909
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 753

    math_function  ->  LDEXP OPEN_PAR ari_exp COMMA . ari_exp CLOSE_PAR   (rule 299)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 910
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 754

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    MUL 	shift, and go to state 911



state 755

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    MUL 	shift, and go to state 912



state 756

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    MUL 	shift, and go to state 913



state 757

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)

    INTDECLARATION	shift, and go to state 914
    CHARDECLARATION	shift, and go to state 915



state 758

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR . case_par CLOSE_BPAR   (rule 413)

    CASE	shift, and go to state 916

    case_par	go to state 917



state 759

    option_else_statement  ->  ELSE . statement_bpar   (rule 419)

    error	shift, and go to state 396
    OPEN_BPAR	shift, and go to state 397

    statement_bpar	go to state 918



state 760

    if_statement  ->  IF bool_exp THEN statement_bpar option_else_statement .   (rule 418)

    $default	reduce using rule 418 (if_statement)



state 761

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    MUL 	shift, and go to state 846



state 762

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    MUL 	shift, and go to state 847



state 763

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    MUL 	shift, and go to state 848



state 764

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)

    INTDECLARATION	shift, and go to state 914
    CHARDECLARATION	shift, and go to state 919



state 765

    file_statement  ->  FOPEN OPEN_PAR ass_left COMMA strliteral . CLOSE_PAR   (rule 114)

    CLOSE_PAR	shift, and go to state 920



state 766

    file_statement  ->  FGETS OPEN_PAR identifier COMMA intliteral . COMMA identifier CLOSE_PAR   (rule 115)

    COMMA	shift, and go to state 921



state 767

    file_statement  ->  FPUTS OPEN_PAR identifier COMMA identifier . CLOSE_PAR   (rule 117)

    CLOSE_PAR	shift, and go to state 922



state 768

    file_statement  ->  FPUTC OPEN_PAR array COMMA identifier . CLOSE_PAR   (rule 119)

    CLOSE_PAR	shift, and go to state 923



state 769

    file_statement  ->  FPUTC OPEN_PAR identifier COMMA identifier . CLOSE_PAR   (rule 118)

    CLOSE_PAR	shift, and go to state 924



state 770

    option_function_parameter_list  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 356)

    OPEN_PAR	shift, and go to state 194
    ID  	shift, and go to state 195

    identifier	go to state 925



state 771

    option_function_parameter_list  ->  ID MUL . identifier inner_option_define_identifier   (rule 339)
    option_function_parameter_list  ->  ID MUL . MUL identifier inner_option_define_identifier   (rule 340)
    option_function_parameter_list  ->  ID MUL . inner_option_define_identifier   (rule 346)
    option_function_parameter_list  ->  ID MUL . MUL inner_option_define_identifier   (rule 347)

    COMMA	shift, and go to state 380
    OPEN_PAR	shift, and go to state 194
    MUL 	shift, and go to state 926
    ID  	shift, and go to state 195

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 927
    identifier	go to state 928



state 772

    option_function_parameter_list  ->  ID inner_option_define_identifier .   (rule 345)

    $default	reduce using rule 345 (option_function_parameter_list)



state 773

    option_function_parameter_list  ->  ID identifier . inner_option_define_identifier   (rule 338)
    option_function_parameter_list  ->  ID identifier . ARRAY inner_option_define_identifier   (rule 341)

    ARRAY	shift, and go to state 929
    COMMA	shift, and go to state 380

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 930



state 774

    option_function_parameter_list  ->  STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 335)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL identifier inner_option_define_identifier   (rule 336)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . inner_option_define_identifier   (rule 343)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL inner_option_define_identifier   (rule 344)

    COMMA	shift, and go to state 380
    OPEN_PAR	shift, and go to state 194
    MUL 	shift, and go to state 931
    ID  	shift, and go to state 195

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 932
    identifier	go to state 933



state 775

    option_function_parameter_list  ->  STRUCT_TYPE inner_option_define_identifier .   (rule 342)

    $default	reduce using rule 342 (option_function_parameter_list)



state 776

    option_function_parameter_list  ->  STRUCT_TYPE identifier . inner_option_define_identifier   (rule 334)
    option_function_parameter_list  ->  STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 337)

    ARRAY	shift, and go to state 934
    COMMA	shift, and go to state 380

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 935



state 777

    option_function_parameter_list  ->  all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 349)
    option_function_parameter_list  ->  all_type_define MUL . identifier inner_option_define_identifier   (rule 353)
    option_function_parameter_list  ->  all_type_define MUL . inner_option_define_identifier   (rule 354)
    option_function_parameter_list  ->  all_type_define MUL . MUL identifier inner_option_define_identifier   (rule 355)

    COMMA	shift, and go to state 380
    OPEN_PAR	shift, and go to state 194
    MUL 	shift, and go to state 936
    ID  	shift, and go to state 195

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 937
    identifier	go to state 938



state 778

    option_function_parameter_list  ->  all_type_define inner_option_define_identifier .   (rule 333)

    $default	reduce using rule 333 (option_function_parameter_list)



state 779

    option_function_parameter_list  ->  all_type_define identifier . inner_option_define_identifier   (rule 332)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY inner_option_define_identifier   (rule 348)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 350)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 351)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 352)

    ARRAY	shift, and go to state 939
    COMMA	shift, and go to state 380
    OPEN_MPAR	shift, and go to state 940

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 941



state 780

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 59)

    ASS_P	shift, and go to state 942



state 781

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 367)

    OPEN_PAR	shift, and go to state 194
    ID  	shift, and go to state 195

    identifier	go to state 943



state 782

    inner_option_define_identifier  ->  COMMA ID identifier . inner_option_define_identifier   (rule 360)
    inner_option_define_identifier  ->  COMMA ID identifier . ARRAY inner_option_define_identifier   (rule 363)

    ARRAY	shift, and go to state 944
    COMMA	shift, and go to state 380

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 945



state 783

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 362)

    OPEN_PAR	shift, and go to state 194
    ID  	shift, and go to state 195

    identifier	go to state 946



state 784

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . inner_option_define_identifier   (rule 361)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 364)

    ARRAY	shift, and go to state 947
    COMMA	shift, and go to state 380

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 948



state 785

    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 366)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier inner_option_define_identifier   (rule 372)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . inner_option_define_identifier   (rule 373)

    COMMA	shift, and go to state 380
    OPEN_PAR	shift, and go to state 194
    ID  	shift, and go to state 195

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 949
    identifier	go to state 950



state 786

    inner_option_define_identifier  ->  COMMA all_type_define inner_option_define_identifier .   (rule 359)

    $default	reduce using rule 359 (inner_option_define_identifier)



state 787

    inner_option_define_identifier  ->  COMMA all_type_define identifier . inner_option_define_identifier   (rule 358)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY inner_option_define_identifier   (rule 365)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 369)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 370)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 371)

    ARRAY	shift, and go to state 951
    COMMA	shift, and go to state 380
    OPEN_MPAR	shift, and go to state 952

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 953



state 788

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR . statement CLOSE_BPAR   (rule 66)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    EXTERN	shift, and go to state 62
    UNSIGNED	shift, and go to state 63
    SIGNED	shift, and go to state 64
    FREE	shift, and go to state 65
    MUL 	shift, and go to state 66
    NEXT	shift, and go to state 67
    LENGTH	shift, and go to state 68
    REQUEST	shift, and go to state 69
    FINAL	shift, and go to state 70
    KEEP	shift, and go to state 71
    ALWAYS	shift, and go to state 72
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 74

    statement	go to state 954
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 95
    while_statement	go to state 96
    for_statement	go to state 97
    extend_for_statement	go to state 98
    switch_statement	go to state 99
    if_statement	go to state 100
    output_statement	go to state 101
    input_statement	go to state 102
    struct_member_exp	go to state 103



state 789

    option_frame_identifier  ->  COMMA error .   (rule 395)

    $default	reduce using rule 395 (option_frame_identifier)



state 790

    option_frame_identifier  ->  COMMA identifier . option_frame_identifier   (rule 393)

    COMMA	shift, and go to state 597

    $default	reduce using rule 394 (option_frame_identifier)

    option_frame_identifier	go to state 955



state 791

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR . AND OPEN_PAR statement CLOSE_PAR   (rule 56)

    AND 	shift, and go to state 956



state 792

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 106)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 245)

    OPEN_PAR	shift, and go to state 194
    CLOSE_PAR	shift, and go to state 876
    MUL 	shift, and go to state 957
    ID  	shift, and go to state 253

    option_identifier_array_declaration	go to state 482
    identifier	go to state 255



state 793

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 515
    MUL 	shift, and go to state 626



state 794

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 517
    MUL 	shift, and go to state 627



state 795

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 239)

    CLOSE_PAR	shift, and go to state 520
    MUL 	shift, and go to state 628



state 796

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)

    INTDECLARATION	shift, and go to state 728
    CHARDECLARATION	shift, and go to state 958



state 797

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 106)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 246)

    OPEN_PAR	shift, and go to state 194
    CLOSE_PAR	shift, and go to state 902
    MUL 	shift, and go to state 252
    ID  	shift, and go to state 253

    option_identifier_array_declaration	go to state 482
    identifier	go to state 255



state 798

    bool_exp  ->  bool_exp . AND bool_exp   (rule 305)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 306)
    for_sta_condition  ->  bool_exp .   (rule 409)

    OR  	shift, and go to state 360
    AND 	shift, and go to state 361

    $default	reduce using rule 409 (for_sta_condition)



state 799

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition . COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 405)

    COMMA	shift, and go to state 959



state 800

    for_statement  ->  FOR ari_exp TIMES DO statement_bpar .   (rule 404)

    $default	reduce using rule 404 (for_statement)



state 801

    statement_bpar  ->  OPEN_BPAR statement CLOSE_BPAR .   (rule 383)

    $default	reduce using rule 383 (statement_bpar)



state 802

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL . OPEN_PAR bool_exp CLOSE_PAR   (rule 44)

    OPEN_PAR	shift, and go to state 960



state 803

    ass_right  ->  OPEN_PAR ass_right CLOSE_PAR .   (rule 148)

    $default	reduce using rule 148 (ass_right)



state 804

    array_exp  ->  OPEN_PAR array_exp CLOSE_PAR .   (rule 207)

    $default	reduce using rule 207 (array_exp)



state 805

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR . OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 147)

    OPEN_PAR	shift, and go to state 961



state 806

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 187)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 207)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    STRUCT	shift, and go to state 277
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 522
    CHARDECLARATION	shift, and go to state 523
    VOIDDECLARATION	shift, and go to state 280
    FLOATDECLARATION	shift, and go to state 524
    OPEN_PAR	shift, and go to state 806
    OPEN_BPAR	shift, and go to state 401
    OPEN_MPAR	shift, and go to state 402
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    UNSIGNED	shift, and go to state 525
    SIGNED	shift, and go to state 284
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 285
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 286
    point_exp	go to state 287
    ari_exp	go to state 288
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    array_exp	go to state 807
    option_list_value	go to state 408
    option_struct_list_value	go to state 409
    address_exp	go to state 289
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 290
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 291



state 807

    array_exp  ->  array_exp . CON array_exp   (rule 204)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 207)

    CLOSE_PAR	shift, and go to state 804
    CON 	shift, and go to state 624



state 808

    inner_option_list_value  ->  COMMA . ari_exp inner_option_list_value   (rule 214)
    inner_option_list_value  ->  COMMA . strliteral inner_option_list_value   (rule 215)
    inner_option_list_value  ->  COMMA . array_exp inner_option_list_value   (rule 216)
    inner_option_list_value  ->  COMMA . error   (rule 218)

    error	shift, and go to state 962
    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 613
    OPEN_BPAR	shift, and go to state 401
    OPEN_MPAR	shift, and go to state 402
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 963
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    array_exp	go to state 964
    option_list_value	go to state 408
    option_struct_list_value	go to state 409
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    strliteral	go to state 965
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 809

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value . CLOSE_BPAR   (rule 211)

    CLOSE_BPAR	shift, and go to state 966



state 810

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value . CLOSE_BPAR   (rule 213)

    CLOSE_BPAR	shift, and go to state 967



state 811

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value . CLOSE_BPAR   (rule 212)

    CLOSE_BPAR	shift, and go to state 968



state 812

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value . CLOSE_MPAR   (rule 208)

    CLOSE_MPAR	shift, and go to state 969



state 813

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value . CLOSE_MPAR   (rule 210)

    CLOSE_MPAR	shift, and go to state 970



state 814

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value . CLOSE_MPAR   (rule 209)

    CLOSE_MPAR	shift, and go to state 971



state 815

    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 187)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    STRUCT	shift, and go to state 277
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 522
    CHARDECLARATION	shift, and go to state 523
    VOIDDECLARATION	shift, and go to state 280
    FLOATDECLARATION	shift, and go to state 524
    OPEN_PAR	shift, and go to state 972
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    UNSIGNED	shift, and go to state 525
    SIGNED	shift, and go to state 284
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 285
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 286
    point_exp	go to state 287
    ari_exp	go to state 288
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 289
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 290
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 291



state 816

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift . CLOSE_PAR   (rule 150)

    CLOSE_PAR	shift, and go to state 973



state 817

    option_output  ->  COMMA ass_right . option_output   (rule 424)

    COMMA	shift, and go to state 621

    $default	reduce using rule 423 (option_output)

    option_output	go to state 974



state 818

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR .   (rule 422)

    $default	reduce using rule 422 (output_statement)



state 819

    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 207)

    OPEN_PAR	shift, and go to state 819
    OPEN_BPAR	shift, and go to state 401
    OPEN_MPAR	shift, and go to state 402

    array_exp	go to state 807
    option_list_value	go to state 408
    option_struct_list_value	go to state 409



state 820

    array_exp  ->  array_exp . CON array_exp   (rule 204)
    array_exp  ->  array_exp CON array_exp .   (rule 204)


    $default	reduce using rule 204 (array_exp)



state 821

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 231)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 975
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 976
    INTLITERAL	shift, and go to state 977
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 881
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 822

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 978
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 979
    INTLITERAL	shift, and go to state 980
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 883
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 823

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 981
    INTLITERAL	shift, and go to state 982
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 887
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 824

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 983
    MUL 	shift, and go to state 895



state 825

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 984
    MUL 	shift, and go to state 898



state 826

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)

    OPEN_PAR	shift, and go to state 985



state 827

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)
    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 151)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    COMMA	shift, and go to state 685
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 160 (option_ari_exp)

    option_ari_exp	go to state 986
    ari_operator	go to state 327



state 828

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 89)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 586
    UNSIGNED	shift, and go to state 458
    ID  	shift, and go to state 587
    STRUCT_TYPE	shift, and go to state 588

    $default	reduce using rule 357 (option_function_parameter_list)

    type_define	go to state 459
    sign_type_define	go to state 461
    all_type_define	go to state 589
    option_function_parameter_list	go to state 987



state 829

    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 402)

    $default	reduce using rule 402 (imply_pre)



state 830

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 164)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    COMMA	shift, and go to state 685
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 160 (option_ari_exp)

    option_ari_exp	go to state 988
    ari_operator	go to state 327



state 831

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array . option_struct_member_exp   (rule 445)

    DOT 	shift, and go to state 694
    IMPLY	shift, and go to state 695

    DOT 	[reduce using rule 450 (option_struct_member_exp)]
    IMPLY	[reduce using rule 450 (option_struct_member_exp)]
    $default	reduce using rule 450 (option_struct_member_exp)

    option_struct_member_exp	go to state 989



state 832

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier . option_struct_member_exp   (rule 441)

    DOT 	shift, and go to state 694
    IMPLY	shift, and go to state 695

    DOT 	[reduce using rule 450 (option_struct_member_exp)]
    IMPLY	[reduce using rule 450 (option_struct_member_exp)]
    $default	reduce using rule 450 (option_struct_member_exp)

    option_struct_member_exp	go to state 990



state 833

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR . statement CLOSE_MPAR   (rule 55)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    EXTERN	shift, and go to state 62
    UNSIGNED	shift, and go to state 63
    SIGNED	shift, and go to state 64
    FREE	shift, and go to state 65
    MUL 	shift, and go to state 66
    NEXT	shift, and go to state 67
    LENGTH	shift, and go to state 68
    REQUEST	shift, and go to state 69
    FINAL	shift, and go to state 70
    KEEP	shift, and go to state 71
    ALWAYS	shift, and go to state 72
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 74

    statement	go to state 991
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 95
    while_statement	go to state 96
    for_statement	go to state 97
    extend_for_statement	go to state 98
    switch_statement	go to state 99
    if_statement	go to state 100
    output_statement	go to state 101
    input_statement	go to state 102
    struct_member_exp	go to state 103



state 834

    option_projection  ->  COMMA statement option_projection .   (rule 397)

    $default	reduce using rule 397 (option_projection)



state 835

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar .   (rule 58)

    $default	reduce using rule 58 (statement)



state 836

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION . statement_bpar   (rule 57)

    error	shift, and go to state 396
    OPEN_BPAR	shift, and go to state 397

    statement_bpar	go to state 992



state 837

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 60)

    OPEN_BPAR	shift, and go to state 993



state 838

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    ASS_P	shift, and go to state 994



state 839

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter COMMA str_func_parameter . CLOSE_PAR   (rule 269)

    CLOSE_PAR	shift, and go to state 995



state 840

    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter COMMA str_func_parameter . CLOSE_PAR   (rule 270)

    CLOSE_PAR	shift, and go to state 996



state 841

    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter COMMA str_func_parameter . CLOSE_PAR   (rule 271)

    CLOSE_PAR	shift, and go to state 997



state 842

    function  ->  EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 73)

    $default	reduce using rule 73 (function)



state 843

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 90)

    CLOSE_PAR	shift, and go to state 826



state 844

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 998
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 845

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR . ari_exp   (rule 165)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 999
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 846

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    CLOSE_PAR	shift, and go to state 1000



state 847

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    CLOSE_PAR	shift, and go to state 1001



state 848

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    CLOSE_PAR	shift, and go to state 1002



state 849

    type_define  ->  INTDECLARATION .   (rule 93)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    MUL 	shift, and go to state 1003

    MUL 	[reduce using rule 93 (type_define)]
    $default	reduce using rule 93 (type_define)



state 850

    type_define  ->  CHARDECLARATION .   (rule 95)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)

    MUL 	shift, and go to state 1004

    MUL 	[reduce using rule 95 (type_define)]
    $default	reduce using rule 95 (type_define)



state 851

    option_input  ->  COMMA array . option_input   (rule 432)

    COMMA	shift, and go to state 671

    $default	reduce using rule 430 (option_input)

    option_input	go to state 1005



state 852

    option_input  ->  COMMA identifier . option_input   (rule 431)

    COMMA	shift, and go to state 671

    $default	reduce using rule 430 (option_input)

    option_input	go to state 1006



state 853

    input_statement  ->  REQUEST OPEN_PAR array option_input CLOSE_PAR .   (rule 428)

    $default	reduce using rule 428 (input_statement)



state 854

    input_statement  ->  REQUEST OPEN_PAR identifier option_input CLOSE_PAR .   (rule 426)

    $default	reduce using rule 426 (input_statement)



state 855

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 72)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 376)

    CLOSE_PAR	shift, and go to state 1007



state 856

    inner_option_function_identifier  ->  COMMA error .   (rule 382)

    $default	reduce using rule 382 (inner_option_function_identifier)



state 857

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    inner_option_function_identifier  ->  COMMA ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 380)
    identifier  ->  ID .   (rule 387)

    OPEN_PAR	shift, and go to state 1008
    OPEN_MPAR	shift, and go to state 251

    $default	reduce using rule 387 (identifier)



state 858

    inner_option_function_identifier  ->  COMMA ass_right . inner_option_function_identifier   (rule 379)

    COMMA	shift, and go to state 682

    $default	reduce using rule 381 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 1009



state 859

    option_ari_exp  ->  COMMA error .   (rule 159)

    $default	reduce using rule 159 (option_ari_exp)



state 860

    option_ari_exp  ->  COMMA ari_exp . option_ari_exp   (rule 158)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    COMMA	shift, and go to state 685
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 160 (option_ari_exp)

    option_ari_exp	go to state 1010
    ari_operator	go to state 327



state 861

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 151)

    $default	reduce using rule 151 (array)



state 862

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp . inner_option_identifier_array_declaration   (rule 102)
    array_exp  ->  array_exp . CON array_exp   (rule 204)

    COMMA	shift, and go to state 485
    CON 	shift, and go to state 624

    COMMA	[reduce using rule 109 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 109 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1011



state 863

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral . inner_option_identifier_array_declaration   (rule 103)

    COMMA	shift, and go to state 485

    COMMA	[reduce using rule 109 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 109 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1012



state 864

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 105)

    CLOSE_MPAR	shift, and go to state 1013



state 865

    option_identifier_array_declaration  ->  identifier ASS_P ass_right inner_option_identifier_array_declaration .   (rule 101)

    $default	reduce using rule 101 (option_identifier_array_declaration)



state 866

    option_struct_declaration  ->  sign_declaration AND option_struct_declaration .   (rule 69)

    $default	reduce using rule 69 (option_struct_declaration)



state 867

    option_struct_member_exp  ->  DOT function .   (rule 455)

    $default	reduce using rule 455 (option_struct_member_exp)



state 868

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 74)
    option_struct_member_exp  ->  DOT array . option_struct_member_exp   (rule 452)

    DOT 	shift, and go to state 694
    OPEN_PAR	shift, and go to state 266
    IMPLY	shift, and go to state 695

    DOT 	[reduce using rule 450 (option_struct_member_exp)]
    IMPLY	[reduce using rule 450 (option_struct_member_exp)]
    $default	reduce using rule 450 (option_struct_member_exp)

    option_struct_member_exp	go to state 1014



state 869

    option_struct_member_exp  ->  DOT identifier . option_struct_member_exp   (rule 451)

    DOT 	shift, and go to state 694
    IMPLY	shift, and go to state 695

    DOT 	[reduce using rule 450 (option_struct_member_exp)]
    IMPLY	[reduce using rule 450 (option_struct_member_exp)]
    $default	reduce using rule 450 (option_struct_member_exp)

    option_struct_member_exp	go to state 1015



state 870

    option_struct_member_exp  ->  IMPLY function .   (rule 456)

    $default	reduce using rule 456 (option_struct_member_exp)



state 871

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 74)
    option_struct_member_exp  ->  IMPLY array . option_struct_member_exp   (rule 454)

    DOT 	shift, and go to state 694
    OPEN_PAR	shift, and go to state 266
    IMPLY	shift, and go to state 695

    DOT 	[reduce using rule 450 (option_struct_member_exp)]
    IMPLY	[reduce using rule 450 (option_struct_member_exp)]
    $default	reduce using rule 450 (option_struct_member_exp)

    option_struct_member_exp	go to state 1016



state 872

    option_struct_member_exp  ->  IMPLY identifier . option_struct_member_exp   (rule 453)

    DOT 	shift, and go to state 694
    IMPLY	shift, and go to state 695

    DOT 	[reduce using rule 450 (option_struct_member_exp)]
    IMPLY	[reduce using rule 450 (option_struct_member_exp)]
    $default	reduce using rule 450 (option_struct_member_exp)

    option_struct_member_exp	go to state 1017



state 873

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR . complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 1018



state 874

    option_exp_else_statement  ->  ELSE . ari_exp   (rule 174)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 1019
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 875

    ari_exp  ->  IF bool_exp THEN ari_exp option_exp_else_statement .   (rule 171)

    $default	reduce using rule 171 (ari_exp)



state 876

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 243)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 1020
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 877

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 245)

    CLOSE_PAR	shift, and go to state 1021



state 878

    type_cast_alg_exp  ->  simple_ari_exp ari_operator . simple_ari_exp   (rule 173)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    simple_ari_exp	go to state 1022
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 879

    casted_element  ->  MALLOC . OPEN_PAR ari_exp CLOSE_PAR   (rule 248)

    OPEN_PAR	shift, and go to state 1023



state 880

    casted_element  ->  type_cast_alg_exp .   (rule 247)

    $default	reduce using rule 247 (casted_element)



state 881

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 231)

    $default	reduce using rule 231 (type_cast)



state 882

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 237)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 1024
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 883

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 234)

    $default	reduce using rule 234 (type_cast)



state 884

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 240)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 1025
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 885

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element .   (rule 236)

    $default	reduce using rule 236 (type_cast)



state 886

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 242)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 1026
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 887

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element .   (rule 233)

    $default	reduce using rule 233 (type_cast)



state 888

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 239)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 1027
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 889

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 231)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 976
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 881
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 890

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 979
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 883
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 891

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 233)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 981
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 887
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 892

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 1028
    MUL 	shift, and go to state 898



state 893

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 229)

    $default	reduce using rule 229 (type_cast)



state 894

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 1029
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 895

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 238)

    CLOSE_PAR	shift, and go to state 1030



state 896

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 230)

    $default	reduce using rule 230 (type_cast)



state 897

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 235)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 1031
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 898

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 1032



state 899

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 227)

    $default	reduce using rule 227 (type_cast)



state 900

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 228)

    $default	reduce using rule 228 (type_cast)



state 901

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 244)

    $default	reduce using rule 244 (type_cast)



state 902

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 246)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 1033
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 903

    all_sizeof_type  ->  STRUCT STRUCT_TYPE MUL .   (rule 255)

    $default	reduce using rule 255 (all_sizeof_type)



state 904

    all_sizeof_type  ->  UNSIGNED INTDECLARATION MUL .   (rule 253)

    $default	reduce using rule 253 (all_sizeof_type)



state 905

    all_sizeof_type  ->  UNSIGNED CHARDECLARATION MUL .   (rule 254)

    $default	reduce using rule 254 (all_sizeof_type)



state 906

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  ATAN2 OPEN_PAR ari_exp COMMA ari_exp . CLOSE_PAR   (rule 295)

    CLOSE_PAR	shift, and go to state 1034
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ari_operator	go to state 327



state 907

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  POW OPEN_PAR ari_exp COMMA ari_exp . CLOSE_PAR   (rule 296)

    CLOSE_PAR	shift, and go to state 1035
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ari_operator	go to state 327



state 908

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  FMOD OPEN_PAR ari_exp COMMA ari_exp . CLOSE_PAR   (rule 297)

    CLOSE_PAR	shift, and go to state 1036
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ari_operator	go to state 327



state 909

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  MODF OPEN_PAR ari_exp COMMA ari_exp . CLOSE_PAR   (rule 298)

    CLOSE_PAR	shift, and go to state 1037
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ari_operator	go to state 327



state 910

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    math_function  ->  LDEXP OPEN_PAR ari_exp COMMA ari_exp . CLOSE_PAR   (rule 299)

    CLOSE_PAR	shift, and go to state 1038
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ari_operator	go to state 327



state 911

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    CLOSE_PAR	shift, and go to state 1039



state 912

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    CLOSE_PAR	shift, and go to state 1040



state 913

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    CLOSE_PAR	shift, and go to state 1041



state 914

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    MUL 	shift, and go to state 1003



state 915

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)

    MUL 	shift, and go to state 1042



state 916

    case_par  ->  CASE . member_in_exp COLON OPEN_PAR statement CLOSE_PAR option_case_par   (rule 414)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    member_in_exp	go to state 1043
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 917

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par . CLOSE_BPAR   (rule 413)

    CLOSE_BPAR	shift, and go to state 1044



state 918

    option_else_statement  ->  ELSE statement_bpar .   (rule 419)

    $default	reduce using rule 419 (option_else_statement)



state 919

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)

    MUL 	shift, and go to state 1004



state 920

    file_statement  ->  FOPEN OPEN_PAR ass_left COMMA strliteral CLOSE_PAR .   (rule 114)

    $default	reduce using rule 114 (file_statement)



state 921

    file_statement  ->  FGETS OPEN_PAR identifier COMMA intliteral COMMA . identifier CLOSE_PAR   (rule 115)

    OPEN_PAR	shift, and go to state 194
    ID  	shift, and go to state 195

    identifier	go to state 1045



state 922

    file_statement  ->  FPUTS OPEN_PAR identifier COMMA identifier CLOSE_PAR .   (rule 117)

    $default	reduce using rule 117 (file_statement)



state 923

    file_statement  ->  FPUTC OPEN_PAR array COMMA identifier CLOSE_PAR .   (rule 119)

    $default	reduce using rule 119 (file_statement)



state 924

    file_statement  ->  FPUTC OPEN_PAR identifier COMMA identifier CLOSE_PAR .   (rule 118)

    $default	reduce using rule 118 (file_statement)



state 925

    option_function_parameter_list  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 356)

    CLOSE_PAR	shift, and go to state 1046



state 926

    option_function_parameter_list  ->  ID MUL MUL . identifier inner_option_define_identifier   (rule 340)
    option_function_parameter_list  ->  ID MUL MUL . inner_option_define_identifier   (rule 347)

    COMMA	shift, and go to state 380
    OPEN_PAR	shift, and go to state 194
    ID  	shift, and go to state 195

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1047
    identifier	go to state 1048



state 927

    option_function_parameter_list  ->  ID MUL inner_option_define_identifier .   (rule 346)

    $default	reduce using rule 346 (option_function_parameter_list)



state 928

    option_function_parameter_list  ->  ID MUL identifier . inner_option_define_identifier   (rule 339)

    COMMA	shift, and go to state 380

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1049



state 929

    option_function_parameter_list  ->  ID identifier ARRAY . inner_option_define_identifier   (rule 341)

    COMMA	shift, and go to state 380

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1050



state 930

    option_function_parameter_list  ->  ID identifier inner_option_define_identifier .   (rule 338)

    $default	reduce using rule 338 (option_function_parameter_list)



state 931

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . identifier inner_option_define_identifier   (rule 336)
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . inner_option_define_identifier   (rule 344)

    COMMA	shift, and go to state 380
    OPEN_PAR	shift, and go to state 194
    ID  	shift, and go to state 195

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1051
    identifier	go to state 1052



state 932

    option_function_parameter_list  ->  STRUCT_TYPE MUL inner_option_define_identifier .   (rule 343)

    $default	reduce using rule 343 (option_function_parameter_list)



state 933

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 335)

    COMMA	shift, and go to state 380

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1053



state 934

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 337)

    COMMA	shift, and go to state 380

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1054



state 935

    option_function_parameter_list  ->  STRUCT_TYPE identifier inner_option_define_identifier .   (rule 334)

    $default	reduce using rule 334 (option_function_parameter_list)



state 936

    option_function_parameter_list  ->  all_type_define MUL MUL . identifier inner_option_define_identifier   (rule 355)

    OPEN_PAR	shift, and go to state 194
    ID  	shift, and go to state 195

    identifier	go to state 1055



state 937

    option_function_parameter_list  ->  all_type_define MUL inner_option_define_identifier .   (rule 354)

    $default	reduce using rule 354 (option_function_parameter_list)



state 938

    option_function_parameter_list  ->  all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 349)
    option_function_parameter_list  ->  all_type_define MUL identifier . inner_option_define_identifier   (rule 353)

    ARRAY	shift, and go to state 1056
    COMMA	shift, and go to state 380

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1057



state 939

    option_function_parameter_list  ->  all_type_define identifier ARRAY . inner_option_define_identifier   (rule 348)
    option_function_parameter_list  ->  all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 352)

    COMMA	shift, and go to state 380
    OPEN_MPAR	shift, and go to state 1058

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1059



state 940

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 350)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 351)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 1060
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 941

    option_function_parameter_list  ->  all_type_define identifier inner_option_define_identifier .   (rule 332)

    $default	reduce using rule 332 (option_function_parameter_list)



state 942

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 59)

    OPEN_BPAR	shift, and go to state 1061



state 943

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 367)

    CLOSE_PAR	shift, and go to state 1062



state 944

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY . inner_option_define_identifier   (rule 363)

    COMMA	shift, and go to state 380

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1063



state 945

    inner_option_define_identifier  ->  COMMA ID identifier inner_option_define_identifier .   (rule 360)

    $default	reduce using rule 360 (inner_option_define_identifier)



state 946

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 362)

    COMMA	shift, and go to state 380

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1064



state 947

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 364)

    COMMA	shift, and go to state 380

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1065



state 948

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier inner_option_define_identifier .   (rule 361)

    $default	reduce using rule 361 (inner_option_define_identifier)



state 949

    inner_option_define_identifier  ->  COMMA all_type_define MUL inner_option_define_identifier .   (rule 373)

    $default	reduce using rule 373 (inner_option_define_identifier)



state 950

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 366)
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . inner_option_define_identifier   (rule 372)

    ARRAY	shift, and go to state 1066
    COMMA	shift, and go to state 380

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1067



state 951

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . inner_option_define_identifier   (rule 365)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 371)

    COMMA	shift, and go to state 380
    OPEN_MPAR	shift, and go to state 1068

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1069



state 952

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 369)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 370)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 1070
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 953

    inner_option_define_identifier  ->  COMMA all_type_define identifier inner_option_define_identifier .   (rule 358)

    $default	reduce using rule 358 (inner_option_define_identifier)



state 954

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement . CLOSE_BPAR   (rule 66)

    CLOSE_BPAR	shift, and go to state 1071
    CHOP	shift, and go to state 256
    OR  	shift, and go to state 257
    PARALLEL	shift, and go to state 258
    AND 	shift, and go to state 259



state 955

    option_frame_identifier  ->  COMMA identifier option_frame_identifier .   (rule 393)

    $default	reduce using rule 393 (option_frame_identifier)



state 956

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND . OPEN_PAR statement CLOSE_PAR   (rule 56)

    OPEN_PAR	shift, and go to state 1072



state 957

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 106)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 245)

    OPEN_PAR	shift, and go to state 194
    CLOSE_PAR	shift, and go to state 1021
    MUL 	shift, and go to state 252
    ID  	shift, and go to state 253

    option_identifier_array_declaration	go to state 482
    identifier	go to state 255



state 958

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 732
    MUL 	shift, and go to state 825



state 959

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA . for_sta_control CLOSE_PAR statement_bpar   (rule 405)

    OPEN_PAR	shift, and go to state 369
    MUL 	shift, and go to state 66
    NEXT	shift, and go to state 242
    ID  	shift, and go to state 237

    $default	reduce using rule 412 (for_sta_control)

    ass_statement	go to state 1073
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 244
    point_exp	go to state 87
    identifier	go to state 95
    for_sta_control	go to state 1074
    struct_member_exp	go to state 103



state 960

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR . bool_exp CLOSE_PAR   (rule 44)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 172
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MY_TRUE	shift, and go to state 173
    MY_FALSE	shift, and go to state 174
    OPEN_PAR	shift, and go to state 175
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    NEGATION	shift, and go to state 176
    ID  	shift, and go to state 73
    STRLITERAL	shift, and go to state 177
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 178
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    bool_exp	go to state 1075
    prime_bool_exp	go to state 180
    identifier	go to state 153
    strliteral	go to state 181
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 961

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR . type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 147)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50

    type_define	go to state 1076



state 962

    inner_option_list_value  ->  COMMA error .   (rule 218)

    $default	reduce using rule 218 (inner_option_list_value)



state 963

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    inner_option_list_value  ->  COMMA ari_exp . inner_option_list_value   (rule 214)

    COMMA	shift, and go to state 808
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 217 (inner_option_list_value)

    ari_operator	go to state 327
    inner_option_list_value	go to state 1077



state 964

    array_exp  ->  array_exp . CON array_exp   (rule 204)
    inner_option_list_value  ->  COMMA array_exp . inner_option_list_value   (rule 216)

    COMMA	shift, and go to state 808
    CON 	shift, and go to state 624

    $default	reduce using rule 217 (inner_option_list_value)

    inner_option_list_value	go to state 1078



state 965

    inner_option_list_value  ->  COMMA strliteral . inner_option_list_value   (rule 215)

    COMMA	shift, and go to state 808

    $default	reduce using rule 217 (inner_option_list_value)

    inner_option_list_value	go to state 1079



state 966

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR .   (rule 211)

    $default	reduce using rule 211 (option_struct_list_value)



state 967

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR .   (rule 213)

    $default	reduce using rule 213 (option_struct_list_value)



state 968

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR .   (rule 212)

    $default	reduce using rule 212 (option_struct_list_value)



state 969

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR .   (rule 208)

    $default	reduce using rule 208 (option_list_value)



state 970

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR .   (rule 210)

    $default	reduce using rule 210 (option_list_value)



state 971

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR .   (rule 209)

    $default	reduce using rule 209 (option_list_value)



state 972

    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 187)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    STRUCT	shift, and go to state 277
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 793
    CHARDECLARATION	shift, and go to state 794
    VOIDDECLARATION	shift, and go to state 280
    FLOATDECLARATION	shift, and go to state 795
    OPEN_PAR	shift, and go to state 282
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    UNSIGNED	shift, and go to state 796
    SIGNED	shift, and go to state 284
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 285
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 286
    point_exp	go to state 287
    ari_exp	go to state 288
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 289
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 290
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 291



state 973

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift CLOSE_PAR .   (rule 150)

    $default	reduce using rule 150 (rightaddrshift)



state 974

    option_output  ->  COMMA ass_right option_output .   (rule 424)

    $default	reduce using rule 424 (option_output)



state 975

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 187)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    STRUCT	shift, and go to state 277
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 278
    CHARDECLARATION	shift, and go to state 279
    VOIDDECLARATION	shift, and go to state 280
    FLOATDECLARATION	shift, and go to state 281
    OPEN_PAR	shift, and go to state 1080
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    UNSIGNED	shift, and go to state 283
    SIGNED	shift, and go to state 284
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 285
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 286
    point_exp	go to state 287
    ari_exp	go to state 288
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 289
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 290
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 291



state 976

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    identifier  ->  ID .   (rule 387)

    OPEN_PAR	shift, and go to state 250
    CLOSE_PAR	shift, and go to state 1081
    OPEN_MPAR	shift, and go to state 251

    CLOSE_PAR	[reduce using rule 387 (identifier)]
    $default	reduce using rule 387 (identifier)



state 977

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    intliteral  ->  INTLITERAL .   (rule 390)

    CLOSE_PAR	shift, and go to state 1082

    CLOSE_PAR	[reduce using rule 390 (intliteral)]
    $default	reduce using rule 390 (intliteral)



state 978

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 187)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    STRUCT	shift, and go to state 277
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 278
    CHARDECLARATION	shift, and go to state 279
    VOIDDECLARATION	shift, and go to state 280
    FLOATDECLARATION	shift, and go to state 281
    OPEN_PAR	shift, and go to state 1083
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    UNSIGNED	shift, and go to state 283
    SIGNED	shift, and go to state 284
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 285
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 286
    point_exp	go to state 287
    ari_exp	go to state 288
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 289
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 290
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 291



state 979

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    identifier  ->  ID .   (rule 387)

    OPEN_PAR	shift, and go to state 250
    CLOSE_PAR	shift, and go to state 1084
    OPEN_MPAR	shift, and go to state 251

    CLOSE_PAR	[reduce using rule 387 (identifier)]
    $default	reduce using rule 387 (identifier)



state 980

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    intliteral  ->  INTLITERAL .   (rule 390)

    CLOSE_PAR	shift, and go to state 1085

    CLOSE_PAR	[reduce using rule 390 (intliteral)]
    $default	reduce using rule 390 (intliteral)



state 981

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    identifier  ->  ID .   (rule 387)

    OPEN_PAR	shift, and go to state 250
    CLOSE_PAR	shift, and go to state 1086
    OPEN_MPAR	shift, and go to state 251

    CLOSE_PAR	[reduce using rule 387 (identifier)]
    $default	reduce using rule 387 (identifier)



state 982

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    intliteral  ->  INTLITERAL .   (rule 390)

    CLOSE_PAR	shift, and go to state 1087

    CLOSE_PAR	[reduce using rule 390 (intliteral)]
    $default	reduce using rule 390 (intliteral)



state 983

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 1088
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 1029
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 984

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 235)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 1089
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 1090
    INTLITERAL	shift, and go to state 1091
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 1031
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 985

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 90)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 586
    UNSIGNED	shift, and go to state 458
    ID  	shift, and go to state 587
    STRUCT_TYPE	shift, and go to state 588

    $default	reduce using rule 357 (option_function_parameter_list)

    type_define	go to state 459
    sign_type_define	go to state 461
    all_type_define	go to state 589
    option_function_parameter_list	go to state 1092



state 986

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 151)

    CLOSE_MPAR	shift, and go to state 1093



state 987

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 89)

    CLOSE_PAR	shift, and go to state 1094



state 988

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 164)

    CLOSE_MPAR	shift, and go to state 1095



state 989

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp .   (rule 445)

    $default	reduce using rule 445 (struct_member_exp)



state 990

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp .   (rule 441)

    $default	reduce using rule 441 (struct_member_exp)



state 991

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement . CLOSE_MPAR   (rule 55)

    CLOSE_MPAR	shift, and go to state 1096
    CHOP	shift, and go to state 256
    OR  	shift, and go to state 257
    PARALLEL	shift, and go to state 258
    AND 	shift, and go to state 259



state 992

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar .   (rule 57)

    $default	reduce using rule 57 (statement)



state 993

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 60)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    EXTERN	shift, and go to state 62
    UNSIGNED	shift, and go to state 63
    SIGNED	shift, and go to state 64
    FREE	shift, and go to state 65
    MUL 	shift, and go to state 66
    NEXT	shift, and go to state 67
    LENGTH	shift, and go to state 68
    REQUEST	shift, and go to state 69
    FINAL	shift, and go to state 70
    KEEP	shift, and go to state 71
    ALWAYS	shift, and go to state 72
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 74

    statement	go to state 1097
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 95
    while_statement	go to state 96
    for_statement	go to state 97
    extend_for_statement	go to state 98
    switch_statement	go to state 99
    if_statement	go to state 100
    output_statement	go to state 101
    input_statement	go to state 102
    struct_member_exp	go to state 103



state 994

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 61)

    OPEN_BPAR	shift, and go to state 1098



state 995

    String_Function_cat  ->  STRFUNCCAT OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR .   (rule 269)

    $default	reduce using rule 269 (String_Function_cat)



state 996

    String_Function_cmp  ->  STRFUNCCMP OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR .   (rule 270)

    $default	reduce using rule 270 (String_Function_cmp)



state 997

    String_Function_cpy  ->  STRFUNCCPY OPEN_PAR str_func_parameter COMMA str_func_parameter CLOSE_PAR .   (rule 271)

    $default	reduce using rule 271 (String_Function_cpy)



state 998

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    COMMA	shift, and go to state 685
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 160 (option_ari_exp)

    option_ari_exp	go to state 1099
    ari_operator	go to state 327



state 999

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp .   (rule 165)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ADD 	[reduce using rule 165 (point_exp)]
    SUB 	[reduce using rule 165 (point_exp)]
    $default	reduce using rule 165 (point_exp)

    ari_operator	go to state 327



state 1000

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    OPEN_PAR	shift, and go to state 1100
    ID  	shift, and go to state 1101
    INTLITERAL	shift, and go to state 1102



state 1001

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    OPEN_PAR	shift, and go to state 1103
    ID  	shift, and go to state 1104
    INTLITERAL	shift, and go to state 1105



state 1002

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    ID  	shift, and go to state 1106
    INTLITERAL	shift, and go to state 1107



state 1003

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    CLOSE_PAR	shift, and go to state 1108



state 1004

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)

    CLOSE_PAR	shift, and go to state 1109



state 1005

    option_input  ->  COMMA array option_input .   (rule 432)

    $default	reduce using rule 432 (option_input)



state 1006

    option_input  ->  COMMA identifier option_input .   (rule 431)

    $default	reduce using rule 431 (option_input)



state 1007

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 72)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 376)

    COMMA	shift, and go to state 682

    COMMA	[reduce using rule 72 (function)]
    CLOSE_PAR	reduce using rule 72 (function)
    CLOSE_PAR	[reduce using rule 381 (inner_option_function_identifier)]
    $default	reduce using rule 72 (function)

    inner_option_function_identifier	go to state 1110



state 1008

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 72)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 380)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 400
    OPEN_BPAR	shift, and go to state 401
    OPEN_MPAR	shift, and go to state 402
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 477
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 403
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 478
    STRLITERAL	shift, and go to state 177
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    $default	reduce using rule 377 (option_function_identifier)

    function	go to state 143
    file_statement	go to state 82
    ass_right	go to state 479
    rightaddrshift	go to state 405
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 406
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    array_exp	go to state 407
    option_list_value	go to state 408
    option_struct_list_value	go to state 409
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    option_function_identifier	go to state 1111
    identifier	go to state 153
    strliteral	go to state 410
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1009

    inner_option_function_identifier  ->  COMMA ass_right inner_option_function_identifier .   (rule 379)

    $default	reduce using rule 379 (inner_option_function_identifier)



state 1010

    option_ari_exp  ->  COMMA ari_exp option_ari_exp .   (rule 158)

    $default	reduce using rule 158 (option_ari_exp)



state 1011

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration .   (rule 102)

    $default	reduce using rule 102 (option_identifier_array_declaration)



state 1012

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration .   (rule 103)

    $default	reduce using rule 103 (option_identifier_array_declaration)



state 1013

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . inner_option_identifier_array_declaration   (rule 100)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P strliteral inner_option_identifier_array_declaration   (rule 105)

    COMMA	shift, and go to state 485
    ASS_P	shift, and go to state 1112

    COMMA	[reduce using rule 109 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 109 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1113



state 1014

    option_struct_member_exp  ->  DOT array option_struct_member_exp .   (rule 452)

    $default	reduce using rule 452 (option_struct_member_exp)



state 1015

    option_struct_member_exp  ->  DOT identifier option_struct_member_exp .   (rule 451)

    $default	reduce using rule 451 (option_struct_member_exp)



state 1016

    option_struct_member_exp  ->  IMPLY array option_struct_member_exp .   (rule 454)

    $default	reduce using rule 454 (option_struct_member_exp)



state 1017

    option_struct_member_exp  ->  IMPLY identifier option_struct_member_exp .   (rule 453)

    $default	reduce using rule 453 (option_struct_member_exp)



state 1018

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition . CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CLOSE_BPAR	shift, and go to state 1114
    CHOP	shift, and go to state 165
    IFF 	shift, and go to state 166
    PROPIMPLY	shift, and go to state 167
    OR  	shift, and go to state 168
    AND 	shift, and go to state 169
    CHOPSTAR	shift, and go to state 170



state 1019

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    option_exp_else_statement  ->  ELSE ari_exp .   (rule 174)

    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ADD 	[reduce using rule 174 (option_exp_else_statement)]
    SUB 	[reduce using rule 174 (option_exp_else_statement)]
    $default	reduce using rule 174 (option_exp_else_statement)

    ari_operator	go to state 327



state 1020

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 243)

    $default	reduce using rule 243 (type_cast)



state 1021

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 245)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 1115
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1022

    type_cast_alg_exp  ->  simple_ari_exp ari_operator simple_ari_exp .   (rule 173)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 177)

    INTER_OR	shift, and go to state 328
    CON 	shift, and go to state 329
    ADDRESS	shift, and go to state 330
    LST 	shift, and go to state 337
    RST 	shift, and go to state 338
    MUL 	shift, and go to state 339
    DIV 	shift, and go to state 340
    MOD 	shift, and go to state 341

    INTER_OR	[reduce using rule 173 (type_cast_alg_exp)]
    CON 	[reduce using rule 173 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 173 (type_cast_alg_exp)]
    LST 	[reduce using rule 173 (type_cast_alg_exp)]
    RST 	[reduce using rule 173 (type_cast_alg_exp)]
    MUL 	[reduce using rule 173 (type_cast_alg_exp)]
    DIV 	[reduce using rule 173 (type_cast_alg_exp)]
    MOD 	[reduce using rule 173 (type_cast_alg_exp)]
    $default	reduce using rule 173 (type_cast_alg_exp)

    bi_operator	go to state 342



state 1023

    casted_element  ->  MALLOC OPEN_PAR . ari_exp CLOSE_PAR   (rule 248)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 1116
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1024

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 237)

    $default	reduce using rule 237 (type_cast)



state 1025

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 240)

    $default	reduce using rule 240 (type_cast)



state 1026

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 242)

    $default	reduce using rule 242 (type_cast)



state 1027

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 239)

    $default	reduce using rule 239 (type_cast)



state 1028

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 235)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 1090
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 1031
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1029

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 232)

    $default	reduce using rule 232 (type_cast)



state 1030

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 238)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 1117
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1031

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 235)

    $default	reduce using rule 235 (type_cast)



state 1032

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 241)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 1118
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1033

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 246)

    $default	reduce using rule 246 (type_cast)



state 1034

    math_function  ->  ATAN2 OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR .   (rule 295)

    $default	reduce using rule 295 (math_function)



state 1035

    math_function  ->  POW OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR .   (rule 296)

    $default	reduce using rule 296 (math_function)



state 1036

    math_function  ->  FMOD OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR .   (rule 297)

    $default	reduce using rule 297 (math_function)



state 1037

    math_function  ->  MODF OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR .   (rule 298)

    $default	reduce using rule 298 (math_function)



state 1038

    math_function  ->  LDEXP OPEN_PAR ari_exp COMMA ari_exp CLOSE_PAR .   (rule 299)

    $default	reduce using rule 299 (math_function)



state 1039

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    ID  	shift, and go to state 1101



state 1040

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    ID  	shift, and go to state 1104



state 1041

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    ID  	shift, and go to state 1106



state 1042

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)

    CLOSE_PAR	shift, and go to state 1119



state 1043

    case_par  ->  CASE member_in_exp . COLON OPEN_PAR statement CLOSE_PAR option_case_par   (rule 414)

    COLON	shift, and go to state 1120



state 1044

    switch_statement  ->  SWITCH OPEN_PAR member_in_exp CLOSE_PAR OPEN_BPAR case_par CLOSE_BPAR .   (rule 413)

    $default	reduce using rule 413 (switch_statement)



state 1045

    file_statement  ->  FGETS OPEN_PAR identifier COMMA intliteral COMMA identifier . CLOSE_PAR   (rule 115)

    CLOSE_PAR	shift, and go to state 1121



state 1046

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 356)

    OPEN_PAR	shift, and go to state 1122



state 1047

    option_function_parameter_list  ->  ID MUL MUL inner_option_define_identifier .   (rule 347)

    $default	reduce using rule 347 (option_function_parameter_list)



state 1048

    option_function_parameter_list  ->  ID MUL MUL identifier . inner_option_define_identifier   (rule 340)

    COMMA	shift, and go to state 380

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1123



state 1049

    option_function_parameter_list  ->  ID MUL identifier inner_option_define_identifier .   (rule 339)

    $default	reduce using rule 339 (option_function_parameter_list)



state 1050

    option_function_parameter_list  ->  ID identifier ARRAY inner_option_define_identifier .   (rule 341)

    $default	reduce using rule 341 (option_function_parameter_list)



state 1051

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL inner_option_define_identifier .   (rule 344)

    $default	reduce using rule 344 (option_function_parameter_list)



state 1052

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier . inner_option_define_identifier   (rule 336)

    COMMA	shift, and go to state 380

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1124



state 1053

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 335)

    $default	reduce using rule 335 (option_function_parameter_list)



state 1054

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 337)

    $default	reduce using rule 337 (option_function_parameter_list)



state 1055

    option_function_parameter_list  ->  all_type_define MUL MUL identifier . inner_option_define_identifier   (rule 355)

    COMMA	shift, and go to state 380

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1125



state 1056

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 349)

    COMMA	shift, and go to state 380

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1126



state 1057

    option_function_parameter_list  ->  all_type_define MUL identifier inner_option_define_identifier .   (rule 353)

    $default	reduce using rule 353 (option_function_parameter_list)



state 1058

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 352)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 1127
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1059

    option_function_parameter_list  ->  all_type_define identifier ARRAY inner_option_define_identifier .   (rule 348)

    $default	reduce using rule 348 (option_function_parameter_list)



state 1060

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 350)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 351)

    COMMA	shift, and go to state 1128
    CLOSE_MPAR	shift, and go to state 1129
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ari_operator	go to state 327



state 1061

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 59)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    EXTERN	shift, and go to state 62
    UNSIGNED	shift, and go to state 63
    SIGNED	shift, and go to state 64
    FREE	shift, and go to state 65
    MUL 	shift, and go to state 66
    NEXT	shift, and go to state 67
    LENGTH	shift, and go to state 68
    REQUEST	shift, and go to state 69
    FINAL	shift, and go to state 70
    KEEP	shift, and go to state 71
    ALWAYS	shift, and go to state 72
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 74

    $default	reduce using rule 71 (empty_statement)

    statement	go to state 1130
    empty_statement	go to state 1131
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 95
    while_statement	go to state 96
    for_statement	go to state 97
    extend_for_statement	go to state 98
    switch_statement	go to state 99
    if_statement	go to state 100
    output_statement	go to state 101
    input_statement	go to state 102
    struct_member_exp	go to state 103



state 1062

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 367)

    OPEN_PAR	shift, and go to state 1132



state 1063

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY inner_option_define_identifier .   (rule 363)

    $default	reduce using rule 363 (inner_option_define_identifier)



state 1064

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 362)

    $default	reduce using rule 362 (inner_option_define_identifier)



state 1065

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 364)

    $default	reduce using rule 364 (inner_option_define_identifier)



state 1066

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 366)

    COMMA	shift, and go to state 380

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1133



state 1067

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier inner_option_define_identifier .   (rule 372)

    $default	reduce using rule 372 (inner_option_define_identifier)



state 1068

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 371)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 1134
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1069

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY inner_option_define_identifier .   (rule 365)

    $default	reduce using rule 365 (inner_option_define_identifier)



state 1070

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 369)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 370)

    COMMA	shift, and go to state 1135
    CLOSE_MPAR	shift, and go to state 1136
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ari_operator	go to state 327



state 1071

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR .   (rule 66)

    $default	reduce using rule 66 (statement)



state 1072

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR . statement CLOSE_PAR   (rule 56)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    EXTERN	shift, and go to state 62
    UNSIGNED	shift, and go to state 63
    SIGNED	shift, and go to state 64
    FREE	shift, and go to state 65
    MUL 	shift, and go to state 66
    NEXT	shift, and go to state 67
    LENGTH	shift, and go to state 68
    REQUEST	shift, and go to state 69
    FINAL	shift, and go to state 70
    KEEP	shift, and go to state 71
    ALWAYS	shift, and go to state 72
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 74

    statement	go to state 1137
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 95
    while_statement	go to state 96
    for_statement	go to state 97
    extend_for_statement	go to state 98
    switch_statement	go to state 99
    if_statement	go to state 100
    output_statement	go to state 101
    input_statement	go to state 102
    struct_member_exp	go to state 103



state 1073

    for_sta_control  ->  ass_statement .   (rule 411)

    $default	reduce using rule 411 (for_sta_control)



state 1074

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control . CLOSE_PAR statement_bpar   (rule 405)

    CLOSE_PAR	shift, and go to state 1138



state 1075

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp . CLOSE_PAR   (rule 44)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 305)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 306)

    CLOSE_PAR	shift, and go to state 1139
    OR  	shift, and go to state 360
    AND 	shift, and go to state 361



state 1076

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 147)

    CLOSE_PAR	shift, and go to state 1140



state 1077

    inner_option_list_value  ->  COMMA ari_exp inner_option_list_value .   (rule 214)

    $default	reduce using rule 214 (inner_option_list_value)



state 1078

    inner_option_list_value  ->  COMMA array_exp inner_option_list_value .   (rule 216)

    $default	reduce using rule 216 (inner_option_list_value)



state 1079

    inner_option_list_value  ->  COMMA strliteral inner_option_list_value .   (rule 215)

    $default	reduce using rule 215 (inner_option_list_value)



state 1080

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 187)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    STRUCT	shift, and go to state 277
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 1141
    CHARDECLARATION	shift, and go to state 1142
    VOIDDECLARATION	shift, and go to state 280
    FLOATDECLARATION	shift, and go to state 524
    OPEN_PAR	shift, and go to state 282
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    UNSIGNED	shift, and go to state 1143
    SIGNED	shift, and go to state 284
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 285
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 286
    point_exp	go to state 287
    ari_exp	go to state 288
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 289
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 290
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 291



state 1081

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    OPEN_MPAR	shift, and go to state 1144



state 1082

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    OPEN_MPAR	shift, and go to state 1145



state 1083

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 187)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    STRUCT	shift, and go to state 277
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 1146
    CHARDECLARATION	shift, and go to state 1147
    VOIDDECLARATION	shift, and go to state 280
    FLOATDECLARATION	shift, and go to state 524
    OPEN_PAR	shift, and go to state 282
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    UNSIGNED	shift, and go to state 1148
    SIGNED	shift, and go to state 284
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 285
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 286
    point_exp	go to state 287
    ari_exp	go to state 288
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 289
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 290
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 291



state 1084

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    OPEN_MPAR	shift, and go to state 1149



state 1085

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    OPEN_MPAR	shift, and go to state 1150



state 1086

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    OPEN_MPAR	shift, and go to state 1151



state 1087

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    OPEN_MPAR	shift, and go to state 1152



state 1088

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    identifier  ->  ID .   (rule 387)

    OPEN_PAR	shift, and go to state 250
    CLOSE_PAR	shift, and go to state 1153
    OPEN_MPAR	shift, and go to state 251

    CLOSE_PAR	[reduce using rule 387 (identifier)]
    $default	reduce using rule 387 (identifier)



state 1089

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 187)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    STRUCT	shift, and go to state 277
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 278
    CHARDECLARATION	shift, and go to state 279
    VOIDDECLARATION	shift, and go to state 280
    FLOATDECLARATION	shift, and go to state 281
    OPEN_PAR	shift, and go to state 1154
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    UNSIGNED	shift, and go to state 283
    SIGNED	shift, and go to state 284
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 285
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 286
    point_exp	go to state 287
    ari_exp	go to state 288
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 289
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 290
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 291



state 1090

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    identifier  ->  ID .   (rule 387)

    OPEN_PAR	shift, and go to state 250
    CLOSE_PAR	shift, and go to state 1155
    OPEN_MPAR	shift, and go to state 251

    CLOSE_PAR	[reduce using rule 387 (identifier)]
    $default	reduce using rule 387 (identifier)



state 1091

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    intliteral  ->  INTLITERAL .   (rule 390)

    CLOSE_PAR	shift, and go to state 1156

    CLOSE_PAR	[reduce using rule 390 (intliteral)]
    $default	reduce using rule 390 (intliteral)



state 1092

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 90)

    CLOSE_PAR	shift, and go to state 1157



state 1093

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 151)

    CLOSE_PAR	shift, and go to state 1158

    CLOSE_PAR	[reduce using rule 151 (array)]
    $default	reduce using rule 151 (array)



state 1094

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 89)

    $default	reduce using rule 89 (declaration)



state 1095

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 164)

    $default	reduce using rule 164 (point_exp)



state 1096

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR .   (rule 55)

    $default	reduce using rule 55 (statement)



state 1097

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 60)

    CLOSE_BPAR	shift, and go to state 1159
    CHOP	shift, and go to state 256
    OR  	shift, and go to state 257
    PARALLEL	shift, and go to state 258
    AND 	shift, and go to state 259



state 1098

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 61)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    EXTERN	shift, and go to state 62
    UNSIGNED	shift, and go to state 63
    SIGNED	shift, and go to state 64
    FREE	shift, and go to state 65
    MUL 	shift, and go to state 66
    NEXT	shift, and go to state 67
    LENGTH	shift, and go to state 68
    REQUEST	shift, and go to state 69
    FINAL	shift, and go to state 70
    KEEP	shift, and go to state 71
    ALWAYS	shift, and go to state 72
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 74

    $default	reduce using rule 71 (empty_statement)

    statement	go to state 1130
    empty_statement	go to state 1160
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 95
    while_statement	go to state 96
    for_statement	go to state 97
    extend_for_statement	go to state 98
    switch_statement	go to state 99
    if_statement	go to state 100
    output_statement	go to state 101
    input_statement	go to state 102
    struct_member_exp	go to state 103



state 1099

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)

    CLOSE_MPAR	shift, and go to state 1161



state 1100

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    OPEN_PAR	shift, and go to state 1162



state 1101

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    CLOSE_PAR	shift, and go to state 1081



state 1102

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    CLOSE_PAR	shift, and go to state 1082



state 1103

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    OPEN_PAR	shift, and go to state 1163



state 1104

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    CLOSE_PAR	shift, and go to state 1084



state 1105

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1085



state 1106

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    CLOSE_PAR	shift, and go to state 1086



state 1107

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    CLOSE_PAR	shift, and go to state 1087



state 1108

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    ID  	shift, and go to state 1164



state 1109

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)

    OPEN_PAR	shift, and go to state 1165
    ID  	shift, and go to state 1166
    INTLITERAL	shift, and go to state 1167



state 1110

    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 376)

    $default	reduce using rule 376 (option_function_identifier)



state 1111

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 72)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 380)

    CLOSE_PAR	shift, and go to state 1168



state 1112

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . array_exp inner_option_identifier_array_declaration   (rule 104)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . strliteral inner_option_identifier_array_declaration   (rule 105)

    OPEN_PAR	shift, and go to state 819
    OPEN_BPAR	shift, and go to state 401
    OPEN_MPAR	shift, and go to state 402
    STRLITERAL	shift, and go to state 177

    array_exp	go to state 1169
    option_list_value	go to state 408
    option_struct_list_value	go to state 409
    strliteral	go to state 1170



state 1113

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration .   (rule 100)

    $default	reduce using rule 100 (option_identifier_array_declaration)



state 1114

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR .   (rule 23)

    $default	reduce using rule 23 (complexProposition)



state 1115

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 245)

    $default	reduce using rule 245 (type_cast)



state 1116

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    casted_element  ->  MALLOC OPEN_PAR ari_exp . CLOSE_PAR   (rule 248)

    CLOSE_PAR	shift, and go to state 1171
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ari_operator	go to state 327



state 1117

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 238)

    $default	reduce using rule 238 (type_cast)



state 1118

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 241)

    $default	reduce using rule 241 (type_cast)



state 1119

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)

    ID  	shift, and go to state 1166



state 1120

    case_par  ->  CASE member_in_exp COLON . OPEN_PAR statement CLOSE_PAR option_case_par   (rule 414)

    OPEN_PAR	shift, and go to state 1172



state 1121

    file_statement  ->  FGETS OPEN_PAR identifier COMMA intliteral COMMA identifier CLOSE_PAR .   (rule 115)

    $default	reduce using rule 115 (file_statement)



state 1122

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 356)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 586
    UNSIGNED	shift, and go to state 458
    ID  	shift, and go to state 587
    STRUCT_TYPE	shift, and go to state 588

    $default	reduce using rule 357 (option_function_parameter_list)

    type_define	go to state 459
    sign_type_define	go to state 461
    all_type_define	go to state 589
    option_function_parameter_list	go to state 1173



state 1123

    option_function_parameter_list  ->  ID MUL MUL identifier inner_option_define_identifier .   (rule 340)

    $default	reduce using rule 340 (option_function_parameter_list)



state 1124

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier inner_option_define_identifier .   (rule 336)

    $default	reduce using rule 336 (option_function_parameter_list)



state 1125

    option_function_parameter_list  ->  all_type_define MUL MUL identifier inner_option_define_identifier .   (rule 355)

    $default	reduce using rule 355 (option_function_parameter_list)



state 1126

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 349)

    $default	reduce using rule 349 (option_function_parameter_list)



state 1127

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 352)

    CLOSE_MPAR	shift, and go to state 1174
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ari_operator	go to state 327



state 1128

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 351)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 1175
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1129

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 350)

    COMMA	shift, and go to state 380

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1176



state 1130

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    empty_statement  ->  statement .   (rule 70)

    CHOP	shift, and go to state 256
    OR  	shift, and go to state 257
    PARALLEL	shift, and go to state 258
    AND 	shift, and go to state 259

    $default	reduce using rule 70 (empty_statement)



state 1131

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 59)

    CLOSE_BPAR	shift, and go to state 1177



state 1132

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 367)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 586
    UNSIGNED	shift, and go to state 458
    ID  	shift, and go to state 587
    STRUCT_TYPE	shift, and go to state 588

    $default	reduce using rule 357 (option_function_parameter_list)

    type_define	go to state 459
    sign_type_define	go to state 461
    all_type_define	go to state 589
    option_function_parameter_list	go to state 1178



state 1133

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 366)

    $default	reduce using rule 366 (inner_option_define_identifier)



state 1134

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 371)

    CLOSE_MPAR	shift, and go to state 1179
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ari_operator	go to state 327



state 1135

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 370)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 1180
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1136

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 369)

    COMMA	shift, and go to state 380

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1181



state 1137

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement . CLOSE_PAR   (rule 56)

    CLOSE_PAR	shift, and go to state 1182
    CHOP	shift, and go to state 256
    OR  	shift, and go to state 257
    PARALLEL	shift, and go to state 258
    AND 	shift, and go to state 259



state 1138

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR . statement_bpar   (rule 405)

    error	shift, and go to state 396
    OPEN_BPAR	shift, and go to state 397

    statement_bpar	go to state 1183



state 1139

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR .   (rule 44)

    $default	reduce using rule 44 (statement)



state 1140

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 147)

    OPEN_PAR	shift, and go to state 1184



state 1141

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 515
    MUL 	shift, and go to state 1185



state 1142

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 517
    MUL 	shift, and go to state 1186



state 1143

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)

    INTDECLARATION	shift, and go to state 728
    CHARDECLARATION	shift, and go to state 1187



state 1144

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 1188
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1145

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 131)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 1189
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1146

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 515
    MUL 	shift, and go to state 1190



state 1147

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 517
    MUL 	shift, and go to state 1191



state 1148

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)

    INTDECLARATION	shift, and go to state 728
    CHARDECLARATION	shift, and go to state 1192



state 1149

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 155)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 1193
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1150

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 1194
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1151

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 154)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 1195
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1152

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 132)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 1196
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1153

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    OPEN_MPAR	shift, and go to state 1197



state 1154

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 164)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 167)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 187)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 223)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 227)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 228)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 233)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 236)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 237)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 239)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 240)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 242)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 243)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 244)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 245)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 246)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 388)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 441)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 445)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 449)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    STRUCT	shift, and go to state 277
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    INTDECLARATION	shift, and go to state 1198
    CHARDECLARATION	shift, and go to state 1199
    VOIDDECLARATION	shift, and go to state 280
    FLOATDECLARATION	shift, and go to state 524
    OPEN_PAR	shift, and go to state 282
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    UNSIGNED	shift, and go to state 1200
    SIGNED	shift, and go to state 284
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 285
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 286
    point_exp	go to state 287
    ari_exp	go to state 288
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 289
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 290
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 291



state 1155

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)

    OPEN_MPAR	shift, and go to state 1201



state 1156

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    OPEN_MPAR	shift, and go to state 1202



state 1157

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 90)

    $default	reduce using rule 90 (declaration)



state 1158

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)

    OPEN_PAR	shift, and go to state 1203



state 1159

    statement  ->  FUNCTION ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 60)

    $default	reduce using rule 60 (statement)



state 1160

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 61)

    CLOSE_BPAR	shift, and go to state 1204



state 1161

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)

    CLOSE_PAR	shift, and go to state 1158



state 1162

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    INTDECLARATION	shift, and go to state 1205
    CHARDECLARATION	shift, and go to state 1206
    UNSIGNED	shift, and go to state 1207



state 1163

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    INTDECLARATION	shift, and go to state 1208
    CHARDECLARATION	shift, and go to state 1209
    UNSIGNED	shift, and go to state 1210



state 1164

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    CLOSE_PAR	shift, and go to state 1153



state 1165

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    OPEN_PAR	shift, and go to state 1211



state 1166

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)

    CLOSE_PAR	shift, and go to state 1155



state 1167

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    CLOSE_PAR	shift, and go to state 1156



state 1168

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 72)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 380)

    COMMA	shift, and go to state 682

    COMMA	[reduce using rule 72 (function)]
    CLOSE_PAR	reduce using rule 72 (function)
    CLOSE_PAR	[reduce using rule 381 (inner_option_function_identifier)]
    $default	reduce using rule 72 (function)

    inner_option_function_identifier	go to state 1212



state 1169

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp . inner_option_identifier_array_declaration   (rule 104)
    array_exp  ->  array_exp . CON array_exp   (rule 204)

    COMMA	shift, and go to state 485
    CON 	shift, and go to state 624

    COMMA	[reduce using rule 109 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 109 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1213



state 1170

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral . inner_option_identifier_array_declaration   (rule 105)

    COMMA	shift, and go to state 485

    COMMA	[reduce using rule 109 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 109 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1214



state 1171

    casted_element  ->  MALLOC OPEN_PAR ari_exp CLOSE_PAR .   (rule 248)

    $default	reduce using rule 248 (casted_element)



state 1172

    case_par  ->  CASE member_in_exp COLON OPEN_PAR . statement CLOSE_PAR option_case_par   (rule 414)

    SWITCH	shift, and go to state 22
    IF  	shift, and go to state 23
    EMPTY	shift, and go to state 24
    AWAIT	shift, and go to state 25
    STRUCT	shift, and go to state 26
    UNION	shift, and go to state 27
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FILEDECLARATION	shift, and go to state 30
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    MORE	shift, and go to state 35
    DEFINE	shift, and go to state 36
    EXIST	shift, and go to state 37
    FRAME	shift, and go to state 38
    FOR 	shift, and go to state 39
    WHILE	shift, and go to state 40
    TRUE	shift, and go to state 41
    FALSE	shift, and go to state 42
    REPEAT	shift, and go to state 43
    DISPLAY	shift, and go to state 44
    SKIP	shift, and go to state 45
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 51
    OPEN_BPAR	shift, and go to state 52
    FUNCTION	shift, and go to state 53
    PROCESS	shift, and go to state 54
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SYSTEM	shift, and go to state 61
    EXTERN	shift, and go to state 62
    UNSIGNED	shift, and go to state 63
    SIGNED	shift, and go to state 64
    FREE	shift, and go to state 65
    MUL 	shift, and go to state 66
    NEXT	shift, and go to state 67
    LENGTH	shift, and go to state 68
    REQUEST	shift, and go to state 69
    FINAL	shift, and go to state 70
    KEEP	shift, and go to state 71
    ALWAYS	shift, and go to state 72
    ID  	shift, and go to state 73
    STRUCT_TYPE	shift, and go to state 74

    statement	go to state 1215
    function	go to state 76
    struct_define_statement	go to state 77
    struct_identifier	go to state 78
    sign_declaration	go to state 79
    declaration	go to state 80
    type_define	go to state 81
    file_statement	go to state 82
    ass_statement	go to state 83
    ass_left	go to state 84
    leftaddrshift	go to state 85
    array	go to state 86
    point_exp	go to state 87
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    identifier	go to state 95
    while_statement	go to state 96
    for_statement	go to state 97
    extend_for_statement	go to state 98
    switch_statement	go to state 99
    if_statement	go to state 100
    output_statement	go to state 101
    input_statement	go to state 102
    struct_member_exp	go to state 103



state 1173

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 356)

    CLOSE_PAR	shift, and go to state 1216



state 1174

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 352)

    COMMA	shift, and go to state 380

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1217



state 1175

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 351)

    CLOSE_MPAR	shift, and go to state 1218
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ari_operator	go to state 327



state 1176

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 350)

    $default	reduce using rule 350 (option_function_parameter_list)



state 1177

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 59)

    $default	reduce using rule 59 (statement)



state 1178

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 367)

    CLOSE_PAR	shift, and go to state 1219



state 1179

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 371)

    COMMA	shift, and go to state 380

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1220



state 1180

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 370)

    CLOSE_MPAR	shift, and go to state 1221
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    ari_operator	go to state 327



state 1181

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 369)

    $default	reduce using rule 369 (inner_option_define_identifier)



state 1182

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR .   (rule 56)

    $default	reduce using rule 56 (statement)



state 1183

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar .   (rule 405)

    $default	reduce using rule 405 (extend_for_statement)



state 1184

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR function   (rule 147)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 586
    UNSIGNED	shift, and go to state 458
    ID  	shift, and go to state 587
    STRUCT_TYPE	shift, and go to state 588

    $default	reduce using rule 357 (option_function_parameter_list)

    type_define	go to state 459
    sign_type_define	go to state 461
    all_type_define	go to state 589
    option_function_parameter_list	go to state 1222



state 1185

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 1223
    MUL 	shift, and go to state 716



state 1186

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 1224
    MUL 	shift, and go to state 719



state 1187

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 732
    MUL 	shift, and go to state 1225



state 1188

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 152)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    COMMA	shift, and go to state 685
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 160 (option_ari_exp)

    option_ari_exp	go to state 1226
    ari_operator	go to state 327



state 1189

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 131)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    COMMA	shift, and go to state 685
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 160 (option_ari_exp)

    option_ari_exp	go to state 1227
    ari_operator	go to state 327



state 1190

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 1228
    MUL 	shift, and go to state 716



state 1191

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 1229
    MUL 	shift, and go to state 719



state 1192

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 732
    MUL 	shift, and go to state 1230



state 1193

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 155)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    COMMA	shift, and go to state 685
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 160 (option_ari_exp)

    option_ari_exp	go to state 1231
    ari_operator	go to state 327



state 1194

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 129)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    COMMA	shift, and go to state 685
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 160 (option_ari_exp)

    option_ari_exp	go to state 1232
    ari_operator	go to state 327



state 1195

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 154)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    COMMA	shift, and go to state 685
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 160 (option_ari_exp)

    option_ari_exp	go to state 1233
    ari_operator	go to state 327



state 1196

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 132)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    COMMA	shift, and go to state 685
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 160 (option_ari_exp)

    option_ari_exp	go to state 1234
    ari_operator	go to state 327



state 1197

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 153)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 1235
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1198

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 224)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 515
    MUL 	shift, and go to state 1236



state 1199

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 226)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 517
    MUL 	shift, and go to state 1237



state 1200

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 229)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 232)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 238)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 241)

    INTDECLARATION	shift, and go to state 728
    CHARDECLARATION	shift, and go to state 1238



state 1201

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 156)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 1239
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1202

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 130)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 1240
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1203

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 92)

    FILEDECLARATION	shift, and go to state 30
    INTDECLARATION	shift, and go to state 46
    STRDECLARATION	shift, and go to state 47
    CHARDECLARATION	shift, and go to state 48
    VOIDDECLARATION	shift, and go to state 49
    FLOATDECLARATION	shift, and go to state 50
    OPEN_PAR	shift, and go to state 586
    UNSIGNED	shift, and go to state 458
    ID  	shift, and go to state 587
    STRUCT_TYPE	shift, and go to state 588

    $default	reduce using rule 357 (option_function_parameter_list)

    type_define	go to state 459
    sign_type_define	go to state 461
    all_type_define	go to state 589
    option_function_parameter_list	go to state 1241



state 1204

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 61)

    $default	reduce using rule 61 (statement)



state 1205

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    MUL 	shift, and go to state 1242



state 1206

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    MUL 	shift, and go to state 1243



state 1207

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    CHARDECLARATION	shift, and go to state 1244



state 1208

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    MUL 	shift, and go to state 1245



state 1209

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    MUL 	shift, and go to state 1246



state 1210

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    CHARDECLARATION	shift, and go to state 1247



state 1211

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    INTDECLARATION	shift, and go to state 1248
    CHARDECLARATION	shift, and go to state 1249
    UNSIGNED	shift, and go to state 1250



state 1212

    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 380)

    $default	reduce using rule 380 (inner_option_function_identifier)



state 1213

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration .   (rule 104)

    $default	reduce using rule 104 (option_identifier_array_declaration)



state 1214

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration .   (rule 105)

    $default	reduce using rule 105 (option_identifier_array_declaration)



state 1215

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 54)
    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement . CLOSE_PAR option_case_par   (rule 414)

    CLOSE_PAR	shift, and go to state 1251
    CHOP	shift, and go to state 256
    OR  	shift, and go to state 257
    PARALLEL	shift, and go to state 258
    AND 	shift, and go to state 259



state 1216

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 356)

    COMMA	shift, and go to state 380

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1252



state 1217

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 352)

    $default	reduce using rule 352 (option_function_parameter_list)



state 1218

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 351)

    COMMA	shift, and go to state 380

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1253



state 1219

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 367)

    COMMA	shift, and go to state 380

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1254



state 1220

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 371)

    $default	reduce using rule 371 (inner_option_define_identifier)



state 1221

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 370)

    COMMA	shift, and go to state 380

    $default	reduce using rule 368 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1255



state 1222

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR function   (rule 147)

    CLOSE_PAR	shift, and go to state 1256



state 1223

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 231)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 976
    INTLITERAL	shift, and go to state 1257
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 881
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1224

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 979
    INTLITERAL	shift, and go to state 1258
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 883
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1225

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 1259
    MUL 	shift, and go to state 898



state 1226

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 152)

    CLOSE_MPAR	shift, and go to state 1260



state 1227

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 131)

    CLOSE_MPAR	shift, and go to state 1261



state 1228

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 231)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 976
    INTLITERAL	shift, and go to state 1262
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 881
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1229

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 979
    INTLITERAL	shift, and go to state 1263
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 883
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1230

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 1264
    MUL 	shift, and go to state 898



state 1231

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 155)

    CLOSE_MPAR	shift, and go to state 1265



state 1232

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 129)

    CLOSE_MPAR	shift, and go to state 1266



state 1233

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 154)

    CLOSE_MPAR	shift, and go to state 1267



state 1234

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 132)

    CLOSE_MPAR	shift, and go to state 1268



state 1235

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 153)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    COMMA	shift, and go to state 685
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 160 (option_ari_exp)

    option_ari_exp	go to state 1269
    ari_operator	go to state 327



state 1236

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 237)

    CLOSE_PAR	shift, and go to state 1270
    MUL 	shift, and go to state 716



state 1237

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 234)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 240)

    CLOSE_PAR	shift, and go to state 1271
    MUL 	shift, and go to state 719



state 1238

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 230)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 732
    MUL 	shift, and go to state 1272



state 1239

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 156)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    COMMA	shift, and go to state 685
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 160 (option_ari_exp)

    option_ari_exp	go to state 1273
    ari_operator	go to state 327



state 1240

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 130)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    COMMA	shift, and go to state 685
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 160 (option_ari_exp)

    option_ari_exp	go to state 1274
    ari_operator	go to state 327



state 1241

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 91)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P array_exp   (rule 92)

    CLOSE_PAR	shift, and go to state 1275



state 1242

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    CLOSE_PAR	shift, and go to state 1276



state 1243

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    CLOSE_PAR	shift, and go to state 1277



state 1244

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    MUL 	shift, and go to state 1278



state 1245

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    CLOSE_PAR	shift, and go to state 1279



state 1246

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    CLOSE_PAR	shift, and go to state 1280



state 1247

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    MUL 	shift, and go to state 1281



state 1248

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    MUL 	shift, and go to state 1282



state 1249

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    MUL 	shift, and go to state 1283



state 1250

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    CHARDECLARATION	shift, and go to state 1284



state 1251

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR . option_case_par   (rule 414)

    CASE	shift, and go to state 916
    BREAK	shift, and go to state 1285

    $default	reduce using rule 417 (option_case_par)

    case_par	go to state 1286
    option_case_par	go to state 1287



state 1252

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 356)

    $default	reduce using rule 356 (option_function_parameter_list)



state 1253

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 351)

    $default	reduce using rule 351 (option_function_parameter_list)



state 1254

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 367)

    $default	reduce using rule 367 (inner_option_define_identifier)



state 1255

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 370)

    $default	reduce using rule 370 (inner_option_define_identifier)



state 1256

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . function   (rule 147)

    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 1288
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    EXTERN	shift, and go to state 62
    ID  	shift, and go to state 1289

    function	go to state 1290
    file_statement	go to state 82
    array	go to state 1291
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94



state 1257

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    intliteral  ->  INTLITERAL .   (rule 390)

    CLOSE_PAR	shift, and go to state 1292

    CLOSE_PAR	[reduce using rule 390 (intliteral)]
    $default	reduce using rule 390 (intliteral)



state 1258

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    intliteral  ->  INTLITERAL .   (rule 390)

    CLOSE_PAR	shift, and go to state 1293

    CLOSE_PAR	[reduce using rule 390 (intliteral)]
    $default	reduce using rule 390 (intliteral)



state 1259

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 235)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 1090
    INTLITERAL	shift, and go to state 1294
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 1031
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1260

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 152)

    $default	reduce using rule 152 (array)



state 1261

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 131)

    $default	reduce using rule 131 (leftaddrshift)



state 1262

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)
    intliteral  ->  INTLITERAL .   (rule 390)

    CLOSE_PAR	shift, and go to state 1295

    CLOSE_PAR	[reduce using rule 390 (intliteral)]
    $default	reduce using rule 390 (intliteral)



state 1263

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)
    intliteral  ->  INTLITERAL .   (rule 390)

    CLOSE_PAR	shift, and go to state 1296

    CLOSE_PAR	[reduce using rule 390 (intliteral)]
    $default	reduce using rule 390 (intliteral)



state 1264

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 235)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 1090
    INTLITERAL	shift, and go to state 1297
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 1031
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1265

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 155)

    $default	reduce using rule 155 (array)



state 1266

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 129)

    $default	reduce using rule 129 (leftaddrshift)



state 1267

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 154)

    $default	reduce using rule 154 (array)



state 1268

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 132)

    $default	reduce using rule 132 (leftaddrshift)



state 1269

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 153)

    CLOSE_MPAR	shift, and go to state 1298



state 1270

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 231)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 976
    INTLITERAL	shift, and go to state 1299
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 881
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1271

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 234)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 979
    INTLITERAL	shift, and go to state 1300
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 883
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1272

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 235)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 241)

    CLOSE_PAR	shift, and go to state 1301
    MUL 	shift, and go to state 898



state 1273

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 156)

    CLOSE_MPAR	shift, and go to state 1302



state 1274

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 130)

    CLOSE_MPAR	shift, and go to state 1303



state 1275

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 91)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P array_exp   (rule 92)

    ASS_P	shift, and go to state 1304

    $default	reduce using rule 91 (declaration)



state 1276

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    INTLITERAL	shift, and go to state 1305



state 1277

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    INTLITERAL	shift, and go to state 1306



state 1278

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    CLOSE_PAR	shift, and go to state 1307



state 1279

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    INTLITERAL	shift, and go to state 1308



state 1280

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    INTLITERAL	shift, and go to state 1309



state 1281

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    CLOSE_PAR	shift, and go to state 1310



state 1282

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    CLOSE_PAR	shift, and go to state 1311



state 1283

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    CLOSE_PAR	shift, and go to state 1312



state 1284

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    MUL 	shift, and go to state 1313



state 1285

    option_case_par  ->  BREAK . case_par   (rule 415)

    CASE	shift, and go to state 916

    case_par	go to state 1314



state 1286

    option_case_par  ->  case_par .   (rule 416)

    $default	reduce using rule 416 (option_case_par)



state 1287

    case_par  ->  CASE member_in_exp COLON OPEN_PAR statement CLOSE_PAR option_case_par .   (rule 414)

    $default	reduce using rule 414 (case_par)



state 1288

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)

    OPEN_PAR	shift, and go to state 1315
    ID  	shift, and go to state 1316

    array	go to state 583



state 1289

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 72)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    OPEN_PAR	shift, and go to state 250
    OPEN_MPAR	shift, and go to state 251



state 1290

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function .   (rule 147)

    $default	reduce using rule 147 (ass_right)



state 1291

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 74)

    OPEN_PAR	shift, and go to state 266



state 1292

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    CLOSE_PAR	shift, and go to state 1317



state 1293

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    CLOSE_PAR	shift, and go to state 1318



state 1294

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    intliteral  ->  INTLITERAL .   (rule 390)

    CLOSE_PAR	shift, and go to state 1319

    CLOSE_PAR	[reduce using rule 390 (intliteral)]
    $default	reduce using rule 390 (intliteral)



state 1295

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    CLOSE_PAR	shift, and go to state 1320



state 1296

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    CLOSE_PAR	shift, and go to state 1321



state 1297

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)
    intliteral  ->  INTLITERAL .   (rule 390)

    CLOSE_PAR	shift, and go to state 1322

    CLOSE_PAR	[reduce using rule 390 (intliteral)]
    $default	reduce using rule 390 (intliteral)



state 1298

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 153)

    $default	reduce using rule 153 (array)



state 1299

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)
    intliteral  ->  INTLITERAL .   (rule 390)

    CLOSE_PAR	shift, and go to state 1323

    CLOSE_PAR	[reduce using rule 390 (intliteral)]
    $default	reduce using rule 390 (intliteral)



state 1300

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)
    intliteral  ->  INTLITERAL .   (rule 390)

    CLOSE_PAR	shift, and go to state 1324

    CLOSE_PAR	[reduce using rule 390 (intliteral)]
    $default	reduce using rule 390 (intliteral)



state 1301

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 235)

    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    MALLOC	shift, and go to state 879
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 1090
    INTLITERAL	shift, and go to state 1325
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    type_cast_alg_exp	go to state 880
    simple_ari_exp	go to state 714
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    casted_element	go to state 1031
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1302

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 156)

    $default	reduce using rule 156 (array)



state 1303

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 130)

    $default	reduce using rule 130 (leftaddrshift)



state 1304

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . array_exp   (rule 92)

    OPEN_PAR	shift, and go to state 819
    OPEN_BPAR	shift, and go to state 401
    OPEN_MPAR	shift, and go to state 402

    array_exp	go to state 1326
    option_list_value	go to state 408
    option_struct_list_value	go to state 409



state 1305

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    CLOSE_PAR	shift, and go to state 1292



state 1306

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    CLOSE_PAR	shift, and go to state 1293



state 1307

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    INTLITERAL	shift, and go to state 1327



state 1308

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    CLOSE_PAR	shift, and go to state 1295



state 1309

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    CLOSE_PAR	shift, and go to state 1296



state 1310

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    INTLITERAL	shift, and go to state 1328



state 1311

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    INTLITERAL	shift, and go to state 1329



state 1312

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    INTLITERAL	shift, and go to state 1330



state 1313

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    CLOSE_PAR	shift, and go to state 1331



state 1314

    option_case_par  ->  BREAK case_par .   (rule 415)

    $default	reduce using rule 415 (option_case_par)



state 1315

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 153)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 154)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 155)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 156)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 157)

    INTDECLARATION	shift, and go to state 754
    CHARDECLARATION	shift, and go to state 755
    FLOATDECLARATION	shift, and go to state 756
    OPEN_PAR	shift, and go to state 1315
    UNSIGNED	shift, and go to state 757
    ID  	shift, and go to state 1316

    array	go to state 583



state 1316

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 151)

    OPEN_MPAR	shift, and go to state 251



state 1317

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    OPEN_MPAR	shift, and go to state 1332



state 1318

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    OPEN_MPAR	shift, and go to state 1333



state 1319

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    CLOSE_PAR	shift, and go to state 1334



state 1320

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    OPEN_MPAR	shift, and go to state 1335



state 1321

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    OPEN_MPAR	shift, and go to state 1336



state 1322

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    CLOSE_PAR	shift, and go to state 1337



state 1323

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    CLOSE_PAR	shift, and go to state 1338



state 1324

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    CLOSE_PAR	shift, and go to state 1339



state 1325

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)
    intliteral  ->  INTLITERAL .   (rule 390)

    CLOSE_PAR	shift, and go to state 1340

    CLOSE_PAR	[reduce using rule 390 (intliteral)]
    $default	reduce using rule 390 (intliteral)



state 1326

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp .   (rule 92)
    array_exp  ->  array_exp . CON array_exp   (rule 204)

    CON 	shift, and go to state 624

    $default	reduce using rule 92 (declaration)



state 1327

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    CLOSE_PAR	shift, and go to state 1319



state 1328

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    CLOSE_PAR	shift, and go to state 1322



state 1329

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    CLOSE_PAR	shift, and go to state 1323



state 1330

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    CLOSE_PAR	shift, and go to state 1324



state 1331

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    INTLITERAL	shift, and go to state 1341



state 1332

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 1342
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1333

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 1343
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1334

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    OPEN_MPAR	shift, and go to state 1344



state 1335

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 135)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 1345
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1336

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 133)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 1346
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1337

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    OPEN_MPAR	shift, and go to state 1347



state 1338

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    OPEN_MPAR	shift, and go to state 1348



state 1339

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    OPEN_MPAR	shift, and go to state 1349



state 1340

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    CLOSE_PAR	shift, and go to state 1350



state 1341

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    CLOSE_PAR	shift, and go to state 1340



state 1342

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 141)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    COMMA	shift, and go to state 685
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 160 (option_ari_exp)

    option_ari_exp	go to state 1351
    ari_operator	go to state 327



state 1343

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 139)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    COMMA	shift, and go to state 685
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 160 (option_ari_exp)

    option_ari_exp	go to state 1352
    ari_operator	go to state 327



state 1344

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 1353
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1345

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 135)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    COMMA	shift, and go to state 685
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 160 (option_ari_exp)

    option_ari_exp	go to state 1354
    ari_operator	go to state 327



state 1346

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 133)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    COMMA	shift, and go to state 685
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 160 (option_ari_exp)

    option_ari_exp	go to state 1355
    ari_operator	go to state 327



state 1347

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 134)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 1356
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1348

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 138)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 1357
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1349

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 136)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 1358
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1350

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    OPEN_MPAR	shift, and go to state 1359



state 1351

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 141)

    CLOSE_MPAR	shift, and go to state 1360



state 1352

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 139)

    CLOSE_MPAR	shift, and go to state 1361



state 1353

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 140)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    COMMA	shift, and go to state 685
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 160 (option_ari_exp)

    option_ari_exp	go to state 1362
    ari_operator	go to state 327



state 1354

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 135)

    CLOSE_MPAR	shift, and go to state 1363



state 1355

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 133)

    CLOSE_MPAR	shift, and go to state 1364



state 1356

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 134)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    COMMA	shift, and go to state 685
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 160 (option_ari_exp)

    option_ari_exp	go to state 1365
    ari_operator	go to state 327



state 1357

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 138)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    COMMA	shift, and go to state 685
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 160 (option_ari_exp)

    option_ari_exp	go to state 1366
    ari_operator	go to state 327



state 1358

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 136)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    COMMA	shift, and go to state 685
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 160 (option_ari_exp)

    option_ari_exp	go to state 1367
    ari_operator	go to state 327



state 1359

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 137)

    IF  	shift, and go to state 109
    POINTERNULL	shift, and go to state 110
    FOPEN	shift, and go to state 28
    FCLOSE	shift, and go to state 29
    FGETS	shift, and go to state 31
    FPUTS	shift, and go to state 32
    FGETC	shift, and go to state 33
    FPUTC	shift, and go to state 34
    OPEN_PAR	shift, and go to state 111
    STRFUNCHEAD	shift, and go to state 55
    STRFUNCTAIL	shift, and go to state 56
    STRFUNCCAT	shift, and go to state 57
    STRFUNCCMP	shift, and go to state 58
    STRFUNCCPY	shift, and go to state 59
    STRFUNCLEN	shift, and go to state 60
    SIZEOF	shift, and go to state 112
    EXTERN	shift, and go to state 62
    CEIL	shift, and go to state 113
    FLOOR	shift, and go to state 114
    ROUND	shift, and go to state 115
    SIN 	shift, and go to state 116
    COS 	shift, and go to state 117
    TAN 	shift, and go to state 118
    ASIN	shift, and go to state 119
    ACOS	shift, and go to state 120
    ATAN	shift, and go to state 121
    SINH	shift, and go to state 122
    COSH	shift, and go to state 123
    TANH	shift, and go to state 124
    EXP 	shift, and go to state 125
    LOG 	shift, and go to state 126
    LOG10	shift, and go to state 127
    SQRT	shift, and go to state 128
    ATAN2	shift, and go to state 129
    POW 	shift, and go to state 130
    ABS 	shift, and go to state 131
    FABS	shift, and go to state 132
    LABS	shift, and go to state 133
    FMOD	shift, and go to state 134
    MODF	shift, and go to state 135
    LDEXP	shift, and go to state 136
    ADDRESS	shift, and go to state 137
    SUB 	shift, and go to state 138
    MUL 	shift, and go to state 66
    BNE 	shift, and go to state 139
    ID  	shift, and go to state 73
    INTLITERAL	shift, and go to state 140
    FLOATLITERAL	shift, and go to state 141
    CHARLITERAL	shift, and go to state 142

    function	go to state 143
    file_statement	go to state 82
    array	go to state 144
    point_exp	go to state 145
    ari_exp	go to state 1368
    simple_ari_exp	go to state 147
    member_in_exp	go to state 148
    address_exp	go to state 149
    type_cast	go to state 150
    size_of	go to state 151
    String_Function	go to state 88
    String_Function_head	go to state 89
    String_Function_tail	go to state 90
    String_Function_cat	go to state 91
    String_Function_cmp	go to state 92
    String_Function_cpy	go to state 93
    String_Function_len	go to state 94
    math_function	go to state 152
    identifier	go to state 153
    intliteral	go to state 154
    charliteral	go to state 155
    floatliteral	go to state 156
    struct_member_exp	go to state 157



state 1360

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 141)

    $default	reduce using rule 141 (leftaddrshift)



state 1361

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 139)

    $default	reduce using rule 139 (leftaddrshift)



state 1362

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 140)

    CLOSE_MPAR	shift, and go to state 1369



state 1363

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 135)

    $default	reduce using rule 135 (leftaddrshift)



state 1364

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 133)

    $default	reduce using rule 133 (leftaddrshift)



state 1365

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 134)

    CLOSE_MPAR	shift, and go to state 1370



state 1366

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 138)

    CLOSE_MPAR	shift, and go to state 1371



state 1367

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 136)

    CLOSE_MPAR	shift, and go to state 1372



state 1368

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 137)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 170)

    COMMA	shift, and go to state 685
    ADD 	shift, and go to state 325
    SUB 	shift, and go to state 326

    $default	reduce using rule 160 (option_ari_exp)

    option_ari_exp	go to state 1373
    ari_operator	go to state 327



state 1369

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 140)

    $default	reduce using rule 140 (leftaddrshift)



state 1370

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 134)

    $default	reduce using rule 134 (leftaddrshift)



state 1371

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 138)

    $default	reduce using rule 138 (leftaddrshift)



state 1372

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 136)

    $default	reduce using rule 136 (leftaddrshift)



state 1373

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 137)

    CLOSE_MPAR	shift, and go to state 1374



state 1374

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 137)

    $default	reduce using rule 137 (leftaddrshift)



state 1375

    $   	go to state 1376



state 1376

    $   	go to state 1377



state 1377

    $default	accept
