Useless nonterminals:

   option_array_declaration
   inner_option_array_declaration


Terminals which are not used:

   POINTERDECLARATION
   LISTDECLARATION
   FUNCTION
   OVER
   CYLINDER
   OVEREP
   NON_DETERMINED
   SEND
   RECEIVE
   CHANNEL
   PUT
   GET
   ERROR_TOKEN
   STRFUNCHEAD
   STRFUNCTAIL
   STRFUNCCAT
   STRFUNCCMP
   STRFUNCCPY
   STRFUNCLEN
   PREFIX


Useless rules:

#105   option_array_declaration :	 ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#106   inner_option_array_declaration :	 COMMA ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_array_declaration;
#107   inner_option_array_declaration :	;
#108   inner_option_array_declaration :	 COMMA error;


Conflict in state 82 between rule 13 and token CHOP resolved as reduce.
Conflict in state 82 between rule 13 and token IFF resolved as reduce.
Conflict in state 82 between rule 13 and token PROPIMPLY resolved as reduce.
Conflict in state 82 between rule 13 and token OR resolved as reduce.
Conflict in state 82 between rule 13 and token AND resolved as reduce.
Conflict in state 82 between rule 13 and token CHOPSTAR resolved as an error.
Conflict in state 83 between rule 22 and token CHOP resolved as reduce.
Conflict in state 83 between rule 22 and token IFF resolved as reduce.
Conflict in state 83 between rule 22 and token PROPIMPLY resolved as reduce.
Conflict in state 83 between rule 22 and token OR resolved as reduce.
Conflict in state 83 between rule 22 and token AND resolved as reduce.
Conflict in state 83 between rule 22 and token CHOPSTAR resolved as an error.
Conflict in state 106 between rule 21 and token CHOP resolved as reduce.
Conflict in state 106 between rule 21 and token IFF resolved as reduce.
Conflict in state 106 between rule 21 and token PROPIMPLY resolved as reduce.
Conflict in state 106 between rule 21 and token OR resolved as reduce.
Conflict in state 106 between rule 21 and token AND resolved as reduce.
Conflict in state 106 between rule 21 and token CHOPSTAR resolved as an error.
Conflict in state 107 between rule 10 and token CHOP resolved as reduce.
Conflict in state 107 between rule 10 and token IFF resolved as reduce.
Conflict in state 107 between rule 10 and token PROPIMPLY resolved as reduce.
Conflict in state 107 between rule 10 and token OR resolved as reduce.
Conflict in state 107 between rule 10 and token AND resolved as reduce.
Conflict in state 107 between rule 10 and token CHOPSTAR resolved as an error.
Conflict in state 108 between rule 9 and token CHOP resolved as reduce.
Conflict in state 108 between rule 9 and token IFF resolved as reduce.
Conflict in state 108 between rule 9 and token PROPIMPLY resolved as reduce.
Conflict in state 108 between rule 9 and token OR resolved as reduce.
Conflict in state 108 between rule 9 and token AND resolved as reduce.
Conflict in state 108 between rule 9 and token CHOPSTAR resolved as an error.
Conflict in state 109 between rule 20 and token CHOP resolved as reduce.
Conflict in state 109 between rule 20 and token IFF resolved as reduce.
Conflict in state 109 between rule 20 and token PROPIMPLY resolved as reduce.
Conflict in state 109 between rule 20 and token OR resolved as reduce.
Conflict in state 109 between rule 20 and token AND resolved as reduce.
Conflict in state 109 between rule 20 and token CHOPSTAR resolved as an error.
Conflict in state 110 between rule 12 and token CHOP resolved as reduce.
Conflict in state 110 between rule 12 and token IFF resolved as reduce.
Conflict in state 110 between rule 12 and token PROPIMPLY resolved as reduce.
Conflict in state 110 between rule 12 and token OR resolved as reduce.
Conflict in state 110 between rule 12 and token AND resolved as reduce.
Conflict in state 110 between rule 12 and token CHOPSTAR resolved as an error.
Conflict in state 111 between rule 11 and token CHOP resolved as reduce.
Conflict in state 111 between rule 11 and token IFF resolved as reduce.
Conflict in state 111 between rule 11 and token PROPIMPLY resolved as reduce.
Conflict in state 111 between rule 11 and token OR resolved as reduce.
Conflict in state 111 between rule 11 and token AND resolved as reduce.
Conflict in state 111 between rule 11 and token CHOPSTAR resolved as an error.
Conflict in state 227 between rule 206 and token IMPLY resolved as reduce.
Conflict in state 230 between rule 205 and token IMPLY resolved as reduce.
Conflict in state 253 between rule 8 and token CHOP resolved as reduce.
Conflict in state 253 between rule 8 and token IFF resolved as shift.
Conflict in state 253 between rule 8 and token PROPIMPLY resolved as shift.
Conflict in state 253 between rule 8 and token OR resolved as shift.
Conflict in state 253 between rule 8 and token AND resolved as shift.
Conflict in state 253 between rule 8 and token CHOPSTAR resolved as shift.
Conflict in state 254 between rule 6 and token CHOP resolved as reduce.
Conflict in state 254 between rule 6 and token IFF resolved as reduce.
Conflict in state 254 between rule 6 and token PROPIMPLY resolved as reduce.
Conflict in state 254 between rule 6 and token OR resolved as shift.
Conflict in state 254 between rule 6 and token AND resolved as shift.
Conflict in state 254 between rule 6 and token CHOPSTAR resolved as shift.
Conflict in state 255 between rule 7 and token CHOP resolved as reduce.
Conflict in state 255 between rule 7 and token IFF resolved as reduce.
Conflict in state 255 between rule 7 and token PROPIMPLY resolved as reduce.
Conflict in state 255 between rule 7 and token OR resolved as shift.
Conflict in state 255 between rule 7 and token AND resolved as shift.
Conflict in state 255 between rule 7 and token CHOPSTAR resolved as shift.
Conflict in state 256 between rule 5 and token CHOP resolved as reduce.
Conflict in state 256 between rule 5 and token IFF resolved as reduce.
Conflict in state 256 between rule 5 and token PROPIMPLY resolved as reduce.
Conflict in state 256 between rule 5 and token OR resolved as reduce.
Conflict in state 256 between rule 5 and token AND resolved as shift.
Conflict in state 256 between rule 5 and token CHOPSTAR resolved as shift.
Conflict in state 257 between rule 4 and token CHOP resolved as reduce.
Conflict in state 257 between rule 4 and token IFF resolved as reduce.
Conflict in state 257 between rule 4 and token PROPIMPLY resolved as reduce.
Conflict in state 257 between rule 4 and token OR resolved as reduce.
Conflict in state 257 between rule 4 and token AND resolved as reduce.
Conflict in state 257 between rule 4 and token CHOPSTAR resolved as shift.
Conflict in state 263 between rule 235 and token OR resolved as reduce.
Conflict in state 263 between rule 235 and token AND resolved as reduce.
Conflict in state 322 between rule 330 and token OR resolved as reduce.
Conflict in state 322 between rule 330 and token AND resolved as reduce.
Conflict in state 373 between rule 32 and token CHOP resolved as reduce.
Conflict in state 373 between rule 32 and token OR resolved as shift.
Conflict in state 373 between rule 32 and token PARALLEL resolved as shift.
Conflict in state 373 between rule 32 and token AND resolved as shift.
Conflict in state 374 between rule 31 and token CHOP resolved as reduce.
Conflict in state 374 between rule 31 and token OR resolved as reduce.
Conflict in state 374 between rule 31 and token PARALLEL resolved as reduce.
Conflict in state 374 between rule 31 and token AND resolved as shift.
Conflict in state 375 between rule 53 and token CHOP resolved as reduce.
Conflict in state 375 between rule 53 and token OR resolved as reduce.
Conflict in state 375 between rule 53 and token PARALLEL resolved as reduce.
Conflict in state 375 between rule 53 and token AND resolved as shift.
Conflict in state 376 between rule 30 and token CHOP resolved as reduce.
Conflict in state 376 between rule 30 and token OR resolved as reduce.
Conflict in state 376 between rule 30 and token PARALLEL resolved as reduce.
Conflict in state 376 between rule 30 and token AND resolved as reduce.
Conflict in state 440 between rule 237 and token OR resolved as reduce.
Conflict in state 440 between rule 237 and token AND resolved as shift.
Conflict in state 441 between rule 236 and token OR resolved as reduce.
Conflict in state 441 between rule 236 and token AND resolved as reduce.
Conflict in state 502 between rule 332 and token OR resolved as reduce.
Conflict in state 502 between rule 332 and token AND resolved as shift.
Conflict in state 503 between rule 331 and token OR resolved as reduce.
Conflict in state 503 between rule 331 and token AND resolved as reduce.
Conflict in state 650 between rule 190 and token CON resolved as reduce.
State 94 contains 2 shift/reduce conflicts.
State 95 contains 2 shift/reduce conflicts.
State 97 contains 14 shift/reduce conflicts.
State 101 contains 2 shift/reduce conflicts.
State 119 contains 2 shift/reduce conflicts.
State 151 contains 3 reduce/reduce conflicts.
State 153 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 154 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 155 contains 1 shift/reduce conflict.
State 157 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 159 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 160 contains 1 shift/reduce conflict.
State 188 contains 1 shift/reduce conflict.
State 220 contains 1 shift/reduce conflict.
State 221 contains 1 shift/reduce conflict.
State 223 contains 1 shift/reduce conflict.
State 224 contains 1 shift/reduce conflict.
State 225 contains 1 shift/reduce conflict.
State 227 contains 1 shift/reduce conflict.
State 230 contains 1 shift/reduce conflict.
State 261 contains 1 shift/reduce conflict.
State 264 contains 2 shift/reduce conflicts.
State 265 contains 2 shift/reduce conflicts.
State 283 contains 1 shift/reduce conflict.
State 284 contains 1 shift/reduce conflict.
State 285 contains 1 shift/reduce conflict.
State 286 contains 1 shift/reduce conflict.
State 303 contains 1 shift/reduce conflict.
State 312 contains 1 shift/reduce conflict.
State 313 contains 1 shift/reduce conflict.
State 314 contains 1 shift/reduce conflict.
State 320 contains 1 shift/reduce conflict.
State 348 contains 1 shift/reduce conflict.
State 349 contains 1 shift/reduce conflict.
State 351 contains 1 shift/reduce conflict.
State 352 contains 1 shift/reduce conflict.
State 356 contains 1 shift/reduce conflict.
State 357 contains 1 shift/reduce conflict.
State 382 contains 2 shift/reduce conflicts.
State 383 contains 2 shift/reduce conflicts.
State 385 contains 2 shift/reduce conflicts.
State 386 contains 2 shift/reduce conflicts.
State 387 contains 2 shift/reduce conflicts.
State 388 contains 2 shift/reduce conflicts.
State 389 contains 2 shift/reduce conflicts.
State 390 contains 2 shift/reduce conflicts.
State 392 contains 2 shift/reduce conflicts.
State 393 contains 2 shift/reduce conflicts.
State 395 contains 2 shift/reduce conflicts.
State 396 contains 2 shift/reduce conflicts.
State 419 contains 1 shift/reduce conflict.
State 426 contains 8 shift/reduce conflicts.
State 428 contains 2 shift/reduce conflicts.
State 470 contains 1 shift/reduce conflict.
State 471 contains 1 shift/reduce conflict.
State 472 contains 1 shift/reduce conflict.
State 489 contains 1 shift/reduce conflict.
State 490 contains 1 shift/reduce conflict.
State 494 contains 1 shift/reduce conflict.
State 516 contains 1 shift/reduce conflict.
State 517 contains 1 shift/reduce conflict.
State 518 contains 1 shift/reduce conflict.
State 522 contains 1 shift/reduce conflict.
State 544 contains 1 shift/reduce conflict.
State 567 contains 3 shift/reduce conflicts.
State 570 contains 10 shift/reduce conflicts.
State 661 contains 2 shift/reduce conflicts.
State 662 contains 2 shift/reduce conflicts.
State 675 contains 1 shift/reduce conflict.
State 676 contains 1 shift/reduce conflict.
State 692 contains 1 shift/reduce conflict.
State 693 contains 1 shift/reduce conflict.
State 699 contains 2 shift/reduce conflicts.
State 700 contains 2 shift/reduce conflicts.
State 702 contains 2 shift/reduce conflicts.
State 703 contains 2 shift/reduce conflicts.
State 790 contains 1 shift/reduce conflict.
State 791 contains 1 shift/reduce conflict.
State 793 contains 1 shift/reduce conflict.
State 794 contains 1 shift/reduce conflict.
State 795 contains 1 shift/reduce conflict.
State 796 contains 1 shift/reduce conflict.
State 809 contains 2 shift/reduce conflicts.
State 818 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 824 contains 1 shift/reduce conflict.
State 831 contains 2 shift/reduce conflicts.
State 834 contains 8 shift/reduce conflicts.
State 891 contains 1 shift/reduce conflict.
State 893 contains 1 shift/reduce conflict.
State 894 contains 1 shift/reduce conflict.
State 896 contains 1 shift/reduce conflict.
State 967 contains 1 shift/reduce conflict and 1 reduce/reduce conflict.
State 968 contains 1 shift/reduce conflict.
State 969 contains 1 shift/reduce conflict.
State 1053 contains 1 shift/reduce conflict.
State 1054 contains 1 shift/reduce conflict.
State 1058 contains 1 shift/reduce conflict.
State 1059 contains 1 shift/reduce conflict.
State 1087 contains 1 shift/reduce conflict.
State 1090 contains 1 shift/reduce conflict.
State 1092 contains 1 shift/reduce conflict.
State 1093 contains 1 shift/reduce conflict.
State 1117 contains 1 shift/reduce conflict.

Grammar
rule 1    program -> gComplexProposition statement
rule 2    gComplexProposition -> PBEGIN complexProposition PEND
rule 3    gComplexProposition ->		/* empty */
rule 4    complexProposition -> complexProposition AND complexProposition
rule 5    complexProposition -> complexProposition OR complexProposition
rule 6    complexProposition -> complexProposition IFF complexProposition
rule 7    complexProposition -> complexProposition PROPIMPLY complexProposition
rule 8    complexProposition -> complexProposition CHOP complexProposition
rule 9    complexProposition -> ALWAYS complexProposition
rule 10   complexProposition -> KEEP complexProposition
rule 11   complexProposition -> SOMETIMES complexProposition
rule 12   complexProposition -> W_NEXT complexProposition
rule 13   complexProposition -> NEXT complexProposition
rule 14   complexProposition -> SKIP
rule 15   complexProposition -> MY_TRUE
rule 16   complexProposition -> MY_FALSE
rule 17   complexProposition -> LENGTH ari_exp
rule 18   complexProposition -> EMPTY
rule 19   complexProposition -> MORE
rule 20   complexProposition -> HALT complexProposition
rule 21   complexProposition -> FINAL complexProposition
rule 22   complexProposition -> NEGATION complexProposition
rule 23   complexProposition -> OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR
rule 24   complexProposition -> ID
rule 25   complexProposition -> DEFINE ID COLON prime_bool_exp
rule 26   complexProposition -> complexProposition CHOPSTAR
rule 27   complexProposition -> OPEN_PAR complexProposition CLOSE_PAR
rule 28   poptional_projection -> COMMA complexProposition poptional_projection
rule 29   poptional_projection ->		/* empty */
rule 30   statement -> statement AND statement
rule 31   statement -> statement OR statement
rule 32   statement -> statement CHOP statement
rule 33   statement -> ass_statement
rule 34   statement -> sign_declaration
rule 35   statement -> if_statement
rule 36   statement -> while_statement
rule 37   statement -> for_statement
rule 38   statement -> extend_for_statement
rule 39   statement -> NEXT OPEN_PAR statement CLOSE_PAR
rule 40   statement -> KEEP OPEN_PAR statement CLOSE_PAR
rule 41   statement -> ALWAYS OPEN_PAR statement CLOSE_PAR
rule 42   statement -> AWAIT OPEN_PAR bool_exp CLOSE_PAR
rule 43   statement -> REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR
rule 44   statement -> SKIP
rule 45   statement -> EMPTY
rule 46   statement -> MORE
rule 47   statement -> LENGTH OPEN_PAR ari_exp CLOSE_PAR
rule 48   statement -> input_statement
rule 49   statement -> output_statement
rule 50   statement -> TRUE
rule 51   statement -> FALSE
rule 52   statement -> FINAL OPEN_PAR statement CLOSE_PAR
rule 53   statement -> statement PARALLEL statement
rule 54   statement -> OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR
rule 55   statement -> FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR
rule 56   statement -> OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar
rule 57   statement -> OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar
rule 58   statement -> DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR
rule 59   statement -> type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR
rule 60   statement -> PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR
rule 61   statement -> struct_define_statement
rule 62   statement -> function
rule 63   statement -> EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR
rule 64   statement -> OPEN_PAR statement CLOSE_PAR
rule 65   option_struct_declaration -> sign_declaration
rule 66   option_struct_declaration -> sign_declaration AND option_struct_declaration
rule 67   empty_statement -> statement
rule 68   empty_statement ->		/* empty */
rule 69   function -> ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 70   function -> EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR
rule 71   function -> array OPEN_PAR option_function_identifier CLOSE_PAR
rule 72   struct_define_statement -> struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR
rule 73   struct_identifier -> STRUCT ID
rule 74   struct_identifier -> UNION ID
rule 75   sign_declaration -> SIGNED declaration
rule 76   sign_declaration -> UNSIGNED declaration
rule 77   sign_declaration -> declaration
rule 78   declaration -> type_define option_identifier_array_declaration
rule 79   declaration -> STRUCT_TYPE option_identifier_array_declaration
rule 80   declaration -> STRUCT ID option_identifier_array_declaration
rule 81   declaration -> UNION ID option_identifier_array_declaration
rule 82   declaration -> STRUCT STRUCT_TYPE option_identifier_array_declaration
rule 83   declaration -> UNION STRUCT_TYPE option_identifier_array_declaration
rule 84   declaration -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 85   declaration -> OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 86   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR
rule 87   declaration -> OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp
rule 88   type_define -> INTDECLARATION
rule 89   type_define -> FLOATDECLARATION
rule 90   type_define -> CHARDECLARATION
rule 91   type_define -> STRDECLARATION
rule 92   type_define -> VOIDDECLARATION
rule 93   type_define -> FILEDECLARATION
rule 94   option_identifier_array_declaration -> identifier inner_option_identifier_array_declaration
rule 95   option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration
rule 96   option_identifier_array_declaration -> identifier ASS_P ass_right inner_option_identifier_array_declaration
rule 97   option_identifier_array_declaration -> ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration
rule 98   option_identifier_array_declaration -> ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration
rule 99   option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration
rule 100  option_identifier_array_declaration -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration
rule 101  option_identifier_array_declaration -> MUL option_identifier_array_declaration
rule 102  inner_option_identifier_array_declaration -> COMMA option_identifier_array_declaration
rule 103  inner_option_identifier_array_declaration -> COMMA error
rule 104  inner_option_identifier_array_declaration ->		/* empty */
rule 109  ass_statement -> ass_left assign_operator ass_right
rule 110  ass_left -> identifier
rule 111  ass_left -> struct_member_exp
rule 112  ass_left -> array
rule 113  ass_left -> point_exp
rule 114  ass_left -> OPEN_PAR ass_left CLOSE_PAR
rule 115  ass_left -> NEXT ass_left
rule 116  ass_left -> leftaddrshift
rule 117  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 118  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 119  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 120  leftaddrshift -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 121  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 122  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 123  leftaddrshift -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 124  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 125  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 126  leftaddrshift -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 127  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 128  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 129  leftaddrshift -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 130  assign_operator -> ASS_P
rule 131  assign_operator -> ASS_N
rule 132  ass_right -> ari_exp
rule 133  ass_right -> array_exp
rule 134  ass_right -> strliteral
rule 135  ass_right -> OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function
rule 136  ass_right -> OPEN_PAR ass_right CLOSE_PAR
rule 137  ass_right -> rightaddrshift
rule 138  rightaddrshift -> MUL OPEN_PAR leftaddrshift CLOSE_PAR
rule 139  array -> ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 140  array -> OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 141  array -> OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 142  array -> OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 143  array -> OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 144  array -> OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 145  array -> OPEN_PAR array CLOSE_PAR
rule 146  option_ari_exp -> COMMA ari_exp option_ari_exp
rule 147  option_ari_exp -> COMMA error
rule 148  option_ari_exp ->		/* empty */
rule 149  point_exp -> MUL identifier
rule 150  point_exp -> MUL point_exp
rule 151  point_exp -> MUL array
rule 152  point_exp -> OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR
rule 153  point_exp -> MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp
rule 154  point_exp -> MUL OPEN_PAR ari_exp CLOSE_PAR
rule 155  point_exp -> OPEN_PAR point_exp CLOSE_PAR
rule 156  ari_exp -> simple_ari_exp
rule 157  ari_exp -> simple_ari_exp relation_operator ari_exp
rule 158  ari_exp -> ari_exp ari_operator simple_ari_exp
rule 159  ari_exp -> IF bool_exp THEN ari_exp option_exp_else_statement
rule 160  type_cast_alg_exp -> simple_ari_exp
rule 161  type_cast_alg_exp -> simple_ari_exp ari_operator simple_ari_exp
rule 162  option_exp_else_statement -> ELSE ari_exp
rule 163  option_exp_else_statement ->		/* empty */
rule 164  simple_ari_exp -> member_in_exp
rule 165  simple_ari_exp -> simple_ari_exp bi_operator member_in_exp
rule 166  member_in_exp -> intliteral
rule 167  member_in_exp -> SUB member_in_exp
rule 168  member_in_exp -> BNE member_in_exp
rule 169  member_in_exp -> POINTERNULL
rule 170  member_in_exp -> floatliteral
rule 171  member_in_exp -> identifier
rule 172  member_in_exp -> array
rule 173  member_in_exp -> point_exp
rule 174  member_in_exp -> function
rule 175  member_in_exp -> OPEN_PAR ari_exp CLOSE_PAR
rule 176  member_in_exp -> charliteral
rule 177  member_in_exp -> address_exp
rule 178  member_in_exp -> type_cast
rule 179  member_in_exp -> struct_member_exp
rule 180  bi_operator -> MUL
rule 181  bi_operator -> DIV
rule 182  bi_operator -> MOD
rule 183  bi_operator -> LST
rule 184  bi_operator -> RST
rule 185  bi_operator -> ADDRESS
rule 186  bi_operator -> INTER_OR
rule 187  bi_operator -> CON
rule 188  ari_operator -> ADD
rule 189  ari_operator -> SUB
rule 190  array_exp -> array_exp CON array_exp
rule 191  array_exp -> option_list_value
rule 192  array_exp -> option_struct_list_value
rule 193  array_exp -> OPEN_PAR array_exp CLOSE_PAR
rule 194  option_list_value -> OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR
rule 195  option_list_value -> OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR
rule 196  option_list_value -> OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR
rule 197  option_struct_list_value -> OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR
rule 198  option_struct_list_value -> OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR
rule 199  option_struct_list_value -> OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR
rule 200  inner_option_list_value -> COMMA ari_exp inner_option_list_value
rule 201  inner_option_list_value -> COMMA strliteral inner_option_list_value
rule 202  inner_option_list_value -> COMMA array_exp inner_option_list_value
rule 203  inner_option_list_value ->		/* empty */
rule 204  inner_option_list_value -> COMMA error
rule 205  address_exp -> ADDRESS identifier
rule 206  address_exp -> ADDRESS array
rule 207  address_exp -> ADDRESS struct_member_exp
rule 208  address_exp -> ADDRESS address_exp
rule 209  address_exp -> OPEN_PAR address_exp CLOSE_PAR
rule 210  type_cast -> OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 211  type_cast -> OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp
rule 212  type_cast -> OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 213  type_cast -> OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 214  type_cast -> OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 215  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp
rule 216  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp
rule 217  type_cast -> OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element
rule 218  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element
rule 219  type_cast -> OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element
rule 220  type_cast -> OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element
rule 221  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element
rule 222  type_cast -> OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element
rule 223  type_cast -> OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 224  type_cast -> OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element
rule 225  type_cast -> OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element
rule 226  type_cast -> OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 227  type_cast -> OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element
rule 228  type_cast -> OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element
rule 229  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 230  type_cast -> OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element
rule 231  type_cast -> OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 232  type_cast -> OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element
rule 233  casted_element -> type_cast_alg_exp
rule 234  bool_exp -> prime_bool_exp
rule 235  bool_exp -> NEGATION bool_exp
rule 236  bool_exp -> bool_exp AND bool_exp
rule 237  bool_exp -> bool_exp OR bool_exp
rule 238  bool_exp -> OPEN_PAR bool_exp CLOSE_PAR
rule 239  prime_bool_exp -> ari_exp relation_operator ari_exp
rule 240  prime_bool_exp -> MY_TRUE
rule 241  prime_bool_exp -> MY_FALSE
rule 242  prime_bool_exp -> ari_exp
rule 243  prime_bool_exp -> ari_exp EQ strliteral
rule 244  prime_bool_exp -> ari_exp NE strliteral
rule 245  prime_bool_exp -> strliteral EQ ari_exp
rule 246  prime_bool_exp -> strliteral NE ari_exp
rule 247  prime_bool_exp -> ari_exp EQ POINTERNULL
rule 248  prime_bool_exp -> ari_exp NE POINTERNULL
rule 249  prime_bool_exp -> POINTERNULL EQ ari_exp
rule 250  prime_bool_exp -> POINTERNULL NE ari_exp
rule 251  prime_bool_exp -> ari_exp EQ charliteral
rule 252  prime_bool_exp -> ari_exp NE charliteral
rule 253  relation_operator -> GE
rule 254  relation_operator -> LE
rule 255  relation_operator -> NE
rule 256  relation_operator -> GT
rule 257  relation_operator -> LT
rule 258  relation_operator -> EQ
rule 259  sign_type_define -> UNSIGNED INTDECLARATION
rule 260  sign_type_define -> UNSIGNED CHARDECLARATION
rule 261  all_type_define -> sign_type_define
rule 262  all_type_define -> type_define
rule 263  option_function_parameter_list -> all_type_define identifier inner_option_define_identifier
rule 264  option_function_parameter_list -> all_type_define inner_option_define_identifier
rule 265  option_function_parameter_list -> STRUCT_TYPE identifier inner_option_define_identifier
rule 266  option_function_parameter_list -> STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 267  option_function_parameter_list -> STRUCT_TYPE MUL MUL identifier inner_option_define_identifier
rule 268  option_function_parameter_list -> STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 269  option_function_parameter_list -> ID identifier inner_option_define_identifier
rule 270  option_function_parameter_list -> ID MUL identifier inner_option_define_identifier
rule 271  option_function_parameter_list -> ID MUL MUL identifier inner_option_define_identifier
rule 272  option_function_parameter_list -> ID identifier ARRAY inner_option_define_identifier
rule 273  option_function_parameter_list -> STRUCT_TYPE inner_option_define_identifier
rule 274  option_function_parameter_list -> STRUCT_TYPE MUL inner_option_define_identifier
rule 275  option_function_parameter_list -> STRUCT_TYPE MUL MUL inner_option_define_identifier
rule 276  option_function_parameter_list -> ID inner_option_define_identifier
rule 277  option_function_parameter_list -> ID MUL inner_option_define_identifier
rule 278  option_function_parameter_list -> ID MUL MUL inner_option_define_identifier
rule 279  option_function_parameter_list -> all_type_define identifier ARRAY inner_option_define_identifier
rule 280  option_function_parameter_list -> all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 281  option_function_parameter_list -> all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 282  option_function_parameter_list -> all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 283  option_function_parameter_list -> all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 284  option_function_parameter_list -> all_type_define MUL identifier inner_option_define_identifier
rule 285  option_function_parameter_list -> all_type_define MUL inner_option_define_identifier
rule 286  option_function_parameter_list -> all_type_define MUL MUL identifier inner_option_define_identifier
rule 287  option_function_parameter_list -> OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 288  option_function_parameter_list ->		/* empty */
rule 289  inner_option_define_identifier -> COMMA all_type_define identifier inner_option_define_identifier
rule 290  inner_option_define_identifier -> COMMA all_type_define inner_option_define_identifier
rule 291  inner_option_define_identifier -> COMMA ID identifier inner_option_define_identifier
rule 292  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier inner_option_define_identifier
rule 293  inner_option_define_identifier -> COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier
rule 294  inner_option_define_identifier -> COMMA ID identifier ARRAY inner_option_define_identifier
rule 295  inner_option_define_identifier -> COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier
rule 296  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY inner_option_define_identifier
rule 297  inner_option_define_identifier -> COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier
rule 298  inner_option_define_identifier -> COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier
rule 299  inner_option_define_identifier ->		/* empty */
rule 300  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 301  inner_option_define_identifier -> COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier
rule 302  inner_option_define_identifier -> COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier
rule 303  inner_option_define_identifier -> COMMA all_type_define MUL identifier inner_option_define_identifier
rule 304  inner_option_define_identifier -> COMMA all_type_define MUL inner_option_define_identifier
rule 305  inner_option_define_identifier -> COMMA error
rule 306  option_function_identifier -> ass_right inner_option_function_identifier
rule 307  option_function_identifier -> ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 308  option_function_identifier ->		/* empty */
rule 309  option_function_identifier -> ADDRESS error
rule 310  inner_option_function_identifier -> COMMA ass_right inner_option_function_identifier
rule 311  inner_option_function_identifier -> COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier
rule 312  inner_option_function_identifier ->		/* empty */
rule 313  inner_option_function_identifier -> COMMA error
rule 314  statement_bpar -> OPEN_BPAR statement CLOSE_BPAR
rule 315  statement_bpar -> error CLOSE_BPAR
rule 316  bool_par -> OPEN_PAR bool_exp CLOSE_PAR
rule 317  bool_par -> error CLOSE_PAR
rule 318  identifier -> ID
rule 319  identifier -> OPEN_PAR identifier CLOSE_PAR
rule 320  strliteral -> STRLITERAL
rule 321  intliteral -> INTLITERAL
rule 322  charliteral -> CHARLITERAL
rule 323  floatliteral -> FLOATLITERAL
rule 324  option_frame_identifier -> COMMA identifier option_frame_identifier
rule 325  option_frame_identifier ->		/* empty */
rule 326  option_frame_identifier -> COMMA error
rule 327  option_projection ->		/* empty */
rule 328  option_projection -> COMMA statement option_projection
rule 329  imply_pre -> prime_bool_exp
rule 330  imply_pre -> NEGATION imply_pre
rule 331  imply_pre -> imply_pre AND imply_pre
rule 332  imply_pre -> imply_pre OR imply_pre
rule 333  imply_pre -> OPEN_PAR imply_pre CLOSE_PAR
rule 334  while_statement -> WHILE bool_par statement_bpar
rule 335  for_statement -> FOR ari_exp TIMES DO statement_bpar
rule 336  extend_for_statement -> FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar
rule 337  for_sta_init -> ass_statement
rule 338  for_sta_init -> declaration
rule 339  for_sta_init ->		/* empty */
rule 340  for_sta_condition -> bool_exp
rule 341  for_sta_condition ->		/* empty */
rule 342  for_sta_control -> ass_statement
rule 343  for_sta_control ->		/* empty */
rule 344  if_statement -> IF bool_exp THEN statement_bpar option_else_statement
rule 345  option_else_statement -> ELSE statement_bpar
rule 346  option_else_statement ->		/* empty */
rule 347  output_statement -> DISPLAY OPEN_PAR ass_right CLOSE_PAR
rule 348  output_statement -> DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR
rule 349  option_output ->		/* empty */
rule 350  option_output -> COMMA ass_right option_output
rule 351  input_statement -> REQUEST OPEN_PAR identifier CLOSE_PAR
rule 352  input_statement -> REQUEST OPEN_PAR identifier option_input CLOSE_PAR
rule 353  input_statement -> REQUEST OPEN_PAR array CLOSE_PAR
rule 354  input_statement -> REQUEST OPEN_PAR array option_input CLOSE_PAR
rule 355  input_statement -> REQUEST OPEN_PAR struct_member_exp CLOSE_PAR
rule 356  option_input ->		/* empty */
rule 357  option_input -> COMMA identifier option_input
rule 358  option_input -> COMMA array option_input
rule 359  struct_member_exp -> identifier DOT identifier option_struct_member_exp
rule 360  struct_member_exp -> array DOT identifier option_struct_member_exp
rule 361  struct_member_exp -> point_exp DOT identifier option_struct_member_exp
rule 362  struct_member_exp -> identifier DOT array option_struct_member_exp
rule 363  struct_member_exp -> array DOT array option_struct_member_exp
rule 364  struct_member_exp -> point_exp DOT array option_struct_member_exp
rule 365  struct_member_exp -> identifier IMPLY identifier option_struct_member_exp
rule 366  struct_member_exp -> array IMPLY identifier option_struct_member_exp
rule 367  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp
rule 368  struct_member_exp -> point_exp IMPLY identifier option_struct_member_exp
rule 369  struct_member_exp -> identifier IMPLY array option_struct_member_exp
rule 370  struct_member_exp -> array IMPLY array option_struct_member_exp
rule 371  struct_member_exp -> OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp
rule 372  struct_member_exp -> identifier DOT function
rule 373  struct_member_exp -> identifier IMPLY function
rule 374  struct_member_exp -> point_exp IMPLY array option_struct_member_exp
rule 375  struct_member_exp -> OPEN_PAR struct_member_exp CLOSE_PAR
rule 376  option_struct_member_exp ->		/* empty */
rule 377  option_struct_member_exp -> DOT identifier option_struct_member_exp
rule 378  option_struct_member_exp -> DOT array option_struct_member_exp
rule 379  option_struct_member_exp -> IMPLY identifier option_struct_member_exp
rule 380  option_struct_member_exp -> IMPLY array option_struct_member_exp
rule 381  option_struct_member_exp -> DOT function
rule 382  option_struct_member_exp -> IMPLY function

Terminals, with rules where they appear

$ (-1)
error (256) 103 108 147 204 305 309 313 315 317 326
IF (258) 159 344
ELSE (259) 162 345
EMPTY (260) 18 45
AWAIT (261) 42
PROJECTION (262) 23 56 57
PBEGIN (263) 2
PEND (264) 2
POINTERNULL (265) 169 247 248 249 250
ARRAY (266) 97 98 268 272 279 280 283 294 295 296 297 302
STRUCT (267) 73 80 82 229 231
DOT (268) 359 360 361 362 363 364 372 377 378 381
UNION (269) 74 81 83
FILEDECLARATION (270) 93
MORE (271) 19 46
DEFINE (272) 25 58
MY_TRUE (273) 15 240
MY_FALSE (274) 16 241
EXIST (275) 63
FRAME (276) 55
FOR (277) 335 336
WHILE (278) 334
DO (279) 335
TRUE (280) 50
FALSE (281) 51
REPEAT (282) 43
UNTIL (283) 43
DISPLAY (284) 347 348
SKIP (285) 14 44
THEN (286) 159 344
COMMA (287) 28 102 103 106 108 146 147 200 201 202 204 282 289 290
    291 292 293 294 295 296 297 298 300 301 302 303 304 305 310 311
    313 324 326 328 336 350 357 358
COLON (288) 25 63
INTDECLARATION (289) 88 119 123 126 127 128 129 140 141 210 213 215
    217 218 223 224 259
STRDECLARATION (290) 91
POINTERDECLARATION (291)
CHARDECLARATION (292) 90 117 118 121 122 123 124 125 126 127 128 143
    144 212 214 216 220 221 226 227 260
VOIDDECLARATION (293) 92 222 228
FLOATDECLARATION (294) 89 120 142 211 219 225
LISTDECLARATION (295)
OPEN_PAR (296) 27 39 40 41 42 43 47 52 54 55 58 59 60 64 69 70 71 84
    85 86 87 114 117 118 119 120 121 122 123 124 125 126 127 128 129
    135 136 138 140 141 142 143 144 145 152 153 154 155 175 193 209
    210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225
    226 227 228 229 230 231 232 238 287 298 307 311 316 319 333 336
    347 348 351 352 353 354 355 367 371 375
CLOSE_PAR (297) 27 39 40 41 42 43 47 52 54 55 58 59 60 64 69 70 71
    84 85 86 87 114 117 118 119 120 121 122 123 124 125 126 127 128
    129 135 136 138 140 141 142 143 144 145 152 153 154 155 175 193
    209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224
    225 226 227 228 229 230 231 232 238 287 298 307 311 316 317 319
    333 336 347 348 351 352 353 354 355 367 371 375
TIMES (298) 335
OPEN_BPAR (299) 23 43 56 57 58 59 60 63 72 197 198 199 314
CLOSE_BPAR (300) 23 43 56 57 58 59 60 63 72 197 198 199 314 315
OPEN_MPAR (301) 54 86 87 95 99 100 105 106 117 118 119 120 121 122
    123 124 125 126 127 128 129 139 140 141 142 143 144 152 194 195
    196 281 282 283 300 301 302
CLOSE_MPAR (302) 54 86 87 95 99 100 105 106 117 118 119 120 121 122
    123 124 125 126 127 128 129 139 140 141 142 143 144 152 194 195
    196 281 282 283 300 301 302
FUNCTION (303)
OVER (304)
CYLINDER (305)
OVEREP (306)
INTER_OR (307) 186
NON_DETERMINED (308)
SEND (309)
RECEIVE (310)
PROCESS (311) 60
CHANNEL (312)
PUT (313)
GET (314)
ERROR_TOKEN (315)
STRFUNCHEAD (316)
STRFUNCTAIL (317)
STRFUNCCAT (318)
STRFUNCCMP (319)
STRFUNCCPY (320)
STRFUNCLEN (321)
EXTERN (322) 70
UNSIGNED (323) 76 118 122 124 125 126 128 141 144 215 216 218 221 224
    227 259 260
SIGNED (324) 75 213 214
CHOP (325) 8 32
IMPLY (326) 54 365 366 367 368 369 370 371 373 374 379 380 382
IFF (327) 6
PROPIMPLY (328) 7
OR (329) 5 31 237 332
PARALLEL (330) 53
AND (331) 4 30 55 66 236 331
ASS_P (332) 58 60 87 96 97 98 99 100 130
ASS_N (333) 131
CON (334) 187 190
ADDRESS (335) 185 205 206 207 208 309
NE (336) 244 246 248 250 252 255
EQ (337) 243 245 247 249 251 258
GE (338) 253
LE (339) 254
GT (340) 256
LT (341) 257
LST (342) 183
RST (343) 184
ADD (344) 188
SUB (345) 167 189
MUL (346) 84 85 86 87 101 117 118 119 120 121 122 123 124 125 126 127
    128 129 138 140 141 142 143 144 149 150 151 153 154 180 217 218
    219 220 221 222 223 224 225 226 227 228 229 230 231 232 266 267
    270 271 274 275 277 278 280 284 285 286 287 293 297 298 303 304
DIV (347) 181
MOD (348) 182
BNE (349) 168
CHOPSTAR (350) 26
NEXT (351) 13 39 115
NEGATION (352) 22 235 330
LENGTH (353) 17 47
REQUEST (354) 351 352 353 354 355
FINAL (355) 21 52
KEEP (356) 10 40
ALWAYS (357) 9 41
HALT (358) 20
W_NEXT (359) 12
PREFIX (360)
SOMETIMES (361) 11
ID (362) 24 25 58 59 60 69 70 73 74 80 81 86 87 95 97 98 99 100 105
    106 139 140 141 142 143 144 269 270 271 272 276 277 278 291 294
    307 311 318
STRLITERAL (363) 320
STRUCT_TYPE (364) 79 82 83 229 230 231 232 265 266 267 268 273 274
    275 292 293 295
INTLITERAL (365) 117 118 119 120 121 122 123 124 125 126 127 128 129
    321
FLOATLITERAL (366) 323
CHARLITERAL (367) 322

Nonterminals, with rules where they appear

program (113)
    on left: 1
gComplexProposition (114)
    on left: 2 3, on right: 1
complexProposition (115)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27, on right: 2 4 5 6 7 8 9 10 11 12 13 20 21 22 23 26
    27 28
poptional_projection (116)
    on left: 28 29, on right: 23 28
statement (117)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
    48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64,
    on right: 1 30 31 32 39 40 41 43 52 53 54 55 56 57 59 63 64 67
    314 328
option_struct_declaration (118)
    on left: 65 66, on right: 66 72
empty_statement (119)
    on left: 67 68, on right: 58 60
function (120)
    on left: 69 70 71, on right: 62 135 174 372 373 381 382
struct_define_statement (121)
    on left: 72, on right: 61
struct_identifier (122)
    on left: 73 74, on right: 72
sign_declaration (123)
    on left: 75 76 77, on right: 34 65 66
declaration (124)
    on left: 78 79 80 81 82 83 84 85 86 87, on right: 75 76 77 338
type_define (125)
    on left: 88 89 90 91 92 93, on right: 59 78 135 262
option_identifier_array_declaration (126)
    on left: 94 95 96 97 98 99 100 101, on right: 78 79 80 81 82 83
    101 102
inner_option_identifier_array_declaration (127)
    on left: 102 103 104, on right: 94 95 96 97 98 99 100
ass_statement (128)
    on left: 109, on right: 33 337 342
ass_left (129)
    on left: 110 111 112 113 114 115 116, on right: 109 114 115
leftaddrshift (130)
    on left: 117 118 119 120 121 122 123 124 125 126 127 128 129,
    on right: 116 138
assign_operator (131)
    on left: 130 131, on right: 109
ass_right (132)
    on left: 132 133 134 135 136 137, on right: 96 109 136 306 310
    347 348 350
rightaddrshift (133)
    on left: 138, on right: 137
array (134)
    on left: 139 140 141 142 143 144 145, on right: 71 112 145 151
    172 206 353 354 358 360 362 363 364 366 369 370 371 374 378 380
option_ari_exp (135)
    on left: 146 147 148, on right: 86 87 95 99 100 105 106 117 118
    119 120 121 122 123 124 125 126 127 128 129 139 140 141 142 143
    144 146 152
point_exp (136)
    on left: 149 150 151 152 153 154 155, on right: 113 150 152 155
    173 361 364 368 374
ari_exp (137)
    on left: 156 157 158 159, on right: 17 47 86 87 95 99 100 105 106
    117 118 119 120 121 122 123 124 125 126 127 128 129 132 139 140
    141 142 143 144 146 152 153 154 157 158 159 162 175 194 197 200
    239 242 243 244 245 246 247 248 249 250 251 252 281 282 283 300
    301 302 335
type_cast_alg_exp (138)
    on left: 160 161, on right: 210 211 212 213 214 215 216 233
option_exp_else_statement (139)
    on left: 162 163, on right: 159
simple_ari_exp (140)
    on left: 164 165, on right: 156 157 158 160 161 165
member_in_exp (141)
    on left: 166 167 168 169 170 171 172 173 174 175 176 177 178 179
   , on right: 164 165 167 168
bi_operator (142)
    on left: 180 181 182 183 184 185 186 187, on right: 165
ari_operator (143)
    on left: 188 189, on right: 158 161
array_exp (144)
    on left: 190 191 192 193, on right: 87 97 99 133 190 193 196 199
    202
option_list_value (145)
    on left: 194 195 196, on right: 191
option_struct_list_value (146)
    on left: 197 198 199, on right: 192
inner_option_list_value (147)
    on left: 200 201 202 203 204, on right: 194 195 196 197 198 199
    200 201 202
address_exp (148)
    on left: 205 206 207 208 209, on right: 177 208 209 367 371
type_cast (149)
    on left: 210 211 212 213 214 215 216 217 218 219 220 221 222 223
    224 225 226 227 228 229 230 231 232, on right: 178
casted_element (150)
    on left: 233, on right: 217 218 219 220 221 222 223 224 225 226
    227 228 229 230 231 232
bool_exp (151)
    on left: 234 235 236 237 238, on right: 42 43 159 235 236 237 238
    316 340 344
prime_bool_exp (152)
    on left: 239 240 241 242 243 244 245 246 247 248 249 250 251 252
   , on right: 25 234 329
relation_operator (153)
    on left: 253 254 255 256 257 258, on right: 157 239
sign_type_define (154)
    on left: 259 260, on right: 261
all_type_define (155)
    on left: 261 262, on right: 153 263 264 279 280 281 282 283 284
    285 286 289 290 296 297 300 301 302 303 304
option_function_parameter_list (156)
    on left: 263 264 265 266 267 268 269 270 271 272 273 274 275 276
    277 278 279 280 281 282 283 284 285 286 287 288,
    on right: 58 59 60 84 85 86 87 135 287 298
inner_option_define_identifier (157)
    on left: 289 290 291 292 293 294 295 296 297 298 299 300 301 302
    303 304 305, on right: 63 263 264 265 266 267 268 269 270 271 272
    273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 289
    290 291 292 293 294 295 296 297 298 300 301 302 303 304
option_function_identifier (158)
    on left: 306 307 308 309, on right: 69 70 71 307 311
inner_option_function_identifier (159)
    on left: 310 311 312 313, on right: 306 307 310 311
statement_bpar (160)
    on left: 314 315, on right: 56 57 334 335 336 344 345
bool_par (161)
    on left: 316 317, on right: 334
identifier (162)
    on left: 318 319, on right: 55 63 84 85 94 96 110 149 171 205 263
    265 266 267 268 269 270 271 272 279 280 281 282 283 284 286 287
    289 291 292 293 294 295 296 297 298 300 301 302 303 319 324 351
    352 357 359 360 361 362 365 366 367 368 369 372 373 377 379
strliteral (163)
    on left: 320, on right: 98 100 134 135 195 198 201 243 244 245
    246
intliteral (164)
    on left: 321, on right: 166
charliteral (165)
    on left: 322, on right: 176 251 252
floatliteral (166)
    on left: 323, on right: 170
option_frame_identifier (167)
    on left: 324 325 326, on right: 55 324
option_projection (168)
    on left: 327 328, on right: 56 328
imply_pre (169)
    on left: 329 330 331 332 333, on right: 54 330 331 332 333
while_statement (170)
    on left: 334, on right: 36
for_statement (171)
    on left: 335, on right: 37
extend_for_statement (172)
    on left: 336, on right: 38
for_sta_init (173)
    on left: 337 338 339, on right: 336
for_sta_condition (174)
    on left: 340 341, on right: 336
for_sta_control (175)
    on left: 342 343, on right: 336
if_statement (176)
    on left: 344, on right: 35
option_else_statement (177)
    on left: 345 346, on right: 344
output_statement (178)
    on left: 347 348, on right: 49
option_output (179)
    on left: 349 350, on right: 348 350
input_statement (180)
    on left: 351 352 353 354 355, on right: 48
option_input (181)
    on left: 356 357 358, on right: 352 354 357 358
struct_member_exp (182)
    on left: 359 360 361 362 363 364 365 366 367 368 369 370 371 372
    373 374 375, on right: 111 179 207 355 375
option_struct_member_exp (183)
    on left: 376 377 378 379 380 381 382, on right: 359 360 361 362
    363 364 365 366 367 368 369 370 371 374 377 378 379 380


state 0

    PBEGIN	shift, and go to state 1

    $default	reduce using rule 3 (gComplexProposition)

    program	go to state 1167
    gComplexProposition	go to state 2



state 1

    gComplexProposition  ->  PBEGIN . complexProposition PEND   (rule 2)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 21



state 2

    program  ->  gComplexProposition . statement   (rule 1)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 59
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78



state 3

    complexProposition  ->  EMPTY .   (rule 18)

    $default	reduce using rule 18 (complexProposition)



state 4

    complexProposition  ->  MORE .   (rule 19)

    $default	reduce using rule 19 (complexProposition)



state 5

    complexProposition  ->  DEFINE . ID COLON prime_bool_exp   (rule 25)

    ID  	shift, and go to state 79



state 6

    complexProposition  ->  MY_TRUE .   (rule 15)

    $default	reduce using rule 15 (complexProposition)



state 7

    complexProposition  ->  MY_FALSE .   (rule 16)

    $default	reduce using rule 16 (complexProposition)



state 8

    complexProposition  ->  SKIP .   (rule 14)

    $default	reduce using rule 14 (complexProposition)



state 9

    complexProposition  ->  OPEN_PAR . complexProposition CLOSE_PAR   (rule 27)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 80



state 10

    complexProposition  ->  OPEN_BPAR . complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 81



state 11

    complexProposition  ->  NEXT . complexProposition   (rule 13)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 82



state 12

    complexProposition  ->  NEGATION . complexProposition   (rule 22)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 83



state 13

    complexProposition  ->  LENGTH . ari_exp   (rule 17)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 96
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 14

    complexProposition  ->  FINAL . complexProposition   (rule 21)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 106



state 15

    complexProposition  ->  KEEP . complexProposition   (rule 10)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 107



state 16

    complexProposition  ->  ALWAYS . complexProposition   (rule 9)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 108



state 17

    complexProposition  ->  HALT . complexProposition   (rule 20)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 109



state 18

    complexProposition  ->  W_NEXT . complexProposition   (rule 12)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 110



state 19

    complexProposition  ->  SOMETIMES . complexProposition   (rule 11)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 111



state 20

    complexProposition  ->  ID .   (rule 24)

    $default	reduce using rule 24 (complexProposition)



state 21

    gComplexProposition  ->  PBEGIN complexProposition . PEND   (rule 2)
    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    PEND	shift, and go to state 112
    CHOP	shift, and go to state 113
    IFF 	shift, and go to state 114
    PROPIMPLY	shift, and go to state 115
    OR  	shift, and go to state 116
    AND 	shift, and go to state 117
    CHOPSTAR	shift, and go to state 118



state 22

    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 344)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 123
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    bool_exp	go to state 126
    prime_bool_exp	go to state 127
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 23

    statement  ->  EMPTY .   (rule 45)

    $default	reduce using rule 45 (statement)



state 24

    statement  ->  AWAIT . OPEN_PAR bool_exp CLOSE_PAR   (rule 42)

    OPEN_PAR	shift, and go to state 129



state 25

    struct_identifier  ->  STRUCT . ID   (rule 73)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 80)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 82)

    ID  	shift, and go to state 130
    STRUCT_TYPE	shift, and go to state 131



state 26

    struct_identifier  ->  UNION . ID   (rule 74)
    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 81)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 83)

    ID  	shift, and go to state 132
    STRUCT_TYPE	shift, and go to state 133



state 27

    type_define  ->  FILEDECLARATION .   (rule 93)

    $default	reduce using rule 93 (type_define)



state 28

    statement  ->  MORE .   (rule 46)

    $default	reduce using rule 46 (statement)



state 29

    statement  ->  DEFINE . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 58)

    ID  	shift, and go to state 134



state 30

    statement  ->  EXIST . identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 63)

    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 137



state 31

    statement  ->  FRAME . OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 55)

    OPEN_PAR	shift, and go to state 138



state 32

    for_statement  ->  FOR . ari_exp TIMES DO statement_bpar   (rule 335)
    extend_for_statement  ->  FOR . OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 336)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 139
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 140
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 33

    while_statement  ->  WHILE . bool_par statement_bpar   (rule 334)

    error	shift, and go to state 141
    OPEN_PAR	shift, and go to state 142

    bool_par	go to state 143



state 34

    statement  ->  TRUE .   (rule 50)

    $default	reduce using rule 50 (statement)



state 35

    statement  ->  FALSE .   (rule 51)

    $default	reduce using rule 51 (statement)



state 36

    statement  ->  REPEAT . OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 43)

    OPEN_BPAR	shift, and go to state 144



state 37

    output_statement  ->  DISPLAY . OPEN_PAR ass_right CLOSE_PAR   (rule 347)
    output_statement  ->  DISPLAY . OPEN_PAR ass_right option_output CLOSE_PAR   (rule 348)

    OPEN_PAR	shift, and go to state 145



state 38

    statement  ->  SKIP .   (rule 44)

    $default	reduce using rule 44 (statement)



state 39

    type_define  ->  INTDECLARATION .   (rule 88)

    $default	reduce using rule 88 (type_define)



state 40

    type_define  ->  STRDECLARATION .   (rule 91)

    $default	reduce using rule 91 (type_define)



state 41

    type_define  ->  CHARDECLARATION .   (rule 90)

    $default	reduce using rule 90 (type_define)



state 42

    type_define  ->  VOIDDECLARATION .   (rule 92)

    $default	reduce using rule 92 (type_define)



state 43

    type_define  ->  FLOATDECLARATION .   (rule 89)

    $default	reduce using rule 89 (type_define)



state 44

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 54)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 64)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 146
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    POINTERNULL	shift, and go to state 119
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 147
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 148
    BNE 	shift, and go to state 89
    NEXT	shift, and go to state 51
    NEGATION	shift, and go to state 149
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    STRUCT_TYPE	shift, and go to state 58
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    statement	go to state 150
    function	go to state 151
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 152
    leftaddrshift	go to state 68
    array	go to state 153
    point_exp	go to state 154
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 155
    type_cast	go to state 100
    prime_bool_exp	go to state 156
    identifier	go to state 157
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    imply_pre	go to state 158
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 159



state 45

    statement  ->  OPEN_BPAR . statement option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 56)
    statement  ->  OPEN_BPAR . statement CLOSE_BPAR PROJECTION statement_bpar   (rule 57)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 160
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78



state 46

    statement  ->  PROCESS . ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    ID  	shift, and go to state 161



state 47

    function  ->  EXTERN . ID OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)

    ID  	shift, and go to state 162



state 48

    sign_declaration  ->  UNSIGNED . declaration   (rule 76)

    STRUCT	shift, and go to state 163
    UNION	shift, and go to state 164
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 165
    STRUCT_TYPE	shift, and go to state 58

    declaration	go to state 166
    type_define	go to state 167



state 49

    sign_declaration  ->  SIGNED . declaration   (rule 75)

    STRUCT	shift, and go to state 163
    UNION	shift, and go to state 164
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 165
    STRUCT_TYPE	shift, and go to state 58

    declaration	go to state 168
    type_define	go to state 167



state 50

    point_exp  ->  MUL . identifier   (rule 149)
    point_exp  ->  MUL . point_exp   (rule 150)
    point_exp  ->  MUL . array   (rule 151)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 154)

    OPEN_PAR	shift, and go to state 169
    MUL 	shift, and go to state 50
    ID  	shift, and go to state 170

    array	go to state 171
    point_exp	go to state 172
    identifier	go to state 173



state 51

    statement  ->  NEXT . OPEN_PAR statement CLOSE_PAR   (rule 39)
    ass_left  ->  NEXT . ass_left   (rule 115)

    OPEN_PAR	shift, and go to state 174
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 175
    ID  	shift, and go to state 170

    ass_left	go to state 176
    leftaddrshift	go to state 68
    array	go to state 177
    point_exp	go to state 70
    identifier	go to state 71
    struct_member_exp	go to state 78



state 52

    statement  ->  LENGTH . OPEN_PAR ari_exp CLOSE_PAR   (rule 47)

    OPEN_PAR	shift, and go to state 178



state 53

    input_statement  ->  REQUEST . OPEN_PAR identifier CLOSE_PAR   (rule 351)
    input_statement  ->  REQUEST . OPEN_PAR identifier option_input CLOSE_PAR   (rule 352)
    input_statement  ->  REQUEST . OPEN_PAR array CLOSE_PAR   (rule 353)
    input_statement  ->  REQUEST . OPEN_PAR array option_input CLOSE_PAR   (rule 354)
    input_statement  ->  REQUEST . OPEN_PAR struct_member_exp CLOSE_PAR   (rule 355)

    OPEN_PAR	shift, and go to state 179



state 54

    statement  ->  FINAL . OPEN_PAR statement CLOSE_PAR   (rule 52)

    OPEN_PAR	shift, and go to state 180



state 55

    statement  ->  KEEP . OPEN_PAR statement CLOSE_PAR   (rule 40)

    OPEN_PAR	shift, and go to state 181



state 56

    statement  ->  ALWAYS . OPEN_PAR statement CLOSE_PAR   (rule 41)

    OPEN_PAR	shift, and go to state 182



state 57

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    identifier  ->  ID .   (rule 318)

    OPEN_PAR	shift, and go to state 183
    OPEN_MPAR	shift, and go to state 184

    $default	reduce using rule 318 (identifier)



state 58

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 79)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 185
    ID  	shift, and go to state 186

    option_identifier_array_declaration	go to state 187
    identifier	go to state 188



state 59

    program  ->  gComplexProposition statement .   (rule 1)
    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)

    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192

    $default	reduce using rule 1 (program)



state 60

    statement  ->  function .   (rule 62)

    $default	reduce using rule 62 (statement)



state 61

    statement  ->  struct_define_statement .   (rule 61)

    $default	reduce using rule 61 (statement)



state 62

    struct_define_statement  ->  struct_identifier . OPEN_BPAR option_struct_declaration CLOSE_BPAR   (rule 72)

    OPEN_BPAR	shift, and go to state 193



state 63

    statement  ->  sign_declaration .   (rule 34)

    $default	reduce using rule 34 (statement)



state 64

    sign_declaration  ->  declaration .   (rule 77)

    $default	reduce using rule 77 (sign_declaration)



state 65

    statement  ->  type_define . ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 59)
    declaration  ->  type_define . option_identifier_array_declaration   (rule 78)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 185
    ID  	shift, and go to state 194

    option_identifier_array_declaration	go to state 195
    identifier	go to state 188



state 66

    statement  ->  ass_statement .   (rule 33)

    $default	reduce using rule 33 (statement)



state 67

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 109)

    ASS_P	shift, and go to state 196
    ASS_N	shift, and go to state 197

    assign_operator	go to state 198



state 68

    ass_left  ->  leftaddrshift .   (rule 116)

    $default	reduce using rule 116 (ass_left)



state 69

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    ass_left  ->  array .   (rule 112)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 360)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 363)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 199
    OPEN_PAR	shift, and go to state 200
    IMPLY	shift, and go to state 201

    $default	reduce using rule 112 (ass_left)



state 70

    ass_left  ->  point_exp .   (rule 113)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 361)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 364)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 202
    IMPLY	shift, and go to state 203

    $default	reduce using rule 113 (ass_left)



state 71

    ass_left  ->  identifier .   (rule 110)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 359)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 362)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . DOT function   (rule 372)
    struct_member_exp  ->  identifier . IMPLY function   (rule 373)

    DOT 	shift, and go to state 204
    IMPLY	shift, and go to state 205

    $default	reduce using rule 110 (ass_left)



state 72

    statement  ->  while_statement .   (rule 36)

    $default	reduce using rule 36 (statement)



state 73

    statement  ->  for_statement .   (rule 37)

    $default	reduce using rule 37 (statement)



state 74

    statement  ->  extend_for_statement .   (rule 38)

    $default	reduce using rule 38 (statement)



state 75

    statement  ->  if_statement .   (rule 35)

    $default	reduce using rule 35 (statement)



state 76

    statement  ->  output_statement .   (rule 49)

    $default	reduce using rule 49 (statement)



state 77

    statement  ->  input_statement .   (rule 48)

    $default	reduce using rule 48 (statement)



state 78

    ass_left  ->  struct_member_exp .   (rule 111)

    $default	reduce using rule 111 (ass_left)



state 79

    complexProposition  ->  DEFINE ID . COLON prime_bool_exp   (rule 25)

    COLON	shift, and go to state 206



state 80

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    complexProposition  ->  OPEN_PAR complexProposition . CLOSE_PAR   (rule 27)

    CLOSE_PAR	shift, and go to state 207
    CHOP	shift, and go to state 113
    IFF 	shift, and go to state 114
    PROPIMPLY	shift, and go to state 115
    OR  	shift, and go to state 116
    AND 	shift, and go to state 117
    CHOPSTAR	shift, and go to state 118



state 81

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition . poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    COMMA	shift, and go to state 208
    CHOP	shift, and go to state 113
    IFF 	shift, and go to state 114
    PROPIMPLY	shift, and go to state 115
    OR  	shift, and go to state 116
    AND 	shift, and go to state 117
    CHOPSTAR	shift, and go to state 118

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 209



state 82

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEXT complexProposition .   (rule 13)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 13 (complexProposition)



state 83

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  NEGATION complexProposition .   (rule 22)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 22 (complexProposition)



state 84

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 159)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 123
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    bool_exp	go to state 210
    prime_bool_exp	go to state 127
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 85

    member_in_exp  ->  POINTERNULL .   (rule 169)

    $default	reduce using rule 169 (member_in_exp)



state 86

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 212
    CHARDECLARATION	shift, and go to state 213
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 215
    OPEN_PAR	shift, and go to state 216
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 217
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225



state 87

    address_exp  ->  ADDRESS . identifier   (rule 205)
    address_exp  ->  ADDRESS . array   (rule 206)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 207)
    address_exp  ->  ADDRESS . address_exp   (rule 208)

    OPEN_PAR	shift, and go to state 226
    ADDRESS	shift, and go to state 87
    MUL 	shift, and go to state 50
    ID  	shift, and go to state 170

    array	go to state 227
    point_exp	go to state 228
    address_exp	go to state 229
    identifier	go to state 230
    struct_member_exp	go to state 231



state 88

    member_in_exp  ->  SUB . member_in_exp   (rule 167)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    member_in_exp	go to state 232
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 89

    member_in_exp  ->  BNE . member_in_exp   (rule 168)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    member_in_exp	go to state 233
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 90

    intliteral  ->  INTLITERAL .   (rule 321)

    $default	reduce using rule 321 (intliteral)



state 91

    floatliteral  ->  FLOATLITERAL .   (rule 323)

    $default	reduce using rule 323 (floatliteral)



state 92

    charliteral  ->  CHARLITERAL .   (rule 322)

    $default	reduce using rule 322 (charliteral)



state 93

    member_in_exp  ->  function .   (rule 174)

    $default	reduce using rule 174 (member_in_exp)



state 94

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    member_in_exp  ->  array .   (rule 172)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 360)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 363)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 199
    OPEN_PAR	shift, and go to state 200
    IMPLY	shift, and go to state 201

    DOT 	[reduce using rule 172 (member_in_exp)]
    IMPLY	[reduce using rule 172 (member_in_exp)]
    $default	reduce using rule 172 (member_in_exp)



state 95

    member_in_exp  ->  point_exp .   (rule 173)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 361)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 364)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 202
    IMPLY	shift, and go to state 203

    DOT 	[reduce using rule 173 (member_in_exp)]
    IMPLY	[reduce using rule 173 (member_in_exp)]
    $default	reduce using rule 173 (member_in_exp)



state 96

    complexProposition  ->  LENGTH ari_exp .   (rule 17)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 17 (complexProposition)

    ari_operator	go to state 236



state 97

    ari_exp  ->  simple_ari_exp .   (rule 156)
    ari_exp  ->  simple_ari_exp . relation_operator ari_exp   (rule 157)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 165)

    INTER_OR	shift, and go to state 237
    CON 	shift, and go to state 238
    ADDRESS	shift, and go to state 239
    NE  	shift, and go to state 240
    EQ  	shift, and go to state 241
    GE  	shift, and go to state 242
    LE  	shift, and go to state 243
    GT  	shift, and go to state 244
    LT  	shift, and go to state 245
    LST 	shift, and go to state 246
    RST 	shift, and go to state 247
    MUL 	shift, and go to state 248
    DIV 	shift, and go to state 249
    MOD 	shift, and go to state 250

    INTER_OR	[reduce using rule 156 (ari_exp)]
    CON 	[reduce using rule 156 (ari_exp)]
    ADDRESS	[reduce using rule 156 (ari_exp)]
    NE  	[reduce using rule 156 (ari_exp)]
    EQ  	[reduce using rule 156 (ari_exp)]
    GE  	[reduce using rule 156 (ari_exp)]
    LE  	[reduce using rule 156 (ari_exp)]
    GT  	[reduce using rule 156 (ari_exp)]
    LT  	[reduce using rule 156 (ari_exp)]
    LST 	[reduce using rule 156 (ari_exp)]
    RST 	[reduce using rule 156 (ari_exp)]
    MUL 	[reduce using rule 156 (ari_exp)]
    DIV 	[reduce using rule 156 (ari_exp)]
    MOD 	[reduce using rule 156 (ari_exp)]
    $default	reduce using rule 156 (ari_exp)

    bi_operator	go to state 251
    relation_operator	go to state 252



state 98

    simple_ari_exp  ->  member_in_exp .   (rule 164)

    $default	reduce using rule 164 (simple_ari_exp)



state 99

    member_in_exp  ->  address_exp .   (rule 177)

    $default	reduce using rule 177 (member_in_exp)



state 100

    member_in_exp  ->  type_cast .   (rule 178)

    $default	reduce using rule 178 (member_in_exp)



state 101

    member_in_exp  ->  identifier .   (rule 171)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 359)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 362)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . DOT function   (rule 372)
    struct_member_exp  ->  identifier . IMPLY function   (rule 373)

    DOT 	shift, and go to state 204
    IMPLY	shift, and go to state 205

    DOT 	[reduce using rule 171 (member_in_exp)]
    IMPLY	[reduce using rule 171 (member_in_exp)]
    $default	reduce using rule 171 (member_in_exp)



state 102

    member_in_exp  ->  intliteral .   (rule 166)

    $default	reduce using rule 166 (member_in_exp)



state 103

    member_in_exp  ->  charliteral .   (rule 176)

    $default	reduce using rule 176 (member_in_exp)



state 104

    member_in_exp  ->  floatliteral .   (rule 170)

    $default	reduce using rule 170 (member_in_exp)



state 105

    member_in_exp  ->  struct_member_exp .   (rule 179)

    $default	reduce using rule 179 (member_in_exp)



state 106

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  FINAL complexProposition .   (rule 21)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 21 (complexProposition)



state 107

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  KEEP complexProposition .   (rule 10)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 10 (complexProposition)



state 108

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  ALWAYS complexProposition .   (rule 9)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 9 (complexProposition)



state 109

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  HALT complexProposition .   (rule 20)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 20 (complexProposition)



state 110

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  W_NEXT complexProposition .   (rule 12)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 12 (complexProposition)



state 111

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  SOMETIMES complexProposition .   (rule 11)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)


    CHOPSTAR	error (nonassociative)

    $default	reduce using rule 11 (complexProposition)



state 112

    gComplexProposition  ->  PBEGIN complexProposition PEND .   (rule 2)

    $default	reduce using rule 2 (gComplexProposition)



state 113

    complexProposition  ->  complexProposition CHOP . complexProposition   (rule 8)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 253



state 114

    complexProposition  ->  complexProposition IFF . complexProposition   (rule 6)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 254



state 115

    complexProposition  ->  complexProposition PROPIMPLY . complexProposition   (rule 7)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 255



state 116

    complexProposition  ->  complexProposition OR . complexProposition   (rule 5)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 256



state 117

    complexProposition  ->  complexProposition AND . complexProposition   (rule 4)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 257



state 118

    complexProposition  ->  complexProposition CHOPSTAR .   (rule 26)

    $default	reduce using rule 26 (complexProposition)



state 119

    member_in_exp  ->  POINTERNULL .   (rule 169)
    prime_bool_exp  ->  POINTERNULL . EQ ari_exp   (rule 249)
    prime_bool_exp  ->  POINTERNULL . NE ari_exp   (rule 250)

    NE  	shift, and go to state 258
    EQ  	shift, and go to state 259

    NE  	[reduce using rule 169 (member_in_exp)]
    EQ  	[reduce using rule 169 (member_in_exp)]
    $default	reduce using rule 169 (member_in_exp)



state 120

    prime_bool_exp  ->  MY_TRUE .   (rule 240)

    $default	reduce using rule 240 (prime_bool_exp)



state 121

    prime_bool_exp  ->  MY_FALSE .   (rule 241)

    $default	reduce using rule 241 (prime_bool_exp)



state 122

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 238)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    STRUCT	shift, and go to state 211
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    INTDECLARATION	shift, and go to state 212
    CHARDECLARATION	shift, and go to state 213
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 215
    OPEN_PAR	shift, and go to state 260
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 217
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 123
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 261
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    bool_exp	go to state 262
    prime_bool_exp	go to state 127
    identifier	go to state 224
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225



state 123

    bool_exp  ->  NEGATION . bool_exp   (rule 235)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 123
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    bool_exp	go to state 263
    prime_bool_exp	go to state 127
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 124

    strliteral  ->  STRLITERAL .   (rule 320)

    $default	reduce using rule 320 (strliteral)



state 125

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 239)
    prime_bool_exp  ->  ari_exp .   (rule 242)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 243)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 244)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 247)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 248)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 251)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 252)

    NE  	shift, and go to state 264
    EQ  	shift, and go to state 265
    GE  	shift, and go to state 242
    LE  	shift, and go to state 243
    GT  	shift, and go to state 244
    LT  	shift, and go to state 245
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 242 (prime_bool_exp)

    ari_operator	go to state 236
    relation_operator	go to state 266



state 126

    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 344)

    THEN	shift, and go to state 267
    OR  	shift, and go to state 268
    AND 	shift, and go to state 269



state 127

    bool_exp  ->  prime_bool_exp .   (rule 234)

    $default	reduce using rule 234 (bool_exp)



state 128

    prime_bool_exp  ->  strliteral . EQ ari_exp   (rule 245)
    prime_bool_exp  ->  strliteral . NE ari_exp   (rule 246)

    NE  	shift, and go to state 270
    EQ  	shift, and go to state 271



state 129

    statement  ->  AWAIT OPEN_PAR . bool_exp CLOSE_PAR   (rule 42)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 123
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    bool_exp	go to state 272
    prime_bool_exp	go to state 127
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 130

    struct_identifier  ->  STRUCT ID .   (rule 73)
    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 80)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 185
    ID  	shift, and go to state 186

    $default	reduce using rule 73 (struct_identifier)

    option_identifier_array_declaration	go to state 273
    identifier	go to state 188



state 131

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 82)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 185
    ID  	shift, and go to state 186

    option_identifier_array_declaration	go to state 274
    identifier	go to state 188



state 132

    struct_identifier  ->  UNION ID .   (rule 74)
    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 81)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 185
    ID  	shift, and go to state 186

    $default	reduce using rule 74 (struct_identifier)

    option_identifier_array_declaration	go to state 275
    identifier	go to state 188



state 133

    declaration  ->  UNION STRUCT_TYPE . option_identifier_array_declaration   (rule 83)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 185
    ID  	shift, and go to state 186

    option_identifier_array_declaration	go to state 276
    identifier	go to state 188



state 134

    statement  ->  DEFINE ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 58)

    OPEN_PAR	shift, and go to state 277



state 135

    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)

    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 278



state 136

    identifier  ->  ID .   (rule 318)

    $default	reduce using rule 318 (identifier)



state 137

    statement  ->  EXIST identifier . inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR   (rule 63)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 280



state 138

    statement  ->  FRAME OPEN_PAR . identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 55)

    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 281



state 139

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    extend_for_statement  ->  FOR OPEN_PAR . for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 336)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 282
    UNION	shift, and go to state 164
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 283
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 284
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 286
    OPEN_PAR	shift, and go to state 287
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 217
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEXT	shift, and go to state 175
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 288
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    $default	reduce using rule 339 (for_sta_init)

    function	go to state 93
    declaration	go to state 289
    type_define	go to state 167
    ass_statement	go to state 290
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 153
    point_exp	go to state 154
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 157
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    for_sta_init	go to state 291
    struct_member_exp	go to state 159



state 140

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    for_statement  ->  FOR ari_exp . TIMES DO statement_bpar   (rule 335)

    TIMES	shift, and go to state 292
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    ari_operator	go to state 236



state 141

    bool_par  ->  error . CLOSE_PAR   (rule 317)

    CLOSE_PAR	shift, and go to state 293



state 142

    bool_par  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 316)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 123
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    bool_exp	go to state 294
    prime_bool_exp	go to state 127
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 143

    while_statement  ->  WHILE bool_par . statement_bpar   (rule 334)

    error	shift, and go to state 295
    OPEN_BPAR	shift, and go to state 296

    statement_bpar	go to state 297



state 144

    statement  ->  REPEAT OPEN_BPAR . statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 43)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 298
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78



state 145

    output_statement  ->  DISPLAY OPEN_PAR . ass_right CLOSE_PAR   (rule 347)
    output_statement  ->  DISPLAY OPEN_PAR . ass_right option_output CLOSE_PAR   (rule 348)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 302
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    ass_right	go to state 303
    rightaddrshift	go to state 304
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 305
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 306
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    strliteral	go to state 309
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 146

    ari_exp  ->  IF . bool_exp THEN ari_exp option_exp_else_statement   (rule 159)
    if_statement  ->  IF . bool_exp THEN statement_bpar option_else_statement   (rule 344)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 123
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    bool_exp	go to state 310
    prime_bool_exp	go to state 127
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 147

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 54)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 64)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 333)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 146
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    POINTERNULL	shift, and go to state 119
    STRUCT	shift, and go to state 311
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 312
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 313
    VOIDDECLARATION	shift, and go to state 285
    FLOATDECLARATION	shift, and go to state 314
    OPEN_PAR	shift, and go to state 147
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 315
    SIGNED	shift, and go to state 316
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 148
    BNE 	shift, and go to state 89
    NEXT	shift, and go to state 51
    NEGATION	shift, and go to state 149
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    STRUCT_TYPE	shift, and go to state 288
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    statement	go to state 150
    function	go to state 151
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 152
    leftaddrshift	go to state 68
    array	go to state 153
    point_exp	go to state 154
    ari_exp	go to state 261
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    prime_bool_exp	go to state 156
    identifier	go to state 157
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    imply_pre	go to state 317
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 159



state 148

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    point_exp  ->  MUL . identifier   (rule 149)
    point_exp  ->  MUL . point_exp   (rule 150)
    point_exp  ->  MUL . array   (rule 151)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 154)

    OPEN_PAR	shift, and go to state 169
    MUL 	shift, and go to state 318
    ID  	shift, and go to state 319

    array	go to state 171
    point_exp	go to state 172
    identifier	go to state 320



state 149

    imply_pre  ->  NEGATION . imply_pre   (rule 330)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 321
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 149
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    prime_bool_exp	go to state 156
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    imply_pre	go to state 322
    struct_member_exp	go to state 105



state 150

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    statement  ->  OPEN_PAR statement . CLOSE_PAR   (rule 64)

    CLOSE_PAR	shift, and go to state 323
    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192



state 151

    statement  ->  function .   (rule 62)
    member_in_exp  ->  function .   (rule 174)

    CLOSE_PAR	reduce using rule 62 (statement)
    CLOSE_PAR	[reduce using rule 174 (member_in_exp)]
    CHOP	reduce using rule 62 (statement)
    OR  	reduce using rule 62 (statement)
    OR  	[reduce using rule 174 (member_in_exp)]
    PARALLEL	reduce using rule 62 (statement)
    AND 	reduce using rule 62 (statement)
    AND 	[reduce using rule 174 (member_in_exp)]
    $default	reduce using rule 174 (member_in_exp)



state 152

    ass_statement  ->  ass_left . assign_operator ass_right   (rule 109)
    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 114)

    CLOSE_PAR	shift, and go to state 324
    ASS_P	shift, and go to state 196
    ASS_N	shift, and go to state 197

    assign_operator	go to state 198



state 153

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    ass_left  ->  array .   (rule 112)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 145)
    member_in_exp  ->  array .   (rule 172)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 360)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 363)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 199
    OPEN_PAR	shift, and go to state 200
    CLOSE_PAR	shift, and go to state 325
    IMPLY	shift, and go to state 201

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    CLOSE_PAR	[reduce using rule 172 (member_in_exp)]
    ASS_P	reduce using rule 112 (ass_left)
    ASS_N	reduce using rule 112 (ass_left)
    $default	reduce using rule 172 (member_in_exp)



state 154

    ass_left  ->  point_exp .   (rule 113)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 155)
    member_in_exp  ->  point_exp .   (rule 173)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 361)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 364)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 202
    CLOSE_PAR	shift, and go to state 326
    IMPLY	shift, and go to state 203

    CLOSE_PAR	[reduce using rule 113 (ass_left)]
    CLOSE_PAR	[reduce using rule 173 (member_in_exp)]
    ASS_P	reduce using rule 113 (ass_left)
    ASS_N	reduce using rule 113 (ass_left)
    $default	reduce using rule 173 (member_in_exp)



state 155

    member_in_exp  ->  address_exp .   (rule 177)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)

    CLOSE_PAR	shift, and go to state 327

    CLOSE_PAR	[reduce using rule 177 (member_in_exp)]
    $default	reduce using rule 177 (member_in_exp)



state 156

    imply_pre  ->  prime_bool_exp .   (rule 329)

    $default	reduce using rule 329 (imply_pre)



state 157

    ass_left  ->  identifier .   (rule 110)
    member_in_exp  ->  identifier .   (rule 171)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 319)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 359)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 362)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . DOT function   (rule 372)
    struct_member_exp  ->  identifier . IMPLY function   (rule 373)

    DOT 	shift, and go to state 204
    CLOSE_PAR	shift, and go to state 328
    IMPLY	shift, and go to state 205

    CLOSE_PAR	[reduce using rule 110 (ass_left)]
    CLOSE_PAR	[reduce using rule 171 (member_in_exp)]
    ASS_P	reduce using rule 110 (ass_left)
    ASS_N	reduce using rule 110 (ass_left)
    $default	reduce using rule 171 (member_in_exp)



state 158

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 54)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 331)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 332)

    CLOSE_PAR	shift, and go to state 329
    OR  	shift, and go to state 330
    AND 	shift, and go to state 331



state 159

    ass_left  ->  struct_member_exp .   (rule 111)
    member_in_exp  ->  struct_member_exp .   (rule 179)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 375)

    CLOSE_PAR	shift, and go to state 332

    CLOSE_PAR	[reduce using rule 111 (ass_left)]
    CLOSE_PAR	[reduce using rule 179 (member_in_exp)]
    ASS_P	reduce using rule 111 (ass_left)
    ASS_N	reduce using rule 111 (ass_left)
    $default	reduce using rule 179 (member_in_exp)



state 160

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    statement  ->  OPEN_BPAR statement . option_projection CLOSE_BPAR PROJECTION statement_bpar   (rule 56)
    statement  ->  OPEN_BPAR statement . CLOSE_BPAR PROJECTION statement_bpar   (rule 57)

    COMMA	shift, and go to state 333
    CLOSE_BPAR	shift, and go to state 334
    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192

    CLOSE_BPAR	[reduce using rule 327 (option_projection)]
    $default	reduce using rule 327 (option_projection)

    option_projection	go to state 335



state 161

    statement  ->  PROCESS ID . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    OPEN_PAR	shift, and go to state 336



state 162

    function  ->  EXTERN ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 70)

    OPEN_PAR	shift, and go to state 337



state 163

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 80)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 82)

    ID  	shift, and go to state 338
    STRUCT_TYPE	shift, and go to state 131



state 164

    declaration  ->  UNION . ID option_identifier_array_declaration   (rule 81)
    declaration  ->  UNION . STRUCT_TYPE option_identifier_array_declaration   (rule 83)

    ID  	shift, and go to state 339
    STRUCT_TYPE	shift, and go to state 133



state 165

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    MUL 	shift, and go to state 340



state 166

    sign_declaration  ->  UNSIGNED declaration .   (rule 76)

    $default	reduce using rule 76 (sign_declaration)



state 167

    declaration  ->  type_define . option_identifier_array_declaration   (rule 78)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 185
    ID  	shift, and go to state 186

    option_identifier_array_declaration	go to state 195
    identifier	go to state 188



state 168

    sign_declaration  ->  SIGNED declaration .   (rule 75)

    $default	reduce using rule 75 (sign_declaration)



state 169

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 216
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 341
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    type_define	go to state 342
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 343
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    sign_type_define	go to state 344
    all_type_define	go to state 345
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 170

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    identifier  ->  ID .   (rule 318)

    OPEN_MPAR	shift, and go to state 184

    $default	reduce using rule 318 (identifier)



state 171

    point_exp  ->  MUL array .   (rule 151)

    $default	reduce using rule 151 (point_exp)



state 172

    point_exp  ->  MUL point_exp .   (rule 150)

    $default	reduce using rule 150 (point_exp)



state 173

    point_exp  ->  MUL identifier .   (rule 149)

    $default	reduce using rule 149 (point_exp)



state 174

    statement  ->  NEXT OPEN_PAR . statement CLOSE_PAR   (rule 39)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 346
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    ADDRESS	shift, and go to state 87
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 347
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 152
    leftaddrshift	go to state 68
    array	go to state 348
    point_exp	go to state 349
    address_exp	go to state 350
    identifier	go to state 351
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 352



state 175

    ass_left  ->  NEXT . ass_left   (rule 115)

    OPEN_PAR	shift, and go to state 353
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 175
    ID  	shift, and go to state 170

    ass_left	go to state 176
    leftaddrshift	go to state 68
    array	go to state 177
    point_exp	go to state 70
    identifier	go to state 71
    struct_member_exp	go to state 78



state 176

    ass_left  ->  NEXT ass_left .   (rule 115)

    $default	reduce using rule 115 (ass_left)



state 177

    ass_left  ->  array .   (rule 112)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 360)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 363)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 199
    IMPLY	shift, and go to state 201

    $default	reduce using rule 112 (ass_left)



state 178

    statement  ->  LENGTH OPEN_PAR . ari_exp CLOSE_PAR   (rule 47)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 354
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 179

    input_statement  ->  REQUEST OPEN_PAR . identifier CLOSE_PAR   (rule 351)
    input_statement  ->  REQUEST OPEN_PAR . identifier option_input CLOSE_PAR   (rule 352)
    input_statement  ->  REQUEST OPEN_PAR . array CLOSE_PAR   (rule 353)
    input_statement  ->  REQUEST OPEN_PAR . array option_input CLOSE_PAR   (rule 354)
    input_statement  ->  REQUEST OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 355)

    OPEN_PAR	shift, and go to state 355
    MUL 	shift, and go to state 50
    ID  	shift, and go to state 170

    array	go to state 356
    point_exp	go to state 228
    identifier	go to state 357
    struct_member_exp	go to state 358



state 180

    statement  ->  FINAL OPEN_PAR . statement CLOSE_PAR   (rule 52)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 359
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78



state 181

    statement  ->  KEEP OPEN_PAR . statement CLOSE_PAR   (rule 40)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 360
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78



state 182

    statement  ->  ALWAYS OPEN_PAR . statement CLOSE_PAR   (rule 41)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 361
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78



state 183

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 69)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 362
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 302
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 363
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    $default	reduce using rule 308 (option_function_identifier)

    function	go to state 93
    ass_right	go to state 364
    rightaddrshift	go to state 304
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 305
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 306
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 99
    type_cast	go to state 100
    option_function_identifier	go to state 365
    identifier	go to state 101
    strliteral	go to state 309
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 184

    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 366
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 185

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 185
    ID  	shift, and go to state 186

    option_identifier_array_declaration	go to state 367
    identifier	go to state 188



state 186

    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 98)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)
    identifier  ->  ID .   (rule 318)

    ARRAY	shift, and go to state 368
    OPEN_MPAR	shift, and go to state 369

    $default	reduce using rule 318 (identifier)



state 187

    declaration  ->  STRUCT_TYPE option_identifier_array_declaration .   (rule 79)

    $default	reduce using rule 79 (declaration)



state 188

    option_identifier_array_declaration  ->  identifier . inner_option_identifier_array_declaration   (rule 94)
    option_identifier_array_declaration  ->  identifier . ASS_P ass_right inner_option_identifier_array_declaration   (rule 96)

    COMMA	shift, and go to state 370
    ASS_P	shift, and go to state 371

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 372



state 189

    statement  ->  statement CHOP . statement   (rule 32)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 373
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78



state 190

    statement  ->  statement OR . statement   (rule 31)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 374
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78



state 191

    statement  ->  statement PARALLEL . statement   (rule 53)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 375
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78



state 192

    statement  ->  statement AND . statement   (rule 30)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 376
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78



state 193

    struct_define_statement  ->  struct_identifier OPEN_BPAR . option_struct_declaration CLOSE_BPAR   (rule 72)

    STRUCT	shift, and go to state 163
    UNION	shift, and go to state 164
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 165
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    STRUCT_TYPE	shift, and go to state 58

    option_struct_declaration	go to state 377
    sign_declaration	go to state 378
    declaration	go to state 64
    type_define	go to state 167



state 194

    statement  ->  type_define ID . OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 59)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P array_exp inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID . ARRAY ASS_P strliteral inner_option_identifier_array_declaration   (rule 98)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)
    identifier  ->  ID .   (rule 318)

    ARRAY	shift, and go to state 368
    OPEN_PAR	shift, and go to state 379
    OPEN_MPAR	shift, and go to state 369

    $default	reduce using rule 318 (identifier)



state 195

    declaration  ->  type_define option_identifier_array_declaration .   (rule 78)

    $default	reduce using rule 78 (declaration)



state 196

    assign_operator  ->  ASS_P .   (rule 130)

    $default	reduce using rule 130 (assign_operator)



state 197

    assign_operator  ->  ASS_N .   (rule 131)

    $default	reduce using rule 131 (assign_operator)



state 198

    ass_statement  ->  ass_left assign_operator . ass_right   (rule 109)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 302
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    ass_right	go to state 380
    rightaddrshift	go to state 304
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 305
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 306
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    strliteral	go to state 309
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 199

    struct_member_exp  ->  array DOT . identifier option_struct_member_exp   (rule 360)
    struct_member_exp  ->  array DOT . array option_struct_member_exp   (rule 363)

    OPEN_PAR	shift, and go to state 381
    ID  	shift, and go to state 170

    array	go to state 382
    identifier	go to state 383



state 200

    function  ->  array OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 71)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 362
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 302
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 363
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    $default	reduce using rule 308 (option_function_identifier)

    function	go to state 93
    ass_right	go to state 364
    rightaddrshift	go to state 304
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 305
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 306
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 99
    type_cast	go to state 100
    option_function_identifier	go to state 384
    identifier	go to state 101
    strliteral	go to state 309
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 201

    struct_member_exp  ->  array IMPLY . identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array IMPLY . array option_struct_member_exp   (rule 370)

    OPEN_PAR	shift, and go to state 381
    ID  	shift, and go to state 170

    array	go to state 385
    identifier	go to state 386



state 202

    struct_member_exp  ->  point_exp DOT . identifier option_struct_member_exp   (rule 361)
    struct_member_exp  ->  point_exp DOT . array option_struct_member_exp   (rule 364)

    OPEN_PAR	shift, and go to state 381
    ID  	shift, and go to state 170

    array	go to state 387
    identifier	go to state 388



state 203

    struct_member_exp  ->  point_exp IMPLY . identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp IMPLY . array option_struct_member_exp   (rule 374)

    OPEN_PAR	shift, and go to state 381
    ID  	shift, and go to state 170

    array	go to state 389
    identifier	go to state 390



state 204

    struct_member_exp  ->  identifier DOT . identifier option_struct_member_exp   (rule 359)
    struct_member_exp  ->  identifier DOT . array option_struct_member_exp   (rule 362)
    struct_member_exp  ->  identifier DOT . function   (rule 372)

    OPEN_PAR	shift, and go to state 381
    EXTERN	shift, and go to state 47
    ID  	shift, and go to state 57

    function	go to state 391
    array	go to state 392
    identifier	go to state 393



state 205

    struct_member_exp  ->  identifier IMPLY . identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier IMPLY . array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier IMPLY . function   (rule 373)

    OPEN_PAR	shift, and go to state 381
    EXTERN	shift, and go to state 47
    ID  	shift, and go to state 57

    function	go to state 394
    array	go to state 395
    identifier	go to state 396



state 206

    complexProposition  ->  DEFINE ID COLON . prime_bool_exp   (rule 25)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    prime_bool_exp	go to state 397
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 207

    complexProposition  ->  OPEN_PAR complexProposition CLOSE_PAR .   (rule 27)

    $default	reduce using rule 27 (complexProposition)



state 208

    poptional_projection  ->  COMMA . complexProposition poptional_projection   (rule 28)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 398



state 209

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection . CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    CLOSE_BPAR	shift, and go to state 399



state 210

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 159)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)

    THEN	shift, and go to state 400
    OR  	shift, and go to state 268
    AND 	shift, and go to state 269



state 211

    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)

    STRUCT_TYPE	shift, and go to state 401



state 212

    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 402
    MUL 	shift, and go to state 403



state 213

    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 404
    MUL 	shift, and go to state 405



state 214

    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    MUL 	shift, and go to state 406



state 215

    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 408



state 216

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 409
    CHARDECLARATION	shift, and go to state 410
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 411
    OPEN_PAR	shift, and go to state 216
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 412
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225



state 217

    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)

    INTDECLARATION	shift, and go to state 413
    CHARDECLARATION	shift, and go to state 414



state 218

    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)

    INTDECLARATION	shift, and go to state 415
    CHARDECLARATION	shift, and go to state 416



state 219

    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 232)

    MUL 	shift, and go to state 417



state 220

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 145)
    member_in_exp  ->  array .   (rule 172)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 360)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 363)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 199
    OPEN_PAR	shift, and go to state 200
    CLOSE_PAR	shift, and go to state 325
    IMPLY	shift, and go to state 201

    CLOSE_PAR	[reduce using rule 172 (member_in_exp)]
    $default	reduce using rule 172 (member_in_exp)



state 221

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 155)
    member_in_exp  ->  point_exp .   (rule 173)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 361)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 364)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 202
    CLOSE_PAR	shift, and go to state 326
    IMPLY	shift, and go to state 203

    CLOSE_PAR	[reduce using rule 173 (member_in_exp)]
    $default	reduce using rule 173 (member_in_exp)



state 222

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 175)

    CLOSE_PAR	shift, and go to state 418
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    ari_operator	go to state 236



state 223

    member_in_exp  ->  address_exp .   (rule 177)
    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 209)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)

    CLOSE_PAR	shift, and go to state 419

    CLOSE_PAR	[reduce using rule 177 (member_in_exp)]
    $default	reduce using rule 177 (member_in_exp)



state 224

    member_in_exp  ->  identifier .   (rule 171)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 319)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 359)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 362)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . DOT function   (rule 372)
    struct_member_exp  ->  identifier . IMPLY function   (rule 373)

    DOT 	shift, and go to state 204
    CLOSE_PAR	shift, and go to state 328
    IMPLY	shift, and go to state 205

    CLOSE_PAR	[reduce using rule 171 (member_in_exp)]
    $default	reduce using rule 171 (member_in_exp)



state 225

    member_in_exp  ->  struct_member_exp .   (rule 179)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 375)

    CLOSE_PAR	shift, and go to state 332

    CLOSE_PAR	[reduce using rule 179 (member_in_exp)]
    $default	reduce using rule 179 (member_in_exp)



state 226

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    OPEN_PAR	shift, and go to state 420
    ADDRESS	shift, and go to state 87
    MUL 	shift, and go to state 50
    ID  	shift, and go to state 170

    array	go to state 421
    point_exp	go to state 422
    address_exp	go to state 423
    identifier	go to state 424
    struct_member_exp	go to state 425



state 227

    address_exp  ->  ADDRESS array .   (rule 206)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 360)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 363)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 199

    DOT 	[reduce using rule 206 (address_exp)]
    $default	reduce using rule 206 (address_exp)



state 228

    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 361)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 364)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 202
    IMPLY	shift, and go to state 203



state 229

    address_exp  ->  ADDRESS address_exp .   (rule 208)

    $default	reduce using rule 208 (address_exp)



state 230

    address_exp  ->  ADDRESS identifier .   (rule 205)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 359)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 362)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . DOT function   (rule 372)
    struct_member_exp  ->  identifier . IMPLY function   (rule 373)

    DOT 	shift, and go to state 204

    DOT 	[reduce using rule 205 (address_exp)]
    $default	reduce using rule 205 (address_exp)



state 231

    address_exp  ->  ADDRESS struct_member_exp .   (rule 207)

    $default	reduce using rule 207 (address_exp)



state 232

    member_in_exp  ->  SUB member_in_exp .   (rule 167)

    $default	reduce using rule 167 (member_in_exp)



state 233

    member_in_exp  ->  BNE member_in_exp .   (rule 168)

    $default	reduce using rule 168 (member_in_exp)



state 234

    ari_operator  ->  ADD .   (rule 188)

    $default	reduce using rule 188 (ari_operator)



state 235

    ari_operator  ->  SUB .   (rule 189)

    $default	reduce using rule 189 (ari_operator)



state 236

    ari_exp  ->  ari_exp ari_operator . simple_ari_exp   (rule 158)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    simple_ari_exp	go to state 426
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 237

    bi_operator  ->  INTER_OR .   (rule 186)

    $default	reduce using rule 186 (bi_operator)



state 238

    bi_operator  ->  CON .   (rule 187)

    $default	reduce using rule 187 (bi_operator)



state 239

    bi_operator  ->  ADDRESS .   (rule 185)

    $default	reduce using rule 185 (bi_operator)



state 240

    relation_operator  ->  NE .   (rule 255)

    $default	reduce using rule 255 (relation_operator)



state 241

    relation_operator  ->  EQ .   (rule 258)

    $default	reduce using rule 258 (relation_operator)



state 242

    relation_operator  ->  GE .   (rule 253)

    $default	reduce using rule 253 (relation_operator)



state 243

    relation_operator  ->  LE .   (rule 254)

    $default	reduce using rule 254 (relation_operator)



state 244

    relation_operator  ->  GT .   (rule 256)

    $default	reduce using rule 256 (relation_operator)



state 245

    relation_operator  ->  LT .   (rule 257)

    $default	reduce using rule 257 (relation_operator)



state 246

    bi_operator  ->  LST .   (rule 183)

    $default	reduce using rule 183 (bi_operator)



state 247

    bi_operator  ->  RST .   (rule 184)

    $default	reduce using rule 184 (bi_operator)



state 248

    bi_operator  ->  MUL .   (rule 180)

    $default	reduce using rule 180 (bi_operator)



state 249

    bi_operator  ->  DIV .   (rule 181)

    $default	reduce using rule 181 (bi_operator)



state 250

    bi_operator  ->  MOD .   (rule 182)

    $default	reduce using rule 182 (bi_operator)



state 251

    simple_ari_exp  ->  simple_ari_exp bi_operator . member_in_exp   (rule 165)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    member_in_exp	go to state 427
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 252

    ari_exp  ->  simple_ari_exp relation_operator . ari_exp   (rule 157)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 428
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 253

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition CHOP complexProposition .   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    IFF 	shift, and go to state 114
    PROPIMPLY	shift, and go to state 115
    OR  	shift, and go to state 116
    AND 	shift, and go to state 117
    CHOPSTAR	shift, and go to state 118

    $default	reduce using rule 8 (complexProposition)



state 254

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition IFF complexProposition .   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 116
    AND 	shift, and go to state 117
    CHOPSTAR	shift, and go to state 118

    $default	reduce using rule 6 (complexProposition)



state 255

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition PROPIMPLY complexProposition .   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    OR  	shift, and go to state 116
    AND 	shift, and go to state 117
    CHOPSTAR	shift, and go to state 118

    $default	reduce using rule 7 (complexProposition)



state 256

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition OR complexProposition .   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    AND 	shift, and go to state 117
    CHOPSTAR	shift, and go to state 118

    $default	reduce using rule 5 (complexProposition)



state 257

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition AND complexProposition .   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CHOPSTAR	shift, and go to state 118

    $default	reduce using rule 4 (complexProposition)



state 258

    prime_bool_exp  ->  POINTERNULL NE . ari_exp   (rule 250)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 429
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 259

    prime_bool_exp  ->  POINTERNULL EQ . ari_exp   (rule 249)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 430
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 260

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    bool_exp  ->  OPEN_PAR . bool_exp CLOSE_PAR   (rule 238)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    STRUCT	shift, and go to state 211
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    INTDECLARATION	shift, and go to state 409
    CHARDECLARATION	shift, and go to state 410
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 411
    OPEN_PAR	shift, and go to state 260
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 412
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 123
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 261
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    bool_exp	go to state 262
    prime_bool_exp	go to state 127
    identifier	go to state 224
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225



state 261

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 175)
    prime_bool_exp  ->  ari_exp . relation_operator ari_exp   (rule 239)
    prime_bool_exp  ->  ari_exp .   (rule 242)
    prime_bool_exp  ->  ari_exp . EQ strliteral   (rule 243)
    prime_bool_exp  ->  ari_exp . NE strliteral   (rule 244)
    prime_bool_exp  ->  ari_exp . EQ POINTERNULL   (rule 247)
    prime_bool_exp  ->  ari_exp . NE POINTERNULL   (rule 248)
    prime_bool_exp  ->  ari_exp . EQ charliteral   (rule 251)
    prime_bool_exp  ->  ari_exp . NE charliteral   (rule 252)

    CLOSE_PAR	shift, and go to state 418
    NE  	shift, and go to state 264
    EQ  	shift, and go to state 265
    GE  	shift, and go to state 242
    LE  	shift, and go to state 243
    GT  	shift, and go to state 244
    LT  	shift, and go to state 245
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    CLOSE_PAR	[reduce using rule 242 (prime_bool_exp)]
    $default	reduce using rule 242 (prime_bool_exp)

    ari_operator	go to state 236
    relation_operator	go to state 266



state 262

    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)
    bool_exp  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 238)

    CLOSE_PAR	shift, and go to state 431
    OR  	shift, and go to state 268
    AND 	shift, and go to state 269



state 263

    bool_exp  ->  NEGATION bool_exp .   (rule 235)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)


    $default	reduce using rule 235 (bool_exp)



state 264

    prime_bool_exp  ->  ari_exp NE . strliteral   (rule 244)
    prime_bool_exp  ->  ari_exp NE . POINTERNULL   (rule 248)
    prime_bool_exp  ->  ari_exp NE . charliteral   (rule 252)
    relation_operator  ->  NE .   (rule 255)

    POINTERNULL	shift, and go to state 432
    STRLITERAL	shift, and go to state 124
    CHARLITERAL	shift, and go to state 92

    POINTERNULL	[reduce using rule 255 (relation_operator)]
    CHARLITERAL	[reduce using rule 255 (relation_operator)]
    $default	reduce using rule 255 (relation_operator)

    strliteral	go to state 433
    charliteral	go to state 434



state 265

    prime_bool_exp  ->  ari_exp EQ . strliteral   (rule 243)
    prime_bool_exp  ->  ari_exp EQ . POINTERNULL   (rule 247)
    prime_bool_exp  ->  ari_exp EQ . charliteral   (rule 251)
    relation_operator  ->  EQ .   (rule 258)

    POINTERNULL	shift, and go to state 435
    STRLITERAL	shift, and go to state 124
    CHARLITERAL	shift, and go to state 92

    POINTERNULL	[reduce using rule 258 (relation_operator)]
    CHARLITERAL	[reduce using rule 258 (relation_operator)]
    $default	reduce using rule 258 (relation_operator)

    strliteral	go to state 436
    charliteral	go to state 437



state 266

    prime_bool_exp  ->  ari_exp relation_operator . ari_exp   (rule 239)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 438
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 267

    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 344)

    error	shift, and go to state 295
    OPEN_BPAR	shift, and go to state 296

    statement_bpar	go to state 439



state 268

    bool_exp  ->  bool_exp OR . bool_exp   (rule 237)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 123
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    bool_exp	go to state 440
    prime_bool_exp	go to state 127
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 269

    bool_exp  ->  bool_exp AND . bool_exp   (rule 236)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 123
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    bool_exp	go to state 441
    prime_bool_exp	go to state 127
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 270

    prime_bool_exp  ->  strliteral NE . ari_exp   (rule 246)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 442
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 271

    prime_bool_exp  ->  strliteral EQ . ari_exp   (rule 245)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 443
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 272

    statement  ->  AWAIT OPEN_PAR bool_exp . CLOSE_PAR   (rule 42)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)

    CLOSE_PAR	shift, and go to state 444
    OR  	shift, and go to state 268
    AND 	shift, and go to state 269



state 273

    declaration  ->  STRUCT ID option_identifier_array_declaration .   (rule 80)

    $default	reduce using rule 80 (declaration)



state 274

    declaration  ->  STRUCT STRUCT_TYPE option_identifier_array_declaration .   (rule 82)

    $default	reduce using rule 82 (declaration)



state 275

    declaration  ->  UNION ID option_identifier_array_declaration .   (rule 81)

    $default	reduce using rule 81 (declaration)



state 276

    declaration  ->  UNION STRUCT_TYPE option_identifier_array_declaration .   (rule 83)

    $default	reduce using rule 83 (declaration)



state 277

    statement  ->  DEFINE ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 58)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 445
    UNSIGNED	shift, and go to state 341
    ID  	shift, and go to state 446
    STRUCT_TYPE	shift, and go to state 447

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 342
    sign_type_define	go to state 344
    all_type_define	go to state 448
    option_function_parameter_list	go to state 449



state 278

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 319)

    CLOSE_PAR	shift, and go to state 328



state 279

    inner_option_define_identifier  ->  COMMA . all_type_define identifier inner_option_define_identifier   (rule 289)
    inner_option_define_identifier  ->  COMMA . all_type_define inner_option_define_identifier   (rule 290)
    inner_option_define_identifier  ->  COMMA . ID identifier inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier inner_option_define_identifier   (rule 292)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE MUL identifier inner_option_define_identifier   (rule 293)
    inner_option_define_identifier  ->  COMMA . ID identifier ARRAY inner_option_define_identifier   (rule 294)
    inner_option_define_identifier  ->  COMMA . STRUCT_TYPE identifier ARRAY inner_option_define_identifier   (rule 295)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier ARRAY inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA . OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA . all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL identifier inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA . all_type_define MUL inner_option_define_identifier   (rule 304)
    inner_option_define_identifier  ->  COMMA . error   (rule 305)

    error	shift, and go to state 450
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 451
    UNSIGNED	shift, and go to state 341
    ID  	shift, and go to state 452
    STRUCT_TYPE	shift, and go to state 453

    type_define	go to state 342
    sign_type_define	go to state 344
    all_type_define	go to state 454



state 280

    statement  ->  EXIST identifier inner_option_define_identifier . COLON OPEN_BPAR statement CLOSE_BPAR   (rule 63)

    COLON	shift, and go to state 455



state 281

    statement  ->  FRAME OPEN_PAR identifier . option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 55)

    COMMA	shift, and go to state 456

    $default	reduce using rule 325 (option_frame_identifier)

    option_frame_identifier	go to state 457



state 282

    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 80)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 82)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)

    ID  	shift, and go to state 338
    STRUCT_TYPE	shift, and go to state 458



state 283

    type_define  ->  INTDECLARATION .   (rule 88)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 402
    MUL 	shift, and go to state 403

    MUL 	[reduce using rule 88 (type_define)]
    $default	reduce using rule 88 (type_define)



state 284

    type_define  ->  CHARDECLARATION .   (rule 90)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 404
    MUL 	shift, and go to state 405

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 285

    type_define  ->  VOIDDECLARATION .   (rule 92)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR VOIDDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 228)

    MUL 	shift, and go to state 406

    MUL 	[reduce using rule 92 (type_define)]
    $default	reduce using rule 92 (type_define)



state 286

    type_define  ->  FLOATDECLARATION .   (rule 89)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 408

    MUL 	[reduce using rule 89 (type_define)]
    $default	reduce using rule 89 (type_define)



state 287

    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 409
    CHARDECLARATION	shift, and go to state 410
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 411
    OPEN_PAR	shift, and go to state 459
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 412
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 148
    BNE 	shift, and go to state 89
    NEXT	shift, and go to state 175
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    ass_left	go to state 460
    leftaddrshift	go to state 68
    array	go to state 153
    point_exp	go to state 154
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 157
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 159



state 288

    declaration  ->  STRUCT_TYPE . option_identifier_array_declaration   (rule 79)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 232)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 461
    ID  	shift, and go to state 186

    option_identifier_array_declaration	go to state 187
    identifier	go to state 188



state 289

    for_sta_init  ->  declaration .   (rule 338)

    $default	reduce using rule 338 (for_sta_init)



state 290

    for_sta_init  ->  ass_statement .   (rule 337)

    $default	reduce using rule 337 (for_sta_init)



state 291

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init . COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 336)

    COMMA	shift, and go to state 462



state 292

    for_statement  ->  FOR ari_exp TIMES . DO statement_bpar   (rule 335)

    DO  	shift, and go to state 463



state 293

    bool_par  ->  error CLOSE_PAR .   (rule 317)

    $default	reduce using rule 317 (bool_par)



state 294

    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)
    bool_par  ->  OPEN_PAR bool_exp . CLOSE_PAR   (rule 316)

    CLOSE_PAR	shift, and go to state 464
    OR  	shift, and go to state 268
    AND 	shift, and go to state 269



state 295

    statement_bpar  ->  error . CLOSE_BPAR   (rule 315)

    CLOSE_BPAR	shift, and go to state 465



state 296

    statement_bpar  ->  OPEN_BPAR . statement CLOSE_BPAR   (rule 314)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 466
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78



state 297

    while_statement  ->  WHILE bool_par statement_bpar .   (rule 334)

    $default	reduce using rule 334 (while_statement)



state 298

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  REPEAT OPEN_BPAR statement . CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 43)
    statement  ->  statement . PARALLEL statement   (rule 53)

    CLOSE_BPAR	shift, and go to state 467
    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192



state 299

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 193)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 212
    CHARDECLARATION	shift, and go to state 213
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 215
    OPEN_PAR	shift, and go to state 468
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 217
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 302
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    ass_right	go to state 469
    rightaddrshift	go to state 304
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 470
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 471
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    strliteral	go to state 472
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225



state 300

    option_struct_list_value  ->  OPEN_BPAR . ari_exp inner_option_list_value CLOSE_BPAR   (rule 197)
    option_struct_list_value  ->  OPEN_BPAR . strliteral inner_option_list_value CLOSE_BPAR   (rule 198)
    option_struct_list_value  ->  OPEN_BPAR . array_exp inner_option_list_value CLOSE_BPAR   (rule 199)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 473
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 474
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 475
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    strliteral	go to state 476
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 301

    option_list_value  ->  OPEN_MPAR . ari_exp inner_option_list_value CLOSE_MPAR   (rule 194)
    option_list_value  ->  OPEN_MPAR . strliteral inner_option_list_value CLOSE_MPAR   (rule 195)
    option_list_value  ->  OPEN_MPAR . array_exp inner_option_list_value CLOSE_MPAR   (rule 196)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 473
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 477
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 478
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    strliteral	go to state 479
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 302

    rightaddrshift  ->  MUL . OPEN_PAR leftaddrshift CLOSE_PAR   (rule 138)
    point_exp  ->  MUL . identifier   (rule 149)
    point_exp  ->  MUL . point_exp   (rule 150)
    point_exp  ->  MUL . array   (rule 151)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 154)

    OPEN_PAR	shift, and go to state 480
    MUL 	shift, and go to state 50
    ID  	shift, and go to state 170

    array	go to state 171
    point_exp	go to state 172
    identifier	go to state 173



state 303

    output_statement  ->  DISPLAY OPEN_PAR ass_right . CLOSE_PAR   (rule 347)
    output_statement  ->  DISPLAY OPEN_PAR ass_right . option_output CLOSE_PAR   (rule 348)

    COMMA	shift, and go to state 481
    CLOSE_PAR	shift, and go to state 482

    CLOSE_PAR	[reduce using rule 349 (option_output)]
    $default	reduce using rule 349 (option_output)

    option_output	go to state 483



state 304

    ass_right  ->  rightaddrshift .   (rule 137)

    $default	reduce using rule 137 (ass_right)



state 305

    ass_right  ->  ari_exp .   (rule 132)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 132 (ass_right)

    ari_operator	go to state 236



state 306

    ass_right  ->  array_exp .   (rule 133)
    array_exp  ->  array_exp . CON array_exp   (rule 190)

    CON 	shift, and go to state 484

    $default	reduce using rule 133 (ass_right)



state 307

    array_exp  ->  option_list_value .   (rule 191)

    $default	reduce using rule 191 (array_exp)



state 308

    array_exp  ->  option_struct_list_value .   (rule 192)

    $default	reduce using rule 192 (array_exp)



state 309

    ass_right  ->  strliteral .   (rule 134)

    $default	reduce using rule 134 (ass_right)



state 310

    ari_exp  ->  IF bool_exp . THEN ari_exp option_exp_else_statement   (rule 159)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)
    if_statement  ->  IF bool_exp . THEN statement_bpar option_else_statement   (rule 344)

    THEN	shift, and go to state 485
    OR  	shift, and go to state 268
    AND 	shift, and go to state 269



state 311

    struct_identifier  ->  STRUCT . ID   (rule 73)
    declaration  ->  STRUCT . ID option_identifier_array_declaration   (rule 80)
    declaration  ->  STRUCT . STRUCT_TYPE option_identifier_array_declaration   (rule 82)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR STRUCT . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)

    ID  	shift, and go to state 130
    STRUCT_TYPE	shift, and go to state 458



state 312

    type_define  ->  INTDECLARATION .   (rule 88)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 402
    MUL 	shift, and go to state 486

    MUL 	[reduce using rule 88 (type_define)]
    $default	reduce using rule 88 (type_define)



state 313

    type_define  ->  CHARDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 404
    MUL 	shift, and go to state 487

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 314

    type_define  ->  FLOATDECLARATION .   (rule 89)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 488

    MUL 	[reduce using rule 89 (type_define)]
    $default	reduce using rule 89 (type_define)



state 315

    sign_declaration  ->  UNSIGNED . declaration   (rule 76)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)

    STRUCT	shift, and go to state 163
    UNION	shift, and go to state 164
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 489
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 490
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 165
    STRUCT_TYPE	shift, and go to state 58

    declaration	go to state 166
    type_define	go to state 167



state 316

    sign_declaration  ->  SIGNED . declaration   (rule 75)
    type_cast  ->  OPEN_PAR SIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR SIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)

    STRUCT	shift, and go to state 163
    UNION	shift, and go to state 164
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 491
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 492
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 165
    STRUCT_TYPE	shift, and go to state 58

    declaration	go to state 168
    type_define	go to state 167



state 317

    statement  ->  OPEN_PAR imply_pre . CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 54)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 331)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 332)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 333)

    CLOSE_PAR	shift, and go to state 493
    OR  	shift, and go to state 330
    AND 	shift, and go to state 331



state 318

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    point_exp  ->  MUL . identifier   (rule 149)
    point_exp  ->  MUL . point_exp   (rule 150)
    point_exp  ->  MUL . array   (rule 151)
    point_exp  ->  MUL . OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL . OPEN_PAR ari_exp CLOSE_PAR   (rule 154)

    OPEN_PAR	shift, and go to state 169
    MUL 	shift, and go to state 50
    ID  	shift, and go to state 170

    array	go to state 171
    point_exp	go to state 172
    identifier	go to state 494



state 319

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    identifier  ->  ID .   (rule 318)

    OPEN_MPAR	shift, and go to state 495

    $default	reduce using rule 318 (identifier)



state 320

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    point_exp  ->  MUL identifier .   (rule 149)

    CLOSE_PAR	shift, and go to state 496

    CLOSE_PAR	[reduce using rule 149 (point_exp)]
    $default	reduce using rule 149 (point_exp)



state 321

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 333)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    STRUCT	shift, and go to state 211
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    INTDECLARATION	shift, and go to state 212
    CHARDECLARATION	shift, and go to state 213
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 215
    OPEN_PAR	shift, and go to state 497
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 217
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 149
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 261
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    prime_bool_exp	go to state 156
    identifier	go to state 224
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    imply_pre	go to state 498
    struct_member_exp	go to state 225



state 322

    imply_pre  ->  NEGATION imply_pre .   (rule 330)
    imply_pre  ->  imply_pre . AND imply_pre   (rule 331)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 332)


    $default	reduce using rule 330 (imply_pre)



state 323

    statement  ->  OPEN_PAR statement CLOSE_PAR .   (rule 64)

    $default	reduce using rule 64 (statement)



state 324

    ass_left  ->  OPEN_PAR ass_left CLOSE_PAR .   (rule 114)

    $default	reduce using rule 114 (ass_left)



state 325

    array  ->  OPEN_PAR array CLOSE_PAR .   (rule 145)

    $default	reduce using rule 145 (array)



state 326

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR .   (rule 155)

    OPEN_MPAR	shift, and go to state 499

    $default	reduce using rule 155 (point_exp)



state 327

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 371)

    IMPLY	shift, and go to state 500



state 328

    identifier  ->  OPEN_PAR identifier CLOSE_PAR .   (rule 319)

    $default	reduce using rule 319 (identifier)



state 329

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 54)

    IMPLY	shift, and go to state 501



state 330

    imply_pre  ->  imply_pre OR . imply_pre   (rule 332)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 321
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 149
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    prime_bool_exp	go to state 156
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    imply_pre	go to state 502
    struct_member_exp	go to state 105



state 331

    imply_pre  ->  imply_pre AND . imply_pre   (rule 331)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 321
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 149
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    prime_bool_exp	go to state 156
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    imply_pre	go to state 503
    struct_member_exp	go to state 105



state 332

    struct_member_exp  ->  OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 375)

    $default	reduce using rule 375 (struct_member_exp)



state 333

    option_projection  ->  COMMA . statement option_projection   (rule 328)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 504
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78



state 334

    statement  ->  OPEN_BPAR statement CLOSE_BPAR . PROJECTION statement_bpar   (rule 57)

    PROJECTION	shift, and go to state 505



state 335

    statement  ->  OPEN_BPAR statement option_projection . CLOSE_BPAR PROJECTION statement_bpar   (rule 56)

    CLOSE_BPAR	shift, and go to state 506



state 336

    statement  ->  PROCESS ID OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 445
    UNSIGNED	shift, and go to state 341
    ID  	shift, and go to state 446
    STRUCT_TYPE	shift, and go to state 447

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 342
    sign_type_define	go to state 344
    all_type_define	go to state 448
    option_function_parameter_list	go to state 507



state 337

    function  ->  EXTERN ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 70)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 362
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 302
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 363
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    $default	reduce using rule 308 (option_function_identifier)

    function	go to state 93
    ass_right	go to state 364
    rightaddrshift	go to state 304
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 305
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 306
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 99
    type_cast	go to state 100
    option_function_identifier	go to state 508
    identifier	go to state 101
    strliteral	go to state 309
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 338

    declaration  ->  STRUCT ID . option_identifier_array_declaration   (rule 80)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 185
    ID  	shift, and go to state 186

    option_identifier_array_declaration	go to state 273
    identifier	go to state 188



state 339

    declaration  ->  UNION ID . option_identifier_array_declaration   (rule 81)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 185
    ID  	shift, and go to state 186

    option_identifier_array_declaration	go to state 275
    identifier	go to state 188



state 340

    declaration  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR MUL . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL . ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 509
    ID  	shift, and go to state 510

    identifier	go to state 511



state 341

    sign_type_define  ->  UNSIGNED . INTDECLARATION   (rule 259)
    sign_type_define  ->  UNSIGNED . CHARDECLARATION   (rule 260)

    INTDECLARATION	shift, and go to state 512
    CHARDECLARATION	shift, and go to state 513



state 342

    all_type_define  ->  type_define .   (rule 262)

    $default	reduce using rule 262 (all_type_define)



state 343

    point_exp  ->  MUL OPEN_PAR ari_exp . CLOSE_PAR   (rule 154)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    CLOSE_PAR	shift, and go to state 514
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    ari_operator	go to state 236



state 344

    all_type_define  ->  sign_type_define .   (rule 261)

    $default	reduce using rule 261 (all_type_define)



state 345

    point_exp  ->  MUL OPEN_PAR all_type_define . MUL CLOSE_PAR ari_exp   (rule 153)

    MUL 	shift, and go to state 515



state 346

    statement  ->  OPEN_PAR . imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 54)
    statement  ->  OPEN_PAR . statement CLOSE_PAR   (rule 64)
    declaration  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)
    declaration  ->  OPEN_PAR . MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR . MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 146
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    POINTERNULL	shift, and go to state 119
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 516
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 517
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 518
    OPEN_PAR	shift, and go to state 147
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 519
    SIGNED	shift, and go to state 49
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 148
    BNE 	shift, and go to state 89
    NEXT	shift, and go to state 51
    NEGATION	shift, and go to state 149
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    STRUCT_TYPE	shift, and go to state 58
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    statement	go to state 150
    function	go to state 151
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 152
    leftaddrshift	go to state 68
    array	go to state 153
    point_exp	go to state 154
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    prime_bool_exp	go to state 156
    identifier	go to state 157
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    imply_pre	go to state 158
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 159



state 347

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  NEXT OPEN_PAR statement . CLOSE_PAR   (rule 39)
    statement  ->  statement . PARALLEL statement   (rule 53)

    CLOSE_PAR	shift, and go to state 520
    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192



state 348

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    ass_left  ->  array .   (rule 112)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 145)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 360)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 363)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 199
    OPEN_PAR	shift, and go to state 200
    CLOSE_PAR	shift, and go to state 325
    IMPLY	shift, and go to state 201

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    $default	reduce using rule 112 (ass_left)



state 349

    ass_left  ->  point_exp .   (rule 113)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 155)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 361)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 364)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 202
    CLOSE_PAR	shift, and go to state 326
    IMPLY	shift, and go to state 203

    CLOSE_PAR	[reduce using rule 113 (ass_left)]
    $default	reduce using rule 113 (ass_left)



state 350

    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)

    CLOSE_PAR	shift, and go to state 327



state 351

    ass_left  ->  identifier .   (rule 110)
    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 319)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 359)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 362)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . DOT function   (rule 372)
    struct_member_exp  ->  identifier . IMPLY function   (rule 373)

    DOT 	shift, and go to state 204
    CLOSE_PAR	shift, and go to state 328
    IMPLY	shift, and go to state 205

    CLOSE_PAR	[reduce using rule 110 (ass_left)]
    $default	reduce using rule 110 (ass_left)



state 352

    ass_left  ->  struct_member_exp .   (rule 111)
    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 375)

    CLOSE_PAR	shift, and go to state 332

    CLOSE_PAR	[reduce using rule 111 (ass_left)]
    $default	reduce using rule 111 (ass_left)



state 353

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    OPEN_PAR	shift, and go to state 521
    ADDRESS	shift, and go to state 87
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 175
    ID  	shift, and go to state 170

    ass_left	go to state 460
    leftaddrshift	go to state 68
    array	go to state 522
    point_exp	go to state 349
    address_exp	go to state 350
    identifier	go to state 351
    struct_member_exp	go to state 352



state 354

    statement  ->  LENGTH OPEN_PAR ari_exp . CLOSE_PAR   (rule 47)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    CLOSE_PAR	shift, and go to state 523
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    ari_operator	go to state 236



state 355

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    OPEN_PAR	shift, and go to state 420
    ADDRESS	shift, and go to state 87
    MUL 	shift, and go to state 50
    ID  	shift, and go to state 170

    array	go to state 421
    point_exp	go to state 422
    address_exp	go to state 350
    identifier	go to state 424
    struct_member_exp	go to state 425



state 356

    input_statement  ->  REQUEST OPEN_PAR array . CLOSE_PAR   (rule 353)
    input_statement  ->  REQUEST OPEN_PAR array . option_input CLOSE_PAR   (rule 354)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 360)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 363)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 199
    COMMA	shift, and go to state 524
    CLOSE_PAR	shift, and go to state 525
    IMPLY	shift, and go to state 201

    CLOSE_PAR	[reduce using rule 356 (option_input)]
    $default	reduce using rule 356 (option_input)

    option_input	go to state 526



state 357

    input_statement  ->  REQUEST OPEN_PAR identifier . CLOSE_PAR   (rule 351)
    input_statement  ->  REQUEST OPEN_PAR identifier . option_input CLOSE_PAR   (rule 352)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 359)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 362)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . DOT function   (rule 372)
    struct_member_exp  ->  identifier . IMPLY function   (rule 373)

    DOT 	shift, and go to state 204
    COMMA	shift, and go to state 524
    CLOSE_PAR	shift, and go to state 527
    IMPLY	shift, and go to state 205

    CLOSE_PAR	[reduce using rule 356 (option_input)]
    $default	reduce using rule 356 (option_input)

    option_input	go to state 528



state 358

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 355)

    CLOSE_PAR	shift, and go to state 529



state 359

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  FINAL OPEN_PAR statement . CLOSE_PAR   (rule 52)
    statement  ->  statement . PARALLEL statement   (rule 53)

    CLOSE_PAR	shift, and go to state 530
    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192



state 360

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  KEEP OPEN_PAR statement . CLOSE_PAR   (rule 40)
    statement  ->  statement . PARALLEL statement   (rule 53)

    CLOSE_PAR	shift, and go to state 531
    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192



state 361

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  ALWAYS OPEN_PAR statement . CLOSE_PAR   (rule 41)
    statement  ->  statement . PARALLEL statement   (rule 53)

    CLOSE_PAR	shift, and go to state 532
    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192



state 362

    address_exp  ->  ADDRESS . identifier   (rule 205)
    address_exp  ->  ADDRESS . array   (rule 206)
    address_exp  ->  ADDRESS . struct_member_exp   (rule 207)
    address_exp  ->  ADDRESS . address_exp   (rule 208)
    option_function_identifier  ->  ADDRESS . error   (rule 309)

    error	shift, and go to state 533
    OPEN_PAR	shift, and go to state 226
    ADDRESS	shift, and go to state 87
    MUL 	shift, and go to state 50
    ID  	shift, and go to state 170

    array	go to state 227
    point_exp	go to state 228
    address_exp	go to state 229
    identifier	go to state 230
    struct_member_exp	go to state 231



state 363

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    option_function_identifier  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 307)
    identifier  ->  ID .   (rule 318)

    OPEN_PAR	shift, and go to state 534
    OPEN_MPAR	shift, and go to state 184

    $default	reduce using rule 318 (identifier)



state 364

    option_function_identifier  ->  ass_right . inner_option_function_identifier   (rule 306)

    COMMA	shift, and go to state 535

    $default	reduce using rule 312 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 536



state 365

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 69)

    CLOSE_PAR	shift, and go to state 537



state 366

    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 139)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 539
    ari_operator	go to state 236



state 367

    option_identifier_array_declaration  ->  MUL option_identifier_array_declaration .   (rule 101)

    $default	reduce using rule 101 (option_identifier_array_declaration)



state 368

    option_identifier_array_declaration  ->  ID ARRAY . ASS_P array_exp inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID ARRAY . ASS_P strliteral inner_option_identifier_array_declaration   (rule 98)

    ASS_P	shift, and go to state 540



state 369

    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 541
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 370

    inner_option_identifier_array_declaration  ->  COMMA . option_identifier_array_declaration   (rule 102)
    inner_option_identifier_array_declaration  ->  COMMA . error   (rule 103)

    error	shift, and go to state 542
    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 185
    ID  	shift, and go to state 186

    option_identifier_array_declaration	go to state 543
    identifier	go to state 188



state 371

    option_identifier_array_declaration  ->  identifier ASS_P . ass_right inner_option_identifier_array_declaration   (rule 96)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 302
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    ass_right	go to state 544
    rightaddrshift	go to state 304
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 305
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 306
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    strliteral	go to state 309
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 372

    option_identifier_array_declaration  ->  identifier inner_option_identifier_array_declaration .   (rule 94)

    $default	reduce using rule 94 (option_identifier_array_declaration)



state 373

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement CHOP statement .   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)

    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192

    $default	reduce using rule 32 (statement)



state 374

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement OR statement .   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)

    AND 	shift, and go to state 192

    $default	reduce using rule 31 (statement)



state 375

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    statement  ->  statement PARALLEL statement .   (rule 53)

    AND 	shift, and go to state 192

    $default	reduce using rule 53 (statement)



state 376

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement AND statement .   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)


    $default	reduce using rule 30 (statement)



state 377

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration . CLOSE_BPAR   (rule 72)

    CLOSE_BPAR	shift, and go to state 545



state 378

    option_struct_declaration  ->  sign_declaration .   (rule 65)
    option_struct_declaration  ->  sign_declaration . AND option_struct_declaration   (rule 66)

    AND 	shift, and go to state 546

    $default	reduce using rule 65 (option_struct_declaration)



state 379

    statement  ->  type_define ID OPEN_PAR . option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 59)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 445
    UNSIGNED	shift, and go to state 341
    ID  	shift, and go to state 446
    STRUCT_TYPE	shift, and go to state 447

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 342
    sign_type_define	go to state 344
    all_type_define	go to state 448
    option_function_parameter_list	go to state 547



state 380

    ass_statement  ->  ass_left assign_operator ass_right .   (rule 109)

    $default	reduce using rule 109 (ass_statement)



state 381

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)

    OPEN_PAR	shift, and go to state 548
    ID  	shift, and go to state 170

    array	go to state 549
    identifier	go to state 278



state 382

    struct_member_exp  ->  array DOT array . option_struct_member_exp   (rule 363)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 552



state 383

    struct_member_exp  ->  array DOT identifier . option_struct_member_exp   (rule 360)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 553



state 384

    function  ->  array OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 71)

    CLOSE_PAR	shift, and go to state 554



state 385

    struct_member_exp  ->  array IMPLY array . option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 555



state 386

    struct_member_exp  ->  array IMPLY identifier . option_struct_member_exp   (rule 366)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 556



state 387

    struct_member_exp  ->  point_exp DOT array . option_struct_member_exp   (rule 364)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 557



state 388

    struct_member_exp  ->  point_exp DOT identifier . option_struct_member_exp   (rule 361)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 558



state 389

    struct_member_exp  ->  point_exp IMPLY array . option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 559



state 390

    struct_member_exp  ->  point_exp IMPLY identifier . option_struct_member_exp   (rule 368)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 560



state 391

    struct_member_exp  ->  identifier DOT function .   (rule 372)

    $default	reduce using rule 372 (struct_member_exp)



state 392

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    struct_member_exp  ->  identifier DOT array . option_struct_member_exp   (rule 362)

    DOT 	shift, and go to state 550
    OPEN_PAR	shift, and go to state 200
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 561



state 393

    struct_member_exp  ->  identifier DOT identifier . option_struct_member_exp   (rule 359)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 562



state 394

    struct_member_exp  ->  identifier IMPLY function .   (rule 373)

    $default	reduce using rule 373 (struct_member_exp)



state 395

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    struct_member_exp  ->  identifier IMPLY array . option_struct_member_exp   (rule 369)

    DOT 	shift, and go to state 550
    OPEN_PAR	shift, and go to state 200
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 563



state 396

    struct_member_exp  ->  identifier IMPLY identifier . option_struct_member_exp   (rule 365)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 564



state 397

    complexProposition  ->  DEFINE ID COLON prime_bool_exp .   (rule 25)

    $default	reduce using rule 25 (complexProposition)



state 398

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)
    poptional_projection  ->  COMMA complexProposition . poptional_projection   (rule 28)

    COMMA	shift, and go to state 208
    CHOP	shift, and go to state 113
    IFF 	shift, and go to state 114
    PROPIMPLY	shift, and go to state 115
    OR  	shift, and go to state 116
    AND 	shift, and go to state 117
    CHOPSTAR	shift, and go to state 118

    $default	reduce using rule 29 (poptional_projection)

    poptional_projection	go to state 565



state 399

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR . PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    PROJECTION	shift, and go to state 566



state 400

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 159)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 567
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 401

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 231)

    MUL 	shift, and go to state 568



state 402

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 210)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 569
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 403

    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 571
    MUL 	shift, and go to state 572



state 404

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 212)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 573
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 405

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 574
    MUL 	shift, and go to state 575



state 406

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 576
    MUL 	shift, and go to state 577



state 407

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 211)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 578
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 408

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 579
    MUL 	shift, and go to state 580



state 409

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 402
    MUL 	shift, and go to state 581



state 410

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 404
    MUL 	shift, and go to state 582



state 411

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 583



state 412

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)

    INTDECLARATION	shift, and go to state 584
    CHARDECLARATION	shift, and go to state 585



state 413

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 586
    MUL 	shift, and go to state 587



state 414

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 589



state 415

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)

    CLOSE_PAR	shift, and go to state 590



state 416

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)

    CLOSE_PAR	shift, and go to state 591



state 417

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 592
    MUL 	shift, and go to state 593



state 418

    member_in_exp  ->  OPEN_PAR ari_exp CLOSE_PAR .   (rule 175)

    $default	reduce using rule 175 (member_in_exp)



state 419

    address_exp  ->  OPEN_PAR address_exp CLOSE_PAR .   (rule 209)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR . IMPLY array option_struct_member_exp   (rule 371)

    IMPLY	shift, and go to state 500

    IMPLY	[reduce using rule 209 (address_exp)]
    $default	reduce using rule 209 (address_exp)



state 420

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    INTDECLARATION	shift, and go to state 594
    CHARDECLARATION	shift, and go to state 595
    FLOATDECLARATION	shift, and go to state 596
    OPEN_PAR	shift, and go to state 420
    UNSIGNED	shift, and go to state 597
    ADDRESS	shift, and go to state 87
    MUL 	shift, and go to state 50
    ID  	shift, and go to state 170

    array	go to state 421
    point_exp	go to state 422
    address_exp	go to state 423
    identifier	go to state 424
    struct_member_exp	go to state 425



state 421

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 145)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 360)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 363)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 199
    CLOSE_PAR	shift, and go to state 325
    IMPLY	shift, and go to state 201



state 422

    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR point_exp . CLOSE_PAR   (rule 155)
    struct_member_exp  ->  point_exp . DOT identifier option_struct_member_exp   (rule 361)
    struct_member_exp  ->  point_exp . DOT array option_struct_member_exp   (rule 364)
    struct_member_exp  ->  point_exp . IMPLY identifier option_struct_member_exp   (rule 368)
    struct_member_exp  ->  point_exp . IMPLY array option_struct_member_exp   (rule 374)

    DOT 	shift, and go to state 202
    CLOSE_PAR	shift, and go to state 326
    IMPLY	shift, and go to state 203



state 423

    address_exp  ->  OPEN_PAR address_exp . CLOSE_PAR   (rule 209)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR address_exp . CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)

    CLOSE_PAR	shift, and go to state 419



state 424

    identifier  ->  OPEN_PAR identifier . CLOSE_PAR   (rule 319)
    struct_member_exp  ->  identifier . DOT identifier option_struct_member_exp   (rule 359)
    struct_member_exp  ->  identifier . DOT array option_struct_member_exp   (rule 362)
    struct_member_exp  ->  identifier . IMPLY identifier option_struct_member_exp   (rule 365)
    struct_member_exp  ->  identifier . IMPLY array option_struct_member_exp   (rule 369)
    struct_member_exp  ->  identifier . DOT function   (rule 372)
    struct_member_exp  ->  identifier . IMPLY function   (rule 373)

    DOT 	shift, and go to state 204
    CLOSE_PAR	shift, and go to state 328
    IMPLY	shift, and go to state 205



state 425

    struct_member_exp  ->  OPEN_PAR struct_member_exp . CLOSE_PAR   (rule 375)

    CLOSE_PAR	shift, and go to state 332



state 426

    ari_exp  ->  ari_exp ari_operator simple_ari_exp .   (rule 158)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 165)

    INTER_OR	shift, and go to state 237
    CON 	shift, and go to state 238
    ADDRESS	shift, and go to state 239
    LST 	shift, and go to state 246
    RST 	shift, and go to state 247
    MUL 	shift, and go to state 248
    DIV 	shift, and go to state 249
    MOD 	shift, and go to state 250

    INTER_OR	[reduce using rule 158 (ari_exp)]
    CON 	[reduce using rule 158 (ari_exp)]
    ADDRESS	[reduce using rule 158 (ari_exp)]
    LST 	[reduce using rule 158 (ari_exp)]
    RST 	[reduce using rule 158 (ari_exp)]
    MUL 	[reduce using rule 158 (ari_exp)]
    DIV 	[reduce using rule 158 (ari_exp)]
    MOD 	[reduce using rule 158 (ari_exp)]
    $default	reduce using rule 158 (ari_exp)

    bi_operator	go to state 251



state 427

    simple_ari_exp  ->  simple_ari_exp bi_operator member_in_exp .   (rule 165)

    $default	reduce using rule 165 (simple_ari_exp)



state 428

    ari_exp  ->  simple_ari_exp relation_operator ari_exp .   (rule 157)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    ADD 	[reduce using rule 157 (ari_exp)]
    SUB 	[reduce using rule 157 (ari_exp)]
    $default	reduce using rule 157 (ari_exp)

    ari_operator	go to state 236



state 429

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    prime_bool_exp  ->  POINTERNULL NE ari_exp .   (rule 250)

    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 250 (prime_bool_exp)

    ari_operator	go to state 236



state 430

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    prime_bool_exp  ->  POINTERNULL EQ ari_exp .   (rule 249)

    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 249 (prime_bool_exp)

    ari_operator	go to state 236



state 431

    bool_exp  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 238)

    $default	reduce using rule 238 (bool_exp)



state 432

    prime_bool_exp  ->  ari_exp NE POINTERNULL .   (rule 248)

    $default	reduce using rule 248 (prime_bool_exp)



state 433

    prime_bool_exp  ->  ari_exp NE strliteral .   (rule 244)

    $default	reduce using rule 244 (prime_bool_exp)



state 434

    prime_bool_exp  ->  ari_exp NE charliteral .   (rule 252)

    $default	reduce using rule 252 (prime_bool_exp)



state 435

    prime_bool_exp  ->  ari_exp EQ POINTERNULL .   (rule 247)

    $default	reduce using rule 247 (prime_bool_exp)



state 436

    prime_bool_exp  ->  ari_exp EQ strliteral .   (rule 243)

    $default	reduce using rule 243 (prime_bool_exp)



state 437

    prime_bool_exp  ->  ari_exp EQ charliteral .   (rule 251)

    $default	reduce using rule 251 (prime_bool_exp)



state 438

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    prime_bool_exp  ->  ari_exp relation_operator ari_exp .   (rule 239)

    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 239 (prime_bool_exp)

    ari_operator	go to state 236



state 439

    if_statement  ->  IF bool_exp THEN statement_bpar . option_else_statement   (rule 344)

    ELSE	shift, and go to state 598

    $default	reduce using rule 346 (option_else_statement)

    option_else_statement	go to state 599



state 440

    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)
    bool_exp  ->  bool_exp OR bool_exp .   (rule 237)

    AND 	shift, and go to state 269

    $default	reduce using rule 237 (bool_exp)



state 441

    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp AND bool_exp .   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)


    $default	reduce using rule 236 (bool_exp)



state 442

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    prime_bool_exp  ->  strliteral NE ari_exp .   (rule 246)

    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 246 (prime_bool_exp)

    ari_operator	go to state 236



state 443

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    prime_bool_exp  ->  strliteral EQ ari_exp .   (rule 245)

    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 245 (prime_bool_exp)

    ari_operator	go to state 236



state 444

    statement  ->  AWAIT OPEN_PAR bool_exp CLOSE_PAR .   (rule 42)

    $default	reduce using rule 42 (statement)



state 445

    option_function_parameter_list  ->  OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 287)

    MUL 	shift, and go to state 600



state 446

    option_function_parameter_list  ->  ID . identifier inner_option_define_identifier   (rule 269)
    option_function_parameter_list  ->  ID . MUL identifier inner_option_define_identifier   (rule 270)
    option_function_parameter_list  ->  ID . MUL MUL identifier inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  ID . identifier ARRAY inner_option_define_identifier   (rule 272)
    option_function_parameter_list  ->  ID . inner_option_define_identifier   (rule 276)
    option_function_parameter_list  ->  ID . MUL inner_option_define_identifier   (rule 277)
    option_function_parameter_list  ->  ID . MUL MUL inner_option_define_identifier   (rule 278)

    COMMA	shift, and go to state 279
    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 601
    ID  	shift, and go to state 136

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 602
    identifier	go to state 603



state 447

    option_function_parameter_list  ->  STRUCT_TYPE . identifier inner_option_define_identifier   (rule 265)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 266)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL identifier inner_option_define_identifier   (rule 267)
    option_function_parameter_list  ->  STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 268)
    option_function_parameter_list  ->  STRUCT_TYPE . inner_option_define_identifier   (rule 273)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL inner_option_define_identifier   (rule 274)
    option_function_parameter_list  ->  STRUCT_TYPE . MUL MUL inner_option_define_identifier   (rule 275)

    COMMA	shift, and go to state 279
    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 604
    ID  	shift, and go to state 136

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 605
    identifier	go to state 606



state 448

    option_function_parameter_list  ->  all_type_define . identifier inner_option_define_identifier   (rule 263)
    option_function_parameter_list  ->  all_type_define . inner_option_define_identifier   (rule 264)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY inner_option_define_identifier   (rule 279)
    option_function_parameter_list  ->  all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 280)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 282)
    option_function_parameter_list  ->  all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)
    option_function_parameter_list  ->  all_type_define . MUL identifier inner_option_define_identifier   (rule 284)
    option_function_parameter_list  ->  all_type_define . MUL inner_option_define_identifier   (rule 285)
    option_function_parameter_list  ->  all_type_define . MUL MUL identifier inner_option_define_identifier   (rule 286)

    COMMA	shift, and go to state 279
    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 607
    ID  	shift, and go to state 136

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 608
    identifier	go to state 609



state 449

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 58)

    CLOSE_PAR	shift, and go to state 610



state 450

    inner_option_define_identifier  ->  COMMA error .   (rule 305)

    $default	reduce using rule 305 (inner_option_define_identifier)



state 451

    inner_option_define_identifier  ->  COMMA OPEN_PAR . MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)

    MUL 	shift, and go to state 611



state 452

    inner_option_define_identifier  ->  COMMA ID . identifier inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA ID . identifier ARRAY inner_option_define_identifier   (rule 294)

    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 612



state 453

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier inner_option_define_identifier   (rule 292)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . MUL identifier inner_option_define_identifier   (rule 293)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE . identifier ARRAY inner_option_define_identifier   (rule 295)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 613
    ID  	shift, and go to state 136

    identifier	go to state 614



state 454

    inner_option_define_identifier  ->  COMMA all_type_define . identifier inner_option_define_identifier   (rule 289)
    inner_option_define_identifier  ->  COMMA all_type_define . inner_option_define_identifier   (rule 290)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier ARRAY inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA all_type_define . identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL identifier inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA all_type_define . MUL inner_option_define_identifier   (rule 304)

    COMMA	shift, and go to state 279
    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 615
    ID  	shift, and go to state 136

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 616
    identifier	go to state 617



state 455

    statement  ->  EXIST identifier inner_option_define_identifier COLON . OPEN_BPAR statement CLOSE_BPAR   (rule 63)

    OPEN_BPAR	shift, and go to state 618



state 456

    option_frame_identifier  ->  COMMA . identifier option_frame_identifier   (rule 324)
    option_frame_identifier  ->  COMMA . error   (rule 326)

    error	shift, and go to state 619
    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 620



state 457

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier . CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR   (rule 55)

    CLOSE_PAR	shift, and go to state 621



state 458

    declaration  ->  STRUCT STRUCT_TYPE . option_identifier_array_declaration   (rule 82)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE . MUL MUL CLOSE_PAR casted_element   (rule 231)

    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 622
    ID  	shift, and go to state 186

    option_identifier_array_declaration	go to state 274
    identifier	go to state 188



state 459

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 623
    CHARDECLARATION	shift, and go to state 624
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 625
    OPEN_PAR	shift, and go to state 459
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 626
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEXT	shift, and go to state 175
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    ass_left	go to state 460
    leftaddrshift	go to state 68
    array	go to state 153
    point_exp	go to state 154
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 157
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 159



state 460

    ass_left  ->  OPEN_PAR ass_left . CLOSE_PAR   (rule 114)

    CLOSE_PAR	shift, and go to state 324



state 461

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 232)

    OPEN_PAR	shift, and go to state 135
    CLOSE_PAR	shift, and go to state 592
    MUL 	shift, and go to state 627
    ID  	shift, and go to state 186

    option_identifier_array_declaration	go to state 367
    identifier	go to state 188



state 462

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA . for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 336)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 123
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    $default	reduce using rule 341 (for_sta_condition)

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    bool_exp	go to state 628
    prime_bool_exp	go to state 127
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    for_sta_condition	go to state 629
    struct_member_exp	go to state 105



state 463

    for_statement  ->  FOR ari_exp TIMES DO . statement_bpar   (rule 335)

    error	shift, and go to state 295
    OPEN_BPAR	shift, and go to state 296

    statement_bpar	go to state 630



state 464

    bool_par  ->  OPEN_PAR bool_exp CLOSE_PAR .   (rule 316)

    $default	reduce using rule 316 (bool_par)



state 465

    statement_bpar  ->  error CLOSE_BPAR .   (rule 315)

    $default	reduce using rule 315 (statement_bpar)



state 466

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    statement_bpar  ->  OPEN_BPAR statement . CLOSE_BPAR   (rule 314)

    CLOSE_BPAR	shift, and go to state 631
    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192



state 467

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR . UNTIL OPEN_PAR bool_exp CLOSE_PAR   (rule 43)

    UNTIL	shift, and go to state 632



state 468

    ass_right  ->  OPEN_PAR . strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)
    ass_right  ->  OPEN_PAR . ass_right CLOSE_PAR   (rule 136)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 193)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 409
    CHARDECLARATION	shift, and go to state 410
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 411
    OPEN_PAR	shift, and go to state 468
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 412
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 302
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    ass_right	go to state 469
    rightaddrshift	go to state 304
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 470
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 471
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    strliteral	go to state 472
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225



state 469

    ass_right  ->  OPEN_PAR ass_right . CLOSE_PAR   (rule 136)

    CLOSE_PAR	shift, and go to state 633



state 470

    ass_right  ->  ari_exp .   (rule 132)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    member_in_exp  ->  OPEN_PAR ari_exp . CLOSE_PAR   (rule 175)

    CLOSE_PAR	shift, and go to state 418
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    CLOSE_PAR	[reduce using rule 132 (ass_right)]
    $default	reduce using rule 132 (ass_right)

    ari_operator	go to state 236



state 471

    ass_right  ->  array_exp .   (rule 133)
    array_exp  ->  array_exp . CON array_exp   (rule 190)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 193)

    CLOSE_PAR	shift, and go to state 634
    CON 	shift, and go to state 484

    CLOSE_PAR	[reduce using rule 133 (ass_right)]
    $default	reduce using rule 133 (ass_right)



state 472

    ass_right  ->  strliteral .   (rule 134)
    ass_right  ->  OPEN_PAR strliteral . CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)

    CLOSE_PAR	shift, and go to state 635

    CLOSE_PAR	[reduce using rule 134 (ass_right)]
    $default	reduce using rule 134 (ass_right)



state 473

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 193)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 212
    CHARDECLARATION	shift, and go to state 213
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 215
    OPEN_PAR	shift, and go to state 636
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 217
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 637
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225



state 474

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    option_struct_list_value  ->  OPEN_BPAR ari_exp . inner_option_list_value CLOSE_BPAR   (rule 197)

    COMMA	shift, and go to state 638
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 203 (inner_option_list_value)

    ari_operator	go to state 236
    inner_option_list_value	go to state 639



state 475

    array_exp  ->  array_exp . CON array_exp   (rule 190)
    option_struct_list_value  ->  OPEN_BPAR array_exp . inner_option_list_value CLOSE_BPAR   (rule 199)

    COMMA	shift, and go to state 638
    CON 	shift, and go to state 484

    $default	reduce using rule 203 (inner_option_list_value)

    inner_option_list_value	go to state 640



state 476

    option_struct_list_value  ->  OPEN_BPAR strliteral . inner_option_list_value CLOSE_BPAR   (rule 198)

    COMMA	shift, and go to state 638

    $default	reduce using rule 203 (inner_option_list_value)

    inner_option_list_value	go to state 641



state 477

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    option_list_value  ->  OPEN_MPAR ari_exp . inner_option_list_value CLOSE_MPAR   (rule 194)

    COMMA	shift, and go to state 638
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 203 (inner_option_list_value)

    ari_operator	go to state 236
    inner_option_list_value	go to state 642



state 478

    array_exp  ->  array_exp . CON array_exp   (rule 190)
    option_list_value  ->  OPEN_MPAR array_exp . inner_option_list_value CLOSE_MPAR   (rule 196)

    COMMA	shift, and go to state 638
    CON 	shift, and go to state 484

    $default	reduce using rule 203 (inner_option_list_value)

    inner_option_list_value	go to state 643



state 479

    option_list_value  ->  OPEN_MPAR strliteral . inner_option_list_value CLOSE_MPAR   (rule 195)

    COMMA	shift, and go to state 638

    $default	reduce using rule 203 (inner_option_list_value)

    inner_option_list_value	go to state 644



state 480

    rightaddrshift  ->  MUL OPEN_PAR . leftaddrshift CLOSE_PAR   (rule 138)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  MUL OPEN_PAR . all_type_define MUL CLOSE_PAR ari_exp   (rule 153)
    point_exp  ->  MUL OPEN_PAR . ari_exp CLOSE_PAR   (rule 154)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 645
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 341
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    type_define	go to state 342
    leftaddrshift	go to state 646
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 343
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    sign_type_define	go to state 344
    all_type_define	go to state 345
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 481

    option_output  ->  COMMA . ass_right option_output   (rule 350)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 302
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    ass_right	go to state 647
    rightaddrshift	go to state 304
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 305
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 306
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    strliteral	go to state 309
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 482

    output_statement  ->  DISPLAY OPEN_PAR ass_right CLOSE_PAR .   (rule 347)

    $default	reduce using rule 347 (output_statement)



state 483

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output . CLOSE_PAR   (rule 348)

    CLOSE_PAR	shift, and go to state 648



state 484

    array_exp  ->  array_exp CON . array_exp   (rule 190)

    OPEN_PAR	shift, and go to state 649
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301

    array_exp	go to state 650
    option_list_value	go to state 307
    option_struct_list_value	go to state 308



state 485

    ari_exp  ->  IF bool_exp THEN . ari_exp option_exp_else_statement   (rule 159)
    if_statement  ->  IF bool_exp THEN . statement_bpar option_else_statement   (rule 344)

    error	shift, and go to state 295
    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    OPEN_BPAR	shift, and go to state 296
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 567
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    statement_bpar	go to state 439
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 486

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 651
    MUL 	shift, and go to state 572



state 487

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 652
    MUL 	shift, and go to state 575



state 488

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 653
    MUL 	shift, and go to state 580



state 489

    type_define  ->  INTDECLARATION .   (rule 88)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 586
    MUL 	shift, and go to state 654

    MUL 	[reduce using rule 88 (type_define)]
    $default	reduce using rule 88 (type_define)



state 490

    type_define  ->  CHARDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 655

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 491

    type_define  ->  INTDECLARATION .   (rule 88)
    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 213)

    CLOSE_PAR	shift, and go to state 590

    $default	reduce using rule 88 (type_define)



state 492

    type_define  ->  CHARDECLARATION .   (rule 90)
    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 214)

    CLOSE_PAR	shift, and go to state 591

    $default	reduce using rule 90 (type_define)



state 493

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR . IMPLY OPEN_MPAR statement CLOSE_MPAR   (rule 54)
    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 333)

    IMPLY	shift, and go to state 501

    $default	reduce using rule 333 (imply_pre)



state 494

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)
    point_exp  ->  MUL identifier .   (rule 149)

    CLOSE_PAR	shift, and go to state 656

    CLOSE_PAR	[reduce using rule 149 (point_exp)]
    $default	reduce using rule 149 (point_exp)



state 495

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 657
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 496

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)

    OPEN_PAR	shift, and go to state 658



state 497

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    imply_pre  ->  OPEN_PAR . imply_pre CLOSE_PAR   (rule 333)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    STRUCT	shift, and go to state 211
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    INTDECLARATION	shift, and go to state 409
    CHARDECLARATION	shift, and go to state 410
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 411
    OPEN_PAR	shift, and go to state 497
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 412
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 149
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 261
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    prime_bool_exp	go to state 156
    identifier	go to state 224
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    imply_pre	go to state 498
    struct_member_exp	go to state 225



state 498

    imply_pre  ->  imply_pre . AND imply_pre   (rule 331)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 332)
    imply_pre  ->  OPEN_PAR imply_pre . CLOSE_PAR   (rule 333)

    CLOSE_PAR	shift, and go to state 659
    OR  	shift, and go to state 330
    AND 	shift, and go to state 331



state 499

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 152)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 660
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 500

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY . array option_struct_member_exp   (rule 371)

    OPEN_PAR	shift, and go to state 381
    ID  	shift, and go to state 170

    array	go to state 661
    identifier	go to state 662



state 501

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY . OPEN_MPAR statement CLOSE_MPAR   (rule 54)

    OPEN_MPAR	shift, and go to state 663



state 502

    imply_pre  ->  imply_pre . AND imply_pre   (rule 331)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 332)
    imply_pre  ->  imply_pre OR imply_pre .   (rule 332)

    AND 	shift, and go to state 331

    $default	reduce using rule 332 (imply_pre)



state 503

    imply_pre  ->  imply_pre . AND imply_pre   (rule 331)
    imply_pre  ->  imply_pre AND imply_pre .   (rule 331)
    imply_pre  ->  imply_pre . OR imply_pre   (rule 332)


    $default	reduce using rule 331 (imply_pre)



state 504

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    option_projection  ->  COMMA statement . option_projection   (rule 328)

    COMMA	shift, and go to state 333
    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192

    $default	reduce using rule 327 (option_projection)

    option_projection	go to state 664



state 505

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION . statement_bpar   (rule 57)

    error	shift, and go to state 295
    OPEN_BPAR	shift, and go to state 296

    statement_bpar	go to state 665



state 506

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR . PROJECTION statement_bpar   (rule 56)

    PROJECTION	shift, and go to state 666



state 507

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    CLOSE_PAR	shift, and go to state 667



state 508

    function  ->  EXTERN ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 70)

    CLOSE_PAR	shift, and go to state 668



state 509

    declaration  ->  OPEN_PAR MUL MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)

    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 669



state 510

    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    identifier  ->  ID .   (rule 318)

    OPEN_MPAR	shift, and go to state 670

    $default	reduce using rule 318 (identifier)



state 511

    declaration  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 84)

    CLOSE_PAR	shift, and go to state 496



state 512

    sign_type_define  ->  UNSIGNED INTDECLARATION .   (rule 259)

    $default	reduce using rule 259 (sign_type_define)



state 513

    sign_type_define  ->  UNSIGNED CHARDECLARATION .   (rule 260)

    $default	reduce using rule 260 (sign_type_define)



state 514

    point_exp  ->  MUL OPEN_PAR ari_exp CLOSE_PAR .   (rule 154)

    $default	reduce using rule 154 (point_exp)



state 515

    point_exp  ->  MUL OPEN_PAR all_type_define MUL . CLOSE_PAR ari_exp   (rule 153)

    CLOSE_PAR	shift, and go to state 671



state 516

    type_define  ->  INTDECLARATION .   (rule 88)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    MUL 	shift, and go to state 672

    MUL 	[reduce using rule 88 (type_define)]
    $default	reduce using rule 88 (type_define)



state 517

    type_define  ->  CHARDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    MUL 	shift, and go to state 673

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 518

    type_define  ->  FLOATDECLARATION .   (rule 89)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    MUL 	shift, and go to state 674

    MUL 	[reduce using rule 89 (type_define)]
    $default	reduce using rule 89 (type_define)



state 519

    sign_declaration  ->  UNSIGNED . declaration   (rule 76)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    STRUCT	shift, and go to state 163
    UNION	shift, and go to state 164
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 675
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 676
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 165
    STRUCT_TYPE	shift, and go to state 58

    declaration	go to state 166
    type_define	go to state 167



state 520

    statement  ->  NEXT OPEN_PAR statement CLOSE_PAR .   (rule 39)

    $default	reduce using rule 39 (statement)



state 521

    ass_left  ->  OPEN_PAR . ass_left CLOSE_PAR   (rule 114)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    INTDECLARATION	shift, and go to state 677
    CHARDECLARATION	shift, and go to state 678
    FLOATDECLARATION	shift, and go to state 679
    OPEN_PAR	shift, and go to state 521
    UNSIGNED	shift, and go to state 680
    ADDRESS	shift, and go to state 87
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 175
    ID  	shift, and go to state 170

    ass_left	go to state 460
    leftaddrshift	go to state 68
    array	go to state 522
    point_exp	go to state 349
    address_exp	go to state 423
    identifier	go to state 351
    struct_member_exp	go to state 352



state 522

    ass_left  ->  array .   (rule 112)
    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 145)
    struct_member_exp  ->  array . DOT identifier option_struct_member_exp   (rule 360)
    struct_member_exp  ->  array . DOT array option_struct_member_exp   (rule 363)
    struct_member_exp  ->  array . IMPLY identifier option_struct_member_exp   (rule 366)
    struct_member_exp  ->  array . IMPLY array option_struct_member_exp   (rule 370)

    DOT 	shift, and go to state 199
    CLOSE_PAR	shift, and go to state 325
    IMPLY	shift, and go to state 201

    CLOSE_PAR	[reduce using rule 112 (ass_left)]
    $default	reduce using rule 112 (ass_left)



state 523

    statement  ->  LENGTH OPEN_PAR ari_exp CLOSE_PAR .   (rule 47)

    $default	reduce using rule 47 (statement)



state 524

    option_input  ->  COMMA . identifier option_input   (rule 357)
    option_input  ->  COMMA . array option_input   (rule 358)

    OPEN_PAR	shift, and go to state 381
    ID  	shift, and go to state 170

    array	go to state 681
    identifier	go to state 682



state 525

    input_statement  ->  REQUEST OPEN_PAR array CLOSE_PAR .   (rule 353)

    $default	reduce using rule 353 (input_statement)



state 526

    input_statement  ->  REQUEST OPEN_PAR array option_input . CLOSE_PAR   (rule 354)

    CLOSE_PAR	shift, and go to state 683



state 527

    input_statement  ->  REQUEST OPEN_PAR identifier CLOSE_PAR .   (rule 351)

    $default	reduce using rule 351 (input_statement)



state 528

    input_statement  ->  REQUEST OPEN_PAR identifier option_input . CLOSE_PAR   (rule 352)

    CLOSE_PAR	shift, and go to state 684



state 529

    input_statement  ->  REQUEST OPEN_PAR struct_member_exp CLOSE_PAR .   (rule 355)

    $default	reduce using rule 355 (input_statement)



state 530

    statement  ->  FINAL OPEN_PAR statement CLOSE_PAR .   (rule 52)

    $default	reduce using rule 52 (statement)



state 531

    statement  ->  KEEP OPEN_PAR statement CLOSE_PAR .   (rule 40)

    $default	reduce using rule 40 (statement)



state 532

    statement  ->  ALWAYS OPEN_PAR statement CLOSE_PAR .   (rule 41)

    $default	reduce using rule 41 (statement)



state 533

    option_function_identifier  ->  ADDRESS error .   (rule 309)

    $default	reduce using rule 309 (option_function_identifier)



state 534

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 69)
    option_function_identifier  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 307)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 362
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 302
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 363
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    $default	reduce using rule 308 (option_function_identifier)

    function	go to state 93
    ass_right	go to state 364
    rightaddrshift	go to state 304
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 305
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 306
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 99
    type_cast	go to state 100
    option_function_identifier	go to state 685
    identifier	go to state 101
    strliteral	go to state 309
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 535

    inner_option_function_identifier  ->  COMMA . ass_right inner_option_function_identifier   (rule 310)
    inner_option_function_identifier  ->  COMMA . ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 311)
    inner_option_function_identifier  ->  COMMA . error   (rule 313)

    error	shift, and go to state 686
    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 302
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 687
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    ass_right	go to state 688
    rightaddrshift	go to state 304
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 305
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 306
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    strliteral	go to state 309
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 536

    option_function_identifier  ->  ass_right inner_option_function_identifier .   (rule 306)

    $default	reduce using rule 306 (option_function_identifier)



state 537

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 69)

    $default	reduce using rule 69 (function)



state 538

    option_ari_exp  ->  COMMA . ari_exp option_ari_exp   (rule 146)
    option_ari_exp  ->  COMMA . error   (rule 147)

    error	shift, and go to state 689
    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 690
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 539

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 139)

    CLOSE_MPAR	shift, and go to state 691



state 540

    option_identifier_array_declaration  ->  ID ARRAY ASS_P . array_exp inner_option_identifier_array_declaration   (rule 97)
    option_identifier_array_declaration  ->  ID ARRAY ASS_P . strliteral inner_option_identifier_array_declaration   (rule 98)

    OPEN_PAR	shift, and go to state 649
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    STRLITERAL	shift, and go to state 124

    array_exp	go to state 692
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    strliteral	go to state 693



state 541

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 694
    ari_operator	go to state 236



state 542

    inner_option_identifier_array_declaration  ->  COMMA error .   (rule 103)

    $default	reduce using rule 103 (inner_option_identifier_array_declaration)



state 543

    inner_option_identifier_array_declaration  ->  COMMA option_identifier_array_declaration .   (rule 102)

    $default	reduce using rule 102 (inner_option_identifier_array_declaration)



state 544

    option_identifier_array_declaration  ->  identifier ASS_P ass_right . inner_option_identifier_array_declaration   (rule 96)

    COMMA	shift, and go to state 370

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 695



state 545

    struct_define_statement  ->  struct_identifier OPEN_BPAR option_struct_declaration CLOSE_BPAR .   (rule 72)

    $default	reduce using rule 72 (struct_define_statement)



state 546

    option_struct_declaration  ->  sign_declaration AND . option_struct_declaration   (rule 66)

    STRUCT	shift, and go to state 163
    UNION	shift, and go to state 164
    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 165
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    STRUCT_TYPE	shift, and go to state 58

    option_struct_declaration	go to state 696
    sign_declaration	go to state 378
    declaration	go to state 64
    type_define	go to state 167



state 547

    statement  ->  type_define ID OPEN_PAR option_function_parameter_list . CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR   (rule 59)

    CLOSE_PAR	shift, and go to state 697



state 548

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)

    INTDECLARATION	shift, and go to state 594
    CHARDECLARATION	shift, and go to state 595
    FLOATDECLARATION	shift, and go to state 596
    OPEN_PAR	shift, and go to state 548
    UNSIGNED	shift, and go to state 597
    ID  	shift, and go to state 170

    array	go to state 549
    identifier	go to state 278



state 549

    array  ->  OPEN_PAR array . CLOSE_PAR   (rule 145)

    CLOSE_PAR	shift, and go to state 325



state 550

    option_struct_member_exp  ->  DOT . identifier option_struct_member_exp   (rule 377)
    option_struct_member_exp  ->  DOT . array option_struct_member_exp   (rule 378)
    option_struct_member_exp  ->  DOT . function   (rule 381)

    OPEN_PAR	shift, and go to state 381
    EXTERN	shift, and go to state 47
    ID  	shift, and go to state 57

    function	go to state 698
    array	go to state 699
    identifier	go to state 700



state 551

    option_struct_member_exp  ->  IMPLY . identifier option_struct_member_exp   (rule 379)
    option_struct_member_exp  ->  IMPLY . array option_struct_member_exp   (rule 380)
    option_struct_member_exp  ->  IMPLY . function   (rule 382)

    OPEN_PAR	shift, and go to state 381
    EXTERN	shift, and go to state 47
    ID  	shift, and go to state 57

    function	go to state 701
    array	go to state 702
    identifier	go to state 703



state 552

    struct_member_exp  ->  array DOT array option_struct_member_exp .   (rule 363)

    $default	reduce using rule 363 (struct_member_exp)



state 553

    struct_member_exp  ->  array DOT identifier option_struct_member_exp .   (rule 360)

    $default	reduce using rule 360 (struct_member_exp)



state 554

    function  ->  array OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 71)

    $default	reduce using rule 71 (function)



state 555

    struct_member_exp  ->  array IMPLY array option_struct_member_exp .   (rule 370)

    $default	reduce using rule 370 (struct_member_exp)



state 556

    struct_member_exp  ->  array IMPLY identifier option_struct_member_exp .   (rule 366)

    $default	reduce using rule 366 (struct_member_exp)



state 557

    struct_member_exp  ->  point_exp DOT array option_struct_member_exp .   (rule 364)

    $default	reduce using rule 364 (struct_member_exp)



state 558

    struct_member_exp  ->  point_exp DOT identifier option_struct_member_exp .   (rule 361)

    $default	reduce using rule 361 (struct_member_exp)



state 559

    struct_member_exp  ->  point_exp IMPLY array option_struct_member_exp .   (rule 374)

    $default	reduce using rule 374 (struct_member_exp)



state 560

    struct_member_exp  ->  point_exp IMPLY identifier option_struct_member_exp .   (rule 368)

    $default	reduce using rule 368 (struct_member_exp)



state 561

    struct_member_exp  ->  identifier DOT array option_struct_member_exp .   (rule 362)

    $default	reduce using rule 362 (struct_member_exp)



state 562

    struct_member_exp  ->  identifier DOT identifier option_struct_member_exp .   (rule 359)

    $default	reduce using rule 359 (struct_member_exp)



state 563

    struct_member_exp  ->  identifier IMPLY array option_struct_member_exp .   (rule 369)

    $default	reduce using rule 369 (struct_member_exp)



state 564

    struct_member_exp  ->  identifier IMPLY identifier option_struct_member_exp .   (rule 365)

    $default	reduce using rule 365 (struct_member_exp)



state 565

    poptional_projection  ->  COMMA complexProposition poptional_projection .   (rule 28)

    $default	reduce using rule 28 (poptional_projection)



state 566

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION . OPEN_BPAR complexProposition CLOSE_BPAR   (rule 23)

    OPEN_BPAR	shift, and go to state 704



state 567

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    ari_exp  ->  IF bool_exp THEN ari_exp . option_exp_else_statement   (rule 159)

    ELSE	shift, and go to state 705
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    ELSE	[reduce using rule 163 (option_exp_else_statement)]
    ADD 	[reduce using rule 163 (option_exp_else_statement)]
    SUB 	[reduce using rule 163 (option_exp_else_statement)]
    $default	reduce using rule 163 (option_exp_else_statement)

    option_exp_else_statement	go to state 706
    ari_operator	go to state 236



state 568

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 707
    MUL 	shift, and go to state 708



state 569

    type_cast  ->  OPEN_PAR INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 210)

    $default	reduce using rule 210 (type_cast)



state 570

    type_cast_alg_exp  ->  simple_ari_exp .   (rule 160)
    type_cast_alg_exp  ->  simple_ari_exp . ari_operator simple_ari_exp   (rule 161)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 165)

    INTER_OR	shift, and go to state 237
    CON 	shift, and go to state 238
    ADDRESS	shift, and go to state 239
    LST 	shift, and go to state 246
    RST 	shift, and go to state 247
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235
    MUL 	shift, and go to state 248
    DIV 	shift, and go to state 249
    MOD 	shift, and go to state 250

    INTER_OR	[reduce using rule 160 (type_cast_alg_exp)]
    CON 	[reduce using rule 160 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 160 (type_cast_alg_exp)]
    LST 	[reduce using rule 160 (type_cast_alg_exp)]
    RST 	[reduce using rule 160 (type_cast_alg_exp)]
    ADD 	[reduce using rule 160 (type_cast_alg_exp)]
    SUB 	[reduce using rule 160 (type_cast_alg_exp)]
    MUL 	[reduce using rule 160 (type_cast_alg_exp)]
    DIV 	[reduce using rule 160 (type_cast_alg_exp)]
    MOD 	[reduce using rule 160 (type_cast_alg_exp)]
    $default	reduce using rule 160 (type_cast_alg_exp)

    bi_operator	go to state 251
    ari_operator	go to state 709



state 571

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 217)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 711
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 572

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 712



state 573

    type_cast  ->  OPEN_PAR CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 212)

    $default	reduce using rule 212 (type_cast)



state 574

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 713
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 575

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 714



state 576

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR . casted_element   (rule 222)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 715
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 577

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 228)

    CLOSE_PAR	shift, and go to state 716



state 578

    type_cast  ->  OPEN_PAR FLOATDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 211)

    $default	reduce using rule 211 (type_cast)



state 579

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 717
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 580

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 718



state 581

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 719
    MUL 	shift, and go to state 572



state 582

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 720
    MUL 	shift, and go to state 575



state 583

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 721
    MUL 	shift, and go to state 580



state 584

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 586
    MUL 	shift, and go to state 654



state 585

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 722



state 586

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 215)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 723
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 587

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 724
    MUL 	shift, and go to state 725



state 588

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 216)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 726
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 589

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 727
    MUL 	shift, and go to state 728



state 590

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 213)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 729
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 591

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR . type_cast_alg_exp   (rule 214)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 730
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 592

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 230)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 731
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 593

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 232)

    CLOSE_PAR	shift, and go to state 732



state 594

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    MUL 	shift, and go to state 733



state 595

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    MUL 	shift, and go to state 734



state 596

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    MUL 	shift, and go to state 735



state 597

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    INTDECLARATION	shift, and go to state 736
    CHARDECLARATION	shift, and go to state 737



state 598

    option_else_statement  ->  ELSE . statement_bpar   (rule 345)

    error	shift, and go to state 295
    OPEN_BPAR	shift, and go to state 296

    statement_bpar	go to state 738



state 599

    if_statement  ->  IF bool_exp THEN statement_bpar option_else_statement .   (rule 344)

    $default	reduce using rule 344 (if_statement)



state 600

    option_function_parameter_list  ->  OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 287)

    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 739



state 601

    option_function_parameter_list  ->  ID MUL . identifier inner_option_define_identifier   (rule 270)
    option_function_parameter_list  ->  ID MUL . MUL identifier inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  ID MUL . inner_option_define_identifier   (rule 277)
    option_function_parameter_list  ->  ID MUL . MUL inner_option_define_identifier   (rule 278)

    COMMA	shift, and go to state 279
    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 740
    ID  	shift, and go to state 136

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 741
    identifier	go to state 742



state 602

    option_function_parameter_list  ->  ID inner_option_define_identifier .   (rule 276)

    $default	reduce using rule 276 (option_function_parameter_list)



state 603

    option_function_parameter_list  ->  ID identifier . inner_option_define_identifier   (rule 269)
    option_function_parameter_list  ->  ID identifier . ARRAY inner_option_define_identifier   (rule 272)

    ARRAY	shift, and go to state 743
    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 744



state 604

    option_function_parameter_list  ->  STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 266)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL identifier inner_option_define_identifier   (rule 267)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . inner_option_define_identifier   (rule 274)
    option_function_parameter_list  ->  STRUCT_TYPE MUL . MUL inner_option_define_identifier   (rule 275)

    COMMA	shift, and go to state 279
    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 745
    ID  	shift, and go to state 136

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 746
    identifier	go to state 747



state 605

    option_function_parameter_list  ->  STRUCT_TYPE inner_option_define_identifier .   (rule 273)

    $default	reduce using rule 273 (option_function_parameter_list)



state 606

    option_function_parameter_list  ->  STRUCT_TYPE identifier . inner_option_define_identifier   (rule 265)
    option_function_parameter_list  ->  STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 268)

    ARRAY	shift, and go to state 748
    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 749



state 607

    option_function_parameter_list  ->  all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 280)
    option_function_parameter_list  ->  all_type_define MUL . identifier inner_option_define_identifier   (rule 284)
    option_function_parameter_list  ->  all_type_define MUL . inner_option_define_identifier   (rule 285)
    option_function_parameter_list  ->  all_type_define MUL . MUL identifier inner_option_define_identifier   (rule 286)

    COMMA	shift, and go to state 279
    OPEN_PAR	shift, and go to state 135
    MUL 	shift, and go to state 750
    ID  	shift, and go to state 136

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 751
    identifier	go to state 752



state 608

    option_function_parameter_list  ->  all_type_define inner_option_define_identifier .   (rule 264)

    $default	reduce using rule 264 (option_function_parameter_list)



state 609

    option_function_parameter_list  ->  all_type_define identifier . inner_option_define_identifier   (rule 263)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY inner_option_define_identifier   (rule 279)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 282)
    option_function_parameter_list  ->  all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)

    ARRAY	shift, and go to state 753
    COMMA	shift, and go to state 279
    OPEN_MPAR	shift, and go to state 754

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 755



state 610

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 58)

    ASS_P	shift, and go to state 756



state 611

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL . identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)

    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 757



state 612

    inner_option_define_identifier  ->  COMMA ID identifier . inner_option_define_identifier   (rule 291)
    inner_option_define_identifier  ->  COMMA ID identifier . ARRAY inner_option_define_identifier   (rule 294)

    ARRAY	shift, and go to state 758
    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 759



state 613

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL . identifier inner_option_define_identifier   (rule 293)

    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 760



state 614

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . inner_option_define_identifier   (rule 292)
    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier . ARRAY inner_option_define_identifier   (rule 295)

    ARRAY	shift, and go to state 761
    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 762



state 615

    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier ARRAY inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . identifier inner_option_define_identifier   (rule 303)
    inner_option_define_identifier  ->  COMMA all_type_define MUL . inner_option_define_identifier   (rule 304)

    COMMA	shift, and go to state 279
    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 763
    identifier	go to state 764



state 616

    inner_option_define_identifier  ->  COMMA all_type_define inner_option_define_identifier .   (rule 290)

    $default	reduce using rule 290 (inner_option_define_identifier)



state 617

    inner_option_define_identifier  ->  COMMA all_type_define identifier . inner_option_define_identifier   (rule 289)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)
    inner_option_define_identifier  ->  COMMA all_type_define identifier . ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)

    ARRAY	shift, and go to state 765
    COMMA	shift, and go to state 279
    OPEN_MPAR	shift, and go to state 766

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 767



state 618

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR . statement CLOSE_BPAR   (rule 63)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 768
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78



state 619

    option_frame_identifier  ->  COMMA error .   (rule 326)

    $default	reduce using rule 326 (option_frame_identifier)



state 620

    option_frame_identifier  ->  COMMA identifier . option_frame_identifier   (rule 324)

    COMMA	shift, and go to state 456

    $default	reduce using rule 325 (option_frame_identifier)

    option_frame_identifier	go to state 769



state 621

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR . AND OPEN_PAR statement CLOSE_PAR   (rule 55)

    AND 	shift, and go to state 770



state 622

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL . MUL CLOSE_PAR casted_element   (rule 231)

    OPEN_PAR	shift, and go to state 135
    CLOSE_PAR	shift, and go to state 707
    MUL 	shift, and go to state 771
    ID  	shift, and go to state 186

    option_identifier_array_declaration	go to state 367
    identifier	go to state 188



state 623

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 402
    MUL 	shift, and go to state 486



state 624

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 404
    MUL 	shift, and go to state 487



state 625

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR FLOATDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 225)

    CLOSE_PAR	shift, and go to state 407
    MUL 	shift, and go to state 488



state 626

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)

    INTDECLARATION	shift, and go to state 584
    CHARDECLARATION	shift, and go to state 772



state 627

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)
    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 232)

    OPEN_PAR	shift, and go to state 135
    CLOSE_PAR	shift, and go to state 732
    MUL 	shift, and go to state 185
    ID  	shift, and go to state 186

    option_identifier_array_declaration	go to state 367
    identifier	go to state 188



state 628

    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)
    for_sta_condition  ->  bool_exp .   (rule 340)

    OR  	shift, and go to state 268
    AND 	shift, and go to state 269

    $default	reduce using rule 340 (for_sta_condition)



state 629

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition . COMMA for_sta_control CLOSE_PAR statement_bpar   (rule 336)

    COMMA	shift, and go to state 773



state 630

    for_statement  ->  FOR ari_exp TIMES DO statement_bpar .   (rule 335)

    $default	reduce using rule 335 (for_statement)



state 631

    statement_bpar  ->  OPEN_BPAR statement CLOSE_BPAR .   (rule 314)

    $default	reduce using rule 314 (statement_bpar)



state 632

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL . OPEN_PAR bool_exp CLOSE_PAR   (rule 43)

    OPEN_PAR	shift, and go to state 774



state 633

    ass_right  ->  OPEN_PAR ass_right CLOSE_PAR .   (rule 136)

    $default	reduce using rule 136 (ass_right)



state 634

    array_exp  ->  OPEN_PAR array_exp CLOSE_PAR .   (rule 193)

    $default	reduce using rule 193 (array_exp)



state 635

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR . OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)

    OPEN_PAR	shift, and go to state 775



state 636

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 193)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 409
    CHARDECLARATION	shift, and go to state 410
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 411
    OPEN_PAR	shift, and go to state 636
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 412
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 637
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225



state 637

    array_exp  ->  array_exp . CON array_exp   (rule 190)
    array_exp  ->  OPEN_PAR array_exp . CLOSE_PAR   (rule 193)

    CLOSE_PAR	shift, and go to state 634
    CON 	shift, and go to state 484



state 638

    inner_option_list_value  ->  COMMA . ari_exp inner_option_list_value   (rule 200)
    inner_option_list_value  ->  COMMA . strliteral inner_option_list_value   (rule 201)
    inner_option_list_value  ->  COMMA . array_exp inner_option_list_value   (rule 202)
    inner_option_list_value  ->  COMMA . error   (rule 204)

    error	shift, and go to state 776
    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 473
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 777
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 778
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    strliteral	go to state 779
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 639

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value . CLOSE_BPAR   (rule 197)

    CLOSE_BPAR	shift, and go to state 780



state 640

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value . CLOSE_BPAR   (rule 199)

    CLOSE_BPAR	shift, and go to state 781



state 641

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value . CLOSE_BPAR   (rule 198)

    CLOSE_BPAR	shift, and go to state 782



state 642

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value . CLOSE_MPAR   (rule 194)

    CLOSE_MPAR	shift, and go to state 783



state 643

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value . CLOSE_MPAR   (rule 196)

    CLOSE_MPAR	shift, and go to state 784



state 644

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value . CLOSE_MPAR   (rule 195)

    CLOSE_MPAR	shift, and go to state 785



state 645

    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 409
    CHARDECLARATION	shift, and go to state 410
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 411
    OPEN_PAR	shift, and go to state 786
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 412
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225



state 646

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift . CLOSE_PAR   (rule 138)

    CLOSE_PAR	shift, and go to state 787



state 647

    option_output  ->  COMMA ass_right . option_output   (rule 350)

    COMMA	shift, and go to state 481

    $default	reduce using rule 349 (option_output)

    option_output	go to state 788



state 648

    output_statement  ->  DISPLAY OPEN_PAR ass_right option_output CLOSE_PAR .   (rule 348)

    $default	reduce using rule 348 (output_statement)



state 649

    array_exp  ->  OPEN_PAR . array_exp CLOSE_PAR   (rule 193)

    OPEN_PAR	shift, and go to state 649
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301

    array_exp	go to state 637
    option_list_value	go to state 307
    option_struct_list_value	go to state 308



state 650

    array_exp  ->  array_exp . CON array_exp   (rule 190)
    array_exp  ->  array_exp CON array_exp .   (rule 190)


    $default	reduce using rule 190 (array_exp)



state 651

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 217)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 789
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 790
    INTLITERAL	shift, and go to state 791
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 711
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 652

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 792
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 793
    INTLITERAL	shift, and go to state 794
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 713
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 653

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 795
    INTLITERAL	shift, and go to state 796
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 717
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 654

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 797
    MUL 	shift, and go to state 725



state 655

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 798
    MUL 	shift, and go to state 728



state 656

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)

    OPEN_PAR	shift, and go to state 799



state 657

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 139)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 800
    ari_operator	go to state 236



state 658

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 84)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 445
    UNSIGNED	shift, and go to state 341
    ID  	shift, and go to state 446
    STRUCT_TYPE	shift, and go to state 447

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 342
    sign_type_define	go to state 344
    all_type_define	go to state 448
    option_function_parameter_list	go to state 801



state 659

    imply_pre  ->  OPEN_PAR imply_pre CLOSE_PAR .   (rule 333)

    $default	reduce using rule 333 (imply_pre)



state 660

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 152)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 802
    ari_operator	go to state 236



state 661

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array . option_struct_member_exp   (rule 371)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 803



state 662

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier . option_struct_member_exp   (rule 367)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 804



state 663

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR . statement CLOSE_MPAR   (rule 54)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 805
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78



state 664

    option_projection  ->  COMMA statement option_projection .   (rule 328)

    $default	reduce using rule 328 (option_projection)



state 665

    statement  ->  OPEN_BPAR statement CLOSE_BPAR PROJECTION statement_bpar .   (rule 57)

    $default	reduce using rule 57 (statement)



state 666

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION . statement_bpar   (rule 56)

    error	shift, and go to state 295
    OPEN_BPAR	shift, and go to state 296

    statement_bpar	go to state 806



state 667

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    ASS_P	shift, and go to state 807



state 668

    function  ->  EXTERN ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 70)

    $default	reduce using rule 70 (function)



state 669

    declaration  ->  OPEN_PAR MUL MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 85)

    CLOSE_PAR	shift, and go to state 656



state 670

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 808
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 671

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR . ari_exp   (rule 153)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 809
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 672

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    CLOSE_PAR	shift, and go to state 810



state 673

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    CLOSE_PAR	shift, and go to state 811



state 674

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    CLOSE_PAR	shift, and go to state 812



state 675

    type_define  ->  INTDECLARATION .   (rule 88)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    MUL 	shift, and go to state 813

    MUL 	[reduce using rule 88 (type_define)]
    $default	reduce using rule 88 (type_define)



state 676

    type_define  ->  CHARDECLARATION .   (rule 90)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    MUL 	shift, and go to state 814

    MUL 	[reduce using rule 90 (type_define)]
    $default	reduce using rule 90 (type_define)



state 677

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    MUL 	shift, and go to state 672



state 678

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    MUL 	shift, and go to state 673



state 679

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    MUL 	shift, and go to state 674



state 680

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    INTDECLARATION	shift, and go to state 736
    CHARDECLARATION	shift, and go to state 815



state 681

    option_input  ->  COMMA array . option_input   (rule 358)

    COMMA	shift, and go to state 524

    $default	reduce using rule 356 (option_input)

    option_input	go to state 816



state 682

    option_input  ->  COMMA identifier . option_input   (rule 357)

    COMMA	shift, and go to state 524

    $default	reduce using rule 356 (option_input)

    option_input	go to state 817



state 683

    input_statement  ->  REQUEST OPEN_PAR array option_input CLOSE_PAR .   (rule 354)

    $default	reduce using rule 354 (input_statement)



state 684

    input_statement  ->  REQUEST OPEN_PAR identifier option_input CLOSE_PAR .   (rule 352)

    $default	reduce using rule 352 (input_statement)



state 685

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 69)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 307)

    CLOSE_PAR	shift, and go to state 818



state 686

    inner_option_function_identifier  ->  COMMA error .   (rule 313)

    $default	reduce using rule 313 (inner_option_function_identifier)



state 687

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    inner_option_function_identifier  ->  COMMA ID . OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 311)
    identifier  ->  ID .   (rule 318)

    OPEN_PAR	shift, and go to state 819
    OPEN_MPAR	shift, and go to state 184

    $default	reduce using rule 318 (identifier)



state 688

    inner_option_function_identifier  ->  COMMA ass_right . inner_option_function_identifier   (rule 310)

    COMMA	shift, and go to state 535

    $default	reduce using rule 312 (inner_option_function_identifier)

    inner_option_function_identifier	go to state 820



state 689

    option_ari_exp  ->  COMMA error .   (rule 147)

    $default	reduce using rule 147 (option_ari_exp)



state 690

    option_ari_exp  ->  COMMA ari_exp . option_ari_exp   (rule 146)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 821
    ari_operator	go to state 236



state 691

    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 139)

    $default	reduce using rule 139 (array)



state 692

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp . inner_option_identifier_array_declaration   (rule 97)
    array_exp  ->  array_exp . CON array_exp   (rule 190)

    COMMA	shift, and go to state 370
    CON 	shift, and go to state 484

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 822



state 693

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral . inner_option_identifier_array_declaration   (rule 98)

    COMMA	shift, and go to state 370

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 823



state 694

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)

    CLOSE_MPAR	shift, and go to state 824



state 695

    option_identifier_array_declaration  ->  identifier ASS_P ass_right inner_option_identifier_array_declaration .   (rule 96)

    $default	reduce using rule 96 (option_identifier_array_declaration)



state 696

    option_struct_declaration  ->  sign_declaration AND option_struct_declaration .   (rule 66)

    $default	reduce using rule 66 (option_struct_declaration)



state 697

    statement  ->  type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR . OPEN_BPAR statement CLOSE_BPAR   (rule 59)

    OPEN_BPAR	shift, and go to state 825



state 698

    option_struct_member_exp  ->  DOT function .   (rule 381)

    $default	reduce using rule 381 (option_struct_member_exp)



state 699

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    option_struct_member_exp  ->  DOT array . option_struct_member_exp   (rule 378)

    DOT 	shift, and go to state 550
    OPEN_PAR	shift, and go to state 200
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 826



state 700

    option_struct_member_exp  ->  DOT identifier . option_struct_member_exp   (rule 377)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 827



state 701

    option_struct_member_exp  ->  IMPLY function .   (rule 382)

    $default	reduce using rule 382 (option_struct_member_exp)



state 702

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)
    option_struct_member_exp  ->  IMPLY array . option_struct_member_exp   (rule 380)

    DOT 	shift, and go to state 550
    OPEN_PAR	shift, and go to state 200
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 828



state 703

    option_struct_member_exp  ->  IMPLY identifier . option_struct_member_exp   (rule 379)

    DOT 	shift, and go to state 550
    IMPLY	shift, and go to state 551

    DOT 	[reduce using rule 376 (option_struct_member_exp)]
    IMPLY	[reduce using rule 376 (option_struct_member_exp)]
    $default	reduce using rule 376 (option_struct_member_exp)

    option_struct_member_exp	go to state 829



state 704

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR . complexProposition CLOSE_BPAR   (rule 23)

    EMPTY	shift, and go to state 3
    MORE	shift, and go to state 4
    DEFINE	shift, and go to state 5
    MY_TRUE	shift, and go to state 6
    MY_FALSE	shift, and go to state 7
    SKIP	shift, and go to state 8
    OPEN_PAR	shift, and go to state 9
    OPEN_BPAR	shift, and go to state 10
    NEXT	shift, and go to state 11
    NEGATION	shift, and go to state 12
    LENGTH	shift, and go to state 13
    FINAL	shift, and go to state 14
    KEEP	shift, and go to state 15
    ALWAYS	shift, and go to state 16
    HALT	shift, and go to state 17
    W_NEXT	shift, and go to state 18
    SOMETIMES	shift, and go to state 19
    ID  	shift, and go to state 20

    complexProposition	go to state 830



state 705

    option_exp_else_statement  ->  ELSE . ari_exp   (rule 162)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 831
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 706

    ari_exp  ->  IF bool_exp THEN ari_exp option_exp_else_statement .   (rule 159)

    $default	reduce using rule 159 (ari_exp)



state 707

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR . casted_element   (rule 229)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 832
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 708

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 231)

    CLOSE_PAR	shift, and go to state 833



state 709

    type_cast_alg_exp  ->  simple_ari_exp ari_operator . simple_ari_exp   (rule 161)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    simple_ari_exp	go to state 834
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 710

    casted_element  ->  type_cast_alg_exp .   (rule 233)

    $default	reduce using rule 233 (casted_element)



state 711

    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 217)

    $default	reduce using rule 217 (type_cast)



state 712

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 223)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 835
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 713

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 220)

    $default	reduce using rule 220 (type_cast)



state 714

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 226)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 836
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 715

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL CLOSE_PAR casted_element .   (rule 222)

    $default	reduce using rule 222 (type_cast)



state 716

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 228)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 837
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 717

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR casted_element .   (rule 219)

    $default	reduce using rule 219 (type_cast)



state 718

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 225)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 838
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 719

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 217)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 790
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 711
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 720

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 793
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 713
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 721

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . casted_element   (rule 219)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 795
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 717
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 722

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 839
    MUL 	shift, and go to state 728



state 723

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 215)

    $default	reduce using rule 215 (type_cast)



state 724

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 218)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 840
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 725

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 224)

    CLOSE_PAR	shift, and go to state 841



state 726

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 216)

    $default	reduce using rule 216 (type_cast)



state 727

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 842
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 728

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL . CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 843



state 729

    type_cast  ->  OPEN_PAR SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 213)

    $default	reduce using rule 213 (type_cast)



state 730

    type_cast  ->  OPEN_PAR SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp .   (rule 214)

    $default	reduce using rule 214 (type_cast)



state 731

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 230)

    $default	reduce using rule 230 (type_cast)



state 732

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 232)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 844
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 733

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    CLOSE_PAR	shift, and go to state 845



state 734

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    CLOSE_PAR	shift, and go to state 846



state 735

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    CLOSE_PAR	shift, and go to state 847



state 736

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    MUL 	shift, and go to state 813



state 737

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    MUL 	shift, and go to state 848



state 738

    option_else_statement  ->  ELSE statement_bpar .   (rule 345)

    $default	reduce using rule 345 (option_else_statement)



state 739

    option_function_parameter_list  ->  OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 287)

    CLOSE_PAR	shift, and go to state 849



state 740

    option_function_parameter_list  ->  ID MUL MUL . identifier inner_option_define_identifier   (rule 271)
    option_function_parameter_list  ->  ID MUL MUL . inner_option_define_identifier   (rule 278)

    COMMA	shift, and go to state 279
    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 850
    identifier	go to state 851



state 741

    option_function_parameter_list  ->  ID MUL inner_option_define_identifier .   (rule 277)

    $default	reduce using rule 277 (option_function_parameter_list)



state 742

    option_function_parameter_list  ->  ID MUL identifier . inner_option_define_identifier   (rule 270)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 852



state 743

    option_function_parameter_list  ->  ID identifier ARRAY . inner_option_define_identifier   (rule 272)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 853



state 744

    option_function_parameter_list  ->  ID identifier inner_option_define_identifier .   (rule 269)

    $default	reduce using rule 269 (option_function_parameter_list)



state 745

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . identifier inner_option_define_identifier   (rule 267)
    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL . inner_option_define_identifier   (rule 275)

    COMMA	shift, and go to state 279
    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 854
    identifier	go to state 855



state 746

    option_function_parameter_list  ->  STRUCT_TYPE MUL inner_option_define_identifier .   (rule 274)

    $default	reduce using rule 274 (option_function_parameter_list)



state 747

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 266)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 856



state 748

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 268)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 857



state 749

    option_function_parameter_list  ->  STRUCT_TYPE identifier inner_option_define_identifier .   (rule 265)

    $default	reduce using rule 265 (option_function_parameter_list)



state 750

    option_function_parameter_list  ->  all_type_define MUL MUL . identifier inner_option_define_identifier   (rule 286)

    OPEN_PAR	shift, and go to state 135
    ID  	shift, and go to state 136

    identifier	go to state 858



state 751

    option_function_parameter_list  ->  all_type_define MUL inner_option_define_identifier .   (rule 285)

    $default	reduce using rule 285 (option_function_parameter_list)



state 752

    option_function_parameter_list  ->  all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 280)
    option_function_parameter_list  ->  all_type_define MUL identifier . inner_option_define_identifier   (rule 284)

    ARRAY	shift, and go to state 859
    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 860



state 753

    option_function_parameter_list  ->  all_type_define identifier ARRAY . inner_option_define_identifier   (rule 279)
    option_function_parameter_list  ->  all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)

    COMMA	shift, and go to state 279
    OPEN_MPAR	shift, and go to state 861

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 862



state 754

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 282)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 863
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 755

    option_function_parameter_list  ->  all_type_define identifier inner_option_define_identifier .   (rule 263)

    $default	reduce using rule 263 (option_function_parameter_list)



state 756

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 58)

    OPEN_BPAR	shift, and go to state 864



state 757

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)

    CLOSE_PAR	shift, and go to state 865



state 758

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY . inner_option_define_identifier   (rule 294)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 866



state 759

    inner_option_define_identifier  ->  COMMA ID identifier inner_option_define_identifier .   (rule 291)

    $default	reduce using rule 291 (inner_option_define_identifier)



state 760

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier . inner_option_define_identifier   (rule 293)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 867



state 761

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY . inner_option_define_identifier   (rule 295)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 868



state 762

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier inner_option_define_identifier .   (rule 292)

    $default	reduce using rule 292 (inner_option_define_identifier)



state 763

    inner_option_define_identifier  ->  COMMA all_type_define MUL inner_option_define_identifier .   (rule 304)

    $default	reduce using rule 304 (inner_option_define_identifier)



state 764

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . ARRAY inner_option_define_identifier   (rule 297)
    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier . inner_option_define_identifier   (rule 303)

    ARRAY	shift, and go to state 869
    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 870



state 765

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . inner_option_define_identifier   (rule 296)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY . OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)

    COMMA	shift, and go to state 279
    OPEN_MPAR	shift, and go to state 871

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 872



state 766

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR . ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 873
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 767

    inner_option_define_identifier  ->  COMMA all_type_define identifier inner_option_define_identifier .   (rule 289)

    $default	reduce using rule 289 (inner_option_define_identifier)



state 768

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement . CLOSE_BPAR   (rule 63)

    CLOSE_BPAR	shift, and go to state 874
    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192



state 769

    option_frame_identifier  ->  COMMA identifier option_frame_identifier .   (rule 324)

    $default	reduce using rule 324 (option_frame_identifier)



state 770

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND . OPEN_PAR statement CLOSE_PAR   (rule 55)

    OPEN_PAR	shift, and go to state 875



state 771

    option_identifier_array_declaration  ->  MUL . option_identifier_array_declaration   (rule 101)
    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL . CLOSE_PAR casted_element   (rule 231)

    OPEN_PAR	shift, and go to state 135
    CLOSE_PAR	shift, and go to state 833
    MUL 	shift, and go to state 185
    ID  	shift, and go to state 186

    option_identifier_array_declaration	go to state 367
    identifier	go to state 188



state 772

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 655



state 773

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA . for_sta_control CLOSE_PAR statement_bpar   (rule 336)

    OPEN_PAR	shift, and go to state 353
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 175
    ID  	shift, and go to state 170

    $default	reduce using rule 343 (for_sta_control)

    ass_statement	go to state 876
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 177
    point_exp	go to state 70
    identifier	go to state 71
    for_sta_control	go to state 877
    struct_member_exp	go to state 78



state 774

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR . bool_exp CLOSE_PAR   (rule 43)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 119
    MY_TRUE	shift, and go to state 120
    MY_FALSE	shift, and go to state 121
    OPEN_PAR	shift, and go to state 122
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    NEGATION	shift, and go to state 123
    ID  	shift, and go to state 57
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 125
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    bool_exp	go to state 878
    prime_bool_exp	go to state 127
    identifier	go to state 101
    strliteral	go to state 128
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 775

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR . type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43

    type_define	go to state 879



state 776

    inner_option_list_value  ->  COMMA error .   (rule 204)

    $default	reduce using rule 204 (inner_option_list_value)



state 777

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    inner_option_list_value  ->  COMMA ari_exp . inner_option_list_value   (rule 200)

    COMMA	shift, and go to state 638
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 203 (inner_option_list_value)

    ari_operator	go to state 236
    inner_option_list_value	go to state 880



state 778

    array_exp  ->  array_exp . CON array_exp   (rule 190)
    inner_option_list_value  ->  COMMA array_exp . inner_option_list_value   (rule 202)

    COMMA	shift, and go to state 638
    CON 	shift, and go to state 484

    $default	reduce using rule 203 (inner_option_list_value)

    inner_option_list_value	go to state 881



state 779

    inner_option_list_value  ->  COMMA strliteral . inner_option_list_value   (rule 201)

    COMMA	shift, and go to state 638

    $default	reduce using rule 203 (inner_option_list_value)

    inner_option_list_value	go to state 882



state 780

    option_struct_list_value  ->  OPEN_BPAR ari_exp inner_option_list_value CLOSE_BPAR .   (rule 197)

    $default	reduce using rule 197 (option_struct_list_value)



state 781

    option_struct_list_value  ->  OPEN_BPAR array_exp inner_option_list_value CLOSE_BPAR .   (rule 199)

    $default	reduce using rule 199 (option_struct_list_value)



state 782

    option_struct_list_value  ->  OPEN_BPAR strliteral inner_option_list_value CLOSE_BPAR .   (rule 198)

    $default	reduce using rule 198 (option_struct_list_value)



state 783

    option_list_value  ->  OPEN_MPAR ari_exp inner_option_list_value CLOSE_MPAR .   (rule 194)

    $default	reduce using rule 194 (option_list_value)



state 784

    option_list_value  ->  OPEN_MPAR array_exp inner_option_list_value CLOSE_MPAR .   (rule 196)

    $default	reduce using rule 196 (option_list_value)



state 785

    option_list_value  ->  OPEN_MPAR strliteral inner_option_list_value CLOSE_MPAR .   (rule 195)

    $default	reduce using rule 195 (option_list_value)



state 786

    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 623
    CHARDECLARATION	shift, and go to state 624
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 625
    OPEN_PAR	shift, and go to state 216
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 626
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225



state 787

    rightaddrshift  ->  MUL OPEN_PAR leftaddrshift CLOSE_PAR .   (rule 138)

    $default	reduce using rule 138 (rightaddrshift)



state 788

    option_output  ->  COMMA ass_right option_output .   (rule 350)

    $default	reduce using rule 350 (option_output)



state 789

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 212
    CHARDECLARATION	shift, and go to state 213
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 215
    OPEN_PAR	shift, and go to state 883
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 217
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225



state 790

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    identifier  ->  ID .   (rule 318)

    OPEN_PAR	shift, and go to state 183
    CLOSE_PAR	shift, and go to state 884
    OPEN_MPAR	shift, and go to state 184

    CLOSE_PAR	[reduce using rule 318 (identifier)]
    $default	reduce using rule 318 (identifier)



state 791

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 885

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 792

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 212
    CHARDECLARATION	shift, and go to state 213
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 215
    OPEN_PAR	shift, and go to state 886
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 217
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225



state 793

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    identifier  ->  ID .   (rule 318)

    OPEN_PAR	shift, and go to state 183
    CLOSE_PAR	shift, and go to state 887
    OPEN_MPAR	shift, and go to state 184

    CLOSE_PAR	[reduce using rule 318 (identifier)]
    $default	reduce using rule 318 (identifier)



state 794

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 888

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 795

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    identifier  ->  ID .   (rule 318)

    OPEN_PAR	shift, and go to state 183
    CLOSE_PAR	shift, and go to state 889
    OPEN_MPAR	shift, and go to state 184

    CLOSE_PAR	[reduce using rule 318 (identifier)]
    $default	reduce using rule 318 (identifier)



state 796

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 890

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 797

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 218)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 891
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 840
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 798

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 892
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 893
    INTLITERAL	shift, and go to state 894
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 842
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 799

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 85)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 445
    UNSIGNED	shift, and go to state 341
    ID  	shift, and go to state 446
    STRUCT_TYPE	shift, and go to state 447

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 342
    sign_type_define	go to state 344
    all_type_define	go to state 448
    option_function_parameter_list	go to state 895



state 800

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 139)

    CLOSE_MPAR	shift, and go to state 896



state 801

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 84)

    CLOSE_PAR	shift, and go to state 897



state 802

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 152)

    CLOSE_MPAR	shift, and go to state 898



state 803

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY array option_struct_member_exp .   (rule 371)

    $default	reduce using rule 371 (struct_member_exp)



state 804

    struct_member_exp  ->  OPEN_PAR address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp .   (rule 367)

    $default	reduce using rule 367 (struct_member_exp)



state 805

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement . CLOSE_MPAR   (rule 54)

    CLOSE_MPAR	shift, and go to state 899
    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192



state 806

    statement  ->  OPEN_BPAR statement option_projection CLOSE_BPAR PROJECTION statement_bpar .   (rule 56)

    $default	reduce using rule 56 (statement)



state 807

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . OPEN_BPAR empty_statement CLOSE_BPAR   (rule 60)

    OPEN_BPAR	shift, and go to state 900



state 808

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 901
    ari_operator	go to state 236



state 809

    point_exp  ->  MUL OPEN_PAR all_type_define MUL CLOSE_PAR ari_exp .   (rule 153)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    ADD 	[reduce using rule 153 (point_exp)]
    SUB 	[reduce using rule 153 (point_exp)]
    $default	reduce using rule 153 (point_exp)

    ari_operator	go to state 236



state 810

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    OPEN_PAR	shift, and go to state 902
    ID  	shift, and go to state 903
    INTLITERAL	shift, and go to state 904



state 811

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    OPEN_PAR	shift, and go to state 905
    ID  	shift, and go to state 906
    INTLITERAL	shift, and go to state 907



state 812

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)
    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    ID  	shift, and go to state 908
    INTLITERAL	shift, and go to state 909



state 813

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    CLOSE_PAR	shift, and go to state 910



state 814

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    CLOSE_PAR	shift, and go to state 911



state 815

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    MUL 	shift, and go to state 814



state 816

    option_input  ->  COMMA array option_input .   (rule 358)

    $default	reduce using rule 358 (option_input)



state 817

    option_input  ->  COMMA identifier option_input .   (rule 357)

    $default	reduce using rule 357 (option_input)



state 818

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 69)
    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 307)

    COMMA	shift, and go to state 535

    COMMA	[reduce using rule 69 (function)]
    CLOSE_PAR	reduce using rule 69 (function)
    CLOSE_PAR	[reduce using rule 312 (inner_option_function_identifier)]
    $default	reduce using rule 69 (function)

    inner_option_function_identifier	go to state 912



state 819

    function  ->  ID OPEN_PAR . option_function_identifier CLOSE_PAR   (rule 69)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR . option_function_identifier CLOSE_PAR inner_option_function_identifier   (rule 311)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 299
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 362
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 302
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 363
    STRLITERAL	shift, and go to state 124
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    $default	reduce using rule 308 (option_function_identifier)

    function	go to state 93
    ass_right	go to state 364
    rightaddrshift	go to state 304
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 305
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    array_exp	go to state 306
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    address_exp	go to state 99
    type_cast	go to state 100
    option_function_identifier	go to state 913
    identifier	go to state 101
    strliteral	go to state 309
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 820

    inner_option_function_identifier  ->  COMMA ass_right inner_option_function_identifier .   (rule 310)

    $default	reduce using rule 310 (inner_option_function_identifier)



state 821

    option_ari_exp  ->  COMMA ari_exp option_ari_exp .   (rule 146)

    $default	reduce using rule 146 (option_ari_exp)



state 822

    option_identifier_array_declaration  ->  ID ARRAY ASS_P array_exp inner_option_identifier_array_declaration .   (rule 97)

    $default	reduce using rule 97 (option_identifier_array_declaration)



state 823

    option_identifier_array_declaration  ->  ID ARRAY ASS_P strliteral inner_option_identifier_array_declaration .   (rule 98)

    $default	reduce using rule 98 (option_identifier_array_declaration)



state 824

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . inner_option_identifier_array_declaration   (rule 95)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . ASS_P strliteral inner_option_identifier_array_declaration   (rule 100)

    COMMA	shift, and go to state 370
    ASS_P	shift, and go to state 914

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 915



state 825

    statement  ->  type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR . statement CLOSE_BPAR   (rule 59)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 916
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78



state 826

    option_struct_member_exp  ->  DOT array option_struct_member_exp .   (rule 378)

    $default	reduce using rule 378 (option_struct_member_exp)



state 827

    option_struct_member_exp  ->  DOT identifier option_struct_member_exp .   (rule 377)

    $default	reduce using rule 377 (option_struct_member_exp)



state 828

    option_struct_member_exp  ->  IMPLY array option_struct_member_exp .   (rule 380)

    $default	reduce using rule 380 (option_struct_member_exp)



state 829

    option_struct_member_exp  ->  IMPLY identifier option_struct_member_exp .   (rule 379)

    $default	reduce using rule 379 (option_struct_member_exp)



state 830

    complexProposition  ->  complexProposition . AND complexProposition   (rule 4)
    complexProposition  ->  complexProposition . OR complexProposition   (rule 5)
    complexProposition  ->  complexProposition . IFF complexProposition   (rule 6)
    complexProposition  ->  complexProposition . PROPIMPLY complexProposition   (rule 7)
    complexProposition  ->  complexProposition . CHOP complexProposition   (rule 8)
    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition . CLOSE_BPAR   (rule 23)
    complexProposition  ->  complexProposition . CHOPSTAR   (rule 26)

    CLOSE_BPAR	shift, and go to state 917
    CHOP	shift, and go to state 113
    IFF 	shift, and go to state 114
    PROPIMPLY	shift, and go to state 115
    OR  	shift, and go to state 116
    AND 	shift, and go to state 117
    CHOPSTAR	shift, and go to state 118



state 831

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    option_exp_else_statement  ->  ELSE ari_exp .   (rule 162)

    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    ADD 	[reduce using rule 162 (option_exp_else_statement)]
    SUB 	[reduce using rule 162 (option_exp_else_statement)]
    $default	reduce using rule 162 (option_exp_else_statement)

    ari_operator	go to state 236



state 832

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element .   (rule 229)

    $default	reduce using rule 229 (type_cast)



state 833

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR . casted_element   (rule 231)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 918
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 834

    type_cast_alg_exp  ->  simple_ari_exp ari_operator simple_ari_exp .   (rule 161)
    simple_ari_exp  ->  simple_ari_exp . bi_operator member_in_exp   (rule 165)

    INTER_OR	shift, and go to state 237
    CON 	shift, and go to state 238
    ADDRESS	shift, and go to state 239
    LST 	shift, and go to state 246
    RST 	shift, and go to state 247
    MUL 	shift, and go to state 248
    DIV 	shift, and go to state 249
    MOD 	shift, and go to state 250

    INTER_OR	[reduce using rule 161 (type_cast_alg_exp)]
    CON 	[reduce using rule 161 (type_cast_alg_exp)]
    ADDRESS	[reduce using rule 161 (type_cast_alg_exp)]
    LST 	[reduce using rule 161 (type_cast_alg_exp)]
    RST 	[reduce using rule 161 (type_cast_alg_exp)]
    MUL 	[reduce using rule 161 (type_cast_alg_exp)]
    DIV 	[reduce using rule 161 (type_cast_alg_exp)]
    MOD 	[reduce using rule 161 (type_cast_alg_exp)]
    $default	reduce using rule 161 (type_cast_alg_exp)

    bi_operator	go to state 251



state 835

    type_cast  ->  OPEN_PAR INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 223)

    $default	reduce using rule 223 (type_cast)



state 836

    type_cast  ->  OPEN_PAR CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 226)

    $default	reduce using rule 226 (type_cast)



state 837

    type_cast  ->  OPEN_PAR VOIDDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 228)

    $default	reduce using rule 228 (type_cast)



state 838

    type_cast  ->  OPEN_PAR FLOATDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 225)

    $default	reduce using rule 225 (type_cast)



state 839

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 893
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 842
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 840

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element .   (rule 218)

    $default	reduce using rule 218 (type_cast)



state 841

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 224)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 919
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 842

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element .   (rule 221)

    $default	reduce using rule 221 (type_cast)



state 843

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR . casted_element   (rule 227)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 920
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 844

    type_cast  ->  OPEN_PAR STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 232)

    $default	reduce using rule 232 (type_cast)



state 845

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    ID  	shift, and go to state 903



state 846

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    ID  	shift, and go to state 906



state 847

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    ID  	shift, and go to state 908



state 848

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    CLOSE_PAR	shift, and go to state 921



state 849

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 287)

    OPEN_PAR	shift, and go to state 922



state 850

    option_function_parameter_list  ->  ID MUL MUL inner_option_define_identifier .   (rule 278)

    $default	reduce using rule 278 (option_function_parameter_list)



state 851

    option_function_parameter_list  ->  ID MUL MUL identifier . inner_option_define_identifier   (rule 271)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 923



state 852

    option_function_parameter_list  ->  ID MUL identifier inner_option_define_identifier .   (rule 270)

    $default	reduce using rule 270 (option_function_parameter_list)



state 853

    option_function_parameter_list  ->  ID identifier ARRAY inner_option_define_identifier .   (rule 272)

    $default	reduce using rule 272 (option_function_parameter_list)



state 854

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL inner_option_define_identifier .   (rule 275)

    $default	reduce using rule 275 (option_function_parameter_list)



state 855

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier . inner_option_define_identifier   (rule 267)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 924



state 856

    option_function_parameter_list  ->  STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 266)

    $default	reduce using rule 266 (option_function_parameter_list)



state 857

    option_function_parameter_list  ->  STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 268)

    $default	reduce using rule 268 (option_function_parameter_list)



state 858

    option_function_parameter_list  ->  all_type_define MUL MUL identifier . inner_option_define_identifier   (rule 286)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 925



state 859

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 280)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 926



state 860

    option_function_parameter_list  ->  all_type_define MUL identifier inner_option_define_identifier .   (rule 284)

    $default	reduce using rule 284 (option_function_parameter_list)



state 861

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 283)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 927
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 862

    option_function_parameter_list  ->  all_type_define identifier ARRAY inner_option_define_identifier .   (rule 279)

    $default	reduce using rule 279 (option_function_parameter_list)



state 863

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 281)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 282)

    COMMA	shift, and go to state 928
    CLOSE_MPAR	shift, and go to state 929
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    ari_operator	go to state 236



state 864

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 58)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    $default	reduce using rule 68 (empty_statement)

    statement	go to state 930
    empty_statement	go to state 931
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78



state 865

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)

    OPEN_PAR	shift, and go to state 932



state 866

    inner_option_define_identifier  ->  COMMA ID identifier ARRAY inner_option_define_identifier .   (rule 294)

    $default	reduce using rule 294 (inner_option_define_identifier)



state 867

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE MUL identifier inner_option_define_identifier .   (rule 293)

    $default	reduce using rule 293 (inner_option_define_identifier)



state 868

    inner_option_define_identifier  ->  COMMA STRUCT_TYPE identifier ARRAY inner_option_define_identifier .   (rule 295)

    $default	reduce using rule 295 (inner_option_define_identifier)



state 869

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY . inner_option_define_identifier   (rule 297)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 933



state 870

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier inner_option_define_identifier .   (rule 303)

    $default	reduce using rule 303 (inner_option_define_identifier)



state 871

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 302)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 934
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 872

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY inner_option_define_identifier .   (rule 296)

    $default	reduce using rule 296 (inner_option_define_identifier)



state 873

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 300)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp . COMMA ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)

    COMMA	shift, and go to state 935
    CLOSE_MPAR	shift, and go to state 936
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    ari_operator	go to state 236



state 874

    statement  ->  EXIST identifier inner_option_define_identifier COLON OPEN_BPAR statement CLOSE_BPAR .   (rule 63)

    $default	reduce using rule 63 (statement)



state 875

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR . statement CLOSE_PAR   (rule 55)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    statement	go to state 937
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78



state 876

    for_sta_control  ->  ass_statement .   (rule 342)

    $default	reduce using rule 342 (for_sta_control)



state 877

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control . CLOSE_PAR statement_bpar   (rule 336)

    CLOSE_PAR	shift, and go to state 938



state 878

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp . CLOSE_PAR   (rule 43)
    bool_exp  ->  bool_exp . AND bool_exp   (rule 236)
    bool_exp  ->  bool_exp . OR bool_exp   (rule 237)

    CLOSE_PAR	shift, and go to state 939
    OR  	shift, and go to state 268
    AND 	shift, and go to state 269



state 879

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)

    CLOSE_PAR	shift, and go to state 940



state 880

    inner_option_list_value  ->  COMMA ari_exp inner_option_list_value .   (rule 200)

    $default	reduce using rule 200 (inner_option_list_value)



state 881

    inner_option_list_value  ->  COMMA array_exp inner_option_list_value .   (rule 202)

    $default	reduce using rule 202 (inner_option_list_value)



state 882

    inner_option_list_value  ->  COMMA strliteral inner_option_list_value .   (rule 201)

    $default	reduce using rule 201 (inner_option_list_value)



state 883

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 941
    CHARDECLARATION	shift, and go to state 942
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 411
    OPEN_PAR	shift, and go to state 216
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 943
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225



state 884

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    OPEN_MPAR	shift, and go to state 944



state 885

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    OPEN_MPAR	shift, and go to state 945



state 886

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 946
    CHARDECLARATION	shift, and go to state 947
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 411
    OPEN_PAR	shift, and go to state 216
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 948
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225



state 887

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    OPEN_MPAR	shift, and go to state 949



state 888

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)

    OPEN_MPAR	shift, and go to state 950



state 889

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    OPEN_MPAR	shift, and go to state 951



state 890

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    OPEN_MPAR	shift, and go to state 952



state 891

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    identifier  ->  ID .   (rule 318)

    OPEN_PAR	shift, and go to state 183
    CLOSE_PAR	shift, and go to state 953
    OPEN_MPAR	shift, and go to state 184

    CLOSE_PAR	[reduce using rule 318 (identifier)]
    $default	reduce using rule 318 (identifier)



state 892

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 212
    CHARDECLARATION	shift, and go to state 213
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 215
    OPEN_PAR	shift, and go to state 954
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 217
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225



state 893

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    identifier  ->  ID .   (rule 318)

    OPEN_PAR	shift, and go to state 183
    CLOSE_PAR	shift, and go to state 955
    OPEN_MPAR	shift, and go to state 184

    CLOSE_PAR	[reduce using rule 318 (identifier)]
    $default	reduce using rule 318 (identifier)



state 894

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 956

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 895

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 85)

    CLOSE_PAR	shift, and go to state 957



state 896

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)
    array  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 139)

    CLOSE_PAR	shift, and go to state 958

    CLOSE_PAR	[reduce using rule 139 (array)]
    $default	reduce using rule 139 (array)



state 897

    declaration  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 84)

    $default	reduce using rule 84 (declaration)



state 898

    point_exp  ->  OPEN_PAR point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 152)

    $default	reduce using rule 152 (point_exp)



state 899

    statement  ->  OPEN_PAR imply_pre CLOSE_PAR IMPLY OPEN_MPAR statement CLOSE_MPAR .   (rule 54)

    $default	reduce using rule 54 (statement)



state 900

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR . empty_statement CLOSE_BPAR   (rule 60)

    IF  	shift, and go to state 22
    EMPTY	shift, and go to state 23
    AWAIT	shift, and go to state 24
    STRUCT	shift, and go to state 25
    UNION	shift, and go to state 26
    FILEDECLARATION	shift, and go to state 27
    MORE	shift, and go to state 28
    DEFINE	shift, and go to state 29
    EXIST	shift, and go to state 30
    FRAME	shift, and go to state 31
    FOR 	shift, and go to state 32
    WHILE	shift, and go to state 33
    TRUE	shift, and go to state 34
    FALSE	shift, and go to state 35
    REPEAT	shift, and go to state 36
    DISPLAY	shift, and go to state 37
    SKIP	shift, and go to state 38
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 44
    OPEN_BPAR	shift, and go to state 45
    PROCESS	shift, and go to state 46
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 48
    SIGNED	shift, and go to state 49
    MUL 	shift, and go to state 50
    NEXT	shift, and go to state 51
    LENGTH	shift, and go to state 52
    REQUEST	shift, and go to state 53
    FINAL	shift, and go to state 54
    KEEP	shift, and go to state 55
    ALWAYS	shift, and go to state 56
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 58

    $default	reduce using rule 68 (empty_statement)

    statement	go to state 930
    empty_statement	go to state 959
    function	go to state 60
    struct_define_statement	go to state 61
    struct_identifier	go to state 62
    sign_declaration	go to state 63
    declaration	go to state 64
    type_define	go to state 65
    ass_statement	go to state 66
    ass_left	go to state 67
    leftaddrshift	go to state 68
    array	go to state 69
    point_exp	go to state 70
    identifier	go to state 71
    while_statement	go to state 72
    for_statement	go to state 73
    extend_for_statement	go to state 74
    if_statement	go to state 75
    output_statement	go to state 76
    input_statement	go to state 77
    struct_member_exp	go to state 78



state 901

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    CLOSE_MPAR	shift, and go to state 960



state 902

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    OPEN_PAR	shift, and go to state 961



state 903

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    CLOSE_PAR	shift, and go to state 884



state 904

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    CLOSE_PAR	shift, and go to state 885



state 905

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    OPEN_PAR	shift, and go to state 962



state 906

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    CLOSE_PAR	shift, and go to state 887



state 907

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 117)

    CLOSE_PAR	shift, and go to state 888



state 908

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    CLOSE_PAR	shift, and go to state 889



state 909

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    CLOSE_PAR	shift, and go to state 890



state 910

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    ID  	shift, and go to state 963



state 911

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    OPEN_PAR	shift, and go to state 964
    ID  	shift, and go to state 965
    INTLITERAL	shift, and go to state 966



state 912

    option_function_identifier  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 307)

    $default	reduce using rule 307 (option_function_identifier)



state 913

    function  ->  ID OPEN_PAR option_function_identifier . CLOSE_PAR   (rule 69)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier . CLOSE_PAR inner_option_function_identifier   (rule 311)

    CLOSE_PAR	shift, and go to state 967



state 914

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . array_exp inner_option_identifier_array_declaration   (rule 99)
    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P . strliteral inner_option_identifier_array_declaration   (rule 100)

    OPEN_PAR	shift, and go to state 649
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301
    STRLITERAL	shift, and go to state 124

    array_exp	go to state 968
    option_list_value	go to state 307
    option_struct_list_value	go to state 308
    strliteral	go to state 969



state 915

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR inner_option_identifier_array_declaration .   (rule 95)

    $default	reduce using rule 95 (option_identifier_array_declaration)



state 916

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    statement  ->  type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement . CLOSE_BPAR   (rule 59)

    CLOSE_BPAR	shift, and go to state 970
    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192



state 917

    complexProposition  ->  OPEN_BPAR complexProposition poptional_projection CLOSE_BPAR PROJECTION OPEN_BPAR complexProposition CLOSE_BPAR .   (rule 23)

    $default	reduce using rule 23 (complexProposition)



state 918

    type_cast  ->  OPEN_PAR STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element .   (rule 231)

    $default	reduce using rule 231 (type_cast)



state 919

    type_cast  ->  OPEN_PAR UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 224)

    $default	reduce using rule 224 (type_cast)



state 920

    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element .   (rule 227)

    $default	reduce using rule 227 (type_cast)



state 921

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    ID  	shift, and go to state 965



state 922

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 287)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 445
    UNSIGNED	shift, and go to state 341
    ID  	shift, and go to state 446
    STRUCT_TYPE	shift, and go to state 447

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 342
    sign_type_define	go to state 344
    all_type_define	go to state 448
    option_function_parameter_list	go to state 971



state 923

    option_function_parameter_list  ->  ID MUL MUL identifier inner_option_define_identifier .   (rule 271)

    $default	reduce using rule 271 (option_function_parameter_list)



state 924

    option_function_parameter_list  ->  STRUCT_TYPE MUL MUL identifier inner_option_define_identifier .   (rule 267)

    $default	reduce using rule 267 (option_function_parameter_list)



state 925

    option_function_parameter_list  ->  all_type_define MUL MUL identifier inner_option_define_identifier .   (rule 286)

    $default	reduce using rule 286 (option_function_parameter_list)



state 926

    option_function_parameter_list  ->  all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 280)

    $default	reduce using rule 280 (option_function_parameter_list)



state 927

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 283)

    CLOSE_MPAR	shift, and go to state 972
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    ari_operator	go to state 236



state 928

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 282)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 973
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 929

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 281)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 974



state 930

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    empty_statement  ->  statement .   (rule 67)

    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192

    $default	reduce using rule 67 (empty_statement)



state 931

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 58)

    CLOSE_BPAR	shift, and go to state 975



state 932

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR inner_option_define_identifier   (rule 298)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 445
    UNSIGNED	shift, and go to state 341
    ID  	shift, and go to state 446
    STRUCT_TYPE	shift, and go to state 447

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 342
    sign_type_define	go to state 344
    all_type_define	go to state 448
    option_function_parameter_list	go to state 976



state 933

    inner_option_define_identifier  ->  COMMA all_type_define MUL identifier ARRAY inner_option_define_identifier .   (rule 297)

    $default	reduce using rule 297 (inner_option_define_identifier)



state 934

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 302)

    CLOSE_MPAR	shift, and go to state 977
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    ari_operator	go to state 236



state 935

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA . ari_exp CLOSE_MPAR inner_option_define_identifier   (rule 301)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 978
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 936

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 300)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 979



state 937

    statement  ->  statement . AND statement   (rule 30)
    statement  ->  statement . OR statement   (rule 31)
    statement  ->  statement . CHOP statement   (rule 32)
    statement  ->  statement . PARALLEL statement   (rule 53)
    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement . CLOSE_PAR   (rule 55)

    CLOSE_PAR	shift, and go to state 980
    CHOP	shift, and go to state 189
    OR  	shift, and go to state 190
    PARALLEL	shift, and go to state 191
    AND 	shift, and go to state 192



state 938

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR . statement_bpar   (rule 336)

    error	shift, and go to state 295
    OPEN_BPAR	shift, and go to state 296

    statement_bpar	go to state 981



state 939

    statement  ->  REPEAT OPEN_BPAR statement CLOSE_BPAR UNTIL OPEN_PAR bool_exp CLOSE_PAR .   (rule 43)

    $default	reduce using rule 43 (statement)



state 940

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR function   (rule 135)

    OPEN_PAR	shift, and go to state 982



state 941

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 402
    MUL 	shift, and go to state 983



state 942

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 404
    MUL 	shift, and go to state 984



state 943

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)

    INTDECLARATION	shift, and go to state 584
    CHARDECLARATION	shift, and go to state 985



state 944

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 140)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 986
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 945

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 119)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 987
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 946

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 402
    MUL 	shift, and go to state 988



state 947

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 404
    MUL 	shift, and go to state 989



state 948

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)

    INTDECLARATION	shift, and go to state 584
    CHARDECLARATION	shift, and go to state 990



state 949

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 143)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 991
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 950

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 117)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 992
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 951

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 142)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 993
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 952

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 120)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 994
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 953

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    OPEN_MPAR	shift, and go to state 995



state 954

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 152)
    point_exp  ->  OPEN_PAR . point_exp CLOSE_PAR   (rule 155)
    member_in_exp  ->  OPEN_PAR . ari_exp CLOSE_PAR   (rule 175)
    address_exp  ->  OPEN_PAR . address_exp CLOSE_PAR   (rule 209)
    type_cast  ->  OPEN_PAR . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 211)
    type_cast  ->  OPEN_PAR . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR . SIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 213)
    type_cast  ->  OPEN_PAR . SIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 214)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR casted_element   (rule 219)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL CLOSE_PAR casted_element   (rule 222)
    type_cast  ->  OPEN_PAR . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 223)
    type_cast  ->  OPEN_PAR . UNSIGNED INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR . FLOATDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 225)
    type_cast  ->  OPEN_PAR . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 226)
    type_cast  ->  OPEN_PAR . UNSIGNED CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)
    type_cast  ->  OPEN_PAR . VOIDDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 228)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 229)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL CLOSE_PAR casted_element   (rule 230)
    type_cast  ->  OPEN_PAR . STRUCT STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 231)
    type_cast  ->  OPEN_PAR . STRUCT_TYPE MUL MUL CLOSE_PAR casted_element   (rule 232)
    identifier  ->  OPEN_PAR . identifier CLOSE_PAR   (rule 319)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY identifier option_struct_member_exp   (rule 367)
    struct_member_exp  ->  OPEN_PAR . address_exp CLOSE_PAR IMPLY array option_struct_member_exp   (rule 371)
    struct_member_exp  ->  OPEN_PAR . struct_member_exp CLOSE_PAR   (rule 375)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    STRUCT	shift, and go to state 211
    INTDECLARATION	shift, and go to state 996
    CHARDECLARATION	shift, and go to state 997
    VOIDDECLARATION	shift, and go to state 214
    FLOATDECLARATION	shift, and go to state 411
    OPEN_PAR	shift, and go to state 216
    EXTERN	shift, and go to state 47
    UNSIGNED	shift, and go to state 998
    SIGNED	shift, and go to state 218
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    STRUCT_TYPE	shift, and go to state 219
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 220
    point_exp	go to state 221
    ari_exp	go to state 222
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 223
    type_cast	go to state 100
    identifier	go to state 224
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 225



state 955

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    OPEN_MPAR	shift, and go to state 999



state 956

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)

    OPEN_MPAR	shift, and go to state 1000



state 957

    declaration  ->  OPEN_PAR MUL MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 85)

    $default	reduce using rule 85 (declaration)



state 958

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR . OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    OPEN_PAR	shift, and go to state 1001



state 959

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement . CLOSE_BPAR   (rule 60)

    CLOSE_BPAR	shift, and go to state 1002



state 960

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR . CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    CLOSE_PAR	shift, and go to state 958



state 961

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    INTDECLARATION	shift, and go to state 1003
    CHARDECLARATION	shift, and go to state 1004
    UNSIGNED	shift, and go to state 1005



state 962

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    INTDECLARATION	shift, and go to state 1006
    CHARDECLARATION	shift, and go to state 1007
    UNSIGNED	shift, and go to state 1008



state 963

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    CLOSE_PAR	shift, and go to state 953



state 964

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    OPEN_PAR	shift, and go to state 1009



state 965

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    CLOSE_PAR	shift, and go to state 955



state 966

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 118)

    CLOSE_PAR	shift, and go to state 956



state 967

    function  ->  ID OPEN_PAR option_function_identifier CLOSE_PAR .   (rule 69)
    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR . inner_option_function_identifier   (rule 311)

    COMMA	shift, and go to state 535

    COMMA	[reduce using rule 69 (function)]
    CLOSE_PAR	reduce using rule 69 (function)
    CLOSE_PAR	[reduce using rule 312 (inner_option_function_identifier)]
    $default	reduce using rule 69 (function)

    inner_option_function_identifier	go to state 1010



state 968

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp . inner_option_identifier_array_declaration   (rule 99)
    array_exp  ->  array_exp . CON array_exp   (rule 190)

    COMMA	shift, and go to state 370
    CON 	shift, and go to state 484

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1011



state 969

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral . inner_option_identifier_array_declaration   (rule 100)

    COMMA	shift, and go to state 370

    COMMA	[reduce using rule 104 (inner_option_identifier_array_declaration)]
    $default	reduce using rule 104 (inner_option_identifier_array_declaration)

    inner_option_identifier_array_declaration	go to state 1012



state 970

    statement  ->  type_define ID OPEN_PAR option_function_parameter_list CLOSE_PAR OPEN_BPAR statement CLOSE_BPAR .   (rule 59)

    $default	reduce using rule 59 (statement)



state 971

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 287)

    CLOSE_PAR	shift, and go to state 1013



state 972

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 283)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1014



state 973

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 282)

    CLOSE_MPAR	shift, and go to state 1015
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    ari_operator	go to state 236



state 974

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 281)

    $default	reduce using rule 281 (option_function_parameter_list)



state 975

    statement  ->  DEFINE ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 58)

    $default	reduce using rule 58 (statement)



state 976

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR inner_option_define_identifier   (rule 298)

    CLOSE_PAR	shift, and go to state 1016



state 977

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 302)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1017



state 978

    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)
    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp . CLOSE_MPAR inner_option_define_identifier   (rule 301)

    CLOSE_MPAR	shift, and go to state 1018
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    ari_operator	go to state 236



state 979

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 300)

    $default	reduce using rule 300 (inner_option_define_identifier)



state 980

    statement  ->  FRAME OPEN_PAR identifier option_frame_identifier CLOSE_PAR AND OPEN_PAR statement CLOSE_PAR .   (rule 55)

    $default	reduce using rule 55 (statement)



state 981

    extend_for_statement  ->  FOR OPEN_PAR for_sta_init COMMA for_sta_condition COMMA for_sta_control CLOSE_PAR statement_bpar .   (rule 336)

    $default	reduce using rule 336 (extend_for_statement)



state 982

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR function   (rule 135)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 445
    UNSIGNED	shift, and go to state 341
    ID  	shift, and go to state 446
    STRUCT_TYPE	shift, and go to state 447

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 342
    sign_type_define	go to state 344
    all_type_define	go to state 448
    option_function_parameter_list	go to state 1019



state 983

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 1020
    MUL 	shift, and go to state 572



state 984

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 1021
    MUL 	shift, and go to state 575



state 985

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 1022



state 986

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 140)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1023
    ari_operator	go to state 236



state 987

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 119)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1024
    ari_operator	go to state 236



state 988

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 1025
    MUL 	shift, and go to state 572



state 989

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 1026
    MUL 	shift, and go to state 575



state 990

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 1027



state 991

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 143)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1028
    ari_operator	go to state 236



state 992

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 117)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1029
    ari_operator	go to state 236



state 993

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 142)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1030
    ari_operator	go to state 236



state 994

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 120)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1031
    ari_operator	go to state 236



state 995

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 141)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 1032
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 996

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 210)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 402
    MUL 	shift, and go to state 1033



state 997

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 212)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 404
    MUL 	shift, and go to state 1034



state 998

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 215)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL CLOSE_PAR casted_element   (rule 218)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED . INTDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 224)
    type_cast  ->  OPEN_PAR UNSIGNED . CHARDECLARATION MUL MUL CLOSE_PAR casted_element   (rule 227)

    INTDECLARATION	shift, and go to state 584
    CHARDECLARATION	shift, and go to state 1035



state 999

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 144)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 1036
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 1000

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 118)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 1037
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 1001

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR . option_function_parameter_list CLOSE_PAR ASS_P array_exp   (rule 87)

    FILEDECLARATION	shift, and go to state 27
    INTDECLARATION	shift, and go to state 39
    STRDECLARATION	shift, and go to state 40
    CHARDECLARATION	shift, and go to state 41
    VOIDDECLARATION	shift, and go to state 42
    FLOATDECLARATION	shift, and go to state 43
    OPEN_PAR	shift, and go to state 445
    UNSIGNED	shift, and go to state 341
    ID  	shift, and go to state 446
    STRUCT_TYPE	shift, and go to state 447

    $default	reduce using rule 288 (option_function_parameter_list)

    type_define	go to state 342
    sign_type_define	go to state 344
    all_type_define	go to state 448
    option_function_parameter_list	go to state 1038



state 1002

    statement  ->  PROCESS ID OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P OPEN_BPAR empty_statement CLOSE_BPAR .   (rule 60)

    $default	reduce using rule 60 (statement)



state 1003

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    MUL 	shift, and go to state 1039



state 1004

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    MUL 	shift, and go to state 1040



state 1005

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CHARDECLARATION	shift, and go to state 1041



state 1006

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    MUL 	shift, and go to state 1042



state 1007

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    MUL 	shift, and go to state 1043



state 1008

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CHARDECLARATION	shift, and go to state 1044



state 1009

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    INTDECLARATION	shift, and go to state 1045
    CHARDECLARATION	shift, and go to state 1046
    UNSIGNED	shift, and go to state 1047



state 1010

    inner_option_function_identifier  ->  COMMA ID OPEN_PAR option_function_identifier CLOSE_PAR inner_option_function_identifier .   (rule 311)

    $default	reduce using rule 311 (inner_option_function_identifier)



state 1011

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P array_exp inner_option_identifier_array_declaration .   (rule 99)

    $default	reduce using rule 99 (option_identifier_array_declaration)



state 1012

    option_identifier_array_declaration  ->  ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR ASS_P strliteral inner_option_identifier_array_declaration .   (rule 100)

    $default	reduce using rule 100 (option_identifier_array_declaration)



state 1013

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 287)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1048



state 1014

    option_function_parameter_list  ->  all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 283)

    $default	reduce using rule 283 (option_function_parameter_list)



state 1015

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 282)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1049



state 1016

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . inner_option_define_identifier   (rule 298)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1050



state 1017

    inner_option_define_identifier  ->  COMMA all_type_define identifier ARRAY OPEN_MPAR ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 302)

    $default	reduce using rule 302 (inner_option_define_identifier)



state 1018

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR . inner_option_define_identifier   (rule 301)

    COMMA	shift, and go to state 279

    $default	reduce using rule 299 (inner_option_define_identifier)

    inner_option_define_identifier	go to state 1051



state 1019

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR function   (rule 135)

    CLOSE_PAR	shift, and go to state 1052



state 1020

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 217)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 790
    INTLITERAL	shift, and go to state 1053
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 711
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 1021

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 793
    INTLITERAL	shift, and go to state 1054
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 713
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 1022

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 1055
    MUL 	shift, and go to state 728



state 1023

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 140)

    CLOSE_MPAR	shift, and go to state 1056



state 1024

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 119)

    CLOSE_MPAR	shift, and go to state 1057



state 1025

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 217)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 790
    INTLITERAL	shift, and go to state 1058
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 711
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 1026

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 793
    INTLITERAL	shift, and go to state 1059
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 713
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 1027

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 1060
    MUL 	shift, and go to state 728



state 1028

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 143)

    CLOSE_MPAR	shift, and go to state 1061



state 1029

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 117)

    CLOSE_MPAR	shift, and go to state 1062



state 1030

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 142)

    CLOSE_MPAR	shift, and go to state 1063



state 1031

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 120)

    CLOSE_MPAR	shift, and go to state 1064



state 1032

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 141)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1065
    ari_operator	go to state 236



state 1033

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . CLOSE_PAR casted_element   (rule 217)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 223)

    CLOSE_PAR	shift, and go to state 1066
    MUL 	shift, and go to state 572



state 1034

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 220)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 226)

    CLOSE_PAR	shift, and go to state 1067
    MUL 	shift, and go to state 575



state 1035

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . CLOSE_PAR type_cast_alg_exp   (rule 216)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION . MUL MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 588
    MUL 	shift, and go to state 1068



state 1036

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 144)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1069
    ari_operator	go to state 236



state 1037

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 118)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1070
    ari_operator	go to state 236



state 1038

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list . CLOSE_PAR ASS_P array_exp   (rule 87)

    CLOSE_PAR	shift, and go to state 1071



state 1039

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1072



state 1040

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1073



state 1041

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    MUL 	shift, and go to state 1074



state 1042

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 1075



state 1043

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    CLOSE_PAR	shift, and go to state 1076



state 1044

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    MUL 	shift, and go to state 1077



state 1045

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    MUL 	shift, and go to state 1078



state 1046

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    MUL 	shift, and go to state 1079



state 1047

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED . CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CHARDECLARATION	shift, and go to state 1080



state 1048

    option_function_parameter_list  ->  OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 287)

    $default	reduce using rule 287 (option_function_parameter_list)



state 1049

    option_function_parameter_list  ->  all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 282)

    $default	reduce using rule 282 (option_function_parameter_list)



state 1050

    inner_option_define_identifier  ->  COMMA OPEN_PAR MUL identifier CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR inner_option_define_identifier .   (rule 298)

    $default	reduce using rule 298 (inner_option_define_identifier)



state 1051

    inner_option_define_identifier  ->  COMMA all_type_define identifier OPEN_MPAR ari_exp COMMA ari_exp CLOSE_MPAR inner_option_define_identifier .   (rule 301)

    $default	reduce using rule 301 (inner_option_define_identifier)



state 1052

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . function   (rule 135)

    OPEN_PAR	shift, and go to state 1081
    EXTERN	shift, and go to state 47
    ID  	shift, and go to state 1082

    function	go to state 1083
    array	go to state 1084



state 1053

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1085

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 1054

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1086

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 1055

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 893
    INTLITERAL	shift, and go to state 1087
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 842
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 1056

    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 140)

    $default	reduce using rule 140 (array)



state 1057

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 119)

    $default	reduce using rule 119 (leftaddrshift)



state 1058

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1088

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 1059

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1089

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 1060

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 893
    INTLITERAL	shift, and go to state 1090
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 842
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 1061

    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 143)

    $default	reduce using rule 143 (array)



state 1062

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 117)

    $default	reduce using rule 117 (leftaddrshift)



state 1063

    array  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 142)

    $default	reduce using rule 142 (array)



state 1064

    leftaddrshift  ->  OPEN_PAR OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 120)

    $default	reduce using rule 120 (leftaddrshift)



state 1065

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 141)

    CLOSE_MPAR	shift, and go to state 1091



state 1066

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    array  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    type_cast  ->  OPEN_PAR INTDECLARATION MUL CLOSE_PAR . casted_element   (rule 217)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 790
    INTLITERAL	shift, and go to state 1092
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 711
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 1067

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    array  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    type_cast  ->  OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 220)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 793
    INTLITERAL	shift, and go to state 1093
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 713
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 1068

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR casted_element   (rule 221)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL . MUL CLOSE_PAR casted_element   (rule 227)

    CLOSE_PAR	shift, and go to state 1094
    MUL 	shift, and go to state 728



state 1069

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 144)

    CLOSE_MPAR	shift, and go to state 1095



state 1070

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 118)

    CLOSE_MPAR	shift, and go to state 1096



state 1071

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR .   (rule 86)
    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR . ASS_P array_exp   (rule 87)

    ASS_P	shift, and go to state 1097

    $default	reduce using rule 86 (declaration)



state 1072

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    INTLITERAL	shift, and go to state 1098



state 1073

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    INTLITERAL	shift, and go to state 1099



state 1074

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1100



state 1075

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    INTLITERAL	shift, and go to state 1101



state 1076

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    INTLITERAL	shift, and go to state 1102



state 1077

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CLOSE_PAR	shift, and go to state 1103



state 1078

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1104



state 1079

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1105



state 1080

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION . MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    MUL 	shift, and go to state 1106



state 1081

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)

    OPEN_PAR	shift, and go to state 1107
    ID  	shift, and go to state 1108

    array	go to state 549



state 1082

    function  ->  ID . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 69)
    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    OPEN_PAR	shift, and go to state 183
    OPEN_MPAR	shift, and go to state 184



state 1083

    ass_right  ->  OPEN_PAR strliteral CLOSE_PAR OPEN_PAR type_define CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR function .   (rule 135)

    $default	reduce using rule 135 (ass_right)



state 1084

    function  ->  array . OPEN_PAR option_function_identifier CLOSE_PAR   (rule 71)

    OPEN_PAR	shift, and go to state 200



state 1085

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1109



state 1086

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1110



state 1087

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1111

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 1088

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 1112



state 1089

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    CLOSE_PAR	shift, and go to state 1113



state 1090

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1114

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 1091

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 141)

    $default	reduce using rule 141 (array)



state 1092

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1115

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 1093

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1116

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 1094

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    type_cast  ->  OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . casted_element   (rule 221)

    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 893
    INTLITERAL	shift, and go to state 1117
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    type_cast_alg_exp	go to state 710
    simple_ari_exp	go to state 570
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    casted_element	go to state 842
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 1095

    array  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 144)

    $default	reduce using rule 144 (array)



state 1096

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 118)

    $default	reduce using rule 118 (leftaddrshift)



state 1097

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P . array_exp   (rule 87)

    OPEN_PAR	shift, and go to state 649
    OPEN_BPAR	shift, and go to state 300
    OPEN_MPAR	shift, and go to state 301

    array_exp	go to state 1118
    option_list_value	go to state 307
    option_struct_list_value	go to state 308



state 1098

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    CLOSE_PAR	shift, and go to state 1085



state 1099

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    CLOSE_PAR	shift, and go to state 1086



state 1100

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    INTLITERAL	shift, and go to state 1119



state 1101

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    CLOSE_PAR	shift, and go to state 1088



state 1102

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    CLOSE_PAR	shift, and go to state 1089



state 1103

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    INTLITERAL	shift, and go to state 1120



state 1104

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    INTLITERAL	shift, and go to state 1121



state 1105

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    INTLITERAL	shift, and go to state 1122



state 1106

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL . CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1123



state 1107

    array  ->  OPEN_PAR . OPEN_PAR INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR OPEN_PAR . INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 140)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED INTDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 141)
    array  ->  OPEN_PAR . OPEN_PAR FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR OPEN_PAR . FLOATDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 142)
    array  ->  OPEN_PAR . OPEN_PAR CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR OPEN_PAR . CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 143)
    array  ->  OPEN_PAR . OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR OPEN_PAR . UNSIGNED CHARDECLARATION MUL CLOSE_PAR ID CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 144)
    array  ->  OPEN_PAR . array CLOSE_PAR   (rule 145)

    INTDECLARATION	shift, and go to state 594
    CHARDECLARATION	shift, and go to state 595
    FLOATDECLARATION	shift, and go to state 596
    OPEN_PAR	shift, and go to state 1107
    UNSIGNED	shift, and go to state 597
    ID  	shift, and go to state 1108

    array	go to state 549



state 1108

    array  ->  ID . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 139)

    OPEN_MPAR	shift, and go to state 184



state 1109

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    OPEN_MPAR	shift, and go to state 1124



state 1110

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    OPEN_MPAR	shift, and go to state 1125



state 1111

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1126



state 1112

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    OPEN_MPAR	shift, and go to state 1127



state 1113

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    OPEN_MPAR	shift, and go to state 1128



state 1114

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CLOSE_PAR	shift, and go to state 1129



state 1115

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1130



state 1116

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1131



state 1117

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)
    intliteral  ->  INTLITERAL .   (rule 321)

    CLOSE_PAR	shift, and go to state 1132

    CLOSE_PAR	[reduce using rule 321 (intliteral)]
    $default	reduce using rule 321 (intliteral)



state 1118

    declaration  ->  OPEN_PAR MUL ID OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR CLOSE_PAR OPEN_PAR option_function_parameter_list CLOSE_PAR ASS_P array_exp .   (rule 87)
    array_exp  ->  array_exp . CON array_exp   (rule 190)

    CON 	shift, and go to state 484

    $default	reduce using rule 87 (declaration)



state 1119

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    CLOSE_PAR	shift, and go to state 1111



state 1120

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    CLOSE_PAR	shift, and go to state 1114



state 1121

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    CLOSE_PAR	shift, and go to state 1115



state 1122

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    CLOSE_PAR	shift, and go to state 1116



state 1123

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR . INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    INTLITERAL	shift, and go to state 1133



state 1124

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 129)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 1134
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 1125

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 127)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 1135
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 1126

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    OPEN_MPAR	shift, and go to state 1136



state 1127

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 123)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 1137
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 1128

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 121)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 1138
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 1129

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    OPEN_MPAR	shift, and go to state 1139



state 1130

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    OPEN_MPAR	shift, and go to state 1140



state 1131

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    OPEN_MPAR	shift, and go to state 1141



state 1132

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR . CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1142



state 1133

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL . CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    CLOSE_PAR	shift, and go to state 1132



state 1134

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 129)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1143
    ari_operator	go to state 236



state 1135

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 127)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1144
    ari_operator	go to state 236



state 1136

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 128)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 1145
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 1137

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 123)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1146
    ari_operator	go to state 236



state 1138

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 121)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1147
    ari_operator	go to state 236



state 1139

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 122)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 1148
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 1140

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 126)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 1149
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 1141

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 124)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 1150
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 1142

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR . OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    OPEN_MPAR	shift, and go to state 1151



state 1143

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 129)

    CLOSE_MPAR	shift, and go to state 1152



state 1144

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 127)

    CLOSE_MPAR	shift, and go to state 1153



state 1145

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 128)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1154
    ari_operator	go to state 236



state 1146

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 123)

    CLOSE_MPAR	shift, and go to state 1155



state 1147

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 121)

    CLOSE_MPAR	shift, and go to state 1156



state 1148

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 122)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1157
    ari_operator	go to state 236



state 1149

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 126)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1158
    ari_operator	go to state 236



state 1150

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 124)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1159
    ari_operator	go to state 236



state 1151

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR . ari_exp option_ari_exp CLOSE_MPAR   (rule 125)

    IF  	shift, and go to state 84
    POINTERNULL	shift, and go to state 85
    OPEN_PAR	shift, and go to state 86
    EXTERN	shift, and go to state 47
    ADDRESS	shift, and go to state 87
    SUB 	shift, and go to state 88
    MUL 	shift, and go to state 50
    BNE 	shift, and go to state 89
    ID  	shift, and go to state 57
    INTLITERAL	shift, and go to state 90
    FLOATLITERAL	shift, and go to state 91
    CHARLITERAL	shift, and go to state 92

    function	go to state 93
    array	go to state 94
    point_exp	go to state 95
    ari_exp	go to state 1160
    simple_ari_exp	go to state 97
    member_in_exp	go to state 98
    address_exp	go to state 99
    type_cast	go to state 100
    identifier	go to state 101
    intliteral	go to state 102
    charliteral	go to state 103
    floatliteral	go to state 104
    struct_member_exp	go to state 105



state 1152

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 129)

    $default	reduce using rule 129 (leftaddrshift)



state 1153

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 127)

    $default	reduce using rule 127 (leftaddrshift)



state 1154

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 128)

    CLOSE_MPAR	shift, and go to state 1161



state 1155

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 123)

    $default	reduce using rule 123 (leftaddrshift)



state 1156

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 121)

    $default	reduce using rule 121 (leftaddrshift)



state 1157

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 122)

    CLOSE_MPAR	shift, and go to state 1162



state 1158

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 126)

    CLOSE_MPAR	shift, and go to state 1163



state 1159

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 124)

    CLOSE_MPAR	shift, and go to state 1164



state 1160

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp . option_ari_exp CLOSE_MPAR   (rule 125)
    ari_exp  ->  ari_exp . ari_operator simple_ari_exp   (rule 158)

    COMMA	shift, and go to state 538
    ADD 	shift, and go to state 234
    SUB 	shift, and go to state 235

    $default	reduce using rule 148 (option_ari_exp)

    option_ari_exp	go to state 1165
    ari_operator	go to state 236



state 1161

    leftaddrshift  ->  OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 128)

    $default	reduce using rule 128 (leftaddrshift)



state 1162

    leftaddrshift  ->  OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 122)

    $default	reduce using rule 122 (leftaddrshift)



state 1163

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR INTDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 126)

    $default	reduce using rule 126 (leftaddrshift)



state 1164

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 124)

    $default	reduce using rule 124 (leftaddrshift)



state 1165

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp . CLOSE_MPAR   (rule 125)

    CLOSE_MPAR	shift, and go to state 1166



state 1166

    leftaddrshift  ->  OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR OPEN_PAR OPEN_PAR UNSIGNED CHARDECLARATION MUL CLOSE_PAR INTLITERAL CLOSE_PAR CLOSE_PAR OPEN_MPAR ari_exp option_ari_exp CLOSE_MPAR .   (rule 125)

    $default	reduce using rule 125 (leftaddrshift)



state 1167

    $   	go to state 1168



state 1168

    $   	go to state 1169



state 1169

    $default	accept
